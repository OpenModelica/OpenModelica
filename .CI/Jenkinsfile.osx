def common
pipeline {
  agent none
  stages {
    stage('Environment') {
      agent {
        label '!windows'
      }
      steps {
        script {
          if (changeRequest()) {
            def buildNumber = env.BUILD_NUMBER as int
            if (buildNumber > 1) milestone(buildNumber - 1)
            milestone(buildNumber)
          }
          common = load("${env.workspace}/.CI/common.groovy")
        }
      }
    }
    stage('MacOS') {
      agent {
        node {
          label 'osx'
        }
      }
      environment {
        RUNTESTDB = '/Users/hudson/jenkins-cache/runtest/'
        LIBRARIES = '/Users/hudson/jenkins-cache/omlibrary'
        GMAKE = 'gmake'
        LC_ALL = 'C'
      }
      steps {
        script {
          env.PATH="${env.MACPORTS}/bin:${env.PATH}"
          // Qt5 is MacOS 10.12+...
          env.QTDIR="${env.MACPORTS}/libexec/qt4"
          common.buildOMC('cc', 'c++', "OMPCC='gcc-mp-5 -fopenmp -mno-avx' GNUCXX=g++-mp-5 FC=gfortran-mp-5 LDFLAGS=-L${env.MACPORTS}/lib CPPFLAGS=-I${env.MACPORTS}/include")
          common.makeLibsAndCache()
          common.buildGUI('')
          common.partest()
        }
      }
    }
  }
}
