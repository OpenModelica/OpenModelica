
setEnvironmentVar("HOME", OpenModelica.Scripting.cd());
setEnvironmentVar("APPDATA", OpenModelica.Scripting.cd());
getEnvironmentVar("HOME");
getErrorString();
setModelicaPath(OpenModelica.Scripting.cd() + "/.openmodelica/libraries/");
getModelicaPath();
echo(false);
OpenModelica.Scripting.mkdir(".openmodelica");
if not OpenModelica.Scripting.mkdir(".openmodelica/libraries/") then
  print("\nmkdir failed\n");
  print(getErrorString());
  exit(1);
end if;
vers:=OpenModelica.Scripting.getAvailablePackageVersions(Modelica, "3.2.3");
if size(vers,1) <> 1 then
  print("getAvailablePackageVersions(Modelica, \"3.2.3\") returned " + String(size(vers,1)) + " results\n");
  print(getErrorString());
  exit(1);
end if;
if vers[1] <> "3.2.3+maint.om" then
  print("getAvailablePackageVersions(Modelica, \"3.2.3\") returned " + vers[1] + "\n");
  print(getErrorString());
  exit(1);
end if;
if not installPackage(BioChem, "1.0.1+msl.3.2.1", exactMatch=true) then
  print("BioChem 1.0.1+msl.3.2.1 failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: BioChem 1.0.1+msl.3.2.1\n");
end if;
if not installPackage(Complex, "3.2.1+maint.om", exactMatch=true) then
  print("Complex 3.2.1+maint.om failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: Complex 3.2.1+maint.om\n");
end if;
if not installPackage(Complex, "3.2.2+maint.om", exactMatch=true) then
  print("Complex 3.2.2+maint.om failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: Complex 3.2.2+maint.om\n");
end if;
if not installPackage(Complex, "4.0.0+maint.om", exactMatch=true) then
  print("Complex 4.0.0+maint.om failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: Complex 4.0.0+maint.om\n");
end if;
if not installPackage(Complex, "3.2.3+maint.om", exactMatch=true) then
  print("Complex 3.2.3+maint.om failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: Complex 3.2.3+maint.om\n");
end if;
if not installPackage(Modelica, "3.1.0+maint.om", exactMatch=true) then
  print("Modelica 3.1.0+maint.om failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: Modelica 3.1.0+maint.om\n");
end if;
if not installPackage(Modelica, "2.2.2+maint.om", exactMatch=true) then
  print("Modelica 2.2.2+maint.om failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: Modelica 2.2.2+maint.om\n");
end if;
if not installPackage(Modelica, "3.2.2+maint.om", exactMatch=true) then
  print("Modelica 3.2.2+maint.om failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: Modelica 3.2.2+maint.om\n");
end if;
if not installPackage(Modelica, "3.2.3+maint.om", exactMatch=true) then
  print("Modelica 3.2.3+maint.om failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: Modelica 3.2.3+maint.om\n");
end if;
if not installPackage(Modelica, "3.2.1+maint.om", exactMatch=true) then
  print("Modelica 3.2.1+maint.om failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: Modelica 3.2.1+maint.om\n");
end if;
if not installPackage(Modelica, "4.0.0+maint.om", exactMatch=true) then
  print("Modelica 4.0.0+maint.om failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: Modelica 4.0.0+maint.om\n");
end if;
if not installPackage(ModelicaServices, "1.0.0", exactMatch=true) then
  print("ModelicaServices 1.0.0 failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: ModelicaServices 1.0.0\n");
end if;
if not installPackage(ModelicaServices, "3.2.2+maint.om", exactMatch=true) then
  print("ModelicaServices 3.2.2+maint.om failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: ModelicaServices 3.2.2+maint.om\n");
end if;
if not installPackage(ModelicaServices, "3.2.3+maint.om", exactMatch=true) then
  print("ModelicaServices 3.2.3+maint.om failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: ModelicaServices 3.2.3+maint.om\n");
end if;
if not installPackage(ModelicaServices, "3.2.1+maint.om", exactMatch=true) then
  print("ModelicaServices 3.2.1+maint.om failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: ModelicaServices 3.2.1+maint.om\n");
end if;
if not installPackage(ModelicaServices, "4.0.0+maint.om", exactMatch=true) then
  print("ModelicaServices 4.0.0+maint.om failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: ModelicaServices 4.0.0+maint.om\n");
end if;
if not installPackage(ModelicaTest, "3.2.3+maint.om", exactMatch=true) then
  print("ModelicaTest 3.2.3+maint.om failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: ModelicaTest 3.2.3+maint.om\n");
end if;
if not installPackage(ModelicaCompliance, "3.2.0-master", exactMatch=true) then
  print("ModelicaCompliance 3.2.0-master failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: ModelicaCompliance 3.2.0-master\n");
end if;
if not installPackage(Modelica_DeviceDrivers, "1.8.2", exactMatch=true) then
  print("Modelica_DeviceDrivers 1.8.2 failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: Modelica_DeviceDrivers 1.8.2\n");
end if;
if not installPackage(Modelica_Synchronous, "0.92.2", exactMatch=true) then
  print("Modelica_Synchronous 0.92.2 failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: Modelica_Synchronous 0.92.2\n");
end if;
if not installPackage(SiemensPower, "2.2.0", exactMatch=true) then
  print("SiemensPower 2.2.0 failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: SiemensPower 2.2.0\n");
end if;
if not installPackage(SiemensPower, "2.1.0-beta", exactMatch=true) then
  print("SiemensPower 2.1.0-beta failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: SiemensPower 2.1.0-beta\n");
end if;
if not installPackage(SiemensPower, "OMCtest", exactMatch=true) then
  print("SiemensPower OMCtest failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: SiemensPower OMCtest\n");
end if;
if not installPackage(ThermoPower, "3.1.0-master", exactMatch=true) then
  print("ThermoPower 3.1.0-master failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: ThermoPower 3.1.0-master\n");
end if;
if not installPackage(ThermoSysPro, "3.2.0", exactMatch=true) then
  print("ThermoSysPro 3.2.0 failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: ThermoSysPro 3.2.0\n");
end if;
if not installPackage(WasteWater, "2.1.0", exactMatch=true) then
  print("WasteWater 2.1.0 failed.\n");
  print(getErrorString());
  exit(1);
else
  print("Installed: WasteWater 2.1.0\n");
end if;
system("touch .openmodelica/20221031131604.stamp")