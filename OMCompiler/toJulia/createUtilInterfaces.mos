
     /*
     *     Automatically generated by generateTranslationTemplate.el
     *     @author Emacs Translation Template Script
     */

     setCommandLineOptions("-g=MetaModelica");getErrorString();


      print("Translating Autoconf into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/Autoconf.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/Autoconf.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(Autoconf); getErrorString();


      print("Translating AvlSetCR into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/AvlSetCR.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/AvlSetCR.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(AvlSetCR); getErrorString();


      print("Translating AvlSetInt into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/AvlSetInt.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/AvlSetInt.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(AvlSetInt); getErrorString();


      print("Translating AvlSetPath into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/AvlSetPath.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/AvlSetPath.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(AvlSetPath); getErrorString();


      print("Translating AvlSetString into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/AvlSetString.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/AvlSetString.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(AvlSetString); getErrorString();


      print("Translating AvlTreeCRToInt into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/AvlTreeCRToInt.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/AvlTreeCRToInt.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(AvlTreeCRToInt); getErrorString();


      print("Translating AvlTree into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/AvlTree.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/AvlTree.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(AvlTree); getErrorString();


      print("Translating AvlTreeString into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/AvlTreeString.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/AvlTreeString.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(AvlTreeString); getErrorString();


      print("Translating AvlTreeStringString into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/AvlTreeStringString.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/AvlTreeStringString.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(AvlTreeStringString); getErrorString();


      print("Translating BaseAvlSet into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/BaseAvlSet.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/BaseAvlSet.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(BaseAvlSet); getErrorString();


      print("Translating BaseAvlTree into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/BaseAvlTree.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/BaseAvlTree.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(BaseAvlTree); getErrorString();


      print("Translating BaseHashSet into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/BaseHashSet.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/BaseHashSet.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(BaseHashSet); getErrorString();


      print("Translating BaseHashTable into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/BaseHashTable.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/BaseHashTable.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(BaseHashTable); getErrorString();


      print("Translating BasePVector into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/BasePVector.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/BasePVector.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(BasePVector); getErrorString();


      // print("Translating BaseVector into Julia!\n"); getErrorString();
      // loadFile("Compiler/Util/BaseVector.mo"); getErrorString();
      // writeFile("toJulia/toJuliaOutput/Util_Interfaces/BaseVector.jl",
      // OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      // deleteClass(BaseVector); getErrorString();


      print("Translating ClockIndexes into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/ClockIndexes.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/ClockIndexes.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(ClockIndexes); getErrorString();


      print("Translating Config into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/Config.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/Config.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(Config); getErrorString();


      print("Translating Corba into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/Corba.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/Corba.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(Corba); getErrorString();


      print("Translating Database into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/Database.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/Database.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(Database); getErrorString();


      print("Translating Debug into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/Debug.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/Debug.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(Debug); getErrorString();


      print("Translating DiffAlgorithm into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/DiffAlgorithm.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/DiffAlgorithm.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(DiffAlgorithm); getErrorString();


      // print("Translating DisjointSets into Julia!\n"); getErrorString();
      // loadFile("Compiler/Util/DisjointSets.mo"); getErrorString();
      // writeFile("toJulia/toJuliaOutput/Util_Interfaces/DisjointSets.jl",
      // OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      // deleteClass(DisjointSets); getErrorString();


      print("Translating DynLoad into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/DynLoad.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/DynLoad.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(DynLoad); getErrorString();


      print("Translating ErrorExt into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/ErrorExt.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/ErrorExt.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(ErrorExt); getErrorString();


      print("Translating Error into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/Error.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/Error.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(Error); getErrorString();


      print("Translating ExecStat into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/ExecStat.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/ExecStat.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(ExecStat); getErrorString();


      // print("Translating ExpandableArray into Julia!\n"); getErrorString();
      // loadFile("Compiler/Util/ExpandableArray.mo"); getErrorString();
      // writeFile("toJulia/toJuliaOutput/Util_Interfaces/ExpandableArray.jl",
      // OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      // deleteClass(ExpandableArray); getErrorString();


      print("Translating File into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/File.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/File.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(File); getErrorString();


      print("Translating Flags into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/Flags.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/Flags.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(Flags); getErrorString();


      print("Translating FMIExt into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/FMIExt.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/FMIExt.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(FMIExt); getErrorString();


      print("Translating FMI into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/FMI.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/FMI.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(FMI); getErrorString();


      print("Translating GC into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/GC.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/GC.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(GC); getErrorString();


      print("Translating GraphML into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/GraphML.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/GraphML.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(GraphML); getErrorString();


      print("Translating Graph into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/Graph.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/Graph.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(Graph); getErrorString();


      print("Translating GraphStreamExt into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/GraphStreamExt.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/GraphStreamExt.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(GraphStreamExt); getErrorString();


      print("Translating GraphStream into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/GraphStream.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/GraphStream.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(GraphStream); getErrorString();


      print("Translating HashSetExp into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashSetExp.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashSetExp.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashSetExp); getErrorString();


      print("Translating HashSet into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashSet.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashSet.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashSet); getErrorString();


      print("Translating HashSetString into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashSetString.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashSetString.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashSetString); getErrorString();


      print("Translating HashTable2 into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTable2.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTable2.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTable2); getErrorString();


      print("Translating HashTable3 into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTable3.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTable3.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTable3); getErrorString();


      print("Translating HashTable4 into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTable4.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTable4.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTable4); getErrorString();


      print("Translating HashTable5 into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTable5.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTable5.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTable5); getErrorString();


      print("Translating HashTable6 into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTable6.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTable6.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTable6); getErrorString();


      print("Translating HashTableCG into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTableCG.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTableCG.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTableCG); getErrorString();


      print("Translating HashTableCrefSimVar into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTableCrefSimVar.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTableCrefSimVar.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTableCrefSimVar); getErrorString();


      print("Translating HashTableCrIListArray into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTableCrIListArray.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTableCrIListArray.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTableCrIListArray); getErrorString();


      print("Translating HashTableCrILst into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTableCrILst.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTableCrILst.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTableCrILst); getErrorString();


      print("Translating HashTableCrIntToExp into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTableCrIntToExp.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTableCrIntToExp.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTableCrIntToExp); getErrorString();


      print("Translating HashTableCrToCrEqLst into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTableCrToCrEqLst.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTableCrToCrEqLst.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTableCrToCrEqLst); getErrorString();


      print("Translating HashTableCrToExp into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTableCrToExp.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTableCrToExp.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTableCrToExp); getErrorString();


      print("Translating HashTableCrToExpOption into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTableCrToExpOption.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTableCrToExpOption.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTableCrToExpOption); getErrorString();


      print("Translating HashTableCrToExpSourceTpl into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTableCrToExpSourceTpl.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTableCrToExpSourceTpl.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTableCrToExpSourceTpl); getErrorString();


      print("Translating HashTableCrToUnit into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTableCrToUnit.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTableCrToUnit.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTableCrToUnit); getErrorString();


      print("Translating HashTableExpToExp into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTableExpToExp.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTableExpToExp.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTableExpToExp); getErrorString();


      print("Translating HashTableExpToIndexExp into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTableExpToIndexExp.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTableExpToIndexExp.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTableExpToIndexExp); getErrorString();


      print("Translating HashTableExpToIndex into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTableExpToIndex.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTableExpToIndex.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTableExpToIndex); getErrorString();


      print("Translating HashTable into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTable.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTable.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTable); getErrorString();


      print("Translating HashTablePathToFunction into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTablePathToFunction.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTablePathToFunction.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTablePathToFunction); getErrorString();


      print("Translating HashTableSimCodeEqCache into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTableSimCodeEqCache.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTableSimCodeEqCache.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTableSimCodeEqCache); getErrorString();


      print("Translating HashTableSM1 into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTableSM1.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTableSM1.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTableSM1); getErrorString();


      print("Translating HashTableStringToPath into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTableStringToPath.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTableStringToPath.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTableStringToPath); getErrorString();


      print("Translating HashTableStringToProgram into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTableStringToProgram.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTableStringToProgram.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTableStringToProgram); getErrorString();


      print("Translating HashTableStringToUnit into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTableStringToUnit.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTableStringToUnit.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTableStringToUnit); getErrorString();


      print("Translating HashTableTypeToExpType into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTableTypeToExpType.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTableTypeToExpType.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTableTypeToExpType); getErrorString();


      print("Translating HashTableUnitToString into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/HashTableUnitToString.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/HashTableUnitToString.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(HashTableUnitToString); getErrorString();


      print("Translating IOStreamExt into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/IOStreamExt.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/IOStreamExt.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(IOStreamExt); getErrorString();


      print("Translating IOStream into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/IOStream.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/IOStream.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(IOStream); getErrorString();


      print("Translating JSONExt into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/JSONExt.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/JSONExt.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(JSONExt); getErrorString();


      print("Translating Lapack into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/Lapack.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/Lapack.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(Lapack); getErrorString();


      print("Translating MessagePack into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/MessagePack.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/MessagePack.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(MessagePack); getErrorString();


      print("Translating ModelicaExternalC into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/ModelicaExternalC.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/ModelicaExternalC.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(ModelicaExternalC); getErrorString();

      print("Translating Pointer into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/Pointer.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/Pointer.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(Pointer); getErrorString();


      print("Translating Print into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/Print.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/Print.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(Print); getErrorString();


      print("Translating PriorityQueue into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/PriorityQueue.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/PriorityQueue.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(PriorityQueue); getErrorString();


      print("Translating Serializer into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/Serializer.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/Serializer.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(Serializer); getErrorString();


      print("Translating Settings into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/Settings.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/Settings.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(Settings); getErrorString();


      print("Translating SimulationResults into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/SimulationResults.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/SimulationResults.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(SimulationResults); getErrorString();


      print("Translating Socket into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/Socket.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/Socket.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(Socket); getErrorString();


      print("Translating StackOverflow into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/StackOverflow.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/StackOverflow.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(StackOverflow); getErrorString();


      print("Translating StringUtil into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/StringUtil.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/StringUtil.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(StringUtil); getErrorString();


      print("Translating System into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/System.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/System.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(System); getErrorString();


      print("Translating TaskGraphResults into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/TaskGraphResults.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/TaskGraphResults.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(TaskGraphResults); getErrorString();


      print("Translating Util into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/Util.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/Util.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(Util); getErrorString();


      print("Translating VarTransform into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/VarTransform.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/VarTransform.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(VarTransform); getErrorString();


      print("Translating ZeroMQ into Julia!\n"); getErrorString();
      loadFile("Compiler/Util/ZeroMQ.mo"); getErrorString();
      writeFile("toJulia/toJuliaOutput/Util_Interfaces/ZeroMQ.jl",
      OpenModelica.Scripting.Experimental.toJuliaInterface()); getErrorString();
      deleteClass(ZeroMQ); getErrorString();

      system("julia toJulia/formatGeneratedJuliaCode.jl ./toJulia/toJuliaOutput/Util_Interfaces")
