
# cp -u is a GNU extension. Do not rely on it.
COPY=cp -rp
AR_=ar -rcs

SRCS = $(OS_SRCS) \
om_pm_equation.cpp \
pm_utility.cpp \
om_pm_interface.cpp \
om_pm_model.cpp 

HDRS = *.hpp *.inl
OBJS = $(SRCS:.cpp=.o)
DPFILE = Makefile.dependencies

DPFLAGS = -MM

.PHONY : clean

# default number of threads if not specified.
DEFAULT_NUM_THREADS=4

ifeq ($(USE_LEVEL_SCHEDULER), 1)
CPPFLAGS += -DUSE_LEVEL_SCHEDULER
$(info ************  COMPILING FOR LEVEL SCHEDULER ************)
else
$(info ************  COMPILING FOR FLOW SCHEDULER ************)
CPPFLAGS += -DUSE_FLOW_SCHEDULER
endif

ifeq ($(NUM_THREADS), )
$(info ************  NUM THREADS NOT SET. SETTIN TO $(DEFAULT_NUM_THREADS) ************)
CPPFLAGS += -DNUM_THREADS=$(DEFAULT_NUM_THREADS)
else
CPPFLAGS += -DNUM_THREADS=$(NUM_THREADS)
endif


libParModelicaAuto.a: $(OBJS)
	@rm -f $@
	$(AR_) $@ $(OBJS)
    
.cpp.o: $(DPFILE)
	$(CXX) $(CPPFLAGS) $(INCDIRS) -c $<
    
test: test_task_graph.cpp libParModelicaAuto.a
	$(CXX) $(CPPFLAGS) -I. $(INCDIRS) test_task_graph.cpp -o gen_graph$(EXEEXT) libParModelicaAuto.a -L$(TBB_LIB) -ltbb

clean :
	rm -f *.o *.a
	touch $(DPFILE)
    
$(DPFILE) depend : $(HDRS) $(SRCS)
	$(CXX) $(DPFLAGS) $(CPPFLAGS) $(INCDIRS) $(SRCS) > $(DPFILE)
    
include $(DPFILE)
