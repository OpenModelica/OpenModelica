//
// Copyright (c) 2003--2009
// Toon Knapen, Karl Meerbergen, Kresimir Fresl,
// Thomas Klimpel and Rutger ter Borg
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)
//
// THIS FILE IS AUTOMATICALLY GENERATED
// PLEASE DO NOT EDIT!
//

#ifndef BOOST_NUMERIC_BINDINGS_LAPACK_DETAIL_LAPACK_NAMES_H
#define BOOST_NUMERIC_BINDINGS_LAPACK_DETAIL_LAPACK_NAMES_H

#include <Core/Utils/numeric/bindings/detail/config/fortran.hpp>

//
// LAPACK computational routines
//

// Value-type variants of hbgst
#define LAPACK_CHBGST FORTRAN_ID2( chbgst, CHBGST )
#define LAPACK_ZHBGST FORTRAN_ID2( zhbgst, ZHBGST )

// Value-type variants of hegst
#define LAPACK_CHEGST FORTRAN_ID2( chegst, CHEGST )
#define LAPACK_ZHEGST FORTRAN_ID2( zhegst, ZHEGST )

// Value-type variants of pbstf
#define LAPACK_SPBSTF FORTRAN_ID2( spbstf, SPBSTF )
#define LAPACK_DPBSTF FORTRAN_ID2( dpbstf, DPBSTF )
#define LAPACK_CPBSTF FORTRAN_ID2( cpbstf, CPBSTF )
#define LAPACK_ZPBSTF FORTRAN_ID2( zpbstf, ZPBSTF )

// Value-type variants of sbgst
#define LAPACK_SSBGST FORTRAN_ID2( ssbgst, SSBGST )
#define LAPACK_DSBGST FORTRAN_ID2( dsbgst, DSBGST )

// Value-type variants of sygst
#define LAPACK_SSYGST FORTRAN_ID2( ssygst, SSYGST )
#define LAPACK_DSYGST FORTRAN_ID2( dsygst, DSYGST )

// Value-type variants of ggqrf
#define LAPACK_SGGQRF FORTRAN_ID2( sggqrf, SGGQRF )
#define LAPACK_DGGQRF FORTRAN_ID2( dggqrf, DGGQRF )
#define LAPACK_CGGQRF FORTRAN_ID2( cggqrf, CGGQRF )
#define LAPACK_ZGGQRF FORTRAN_ID2( zggqrf, ZGGQRF )

// Value-type variants of ggrqf
#define LAPACK_SGGRQF FORTRAN_ID2( sggrqf, SGGRQF )
#define LAPACK_DGGRQF FORTRAN_ID2( dggrqf, DGGRQF )
#define LAPACK_CGGRQF FORTRAN_ID2( cggrqf, CGGRQF )
#define LAPACK_ZGGRQF FORTRAN_ID2( zggrqf, ZGGRQF )

// Value-type variants of gelqf
#define LAPACK_SGELQF FORTRAN_ID2( sgelqf, SGELQF )
#define LAPACK_DGELQF FORTRAN_ID2( dgelqf, DGELQF )
#define LAPACK_CGELQF FORTRAN_ID2( cgelqf, CGELQF )
#define LAPACK_ZGELQF FORTRAN_ID2( zgelqf, ZGELQF )

// Value-type variants of geqlf
#define LAPACK_SGEQLF FORTRAN_ID2( sgeqlf, SGEQLF )
#define LAPACK_DGEQLF FORTRAN_ID2( dgeqlf, DGEQLF )
#define LAPACK_CGEQLF FORTRAN_ID2( cgeqlf, CGEQLF )
#define LAPACK_ZGEQLF FORTRAN_ID2( zgeqlf, ZGEQLF )

// Value-type variants of geqp3
#define LAPACK_SGEQP3 FORTRAN_ID2( sgeqp3, SGEQP3 )
#define LAPACK_DGEQP3 FORTRAN_ID2( dgeqp3, DGEQP3 )
#define LAPACK_CGEQP3 FORTRAN_ID2( cgeqp3, CGEQP3 )
#define LAPACK_ZGEQP3 FORTRAN_ID2( zgeqp3, ZGEQP3 )

// Value-type variants of geqrf
#define LAPACK_SGEQRF FORTRAN_ID2( sgeqrf, SGEQRF )
#define LAPACK_DGEQRF FORTRAN_ID2( dgeqrf, DGEQRF )
#define LAPACK_CGEQRF FORTRAN_ID2( cgeqrf, CGEQRF )
#define LAPACK_ZGEQRF FORTRAN_ID2( zgeqrf, ZGEQRF )

// Value-type variants of gerqf
#define LAPACK_SGERQF FORTRAN_ID2( sgerqf, SGERQF )
#define LAPACK_DGERQF FORTRAN_ID2( dgerqf, DGERQF )
#define LAPACK_CGERQF FORTRAN_ID2( cgerqf, CGERQF )
#define LAPACK_ZGERQF FORTRAN_ID2( zgerqf, ZGERQF )

// Value-type variants of orglq
#define LAPACK_SORGLQ FORTRAN_ID2( sorglq, SORGLQ )
#define LAPACK_DORGLQ FORTRAN_ID2( dorglq, DORGLQ )

// Value-type variants of orgql
#define LAPACK_SORGQL FORTRAN_ID2( sorgql, SORGQL )
#define LAPACK_DORGQL FORTRAN_ID2( dorgql, DORGQL )

// Value-type variants of orgqr
#define LAPACK_SORGQR FORTRAN_ID2( sorgqr, SORGQR )
#define LAPACK_DORGQR FORTRAN_ID2( dorgqr, DORGQR )

// Value-type variants of orgrq
#define LAPACK_SORGRQ FORTRAN_ID2( sorgrq, SORGRQ )
#define LAPACK_DORGRQ FORTRAN_ID2( dorgrq, DORGRQ )

// Value-type variants of ormlq
#define LAPACK_SORMLQ FORTRAN_ID2( sormlq, SORMLQ )
#define LAPACK_DORMLQ FORTRAN_ID2( dormlq, DORMLQ )

// Value-type variants of ormql
#define LAPACK_SORMQL FORTRAN_ID2( sormql, SORMQL )
#define LAPACK_DORMQL FORTRAN_ID2( dormql, DORMQL )

// Value-type variants of ormqr
#define LAPACK_SORMQR FORTRAN_ID2( sormqr, SORMQR )
#define LAPACK_DORMQR FORTRAN_ID2( dormqr, DORMQR )

// Value-type variants of ormrq
#define LAPACK_SORMRQ FORTRAN_ID2( sormrq, SORMRQ )
#define LAPACK_DORMRQ FORTRAN_ID2( dormrq, DORMRQ )

// Value-type variants of ormrz
#define LAPACK_SORMRZ FORTRAN_ID2( sormrz, SORMRZ )
#define LAPACK_DORMRZ FORTRAN_ID2( dormrz, DORMRZ )

// Value-type variants of tzrzf
#define LAPACK_STZRZF FORTRAN_ID2( stzrzf, STZRZF )
#define LAPACK_DTZRZF FORTRAN_ID2( dtzrzf, DTZRZF )
#define LAPACK_CTZRZF FORTRAN_ID2( ctzrzf, CTZRZF )
#define LAPACK_ZTZRZF FORTRAN_ID2( ztzrzf, ZTZRZF )

// Value-type variants of unglq
#define LAPACK_CUNGLQ FORTRAN_ID2( cunglq, CUNGLQ )
#define LAPACK_ZUNGLQ FORTRAN_ID2( zunglq, ZUNGLQ )

// Value-type variants of ungql
#define LAPACK_CUNGQL FORTRAN_ID2( cungql, CUNGQL )
#define LAPACK_ZUNGQL FORTRAN_ID2( zungql, ZUNGQL )

// Value-type variants of ungqr
#define LAPACK_CUNGQR FORTRAN_ID2( cungqr, CUNGQR )
#define LAPACK_ZUNGQR FORTRAN_ID2( zungqr, ZUNGQR )

// Value-type variants of ungrq
#define LAPACK_CUNGRQ FORTRAN_ID2( cungrq, CUNGRQ )
#define LAPACK_ZUNGRQ FORTRAN_ID2( zungrq, ZUNGRQ )

// Value-type variants of unmlq
#define LAPACK_CUNMLQ FORTRAN_ID2( cunmlq, CUNMLQ )
#define LAPACK_ZUNMLQ FORTRAN_ID2( zunmlq, ZUNMLQ )

// Value-type variants of unmql
#define LAPACK_CUNMQL FORTRAN_ID2( cunmql, CUNMQL )
#define LAPACK_ZUNMQL FORTRAN_ID2( zunmql, ZUNMQL )

// Value-type variants of unmqr
#define LAPACK_CUNMQR FORTRAN_ID2( cunmqr, CUNMQR )
#define LAPACK_ZUNMQR FORTRAN_ID2( zunmqr, ZUNMQR )

// Value-type variants of unmrq
#define LAPACK_CUNMRQ FORTRAN_ID2( cunmrq, CUNMRQ )
#define LAPACK_ZUNMRQ FORTRAN_ID2( zunmrq, ZUNMRQ )

// Value-type variants of unmrz
#define LAPACK_CUNMRZ FORTRAN_ID2( cunmrz, CUNMRZ )
#define LAPACK_ZUNMRZ FORTRAN_ID2( zunmrz, ZUNMRZ )

// Value-type variants of bdsdc
#define LAPACK_SBDSDC FORTRAN_ID2( sbdsdc, SBDSDC )
#define LAPACK_DBDSDC FORTRAN_ID2( dbdsdc, DBDSDC )

// Value-type variants of bdsqr
#define LAPACK_SBDSQR FORTRAN_ID2( sbdsqr, SBDSQR )
#define LAPACK_DBDSQR FORTRAN_ID2( dbdsqr, DBDSQR )
#define LAPACK_CBDSQR FORTRAN_ID2( cbdsqr, CBDSQR )
#define LAPACK_ZBDSQR FORTRAN_ID2( zbdsqr, ZBDSQR )

// Value-type variants of gbbrd
#define LAPACK_SGBBRD FORTRAN_ID2( sgbbrd, SGBBRD )
#define LAPACK_DGBBRD FORTRAN_ID2( dgbbrd, DGBBRD )
#define LAPACK_CGBBRD FORTRAN_ID2( cgbbrd, CGBBRD )
#define LAPACK_ZGBBRD FORTRAN_ID2( zgbbrd, ZGBBRD )

// Value-type variants of gebrd
#define LAPACK_SGEBRD FORTRAN_ID2( sgebrd, SGEBRD )
#define LAPACK_DGEBRD FORTRAN_ID2( dgebrd, DGEBRD )
#define LAPACK_CGEBRD FORTRAN_ID2( cgebrd, CGEBRD )
#define LAPACK_ZGEBRD FORTRAN_ID2( zgebrd, ZGEBRD )

// Value-type variants of orgbr
#define LAPACK_SORGBR FORTRAN_ID2( sorgbr, SORGBR )
#define LAPACK_DORGBR FORTRAN_ID2( dorgbr, DORGBR )

// Value-type variants of ormbr
#define LAPACK_SORMBR FORTRAN_ID2( sormbr, SORMBR )
#define LAPACK_DORMBR FORTRAN_ID2( dormbr, DORMBR )

// Value-type variants of ungbr
#define LAPACK_CUNGBR FORTRAN_ID2( cungbr, CUNGBR )
#define LAPACK_ZUNGBR FORTRAN_ID2( zungbr, ZUNGBR )

// Value-type variants of unmbr
#define LAPACK_CUNMBR FORTRAN_ID2( cunmbr, CUNMBR )
#define LAPACK_ZUNMBR FORTRAN_ID2( zunmbr, ZUNMBR )

// Value-type variants of gebak
#define LAPACK_SGEBAK FORTRAN_ID2( sgebak, SGEBAK )
#define LAPACK_DGEBAK FORTRAN_ID2( dgebak, DGEBAK )
#define LAPACK_CGEBAK FORTRAN_ID2( cgebak, CGEBAK )
#define LAPACK_ZGEBAK FORTRAN_ID2( zgebak, ZGEBAK )

// Value-type variants of gebal
#define LAPACK_SGEBAL FORTRAN_ID2( sgebal, SGEBAL )
#define LAPACK_DGEBAL FORTRAN_ID2( dgebal, DGEBAL )
#define LAPACK_CGEBAL FORTRAN_ID2( cgebal, CGEBAL )
#define LAPACK_ZGEBAL FORTRAN_ID2( zgebal, ZGEBAL )

// Value-type variants of gehrd
#define LAPACK_SGEHRD FORTRAN_ID2( sgehrd, SGEHRD )
#define LAPACK_DGEHRD FORTRAN_ID2( dgehrd, DGEHRD )
#define LAPACK_CGEHRD FORTRAN_ID2( cgehrd, CGEHRD )
#define LAPACK_ZGEHRD FORTRAN_ID2( zgehrd, ZGEHRD )

// Value-type variants of hsein
#define LAPACK_SHSEIN FORTRAN_ID2( shsein, SHSEIN )
#define LAPACK_DHSEIN FORTRAN_ID2( dhsein, DHSEIN )
#define LAPACK_CHSEIN FORTRAN_ID2( chsein, CHSEIN )
#define LAPACK_ZHSEIN FORTRAN_ID2( zhsein, ZHSEIN )

// Value-type variants of hseqr
#define LAPACK_SHSEQR FORTRAN_ID2( shseqr, SHSEQR )
#define LAPACK_DHSEQR FORTRAN_ID2( dhseqr, DHSEQR )
#define LAPACK_CHSEQR FORTRAN_ID2( chseqr, CHSEQR )
#define LAPACK_ZHSEQR FORTRAN_ID2( zhseqr, ZHSEQR )

// Value-type variants of orghr
#define LAPACK_SORGHR FORTRAN_ID2( sorghr, SORGHR )
#define LAPACK_DORGHR FORTRAN_ID2( dorghr, DORGHR )

// Value-type variants of ormhr
#define LAPACK_SORMHR FORTRAN_ID2( sormhr, SORMHR )
#define LAPACK_DORMHR FORTRAN_ID2( dormhr, DORMHR )

// Value-type variants of trevc
#define LAPACK_STREVC FORTRAN_ID2( strevc, STREVC )
#define LAPACK_DTREVC FORTRAN_ID2( dtrevc, DTREVC )
#define LAPACK_CTREVC FORTRAN_ID2( ctrevc, CTREVC )
#define LAPACK_ZTREVC FORTRAN_ID2( ztrevc, ZTREVC )

// Value-type variants of trexc
#define LAPACK_STREXC FORTRAN_ID2( strexc, STREXC )
#define LAPACK_DTREXC FORTRAN_ID2( dtrexc, DTREXC )
#define LAPACK_CTREXC FORTRAN_ID2( ctrexc, CTREXC )
#define LAPACK_ZTREXC FORTRAN_ID2( ztrexc, ZTREXC )

// Value-type variants of trsen
#define LAPACK_CTRSEN FORTRAN_ID2( ctrsen, CTRSEN )
#define LAPACK_ZTRSEN FORTRAN_ID2( ztrsen, ZTRSEN )

// Value-type variants of trsna
#define LAPACK_STRSNA FORTRAN_ID2( strsna, STRSNA )
#define LAPACK_DTRSNA FORTRAN_ID2( dtrsna, DTRSNA )
#define LAPACK_CTRSNA FORTRAN_ID2( ctrsna, CTRSNA )
#define LAPACK_ZTRSNA FORTRAN_ID2( ztrsna, ZTRSNA )

// Value-type variants of trsyl
#define LAPACK_STRSYL FORTRAN_ID2( strsyl, STRSYL )
#define LAPACK_DTRSYL FORTRAN_ID2( dtrsyl, DTRSYL )
#define LAPACK_CTRSYL FORTRAN_ID2( ctrsyl, CTRSYL )
#define LAPACK_ZTRSYL FORTRAN_ID2( ztrsyl, ZTRSYL )

// Value-type variants of unghr
#define LAPACK_CUNGHR FORTRAN_ID2( cunghr, CUNGHR )
#define LAPACK_ZUNGHR FORTRAN_ID2( zunghr, ZUNGHR )

// Value-type variants of unmhr
#define LAPACK_CUNMHR FORTRAN_ID2( cunmhr, CUNMHR )
#define LAPACK_ZUNMHR FORTRAN_ID2( zunmhr, ZUNMHR )

// Value-type variants of gbcon
#define LAPACK_SGBCON FORTRAN_ID2( sgbcon, SGBCON )
#define LAPACK_DGBCON FORTRAN_ID2( dgbcon, DGBCON )
#define LAPACK_CGBCON FORTRAN_ID2( cgbcon, CGBCON )
#define LAPACK_ZGBCON FORTRAN_ID2( zgbcon, ZGBCON )

// Value-type variants of gbequ
#define LAPACK_SGBEQU FORTRAN_ID2( sgbequ, SGBEQU )
#define LAPACK_DGBEQU FORTRAN_ID2( dgbequ, DGBEQU )
#define LAPACK_CGBEQU FORTRAN_ID2( cgbequ, CGBEQU )
#define LAPACK_ZGBEQU FORTRAN_ID2( zgbequ, ZGBEQU )

// Value-type variants of gbrfs
#define LAPACK_SGBRFS FORTRAN_ID2( sgbrfs, SGBRFS )
#define LAPACK_DGBRFS FORTRAN_ID2( dgbrfs, DGBRFS )
#define LAPACK_CGBRFS FORTRAN_ID2( cgbrfs, CGBRFS )
#define LAPACK_ZGBRFS FORTRAN_ID2( zgbrfs, ZGBRFS )

// Value-type variants of gbtrf
#define LAPACK_SGBTRF FORTRAN_ID2( sgbtrf, SGBTRF )
#define LAPACK_DGBTRF FORTRAN_ID2( dgbtrf, DGBTRF )
#define LAPACK_CGBTRF FORTRAN_ID2( cgbtrf, CGBTRF )
#define LAPACK_ZGBTRF FORTRAN_ID2( zgbtrf, ZGBTRF )

// Value-type variants of gbtrs
#define LAPACK_SGBTRS FORTRAN_ID2( sgbtrs, SGBTRS )
#define LAPACK_DGBTRS FORTRAN_ID2( dgbtrs, DGBTRS )
#define LAPACK_CGBTRS FORTRAN_ID2( cgbtrs, CGBTRS )
#define LAPACK_ZGBTRS FORTRAN_ID2( zgbtrs, ZGBTRS )

// Value-type variants of gecon
#define LAPACK_SGECON FORTRAN_ID2( sgecon, SGECON )
#define LAPACK_DGECON FORTRAN_ID2( dgecon, DGECON )
#define LAPACK_CGECON FORTRAN_ID2( cgecon, CGECON )
#define LAPACK_ZGECON FORTRAN_ID2( zgecon, ZGECON )

// Value-type variants of geequ
#define LAPACK_SGEEQU FORTRAN_ID2( sgeequ, SGEEQU )
#define LAPACK_DGEEQU FORTRAN_ID2( dgeequ, DGEEQU )
#define LAPACK_CGEEQU FORTRAN_ID2( cgeequ, CGEEQU )
#define LAPACK_ZGEEQU FORTRAN_ID2( zgeequ, ZGEEQU )

// Value-type variants of gerfs
#define LAPACK_SGERFS FORTRAN_ID2( sgerfs, SGERFS )
#define LAPACK_DGERFS FORTRAN_ID2( dgerfs, DGERFS )
#define LAPACK_CGERFS FORTRAN_ID2( cgerfs, CGERFS )
#define LAPACK_ZGERFS FORTRAN_ID2( zgerfs, ZGERFS )

// Value-type variants of getrf
#define LAPACK_SGETRF FORTRAN_ID2( sgetrf, SGETRF )
#define LAPACK_DGETRF FORTRAN_ID2( dgetrf, DGETRF )
#define LAPACK_CGETRF FORTRAN_ID2( cgetrf, CGETRF )
#define LAPACK_ZGETRF FORTRAN_ID2( zgetrf, ZGETRF )

// Value-type variants of getri
#define LAPACK_SGETRI FORTRAN_ID2( sgetri, SGETRI )
#define LAPACK_DGETRI FORTRAN_ID2( dgetri, DGETRI )
#define LAPACK_CGETRI FORTRAN_ID2( cgetri, CGETRI )
#define LAPACK_ZGETRI FORTRAN_ID2( zgetri, ZGETRI )

// Value-type variants of getrs
#define LAPACK_SGETRS FORTRAN_ID2( sgetrs, SGETRS )
#define LAPACK_DGETRS FORTRAN_ID2( dgetrs, DGETRS )
#define LAPACK_CGETRS FORTRAN_ID2( cgetrs, CGETRS )
#define LAPACK_ZGETRS FORTRAN_ID2( zgetrs, ZGETRS )

// Value-type variants of gtrfs
#define LAPACK_SGTRFS FORTRAN_ID2( sgtrfs, SGTRFS )
#define LAPACK_DGTRFS FORTRAN_ID2( dgtrfs, DGTRFS )
#define LAPACK_CGTRFS FORTRAN_ID2( cgtrfs, CGTRFS )
#define LAPACK_ZGTRFS FORTRAN_ID2( zgtrfs, ZGTRFS )

// Value-type variants of gttrs
#define LAPACK_SGTTRS FORTRAN_ID2( sgttrs, SGTTRS )
#define LAPACK_DGTTRS FORTRAN_ID2( dgttrs, DGTTRS )
#define LAPACK_CGTTRS FORTRAN_ID2( cgttrs, CGTTRS )
#define LAPACK_ZGTTRS FORTRAN_ID2( zgttrs, ZGTTRS )

// Value-type variants of hecon
#define LAPACK_CHECON FORTRAN_ID2( checon, CHECON )
#define LAPACK_ZHECON FORTRAN_ID2( zhecon, ZHECON )

// Value-type variants of herfs
#define LAPACK_CHERFS FORTRAN_ID2( cherfs, CHERFS )
#define LAPACK_ZHERFS FORTRAN_ID2( zherfs, ZHERFS )

// Value-type variants of hetrf
#define LAPACK_CHETRF FORTRAN_ID2( chetrf, CHETRF )
#define LAPACK_ZHETRF FORTRAN_ID2( zhetrf, ZHETRF )

// Value-type variants of hetri
#define LAPACK_CHETRI FORTRAN_ID2( chetri, CHETRI )
#define LAPACK_ZHETRI FORTRAN_ID2( zhetri, ZHETRI )

// Value-type variants of hetrs
#define LAPACK_CHETRS FORTRAN_ID2( chetrs, CHETRS )
#define LAPACK_ZHETRS FORTRAN_ID2( zhetrs, ZHETRS )

// Value-type variants of hpcon
#define LAPACK_CHPCON FORTRAN_ID2( chpcon, CHPCON )
#define LAPACK_ZHPCON FORTRAN_ID2( zhpcon, ZHPCON )

// Value-type variants of hprfs
#define LAPACK_CHPRFS FORTRAN_ID2( chprfs, CHPRFS )
#define LAPACK_ZHPRFS FORTRAN_ID2( zhprfs, ZHPRFS )

// Value-type variants of hptrf
#define LAPACK_CHPTRF FORTRAN_ID2( chptrf, CHPTRF )
#define LAPACK_ZHPTRF FORTRAN_ID2( zhptrf, ZHPTRF )

// Value-type variants of hptri
#define LAPACK_CHPTRI FORTRAN_ID2( chptri, CHPTRI )
#define LAPACK_ZHPTRI FORTRAN_ID2( zhptri, ZHPTRI )

// Value-type variants of hptrs
#define LAPACK_CHPTRS FORTRAN_ID2( chptrs, CHPTRS )
#define LAPACK_ZHPTRS FORTRAN_ID2( zhptrs, ZHPTRS )

// Value-type variants of pbcon
#define LAPACK_SPBCON FORTRAN_ID2( spbcon, SPBCON )
#define LAPACK_DPBCON FORTRAN_ID2( dpbcon, DPBCON )
#define LAPACK_CPBCON FORTRAN_ID2( cpbcon, CPBCON )
#define LAPACK_ZPBCON FORTRAN_ID2( zpbcon, ZPBCON )

// Value-type variants of pbequ
#define LAPACK_SPBEQU FORTRAN_ID2( spbequ, SPBEQU )
#define LAPACK_DPBEQU FORTRAN_ID2( dpbequ, DPBEQU )
#define LAPACK_CPBEQU FORTRAN_ID2( cpbequ, CPBEQU )
#define LAPACK_ZPBEQU FORTRAN_ID2( zpbequ, ZPBEQU )

// Value-type variants of pbrfs
#define LAPACK_SPBRFS FORTRAN_ID2( spbrfs, SPBRFS )
#define LAPACK_DPBRFS FORTRAN_ID2( dpbrfs, DPBRFS )
#define LAPACK_CPBRFS FORTRAN_ID2( cpbrfs, CPBRFS )
#define LAPACK_ZPBRFS FORTRAN_ID2( zpbrfs, ZPBRFS )

// Value-type variants of pbtrf
#define LAPACK_SPBTRF FORTRAN_ID2( spbtrf, SPBTRF )
#define LAPACK_DPBTRF FORTRAN_ID2( dpbtrf, DPBTRF )
#define LAPACK_CPBTRF FORTRAN_ID2( cpbtrf, CPBTRF )
#define LAPACK_ZPBTRF FORTRAN_ID2( zpbtrf, ZPBTRF )

// Value-type variants of pbtrs
#define LAPACK_SPBTRS FORTRAN_ID2( spbtrs, SPBTRS )
#define LAPACK_DPBTRS FORTRAN_ID2( dpbtrs, DPBTRS )
#define LAPACK_CPBTRS FORTRAN_ID2( cpbtrs, CPBTRS )
#define LAPACK_ZPBTRS FORTRAN_ID2( zpbtrs, ZPBTRS )

// Value-type variants of pftrf
#define LAPACK_SPFTRF FORTRAN_ID2( spftrf, SPFTRF )
#define LAPACK_DPFTRF FORTRAN_ID2( dpftrf, DPFTRF )
#define LAPACK_CPFTRF FORTRAN_ID2( cpftrf, CPFTRF )
#define LAPACK_ZPFTRF FORTRAN_ID2( zpftrf, ZPFTRF )

// Value-type variants of pftri
#define LAPACK_SPFTRI FORTRAN_ID2( spftri, SPFTRI )
#define LAPACK_DPFTRI FORTRAN_ID2( dpftri, DPFTRI )
#define LAPACK_CPFTRI FORTRAN_ID2( cpftri, CPFTRI )
#define LAPACK_ZPFTRI FORTRAN_ID2( zpftri, ZPFTRI )

// Value-type variants of pftrs
#define LAPACK_SPFTRS FORTRAN_ID2( spftrs, SPFTRS )
#define LAPACK_DPFTRS FORTRAN_ID2( dpftrs, DPFTRS )
#define LAPACK_CPFTRS FORTRAN_ID2( cpftrs, CPFTRS )
#define LAPACK_ZPFTRS FORTRAN_ID2( zpftrs, ZPFTRS )

// Value-type variants of pocon
#define LAPACK_SPOCON FORTRAN_ID2( spocon, SPOCON )
#define LAPACK_DPOCON FORTRAN_ID2( dpocon, DPOCON )
#define LAPACK_CPOCON FORTRAN_ID2( cpocon, CPOCON )
#define LAPACK_ZPOCON FORTRAN_ID2( zpocon, ZPOCON )

// Value-type variants of poequ
#define LAPACK_SPOEQU FORTRAN_ID2( spoequ, SPOEQU )
#define LAPACK_DPOEQU FORTRAN_ID2( dpoequ, DPOEQU )
#define LAPACK_CPOEQU FORTRAN_ID2( cpoequ, CPOEQU )
#define LAPACK_ZPOEQU FORTRAN_ID2( zpoequ, ZPOEQU )

// Value-type variants of porfs
#define LAPACK_SPORFS FORTRAN_ID2( sporfs, SPORFS )
#define LAPACK_DPORFS FORTRAN_ID2( dporfs, DPORFS )
#define LAPACK_CPORFS FORTRAN_ID2( cporfs, CPORFS )
#define LAPACK_ZPORFS FORTRAN_ID2( zporfs, ZPORFS )

// Value-type variants of potrf
#define LAPACK_SPOTRF FORTRAN_ID2( spotrf, SPOTRF )
#define LAPACK_DPOTRF FORTRAN_ID2( dpotrf, DPOTRF )
#define LAPACK_CPOTRF FORTRAN_ID2( cpotrf, CPOTRF )
#define LAPACK_ZPOTRF FORTRAN_ID2( zpotrf, ZPOTRF )

// Value-type variants of potri
#define LAPACK_SPOTRI FORTRAN_ID2( spotri, SPOTRI )
#define LAPACK_DPOTRI FORTRAN_ID2( dpotri, DPOTRI )
#define LAPACK_CPOTRI FORTRAN_ID2( cpotri, CPOTRI )
#define LAPACK_ZPOTRI FORTRAN_ID2( zpotri, ZPOTRI )

// Value-type variants of potrs
#define LAPACK_SPOTRS FORTRAN_ID2( spotrs, SPOTRS )
#define LAPACK_DPOTRS FORTRAN_ID2( dpotrs, DPOTRS )
#define LAPACK_CPOTRS FORTRAN_ID2( cpotrs, CPOTRS )
#define LAPACK_ZPOTRS FORTRAN_ID2( zpotrs, ZPOTRS )

// Value-type variants of ppcon
#define LAPACK_SPPCON FORTRAN_ID2( sppcon, SPPCON )
#define LAPACK_DPPCON FORTRAN_ID2( dppcon, DPPCON )
#define LAPACK_CPPCON FORTRAN_ID2( cppcon, CPPCON )
#define LAPACK_ZPPCON FORTRAN_ID2( zppcon, ZPPCON )

// Value-type variants of ppequ
#define LAPACK_SPPEQU FORTRAN_ID2( sppequ, SPPEQU )
#define LAPACK_DPPEQU FORTRAN_ID2( dppequ, DPPEQU )
#define LAPACK_CPPEQU FORTRAN_ID2( cppequ, CPPEQU )
#define LAPACK_ZPPEQU FORTRAN_ID2( zppequ, ZPPEQU )

// Value-type variants of pprfs
#define LAPACK_SPPRFS FORTRAN_ID2( spprfs, SPPRFS )
#define LAPACK_DPPRFS FORTRAN_ID2( dpprfs, DPPRFS )
#define LAPACK_CPPRFS FORTRAN_ID2( cpprfs, CPPRFS )
#define LAPACK_ZPPRFS FORTRAN_ID2( zpprfs, ZPPRFS )

// Value-type variants of pptrf
#define LAPACK_SPPTRF FORTRAN_ID2( spptrf, SPPTRF )
#define LAPACK_DPPTRF FORTRAN_ID2( dpptrf, DPPTRF )
#define LAPACK_CPPTRF FORTRAN_ID2( cpptrf, CPPTRF )
#define LAPACK_ZPPTRF FORTRAN_ID2( zpptrf, ZPPTRF )

// Value-type variants of pptri
#define LAPACK_SPPTRI FORTRAN_ID2( spptri, SPPTRI )
#define LAPACK_DPPTRI FORTRAN_ID2( dpptri, DPPTRI )
#define LAPACK_CPPTRI FORTRAN_ID2( cpptri, CPPTRI )
#define LAPACK_ZPPTRI FORTRAN_ID2( zpptri, ZPPTRI )

// Value-type variants of pptrs
#define LAPACK_SPPTRS FORTRAN_ID2( spptrs, SPPTRS )
#define LAPACK_DPPTRS FORTRAN_ID2( dpptrs, DPPTRS )
#define LAPACK_CPPTRS FORTRAN_ID2( cpptrs, CPPTRS )
#define LAPACK_ZPPTRS FORTRAN_ID2( zpptrs, ZPPTRS )

// Value-type variants of pstrf
#define LAPACK_SPSTRF FORTRAN_ID2( spstrf, SPSTRF )
#define LAPACK_DPSTRF FORTRAN_ID2( dpstrf, DPSTRF )
#define LAPACK_CPSTRF FORTRAN_ID2( cpstrf, CPSTRF )
#define LAPACK_ZPSTRF FORTRAN_ID2( zpstrf, ZPSTRF )

// Value-type variants of ptcon
#define LAPACK_SPTCON FORTRAN_ID2( sptcon, SPTCON )
#define LAPACK_DPTCON FORTRAN_ID2( dptcon, DPTCON )
#define LAPACK_CPTCON FORTRAN_ID2( cptcon, CPTCON )
#define LAPACK_ZPTCON FORTRAN_ID2( zptcon, ZPTCON )

// Value-type variants of ptrfs
#define LAPACK_SPTRFS FORTRAN_ID2( sptrfs, SPTRFS )
#define LAPACK_DPTRFS FORTRAN_ID2( dptrfs, DPTRFS )
#define LAPACK_CPTRFS FORTRAN_ID2( cptrfs, CPTRFS )
#define LAPACK_ZPTRFS FORTRAN_ID2( zptrfs, ZPTRFS )

// Value-type variants of pttrf
#define LAPACK_SPTTRF FORTRAN_ID2( spttrf, SPTTRF )
#define LAPACK_DPTTRF FORTRAN_ID2( dpttrf, DPTTRF )
#define LAPACK_CPTTRF FORTRAN_ID2( cpttrf, CPTTRF )
#define LAPACK_ZPTTRF FORTRAN_ID2( zpttrf, ZPTTRF )

// Value-type variants of pttrs
#define LAPACK_SPTTRS FORTRAN_ID2( spttrs, SPTTRS )
#define LAPACK_DPTTRS FORTRAN_ID2( dpttrs, DPTTRS )
#define LAPACK_CPTTRS FORTRAN_ID2( cpttrs, CPTTRS )
#define LAPACK_ZPTTRS FORTRAN_ID2( zpttrs, ZPTTRS )

// Value-type variants of spcon
#define LAPACK_SSPCON FORTRAN_ID2( sspcon, SSPCON )
#define LAPACK_DSPCON FORTRAN_ID2( dspcon, DSPCON )
#define LAPACK_CSPCON FORTRAN_ID2( cspcon, CSPCON )
#define LAPACK_ZSPCON FORTRAN_ID2( zspcon, ZSPCON )

// Value-type variants of sprfs
#define LAPACK_SSPRFS FORTRAN_ID2( ssprfs, SSPRFS )
#define LAPACK_DSPRFS FORTRAN_ID2( dsprfs, DSPRFS )
#define LAPACK_CSPRFS FORTRAN_ID2( csprfs, CSPRFS )
#define LAPACK_ZSPRFS FORTRAN_ID2( zsprfs, ZSPRFS )

// Value-type variants of sptrf
#define LAPACK_SSPTRF FORTRAN_ID2( ssptrf, SSPTRF )
#define LAPACK_DSPTRF FORTRAN_ID2( dsptrf, DSPTRF )
#define LAPACK_CSPTRF FORTRAN_ID2( csptrf, CSPTRF )
#define LAPACK_ZSPTRF FORTRAN_ID2( zsptrf, ZSPTRF )

// Value-type variants of sptri
#define LAPACK_SSPTRI FORTRAN_ID2( ssptri, SSPTRI )
#define LAPACK_DSPTRI FORTRAN_ID2( dsptri, DSPTRI )
#define LAPACK_CSPTRI FORTRAN_ID2( csptri, CSPTRI )
#define LAPACK_ZSPTRI FORTRAN_ID2( zsptri, ZSPTRI )

// Value-type variants of sptrs
#define LAPACK_SSPTRS FORTRAN_ID2( ssptrs, SSPTRS )
#define LAPACK_DSPTRS FORTRAN_ID2( dsptrs, DSPTRS )
#define LAPACK_CSPTRS FORTRAN_ID2( csptrs, CSPTRS )
#define LAPACK_ZSPTRS FORTRAN_ID2( zsptrs, ZSPTRS )

// Value-type variants of sycon
#define LAPACK_SSYCON FORTRAN_ID2( ssycon, SSYCON )
#define LAPACK_DSYCON FORTRAN_ID2( dsycon, DSYCON )
#define LAPACK_CSYCON FORTRAN_ID2( csycon, CSYCON )
#define LAPACK_ZSYCON FORTRAN_ID2( zsycon, ZSYCON )

// Value-type variants of syrfs
#define LAPACK_SSYRFS FORTRAN_ID2( ssyrfs, SSYRFS )
#define LAPACK_DSYRFS FORTRAN_ID2( dsyrfs, DSYRFS )
#define LAPACK_CSYRFS FORTRAN_ID2( csyrfs, CSYRFS )
#define LAPACK_ZSYRFS FORTRAN_ID2( zsyrfs, ZSYRFS )

// Value-type variants of sytrf
#define LAPACK_SSYTRF FORTRAN_ID2( ssytrf, SSYTRF )
#define LAPACK_DSYTRF FORTRAN_ID2( dsytrf, DSYTRF )
#define LAPACK_CSYTRF FORTRAN_ID2( csytrf, CSYTRF )
#define LAPACK_ZSYTRF FORTRAN_ID2( zsytrf, ZSYTRF )

// Value-type variants of sytri
#define LAPACK_SSYTRI FORTRAN_ID2( ssytri, SSYTRI )
#define LAPACK_DSYTRI FORTRAN_ID2( dsytri, DSYTRI )
#define LAPACK_CSYTRI FORTRAN_ID2( csytri, CSYTRI )
#define LAPACK_ZSYTRI FORTRAN_ID2( zsytri, ZSYTRI )

// Value-type variants of sytrs
#define LAPACK_SSYTRS FORTRAN_ID2( ssytrs, SSYTRS )
#define LAPACK_DSYTRS FORTRAN_ID2( dsytrs, DSYTRS )
#define LAPACK_CSYTRS FORTRAN_ID2( csytrs, CSYTRS )
#define LAPACK_ZSYTRS FORTRAN_ID2( zsytrs, ZSYTRS )

// Value-type variants of tbcon
#define LAPACK_STBCON FORTRAN_ID2( stbcon, STBCON )
#define LAPACK_DTBCON FORTRAN_ID2( dtbcon, DTBCON )
#define LAPACK_CTBCON FORTRAN_ID2( ctbcon, CTBCON )
#define LAPACK_ZTBCON FORTRAN_ID2( ztbcon, ZTBCON )

// Value-type variants of tbrfs
#define LAPACK_STBRFS FORTRAN_ID2( stbrfs, STBRFS )
#define LAPACK_DTBRFS FORTRAN_ID2( dtbrfs, DTBRFS )
#define LAPACK_CTBRFS FORTRAN_ID2( ctbrfs, CTBRFS )
#define LAPACK_ZTBRFS FORTRAN_ID2( ztbrfs, ZTBRFS )

// Value-type variants of tbtrs
#define LAPACK_STBTRS FORTRAN_ID2( stbtrs, STBTRS )
#define LAPACK_DTBTRS FORTRAN_ID2( dtbtrs, DTBTRS )
#define LAPACK_CTBTRS FORTRAN_ID2( ctbtrs, CTBTRS )
#define LAPACK_ZTBTRS FORTRAN_ID2( ztbtrs, ZTBTRS )

// Value-type variants of tftri
#define LAPACK_STFTRI FORTRAN_ID2( stftri, STFTRI )
#define LAPACK_DTFTRI FORTRAN_ID2( dtftri, DTFTRI )
#define LAPACK_CTFTRI FORTRAN_ID2( ctftri, CTFTRI )
#define LAPACK_ZTFTRI FORTRAN_ID2( ztftri, ZTFTRI )

// Value-type variants of tpcon
#define LAPACK_STPCON FORTRAN_ID2( stpcon, STPCON )
#define LAPACK_DTPCON FORTRAN_ID2( dtpcon, DTPCON )
#define LAPACK_CTPCON FORTRAN_ID2( ctpcon, CTPCON )
#define LAPACK_ZTPCON FORTRAN_ID2( ztpcon, ZTPCON )

// Value-type variants of tprfs
#define LAPACK_STPRFS FORTRAN_ID2( stprfs, STPRFS )
#define LAPACK_DTPRFS FORTRAN_ID2( dtprfs, DTPRFS )
#define LAPACK_CTPRFS FORTRAN_ID2( ctprfs, CTPRFS )
#define LAPACK_ZTPRFS FORTRAN_ID2( ztprfs, ZTPRFS )

// Value-type variants of tptri
#define LAPACK_STPTRI FORTRAN_ID2( stptri, STPTRI )
#define LAPACK_DTPTRI FORTRAN_ID2( dtptri, DTPTRI )
#define LAPACK_CTPTRI FORTRAN_ID2( ctptri, CTPTRI )
#define LAPACK_ZTPTRI FORTRAN_ID2( ztptri, ZTPTRI )

// Value-type variants of tptrs
#define LAPACK_STPTRS FORTRAN_ID2( stptrs, STPTRS )
#define LAPACK_DTPTRS FORTRAN_ID2( dtptrs, DTPTRS )
#define LAPACK_CTPTRS FORTRAN_ID2( ctptrs, CTPTRS )
#define LAPACK_ZTPTRS FORTRAN_ID2( ztptrs, ZTPTRS )

// Value-type variants of trcon
#define LAPACK_STRCON FORTRAN_ID2( strcon, STRCON )
#define LAPACK_DTRCON FORTRAN_ID2( dtrcon, DTRCON )
#define LAPACK_CTRCON FORTRAN_ID2( ctrcon, CTRCON )
#define LAPACK_ZTRCON FORTRAN_ID2( ztrcon, ZTRCON )

// Value-type variants of trrfs
#define LAPACK_STRRFS FORTRAN_ID2( strrfs, STRRFS )
#define LAPACK_DTRRFS FORTRAN_ID2( dtrrfs, DTRRFS )
#define LAPACK_CTRRFS FORTRAN_ID2( ctrrfs, CTRRFS )
#define LAPACK_ZTRRFS FORTRAN_ID2( ztrrfs, ZTRRFS )

// Value-type variants of trtri
#define LAPACK_STRTRI FORTRAN_ID2( strtri, STRTRI )
#define LAPACK_DTRTRI FORTRAN_ID2( dtrtri, DTRTRI )
#define LAPACK_CTRTRI FORTRAN_ID2( ctrtri, CTRTRI )
#define LAPACK_ZTRTRI FORTRAN_ID2( ztrtri, ZTRTRI )

// Value-type variants of trtrs
#define LAPACK_STRTRS FORTRAN_ID2( strtrs, STRTRS )
#define LAPACK_DTRTRS FORTRAN_ID2( dtrtrs, DTRTRS )
#define LAPACK_CTRTRS FORTRAN_ID2( ctrtrs, CTRTRS )
#define LAPACK_ZTRTRS FORTRAN_ID2( ztrtrs, ZTRTRS )

// Value-type variants of hbtrd
#define LAPACK_CHBTRD FORTRAN_ID2( chbtrd, CHBTRD )
#define LAPACK_ZHBTRD FORTRAN_ID2( zhbtrd, ZHBTRD )

// Value-type variants of hetrd
#define LAPACK_CHETRD FORTRAN_ID2( chetrd, CHETRD )
#define LAPACK_ZHETRD FORTRAN_ID2( zhetrd, ZHETRD )

// Value-type variants of hptrd
#define LAPACK_CHPTRD FORTRAN_ID2( chptrd, CHPTRD )
#define LAPACK_ZHPTRD FORTRAN_ID2( zhptrd, ZHPTRD )

// Value-type variants of opgtr
#define LAPACK_SOPGTR FORTRAN_ID2( sopgtr, SOPGTR )
#define LAPACK_DOPGTR FORTRAN_ID2( dopgtr, DOPGTR )

// Value-type variants of opmtr
#define LAPACK_SOPMTR FORTRAN_ID2( sopmtr, SOPMTR )
#define LAPACK_DOPMTR FORTRAN_ID2( dopmtr, DOPMTR )

// Value-type variants of orgtr
#define LAPACK_SORGTR FORTRAN_ID2( sorgtr, SORGTR )
#define LAPACK_DORGTR FORTRAN_ID2( dorgtr, DORGTR )

// Value-type variants of ormtr
#define LAPACK_SORMTR FORTRAN_ID2( sormtr, SORMTR )
#define LAPACK_DORMTR FORTRAN_ID2( dormtr, DORMTR )

// Value-type variants of pteqr
#define LAPACK_SPTEQR FORTRAN_ID2( spteqr, SPTEQR )
#define LAPACK_DPTEQR FORTRAN_ID2( dpteqr, DPTEQR )
#define LAPACK_CPTEQR FORTRAN_ID2( cpteqr, CPTEQR )
#define LAPACK_ZPTEQR FORTRAN_ID2( zpteqr, ZPTEQR )

// Value-type variants of sbtrd
#define LAPACK_SSBTRD FORTRAN_ID2( ssbtrd, SSBTRD )
#define LAPACK_DSBTRD FORTRAN_ID2( dsbtrd, DSBTRD )

// Value-type variants of sptrd
#define LAPACK_SSPTRD FORTRAN_ID2( ssptrd, SSPTRD )
#define LAPACK_DSPTRD FORTRAN_ID2( dsptrd, DSPTRD )

// Value-type variants of stebz
#define LAPACK_SSTEBZ FORTRAN_ID2( sstebz, SSTEBZ )
#define LAPACK_DSTEBZ FORTRAN_ID2( dstebz, DSTEBZ )

// Value-type variants of stedc
#define LAPACK_SSTEDC FORTRAN_ID2( sstedc, SSTEDC )
#define LAPACK_DSTEDC FORTRAN_ID2( dstedc, DSTEDC )
#define LAPACK_CSTEDC FORTRAN_ID2( cstedc, CSTEDC )
#define LAPACK_ZSTEDC FORTRAN_ID2( zstedc, ZSTEDC )

// Value-type variants of stegr
#define LAPACK_SSTEGR FORTRAN_ID2( sstegr, SSTEGR )
#define LAPACK_DSTEGR FORTRAN_ID2( dstegr, DSTEGR )
#define LAPACK_CSTEGR FORTRAN_ID2( cstegr, CSTEGR )
#define LAPACK_ZSTEGR FORTRAN_ID2( zstegr, ZSTEGR )

// Value-type variants of stein
#define LAPACK_SSTEIN FORTRAN_ID2( sstein, SSTEIN )
#define LAPACK_DSTEIN FORTRAN_ID2( dstein, DSTEIN )
#define LAPACK_CSTEIN FORTRAN_ID2( cstein, CSTEIN )
#define LAPACK_ZSTEIN FORTRAN_ID2( zstein, ZSTEIN )

// Value-type variants of stemr
#define LAPACK_SSTEMR FORTRAN_ID2( sstemr, SSTEMR )
#define LAPACK_DSTEMR FORTRAN_ID2( dstemr, DSTEMR )
#define LAPACK_CSTEMR FORTRAN_ID2( cstemr, CSTEMR )
#define LAPACK_ZSTEMR FORTRAN_ID2( zstemr, ZSTEMR )

// Value-type variants of steqr
#define LAPACK_SSTEQR FORTRAN_ID2( ssteqr, SSTEQR )
#define LAPACK_DSTEQR FORTRAN_ID2( dsteqr, DSTEQR )
#define LAPACK_CSTEQR FORTRAN_ID2( csteqr, CSTEQR )
#define LAPACK_ZSTEQR FORTRAN_ID2( zsteqr, ZSTEQR )

// Value-type variants of sterf
#define LAPACK_SSTERF FORTRAN_ID2( ssterf, SSTERF )
#define LAPACK_DSTERF FORTRAN_ID2( dsterf, DSTERF )

// Value-type variants of sytrd
#define LAPACK_SSYTRD FORTRAN_ID2( ssytrd, SSYTRD )
#define LAPACK_DSYTRD FORTRAN_ID2( dsytrd, DSYTRD )

// Value-type variants of ungtr
#define LAPACK_CUNGTR FORTRAN_ID2( cungtr, CUNGTR )
#define LAPACK_ZUNGTR FORTRAN_ID2( zungtr, ZUNGTR )

// Value-type variants of unmtr
#define LAPACK_CUNMTR FORTRAN_ID2( cunmtr, CUNMTR )
#define LAPACK_ZUNMTR FORTRAN_ID2( zunmtr, ZUNMTR )

// Value-type variants of upgtr
#define LAPACK_CUPGTR FORTRAN_ID2( cupgtr, CUPGTR )
#define LAPACK_ZUPGTR FORTRAN_ID2( zupgtr, ZUPGTR )

// Value-type variants of upmtr
#define LAPACK_CUPMTR FORTRAN_ID2( cupmtr, CUPMTR )
#define LAPACK_ZUPMTR FORTRAN_ID2( zupmtr, ZUPMTR )

// Value-type variants of ggbak
#define LAPACK_SGGBAK FORTRAN_ID2( sggbak, SGGBAK )
#define LAPACK_DGGBAK FORTRAN_ID2( dggbak, DGGBAK )
#define LAPACK_CGGBAK FORTRAN_ID2( cggbak, CGGBAK )
#define LAPACK_ZGGBAK FORTRAN_ID2( zggbak, ZGGBAK )

// Value-type variants of ggbal
#define LAPACK_SGGBAL FORTRAN_ID2( sggbal, SGGBAL )
#define LAPACK_DGGBAL FORTRAN_ID2( dggbal, DGGBAL )
#define LAPACK_CGGBAL FORTRAN_ID2( cggbal, CGGBAL )
#define LAPACK_ZGGBAL FORTRAN_ID2( zggbal, ZGGBAL )

// Value-type variants of gghrd
#define LAPACK_SGGHRD FORTRAN_ID2( sgghrd, SGGHRD )
#define LAPACK_DGGHRD FORTRAN_ID2( dgghrd, DGGHRD )
#define LAPACK_CGGHRD FORTRAN_ID2( cgghrd, CGGHRD )
#define LAPACK_ZGGHRD FORTRAN_ID2( zgghrd, ZGGHRD )

// Value-type variants of hgeqz
#define LAPACK_SHGEQZ FORTRAN_ID2( shgeqz, SHGEQZ )
#define LAPACK_DHGEQZ FORTRAN_ID2( dhgeqz, DHGEQZ )
#define LAPACK_CHGEQZ FORTRAN_ID2( chgeqz, CHGEQZ )
#define LAPACK_ZHGEQZ FORTRAN_ID2( zhgeqz, ZHGEQZ )

// Value-type variants of tgevc
#define LAPACK_STGEVC FORTRAN_ID2( stgevc, STGEVC )
#define LAPACK_DTGEVC FORTRAN_ID2( dtgevc, DTGEVC )
#define LAPACK_CTGEVC FORTRAN_ID2( ctgevc, CTGEVC )
#define LAPACK_ZTGEVC FORTRAN_ID2( ztgevc, ZTGEVC )

// Value-type variants of tgexc
#define LAPACK_STGEXC FORTRAN_ID2( stgexc, STGEXC )
#define LAPACK_DTGEXC FORTRAN_ID2( dtgexc, DTGEXC )
#define LAPACK_CTGEXC FORTRAN_ID2( ctgexc, CTGEXC )
#define LAPACK_ZTGEXC FORTRAN_ID2( ztgexc, ZTGEXC )

// Value-type variants of tgsen
#define LAPACK_STGSEN FORTRAN_ID2( stgsen, STGSEN )
#define LAPACK_DTGSEN FORTRAN_ID2( dtgsen, DTGSEN )
#define LAPACK_CTGSEN FORTRAN_ID2( ctgsen, CTGSEN )
#define LAPACK_ZTGSEN FORTRAN_ID2( ztgsen, ZTGSEN )

// Value-type variants of tgsna
#define LAPACK_STGSNA FORTRAN_ID2( stgsna, STGSNA )
#define LAPACK_DTGSNA FORTRAN_ID2( dtgsna, DTGSNA )
#define LAPACK_CTGSNA FORTRAN_ID2( ctgsna, CTGSNA )
#define LAPACK_ZTGSNA FORTRAN_ID2( ztgsna, ZTGSNA )

// Value-type variants of tgsyl
#define LAPACK_STGSYL FORTRAN_ID2( stgsyl, STGSYL )
#define LAPACK_DTGSYL FORTRAN_ID2( dtgsyl, DTGSYL )
#define LAPACK_CTGSYL FORTRAN_ID2( ctgsyl, CTGSYL )
#define LAPACK_ZTGSYL FORTRAN_ID2( ztgsyl, ZTGSYL )

// Value-type variants of ggsvp
#define LAPACK_SGGSVP FORTRAN_ID2( sggsvp, SGGSVP )
#define LAPACK_DGGSVP FORTRAN_ID2( dggsvp, DGGSVP )
#define LAPACK_CGGSVP FORTRAN_ID2( cggsvp, CGGSVP )
#define LAPACK_ZGGSVP FORTRAN_ID2( zggsvp, ZGGSVP )

// Value-type variants of tgsja
#define LAPACK_STGSJA FORTRAN_ID2( stgsja, STGSJA )
#define LAPACK_DTGSJA FORTRAN_ID2( dtgsja, DTGSJA )
#define LAPACK_CTGSJA FORTRAN_ID2( ctgsja, CTGSJA )
#define LAPACK_ZTGSJA FORTRAN_ID2( ztgsja, ZTGSJA )

//
// LAPACK driver routines
//

// Value-type variants of gegv
#define LAPACK_SGEGV FORTRAN_ID2( sgegv, SGEGV )
#define LAPACK_DGEGV FORTRAN_ID2( dgegv, DGEGV )
#define LAPACK_CGEGV FORTRAN_ID2( cgegv, CGEGV )
#define LAPACK_ZGEGV FORTRAN_ID2( zgegv, ZGEGV )

// Value-type variants of gges
#define LAPACK_SGGES FORTRAN_ID2( sgges, SGGES )
#define LAPACK_DGGES FORTRAN_ID2( dgges, DGGES )
#define LAPACK_CGGES FORTRAN_ID2( cgges, CGGES )
#define LAPACK_ZGGES FORTRAN_ID2( zgges, ZGGES )

// Value-type variants of ggesx
#define LAPACK_SGGESX FORTRAN_ID2( sggesx, SGGESX )
#define LAPACK_DGGESX FORTRAN_ID2( dggesx, DGGESX )
#define LAPACK_CGGESX FORTRAN_ID2( cggesx, CGGESX )
#define LAPACK_ZGGESX FORTRAN_ID2( zggesx, ZGGESX )

// Value-type variants of ggev
#define LAPACK_SGGEV FORTRAN_ID2( sggev, SGGEV )
#define LAPACK_DGGEV FORTRAN_ID2( dggev, DGGEV )
#define LAPACK_CGGEV FORTRAN_ID2( cggev, CGGEV )
#define LAPACK_ZGGEV FORTRAN_ID2( zggev, ZGGEV )

// Value-type variants of ggevx
#define LAPACK_SGGEVX FORTRAN_ID2( sggevx, SGGEVX )
#define LAPACK_DGGEVX FORTRAN_ID2( dggevx, DGGEVX )
#define LAPACK_CGGEVX FORTRAN_ID2( cggevx, CGGEVX )
#define LAPACK_ZGGEVX FORTRAN_ID2( zggevx, ZGGEVX )

// Value-type variants of ggsvd
#define LAPACK_SGGSVD FORTRAN_ID2( sggsvd, SGGSVD )
#define LAPACK_DGGSVD FORTRAN_ID2( dggsvd, DGGSVD )
#define LAPACK_CGGSVD FORTRAN_ID2( cggsvd, CGGSVD )
#define LAPACK_ZGGSVD FORTRAN_ID2( zggsvd, ZGGSVD )

// Value-type variants of hbgv
#define LAPACK_CHBGV FORTRAN_ID2( chbgv, CHBGV )
#define LAPACK_ZHBGV FORTRAN_ID2( zhbgv, ZHBGV )

// Value-type variants of hbgvd
#define LAPACK_CHBGVD FORTRAN_ID2( chbgvd, CHBGVD )
#define LAPACK_ZHBGVD FORTRAN_ID2( zhbgvd, ZHBGVD )

// Value-type variants of hbgvx
#define LAPACK_CHBGVX FORTRAN_ID2( chbgvx, CHBGVX )
#define LAPACK_ZHBGVX FORTRAN_ID2( zhbgvx, ZHBGVX )

// Value-type variants of hegv
#define LAPACK_CHEGV FORTRAN_ID2( chegv, CHEGV )
#define LAPACK_ZHEGV FORTRAN_ID2( zhegv, ZHEGV )

// Value-type variants of hegvd
#define LAPACK_CHEGVD FORTRAN_ID2( chegvd, CHEGVD )
#define LAPACK_ZHEGVD FORTRAN_ID2( zhegvd, ZHEGVD )

// Value-type variants of hegvx
#define LAPACK_CHEGVX FORTRAN_ID2( chegvx, CHEGVX )
#define LAPACK_ZHEGVX FORTRAN_ID2( zhegvx, ZHEGVX )

// Value-type variants of hpgv
#define LAPACK_CHPGV FORTRAN_ID2( chpgv, CHPGV )
#define LAPACK_ZHPGV FORTRAN_ID2( zhpgv, ZHPGV )

// Value-type variants of hpgvd
#define LAPACK_CHPGVD FORTRAN_ID2( chpgvd, CHPGVD )
#define LAPACK_ZHPGVD FORTRAN_ID2( zhpgvd, ZHPGVD )

// Value-type variants of hpgvx
#define LAPACK_CHPGVX FORTRAN_ID2( chpgvx, CHPGVX )
#define LAPACK_ZHPGVX FORTRAN_ID2( zhpgvx, ZHPGVX )

// Value-type variants of sbgv
#define LAPACK_SSBGV FORTRAN_ID2( ssbgv, SSBGV )
#define LAPACK_DSBGV FORTRAN_ID2( dsbgv, DSBGV )

// Value-type variants of sbgvd
#define LAPACK_SSBGVD FORTRAN_ID2( ssbgvd, SSBGVD )
#define LAPACK_DSBGVD FORTRAN_ID2( dsbgvd, DSBGVD )

// Value-type variants of sbgvx
#define LAPACK_SSBGVX FORTRAN_ID2( ssbgvx, SSBGVX )
#define LAPACK_DSBGVX FORTRAN_ID2( dsbgvx, DSBGVX )

// Value-type variants of spgv
#define LAPACK_SSPGV FORTRAN_ID2( sspgv, SSPGV )
#define LAPACK_DSPGV FORTRAN_ID2( dspgv, DSPGV )

// Value-type variants of spgvd
#define LAPACK_SSPGVD FORTRAN_ID2( sspgvd, SSPGVD )
#define LAPACK_DSPGVD FORTRAN_ID2( dspgvd, DSPGVD )

// Value-type variants of spgvx
#define LAPACK_SSPGVX FORTRAN_ID2( sspgvx, SSPGVX )
#define LAPACK_DSPGVX FORTRAN_ID2( dspgvx, DSPGVX )

// Value-type variants of sygv
#define LAPACK_SSYGV FORTRAN_ID2( ssygv, SSYGV )
#define LAPACK_DSYGV FORTRAN_ID2( dsygv, DSYGV )

// Value-type variants of sygvd
#define LAPACK_SSYGVD FORTRAN_ID2( ssygvd, SSYGVD )
#define LAPACK_DSYGVD FORTRAN_ID2( dsygvd, DSYGVD )

// Value-type variants of sygvx
#define LAPACK_SSYGVX FORTRAN_ID2( ssygvx, SSYGVX )
#define LAPACK_DSYGVX FORTRAN_ID2( dsygvx, DSYGVX )

// Value-type variants of ggglm
#define LAPACK_SGGGLM FORTRAN_ID2( sggglm, SGGGLM )
#define LAPACK_DGGGLM FORTRAN_ID2( dggglm, DGGGLM )
#define LAPACK_CGGGLM FORTRAN_ID2( cggglm, CGGGLM )
#define LAPACK_ZGGGLM FORTRAN_ID2( zggglm, ZGGGLM )

// Value-type variants of gglse
#define LAPACK_SGGLSE FORTRAN_ID2( sgglse, SGGLSE )
#define LAPACK_DGGLSE FORTRAN_ID2( dgglse, DGGLSE )
#define LAPACK_CGGLSE FORTRAN_ID2( cgglse, CGGLSE )
#define LAPACK_ZGGLSE FORTRAN_ID2( zgglse, ZGGLSE )

// Value-type variants of gbsv
#define LAPACK_SGBSV FORTRAN_ID2( sgbsv, SGBSV )
#define LAPACK_DGBSV FORTRAN_ID2( dgbsv, DGBSV )
#define LAPACK_CGBSV FORTRAN_ID2( cgbsv, CGBSV )
#define LAPACK_ZGBSV FORTRAN_ID2( zgbsv, ZGBSV )

// Value-type variants of gbsvx
#define LAPACK_SGBSVX FORTRAN_ID2( sgbsvx, SGBSVX )
#define LAPACK_DGBSVX FORTRAN_ID2( dgbsvx, DGBSVX )
#define LAPACK_CGBSVX FORTRAN_ID2( cgbsvx, CGBSVX )
#define LAPACK_ZGBSVX FORTRAN_ID2( zgbsvx, ZGBSVX )

// Value-type variants of gejsv
#define LAPACK_SGEJSV FORTRAN_ID2( sgejsv, SGEJSV )
#define LAPACK_DGEJSV FORTRAN_ID2( dgejsv, DGEJSV )

// Value-type variants of gesv
#define LAPACK_SGESV FORTRAN_ID2( sgesv, SGESV )
#define LAPACK_DGESV FORTRAN_ID2( dgesv, DGESV )
#define LAPACK_CGESV FORTRAN_ID2( cgesv, CGESV )
#define LAPACK_ZGESV FORTRAN_ID2( zgesv, ZGESV )

// Value-type variants of gesvx
#define LAPACK_SGESVX FORTRAN_ID2( sgesvx, SGESVX )
#define LAPACK_DGESVX FORTRAN_ID2( dgesvx, DGESVX )
#define LAPACK_CGESVX FORTRAN_ID2( cgesvx, CGESVX )
#define LAPACK_ZGESVX FORTRAN_ID2( zgesvx, ZGESVX )

// Value-type variants of gtsv
#define LAPACK_SGTSV FORTRAN_ID2( sgtsv, SGTSV )
#define LAPACK_DGTSV FORTRAN_ID2( dgtsv, DGTSV )
#define LAPACK_CGTSV FORTRAN_ID2( cgtsv, CGTSV )
#define LAPACK_ZGTSV FORTRAN_ID2( zgtsv, ZGTSV )

// Value-type variants of gtsvx
#define LAPACK_SGTSVX FORTRAN_ID2( sgtsvx, SGTSVX )
#define LAPACK_DGTSVX FORTRAN_ID2( dgtsvx, DGTSVX )
#define LAPACK_CGTSVX FORTRAN_ID2( cgtsvx, CGTSVX )
#define LAPACK_ZGTSVX FORTRAN_ID2( zgtsvx, ZGTSVX )

// Value-type variants of hesv
#define LAPACK_CHESV FORTRAN_ID2( chesv, CHESV )
#define LAPACK_ZHESV FORTRAN_ID2( zhesv, ZHESV )

// Value-type variants of hesvx
#define LAPACK_CHESVX FORTRAN_ID2( chesvx, CHESVX )
#define LAPACK_ZHESVX FORTRAN_ID2( zhesvx, ZHESVX )

// Value-type variants of hpsv
#define LAPACK_CHPSV FORTRAN_ID2( chpsv, CHPSV )
#define LAPACK_ZHPSV FORTRAN_ID2( zhpsv, ZHPSV )

// Value-type variants of hpsvx
#define LAPACK_CHPSVX FORTRAN_ID2( chpsvx, CHPSVX )
#define LAPACK_ZHPSVX FORTRAN_ID2( zhpsvx, ZHPSVX )

// Value-type variants of iter_gesv
#define LAPACK_DSGESV FORTRAN_ID2( dsgesv, DSGESV )
#define LAPACK_ZCGESV FORTRAN_ID2( zcgesv, ZCGESV )

// Value-type variants of iter_posv
#define LAPACK_DSPOSV FORTRAN_ID2( dsposv, DSPOSV )
#define LAPACK_ZCPOSV FORTRAN_ID2( zcposv, ZCPOSV )

// Value-type variants of pbsv
#define LAPACK_SPBSV FORTRAN_ID2( spbsv, SPBSV )
#define LAPACK_DPBSV FORTRAN_ID2( dpbsv, DPBSV )
#define LAPACK_CPBSV FORTRAN_ID2( cpbsv, CPBSV )
#define LAPACK_ZPBSV FORTRAN_ID2( zpbsv, ZPBSV )

// Value-type variants of pbsvx
#define LAPACK_SPBSVX FORTRAN_ID2( spbsvx, SPBSVX )
#define LAPACK_DPBSVX FORTRAN_ID2( dpbsvx, DPBSVX )
#define LAPACK_CPBSVX FORTRAN_ID2( cpbsvx, CPBSVX )
#define LAPACK_ZPBSVX FORTRAN_ID2( zpbsvx, ZPBSVX )

// Value-type variants of posv
#define LAPACK_SPOSV FORTRAN_ID2( sposv, SPOSV )
#define LAPACK_DPOSV FORTRAN_ID2( dposv, DPOSV )
#define LAPACK_CPOSV FORTRAN_ID2( cposv, CPOSV )
#define LAPACK_ZPOSV FORTRAN_ID2( zposv, ZPOSV )

// Value-type variants of posvx
#define LAPACK_SPOSVX FORTRAN_ID2( sposvx, SPOSVX )
#define LAPACK_DPOSVX FORTRAN_ID2( dposvx, DPOSVX )
#define LAPACK_CPOSVX FORTRAN_ID2( cposvx, CPOSVX )
#define LAPACK_ZPOSVX FORTRAN_ID2( zposvx, ZPOSVX )

// Value-type variants of ppsv
#define LAPACK_SPPSV FORTRAN_ID2( sppsv, SPPSV )
#define LAPACK_DPPSV FORTRAN_ID2( dppsv, DPPSV )
#define LAPACK_CPPSV FORTRAN_ID2( cppsv, CPPSV )
#define LAPACK_ZPPSV FORTRAN_ID2( zppsv, ZPPSV )

// Value-type variants of ppsvx
#define LAPACK_SPPSVX FORTRAN_ID2( sppsvx, SPPSVX )
#define LAPACK_DPPSVX FORTRAN_ID2( dppsvx, DPPSVX )
#define LAPACK_CPPSVX FORTRAN_ID2( cppsvx, CPPSVX )
#define LAPACK_ZPPSVX FORTRAN_ID2( zppsvx, ZPPSVX )

// Value-type variants of ptsv
#define LAPACK_SPTSV FORTRAN_ID2( sptsv, SPTSV )
#define LAPACK_DPTSV FORTRAN_ID2( dptsv, DPTSV )
#define LAPACK_CPTSV FORTRAN_ID2( cptsv, CPTSV )
#define LAPACK_ZPTSV FORTRAN_ID2( zptsv, ZPTSV )

// Value-type variants of ptsvx
#define LAPACK_SPTSVX FORTRAN_ID2( sptsvx, SPTSVX )
#define LAPACK_DPTSVX FORTRAN_ID2( dptsvx, DPTSVX )
#define LAPACK_CPTSVX FORTRAN_ID2( cptsvx, CPTSVX )
#define LAPACK_ZPTSVX FORTRAN_ID2( zptsvx, ZPTSVX )

// Value-type variants of spsv
#define LAPACK_SSPSV FORTRAN_ID2( sspsv, SSPSV )
#define LAPACK_DSPSV FORTRAN_ID2( dspsv, DSPSV )
#define LAPACK_CSPSV FORTRAN_ID2( cspsv, CSPSV )
#define LAPACK_ZSPSV FORTRAN_ID2( zspsv, ZSPSV )

// Value-type variants of spsvx
#define LAPACK_SSPSVX FORTRAN_ID2( sspsvx, SSPSVX )
#define LAPACK_DSPSVX FORTRAN_ID2( dspsvx, DSPSVX )
#define LAPACK_CSPSVX FORTRAN_ID2( cspsvx, CSPSVX )
#define LAPACK_ZSPSVX FORTRAN_ID2( zspsvx, ZSPSVX )

// Value-type variants of sysv
#define LAPACK_SSYSV FORTRAN_ID2( ssysv, SSYSV )
#define LAPACK_DSYSV FORTRAN_ID2( dsysv, DSYSV )
#define LAPACK_CSYSV FORTRAN_ID2( csysv, CSYSV )
#define LAPACK_ZSYSV FORTRAN_ID2( zsysv, ZSYSV )

// Value-type variants of sysvx
#define LAPACK_SSYSVX FORTRAN_ID2( ssysvx, SSYSVX )
#define LAPACK_DSYSVX FORTRAN_ID2( dsysvx, DSYSVX )
#define LAPACK_CSYSVX FORTRAN_ID2( csysvx, CSYSVX )
#define LAPACK_ZSYSVX FORTRAN_ID2( zsysvx, ZSYSVX )

// Value-type variants of gees
#define LAPACK_SGEES FORTRAN_ID2( sgees, SGEES )
#define LAPACK_DGEES FORTRAN_ID2( dgees, DGEES )
#define LAPACK_CGEES FORTRAN_ID2( cgees, CGEES )
#define LAPACK_ZGEES FORTRAN_ID2( zgees, ZGEES )

// Value-type variants of geesx
#define LAPACK_SGEESX FORTRAN_ID2( sgeesx, SGEESX )
#define LAPACK_DGEESX FORTRAN_ID2( dgeesx, DGEESX )
#define LAPACK_CGEESX FORTRAN_ID2( cgeesx, CGEESX )
#define LAPACK_ZGEESX FORTRAN_ID2( zgeesx, ZGEESX )

// Value-type variants of geev
#define LAPACK_SGEEV FORTRAN_ID2( sgeev, SGEEV )
#define LAPACK_DGEEV FORTRAN_ID2( dgeev, DGEEV )
#define LAPACK_CGEEV FORTRAN_ID2( cgeev, CGEEV )
#define LAPACK_ZGEEV FORTRAN_ID2( zgeev, ZGEEV )

// Value-type variants of geevx
#define LAPACK_SGEEVX FORTRAN_ID2( sgeevx, SGEEVX )
#define LAPACK_DGEEVX FORTRAN_ID2( dgeevx, DGEEVX )
#define LAPACK_CGEEVX FORTRAN_ID2( cgeevx, CGEEVX )
#define LAPACK_ZGEEVX FORTRAN_ID2( zgeevx, ZGEEVX )

// Value-type variants of gesdd
#define LAPACK_SGESDD FORTRAN_ID2( sgesdd, SGESDD )
#define LAPACK_DGESDD FORTRAN_ID2( dgesdd, DGESDD )
#define LAPACK_CGESDD FORTRAN_ID2( cgesdd, CGESDD )
#define LAPACK_ZGESDD FORTRAN_ID2( zgesdd, ZGESDD )

// Value-type variants of gesvd
#define LAPACK_SGESVD FORTRAN_ID2( sgesvd, SGESVD )
#define LAPACK_DGESVD FORTRAN_ID2( dgesvd, DGESVD )
#define LAPACK_CGESVD FORTRAN_ID2( cgesvd, CGESVD )
#define LAPACK_ZGESVD FORTRAN_ID2( zgesvd, ZGESVD )

// Value-type variants of hbev
#define LAPACK_CHBEV FORTRAN_ID2( chbev, CHBEV )
#define LAPACK_ZHBEV FORTRAN_ID2( zhbev, ZHBEV )

// Value-type variants of hbevd
#define LAPACK_CHBEVD FORTRAN_ID2( chbevd, CHBEVD )
#define LAPACK_ZHBEVD FORTRAN_ID2( zhbevd, ZHBEVD )

// Value-type variants of hbevx
#define LAPACK_CHBEVX FORTRAN_ID2( chbevx, CHBEVX )
#define LAPACK_ZHBEVX FORTRAN_ID2( zhbevx, ZHBEVX )

// Value-type variants of heev
#define LAPACK_CHEEV FORTRAN_ID2( cheev, CHEEV )
#define LAPACK_ZHEEV FORTRAN_ID2( zheev, ZHEEV )

// Value-type variants of heevd
#define LAPACK_CHEEVD FORTRAN_ID2( cheevd, CHEEVD )
#define LAPACK_ZHEEVD FORTRAN_ID2( zheevd, ZHEEVD )

// Value-type variants of heevr
#define LAPACK_CHEEVR FORTRAN_ID2( cheevr, CHEEVR )
#define LAPACK_ZHEEVR FORTRAN_ID2( zheevr, ZHEEVR )

// Value-type variants of heevx
#define LAPACK_CHEEVX FORTRAN_ID2( cheevx, CHEEVX )
#define LAPACK_ZHEEVX FORTRAN_ID2( zheevx, ZHEEVX )

// Value-type variants of hpev
#define LAPACK_CHPEV FORTRAN_ID2( chpev, CHPEV )
#define LAPACK_ZHPEV FORTRAN_ID2( zhpev, ZHPEV )

// Value-type variants of hpevd
#define LAPACK_CHPEVD FORTRAN_ID2( chpevd, CHPEVD )
#define LAPACK_ZHPEVD FORTRAN_ID2( zhpevd, ZHPEVD )

// Value-type variants of hpevx
#define LAPACK_CHPEVX FORTRAN_ID2( chpevx, CHPEVX )
#define LAPACK_ZHPEVX FORTRAN_ID2( zhpevx, ZHPEVX )

// Value-type variants of sbev
#define LAPACK_SSBEV FORTRAN_ID2( ssbev, SSBEV )
#define LAPACK_DSBEV FORTRAN_ID2( dsbev, DSBEV )

// Value-type variants of sbevd
#define LAPACK_SSBEVD FORTRAN_ID2( ssbevd, SSBEVD )
#define LAPACK_DSBEVD FORTRAN_ID2( dsbevd, DSBEVD )

// Value-type variants of sbevx
#define LAPACK_SSBEVX FORTRAN_ID2( ssbevx, SSBEVX )
#define LAPACK_DSBEVX FORTRAN_ID2( dsbevx, DSBEVX )

// Value-type variants of spev
#define LAPACK_SSPEV FORTRAN_ID2( sspev, SSPEV )
#define LAPACK_DSPEV FORTRAN_ID2( dspev, DSPEV )

// Value-type variants of spevd
#define LAPACK_SSPEVD FORTRAN_ID2( sspevd, SSPEVD )
#define LAPACK_DSPEVD FORTRAN_ID2( dspevd, DSPEVD )

// Value-type variants of spevx
#define LAPACK_SSPEVX FORTRAN_ID2( sspevx, SSPEVX )
#define LAPACK_DSPEVX FORTRAN_ID2( dspevx, DSPEVX )

// Value-type variants of stev
#define LAPACK_SSTEV FORTRAN_ID2( sstev, SSTEV )
#define LAPACK_DSTEV FORTRAN_ID2( dstev, DSTEV )

// Value-type variants of stevd
#define LAPACK_SSTEVD FORTRAN_ID2( sstevd, SSTEVD )
#define LAPACK_DSTEVD FORTRAN_ID2( dstevd, DSTEVD )

// Value-type variants of stevr
#define LAPACK_SSTEVR FORTRAN_ID2( sstevr, SSTEVR )
#define LAPACK_DSTEVR FORTRAN_ID2( dstevr, DSTEVR )

// Value-type variants of stevx
#define LAPACK_SSTEVX FORTRAN_ID2( sstevx, SSTEVX )
#define LAPACK_DSTEVX FORTRAN_ID2( dstevx, DSTEVX )

// Value-type variants of syev
#define LAPACK_SSYEV FORTRAN_ID2( ssyev, SSYEV )
#define LAPACK_DSYEV FORTRAN_ID2( dsyev, DSYEV )

// Value-type variants of syevd
#define LAPACK_SSYEVD FORTRAN_ID2( ssyevd, SSYEVD )
#define LAPACK_DSYEVD FORTRAN_ID2( dsyevd, DSYEVD )

// Value-type variants of syevr
#define LAPACK_SSYEVR FORTRAN_ID2( ssyevr, SSYEVR )
#define LAPACK_DSYEVR FORTRAN_ID2( dsyevr, DSYEVR )

// Value-type variants of syevx
#define LAPACK_SSYEVX FORTRAN_ID2( ssyevx, SSYEVX )
#define LAPACK_DSYEVX FORTRAN_ID2( dsyevx, DSYEVX )

// Value-type variants of gels
#define LAPACK_SGELS FORTRAN_ID2( sgels, SGELS )
#define LAPACK_DGELS FORTRAN_ID2( dgels, DGELS )
#define LAPACK_CGELS FORTRAN_ID2( cgels, CGELS )
#define LAPACK_ZGELS FORTRAN_ID2( zgels, ZGELS )

// Value-type variants of gelsd
#define LAPACK_SGELSD FORTRAN_ID2( sgelsd, SGELSD )
#define LAPACK_DGELSD FORTRAN_ID2( dgelsd, DGELSD )
#define LAPACK_CGELSD FORTRAN_ID2( cgelsd, CGELSD )
#define LAPACK_ZGELSD FORTRAN_ID2( zgelsd, ZGELSD )

// Value-type variants of gelss
#define LAPACK_SGELSS FORTRAN_ID2( sgelss, SGELSS )
#define LAPACK_DGELSS FORTRAN_ID2( dgelss, DGELSS )
#define LAPACK_CGELSS FORTRAN_ID2( cgelss, CGELSS )
#define LAPACK_ZGELSS FORTRAN_ID2( zgelss, ZGELSS )

// Value-type variants of gelsy
#define LAPACK_SGELSY FORTRAN_ID2( sgelsy, SGELSY )
#define LAPACK_DGELSY FORTRAN_ID2( dgelsy, DGELSY )
#define LAPACK_CGELSY FORTRAN_ID2( cgelsy, CGELSY )
#define LAPACK_ZGELSY FORTRAN_ID2( zgelsy, ZGELSY )

//
// LAPACK auxiliary routines
//

// Value-type variants of larf
#define LAPACK_SLARF FORTRAN_ID2( slarf, SLARF )
#define LAPACK_DLARF FORTRAN_ID2( dlarf, DLARF )
#define LAPACK_CLARF FORTRAN_ID2( clarf, CLARF )
#define LAPACK_ZLARF FORTRAN_ID2( zlarf, ZLARF )

// Value-type variants of larfb
#define LAPACK_SLARFB FORTRAN_ID2( slarfb, SLARFB )
#define LAPACK_DLARFB FORTRAN_ID2( dlarfb, DLARFB )
#define LAPACK_CLARFB FORTRAN_ID2( clarfb, CLARFB )
#define LAPACK_ZLARFB FORTRAN_ID2( zlarfb, ZLARFB )

// Value-type variants of larfg
#define LAPACK_SLARFG FORTRAN_ID2( slarfg, SLARFG )
#define LAPACK_DLARFG FORTRAN_ID2( dlarfg, DLARFG )
#define LAPACK_CLARFG FORTRAN_ID2( clarfg, CLARFG )
#define LAPACK_ZLARFG FORTRAN_ID2( zlarfg, ZLARFG )

// Value-type variants of larft
#define LAPACK_SLARFT FORTRAN_ID2( slarft, SLARFT )
#define LAPACK_DLARFT FORTRAN_ID2( dlarft, DLARFT )
#define LAPACK_CLARFT FORTRAN_ID2( clarft, CLARFT )
#define LAPACK_ZLARFT FORTRAN_ID2( zlarft, ZLARFT )

// Value-type variants of larfx
#define LAPACK_SLARFX FORTRAN_ID2( slarfx, SLARFX )
#define LAPACK_DLARFX FORTRAN_ID2( dlarfx, DLARFX )
#define LAPACK_CLARFX FORTRAN_ID2( clarfx, CLARFX )
#define LAPACK_ZLARFX FORTRAN_ID2( zlarfx, ZLARFX )

// Value-type variants of largv
#define LAPACK_SLARGV FORTRAN_ID2( slargv, SLARGV )
#define LAPACK_DLARGV FORTRAN_ID2( dlargv, DLARGV )
#define LAPACK_CLARGV FORTRAN_ID2( clargv, CLARGV )
#define LAPACK_ZLARGV FORTRAN_ID2( zlargv, ZLARGV )

// Value-type variants of larnv
#define LAPACK_SLARNV FORTRAN_ID2( slarnv, SLARNV )
#define LAPACK_DLARNV FORTRAN_ID2( dlarnv, DLARNV )
#define LAPACK_CLARNV FORTRAN_ID2( clarnv, CLARNV )
#define LAPACK_ZLARNV FORTRAN_ID2( zlarnv, ZLARNV )

// Value-type variants of larrb
#define LAPACK_SLARRB FORTRAN_ID2( slarrb, SLARRB )
#define LAPACK_DLARRB FORTRAN_ID2( dlarrb, DLARRB )

// Value-type variants of larre
#define LAPACK_SLARRE FORTRAN_ID2( slarre, SLARRE )
#define LAPACK_DLARRE FORTRAN_ID2( dlarre, DLARRE )

// Value-type variants of langb
#define LAPACK_SLANGB FORTRAN_ID2( slangb, SLANGB )
#define LAPACK_DLANGB FORTRAN_ID2( dlangb, DLANGB )
#define LAPACK_CLANGB FORTRAN_ID2( clangb, CLANGB )
#define LAPACK_ZLANGB FORTRAN_ID2( zlangb, ZLANGB )

// Value-type variants of lange
#define LAPACK_SLANGE FORTRAN_ID2( slange, SLANGE )
#define LAPACK_DLANGE FORTRAN_ID2( dlange, DLANGE )
#define LAPACK_CLANGE FORTRAN_ID2( clange, CLANGE )
#define LAPACK_ZLANGE FORTRAN_ID2( zlange, ZLANGE )

// Value-type variants of lanhb
#define LAPACK_CLANHB FORTRAN_ID2( clanhb, CLANHB )
#define LAPACK_ZLANHB FORTRAN_ID2( zlanhb, ZLANHB )

// Value-type variants of lanhe
#define LAPACK_CLANHE FORTRAN_ID2( clanhe, CLANHE )
#define LAPACK_ZLANHE FORTRAN_ID2( zlanhe, ZLANHE )

// Value-type variants of lanhp
#define LAPACK_CLANHP FORTRAN_ID2( clanhp, CLANHP )
#define LAPACK_ZLANHP FORTRAN_ID2( zlanhp, ZLANHP )

// Value-type variants of lanhs
#define LAPACK_SLANHS FORTRAN_ID2( slanhs, SLANHS )
#define LAPACK_DLANHS FORTRAN_ID2( dlanhs, DLANHS )
#define LAPACK_CLANHS FORTRAN_ID2( clanhs, CLANHS )
#define LAPACK_ZLANHS FORTRAN_ID2( zlanhs, ZLANHS )

// Value-type variants of lansb
#define LAPACK_SLANSB FORTRAN_ID2( slansb, SLANSB )
#define LAPACK_DLANSB FORTRAN_ID2( dlansb, DLANSB )
#define LAPACK_CLANSB FORTRAN_ID2( clansb, CLANSB )
#define LAPACK_ZLANSB FORTRAN_ID2( zlansb, ZLANSB )

// Value-type variants of lansp
#define LAPACK_SLANSP FORTRAN_ID2( slansp, SLANSP )
#define LAPACK_DLANSP FORTRAN_ID2( dlansp, DLANSP )
#define LAPACK_CLANSP FORTRAN_ID2( clansp, CLANSP )
#define LAPACK_ZLANSP FORTRAN_ID2( zlansp, ZLANSP )

// Value-type variants of lansy
#define LAPACK_SLANSY FORTRAN_ID2( slansy, SLANSY )
#define LAPACK_DLANSY FORTRAN_ID2( dlansy, DLANSY )
#define LAPACK_CLANSY FORTRAN_ID2( clansy, CLANSY )
#define LAPACK_ZLANSY FORTRAN_ID2( zlansy, ZLANSY )

// Value-type variants of lantb
#define LAPACK_SLANTB FORTRAN_ID2( slantb, SLANTB )
#define LAPACK_DLANTB FORTRAN_ID2( dlantb, DLANTB )
#define LAPACK_CLANTB FORTRAN_ID2( clantb, CLANTB )
#define LAPACK_ZLANTB FORTRAN_ID2( zlantb, ZLANTB )

// Value-type variants of lantp
#define LAPACK_SLANTP FORTRAN_ID2( slantp, SLANTP )
#define LAPACK_DLANTP FORTRAN_ID2( dlantp, DLANTP )
#define LAPACK_CLANTP FORTRAN_ID2( clantp, CLANTP )
#define LAPACK_ZLANTP FORTRAN_ID2( zlantp, ZLANTP )

// Value-type variants of lantr
#define LAPACK_SLANTR FORTRAN_ID2( slantr, SLANTR )
#define LAPACK_DLANTR FORTRAN_ID2( dlantr, DLANTR )
#define LAPACK_CLANTR FORTRAN_ID2( clantr, CLANTR )
#define LAPACK_ZLANTR FORTRAN_ID2( zlantr, ZLANTR )

// Value-type variants of labrd
#define LAPACK_SLABRD FORTRAN_ID2( slabrd, SLABRD )
#define LAPACK_DLABRD FORTRAN_ID2( dlabrd, DLABRD )
#define LAPACK_CLABRD FORTRAN_ID2( clabrd, CLABRD )
#define LAPACK_ZLABRD FORTRAN_ID2( zlabrd, ZLABRD )

// Value-type variants of lacgv
#define LAPACK_CLACGV FORTRAN_ID2( clacgv, CLACGV )
#define LAPACK_ZLACGV FORTRAN_ID2( zlacgv, ZLACGV )

// Value-type variants of lacon
#define LAPACK_SLACON FORTRAN_ID2( slacon, SLACON )
#define LAPACK_DLACON FORTRAN_ID2( dlacon, DLACON )
#define LAPACK_CLACON FORTRAN_ID2( clacon, CLACON )
#define LAPACK_ZLACON FORTRAN_ID2( zlacon, ZLACON )

// Value-type variants of laebz
#define LAPACK_SLAEBZ FORTRAN_ID2( slaebz, SLAEBZ )
#define LAPACK_DLAEBZ FORTRAN_ID2( dlaebz, DLAEBZ )

// Value-type variants of lalsd
#define LAPACK_SLALSD FORTRAN_ID2( slalsd, SLALSD )
#define LAPACK_DLALSD FORTRAN_ID2( dlalsd, DLALSD )
#define LAPACK_CLALSD FORTRAN_ID2( clalsd, CLALSD )
#define LAPACK_ZLALSD FORTRAN_ID2( zlalsd, ZLALSD )

// Value-type variants of largv
#define LAPACK_SLARGV FORTRAN_ID2( slargv, SLARGV )
#define LAPACK_DLARGV FORTRAN_ID2( dlargv, DLARGV )
#define LAPACK_CLARGV FORTRAN_ID2( clargv, CLARGV )
#define LAPACK_ZLARGV FORTRAN_ID2( zlargv, ZLARGV )

// Value-type variants of larz
#define LAPACK_SLARZ FORTRAN_ID2( slarz, SLARZ )
#define LAPACK_DLARZ FORTRAN_ID2( dlarz, DLARZ )
#define LAPACK_CLARZ FORTRAN_ID2( clarz, CLARZ )
#define LAPACK_ZLARZ FORTRAN_ID2( zlarz, ZLARZ )

// Value-type variants of latrd
#define LAPACK_SLATRD FORTRAN_ID2( slatrd, SLATRD )
#define LAPACK_DLATRD FORTRAN_ID2( dlatrd, DLATRD )
#define LAPACK_CLATRD FORTRAN_ID2( clatrd, CLATRD )
#define LAPACK_ZLATRD FORTRAN_ID2( zlatrd, ZLATRD )

// Value-type variants of latrs
#define LAPACK_SLATRS FORTRAN_ID2( slatrs, SLATRS )
#define LAPACK_DLATRS FORTRAN_ID2( dlatrs, DLATRS )
#define LAPACK_CLATRS FORTRAN_ID2( clatrs, CLATRS )
#define LAPACK_ZLATRS FORTRAN_ID2( zlatrs, ZLATRS )

// Value-type variants of latrz
#define LAPACK_SLATRZ FORTRAN_ID2( slatrz, SLATRZ )
#define LAPACK_DLATRZ FORTRAN_ID2( dlatrz, DLATRZ )
#define LAPACK_CLATRZ FORTRAN_ID2( clatrz, CLATRZ )
#define LAPACK_ZLATRZ FORTRAN_ID2( zlatrz, ZLATRZ )

//
// LAPACK auxiliary routines
//

#define LAPACK_ILAENV FORTRAN_ID2( ilaenv, ILAENV )

#endif

