# Makefile for build omsi base libraries

# Specify a list of target platforms, including dynamic, static
PLATFORMS=static dynamic


CMAKE_FLAGS=-DCMAKE_BUILD_TYPE=$(BUILDTYPE)

CMAKE_CALL=cmake -G $(CMAKE_TARGET) --build . -DPLATFORM=$(PLATFORM) $(CMAKE_FLAGS) $(IS_MINGW32) $(IS_MINGW64) -DCMAKE_INSTALL_PREFIX:PATH="$(OMBUILDDIR)" -DLIB_OMC=$(LIB_OMC) ..

.PHONY: OMSIBaseClean OMSICClean


#############################
# Rules for OMSI
#############################

OMSI: OMSIBaseInstall OMSICInstall

OMSI-clean: OMSIBaseClean OMSICClean
	cd $(OMBUILDDIR);                             \
	rm -rf include/omc/omsi include/omc/omsic;    \
	rm -rf $(LIB_OMC)/omsi;


#############################
# Rules for OMSIBase library
#############################

OMSIBaseInstall: $(SUNDIALS_TARGET) fmil
	cd SimulationRuntime/OMSI; \
	$(foreach PLATFORM, $(PLATFORMS), \
	  mkdir -p Build_$(PLATFORM); \
	  (cd ./Build_$(PLATFORM); echo "change to Build_$(PLATFORM)"; \
		 $(CMAKE_CALL); \
	   $(MAKE) install);)
	test ! `uname` = Darwin || install_name_tool -id @rpath/omsi/libOMSIBase.dylib $(OMBUILDDIR)/$(LIB_OMC)/omsi/libOMSIBase.dylib
	test ! `uname` = Darwin || install_name_tool -id @rpath/omsi/libOMSISolver.dylib $(OMBUILDDIR)/$(LIB_OMC)/omsi/libOMSISolver.dylib

	test ! `uname` = Darwin || install_name_tool -change libsundials_nvecserial.0.dylib @rpath/libsundials_nvecserial.0.dylib $(OMBUILDDIR)/$(LIB_OMC)/omsi/libOMSIBase.dylib
	test ! `uname` = Darwin || install_name_tool -change libsundials_kinsol.1.dylib @rpath/libsundials_kinsol.1.dylib $(OMBUILDDIR)/$(LIB_OMC)/omsi/libOMSIBase.dylib
	test ! `uname` = Darwin || install_name_tool -change libOMSISolver.dylib @rpath/libOMSISolver.dylib $(OMBUILDDIR)/$(LIB_OMC)/omsi/libOMSIBase.dylib
	test ! `uname` = Darwin || install_name_tool -change libsundials_nvecserial.0.dylib @rpath/libsundials_nvecserial.0.dylib $(OMBUILDDIR)/$(LIB_OMC)/omsi/libOMSISolver.dylib
	test ! `uname` = Darwin || install_name_tool -change libsundials_kinsol.1.dylib @rpath/libsundials_kinsol.1.dylib $(OMBUILDDIR)/$(LIB_OMC)/omsi/libOMSISolver.dylib

OMSIBaseMSVC: fmil_msvc sundials_msvc
	$(MAKE) -C SimulationRuntime/OMSI/ -f Makefile.omdev.mingw OMSIBaseMSVC OMBUILDDIR=$(OMBUILDDIR)
	# move folder to build dir
	cp -R --verbose SimulationRuntime/OMSI/Build_MSVC/tmp/* $(builddir_build)

OMSIBaseClean:
	cd SimulationRuntime/OMSI; \
	$(foreach PLATFORM, $(PLATFORMS), \
	  test -d Build_$(PLATFORM) && cd Build_$(PLATFORM) && $(MAKE) uninstall && $(MAKE) DESTDIR=$(OMBUILDDIR) clean && cd ..; \
	  rm -R -f Build_$(PLATFORM); \
	)


#############################
# Rules for OMSIC libraries
#############################


OMSICInstall: OMSIBaseInstall
	cd SimulationRuntime/OMSIC; \
	$(foreach PLATFORM, $(PLATFORMS), \
	  mkdir -p Build_$(PLATFORM); \
	  (cd ./Build_$(PLATFORM); echo "change to Build_$(PLATFORM)"; \
		 $(CMAKE_CALL); \
		 $(MAKE) install);)

OMSICClean:
	cd SimulationRuntime/OMSIC; \
	$(foreach PLATFORM, $(PLATFORMS), \
	  test -d Build_$(PLATFORM) && cd Build_$(PLATFORM) && $(MAKE) uninstall && $(MAKE) DESTDIR=$(OMBUILDDIR) clean && cd ..; \
	  rm -R -f Build_$(PLATFORM); \
	)

#############################
# Rules for OMSICpp libraries
#############################

OMSICPP: omc
	$(MAKE) -C SimulationRuntime/OMSICpp/ -f $(defaultMakefileTarget) OMBUILDDIR=$(OMBUILDDIR)

OMSICPPinstall: copycppheader OMSICPP
	$(MAKE) -C SimulationRuntime/OMSICpp/ -f $(defaultMakefileTarget) CC="$(CC)" CXX="$(CXX)" install ANALYZATION_MODE="$(ANALYZATION_MODE)" $(CMAKE_ARGS) OMBUILDDIR=$(OMBUILDDIR) LIB_OMC=$(LIB_OMC)
	test ! `uname` = Darwin || install_name_tool -id @rpath/OMSICpp/libOMCppCVode.dylib $(OMBUILDDIR)/$(LIB_OMC)/OMSICpp/libOMCppCVode.dylib
	test ! `uname` = Darwin || install_name_tool -id @rpath/OMSICpp/libOMCppDataExchange.dylib $(OMBUILDDIR)/$(LIB_OMC)/OMSICpp/libOMCppDataExchange.dylib
	test ! `uname` = Darwin || install_name_tool -id @rpath/OMSICpp/libOMCppEuler.dylib $(OMBUILDDIR)/$(LIB_OMC)/OMSICpp/libOMCppEuler.dylib
	test ! `uname` = Darwin || install_name_tool -id @rpath/OMSICpp/libOMCppNewton.dylib $(OMBUILDDIR)/$(LIB_OMC)/OMSICpp/libOMCppNewton.dylib
	test ! `uname` = Darwin || install_name_tool -id @rpath/OMSICpp/libOMCppSimulationSettings.dylib $(OMBUILDDIR)/$(LIB_OMC)/OMSICpp/libOMCppSimulationSettings.dylib
	test ! `uname` = Darwin || install_name_tool -id @rpath/OMSICpp/libOMCppSolver.dylib $(OMBUILDDIR)/$(LIB_OMC)/OMSICpp/libOMCppSolver.dylib
	test ! `uname` = Darwin || install_name_tool -id @rpath/OMSICpp/libOMCppSystemBase.dylib $(OMBUILDDIR)/$(LIB_OMC)/OMSICpp/libOMCppSystemBase.dylib
	test ! `uname` = Darwin || install_name_tool -id @rpath/OMSICpp/libOMCppExtendedSystem.dylib $(OMBUILDDIR)/$(LIB_OMC)/OMSICpp/libOMCppExtendedSystem.dylib
	test ! `uname` = Darwin || install_name_tool -id @rpath/OMSICpp/libOMCppSystemOMSI.dylib $(OMBUILDDIR)/$(LIB_OMC)/OMSICpp/libOMCppSystemOMSI.dylib
	test ! `uname` = Darwin || install_name_tool -change libOMCppSolver.dylib @rpath/OMSICpp/libOMCppSolver.dylib $(OMBUILDDIR)/$(LIB_OMC)/OMSICpp/libOMCppCVode.dylib
	test ! `uname` = Darwin || install_name_tool -change libOMCppSolver.dylib @rpath/OMSICpp/libOMCppSolver.dylib $(OMBUILDDIR)/$(LIB_OMC)/OMSICpp/libOMCppEuler.dylib

OMSICPPclean:
	$(MAKE) -C SimulationRuntime/OMSICpp/ -f $(defaultMakefileTarget) clean OMBUILDDIR=$(OMBUILDDIR)
