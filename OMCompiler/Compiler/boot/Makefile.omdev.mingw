
CC=gcc
CXX=g++

EXE_EXT=.exe
EXE_SUFFIX=

ifeq (MINGW32,$(findstring MINGW32,$(shell uname)))
	EXTRA_LD_FLAGS = -Wl,--stack,16777216,--large-address-aware
	ISMINGW64 = false
else
	EXTRA_LD_FLAGS = -Wl,--stack,33554432
	ISMINGW64 = true
endif

# see if we have the new omdev
PREVIOUS_GCC_VERSION = "5.3.0"
GCC_VERSION := "`gcc -dumpversion`"
OLD_OMDEV := $(shell expr "$(GCC_VERSION)" "==" "$(PREVIOUS_GCC_VERSION)")

# Uggly hack to decied what version of msys we have.
# If ucrt64 is set, it must be the newer version, so it's libbrotli instead of libbrotli-static
ifeq (ucrt64,$(findstring ucrt64,$(MSYSTEM_PREFIX)))
BROTLI_STATIC_LINKER_FLAGS = -lbrotlienc -lbrotlidec -lbrotlicommon
IS_NEW_NEW_OMDEV = true
else
BROTLI_STATIC_LINKER_FLAGS = -lbrotlienc-static -lbrotlidec-static -lbrotlicommon-static
IS_NEW_NEW_OMDEV = false
endif

ifeq "$(OLD_OMDEV)" "1"
	IS_NEW_OMDEV = false
	LDFLAGS_CURL = -lcurl -Wl,-Bstatic -lidn -lrtmp -lssh2 -lssl -lcrypto -lwldap32 -lz -lws2_32 -lgnutls -ltasn1 -lhogweed -lgmp -lnettle -Wl,-Bdynamic -lcrypt32 -lintl -lp11-kit -lwinmm -lgdi32
	override CFLAGS += -fno-ipa-pure-const
else
	IS_NEW_OMDEV = true
	LDFLAGS_CURL = -lcurl -Wl,-Bstatic -lidn2 -lpsl $(BROTLI_STATIC_LINKER_FLAGS) -lssh2 -lssl -lcrypto -lwldap32 -lzstd -lz -lws2_32 -lgnutls -ltasn1 -lhogweed -lgmp -lnettle -lbcrypt -Wl,-Bdynamic -lunistring -lnghttp2 -lcrypt32 -lintl -lp11-kit -lwinmm -lgdi32
endif

TOP_DIR=../../
OMHOME=$(OMBUILDDIR)
ifeq ($(OM_ENABLE_ENCRYPTION),yes)
OMENCRYPTIONLIBS=../../../OMEncryption/3rdParty/SEMLA/build/libtool.a
else
OMENCRYPTIONLIBS=
endif
LDFLAGS=-L./ $(LOMPARSE) $(LCOMPILERRUNTIME) -L"$(OMHOME)/lib/omc" \
-lOpenModelicaRuntimeC \
-lomantlr3 -lregex -lwsock32 -luuid -lole32 -lws2_32 -limagehlp \
-lRpcrt4 -lopenblas -fopenmp -lomcgc -lryu -lpthread $(FMILIB_OR_BOOT) -lshlwapi -liconv -lintl -lmetis \
-Wl,--enable-stdcall-fixup -Wl,-Bstatic -lstdc++ -Wl,-Bdynamic -static-libgcc \
-lgfortran -ltre \
-lzmq \
$(OMENCRYPTIONLIBS) \
$(LDFLAGS_CURL) \
-lm \
$(EXTRA_LD_FLAGS) -Wl,--export-all-symbols

FMILIB = -L$(TOP_DIR)/3rdParty/FMIL/install/lib -lfmilib
CPPFLAGS= -DOM_HAVE_PTHREADS -I"$(OMHOME)/include/omc/c" -I../Util/ -DADD_METARECORD_DEFINITIONS=
CORBALIBS=
ULIMIT_CMD=true
SHREXT=.dll
ifeq ($(WSL_OMC),)
OMC=$(OMHOME)/bin/omc.exe
else
OMC=$(WSL_OMC)
endif
RPATH=
#STATIC=static
BOOTSTRAP_OMC=$(OMBUILDDIR)/bin/omc.exe
defaultMakefileTarget=Makefile.omdev.mingw
LIB_OMC=lib/omc
OMCRUNTIMEAR1=../runtime/libomcruntime-boot.a
OMCRUNTIMEAR2=$(OMHOME)/$(LIB_OMC)/libomcruntime.a
LDFLAGS_SHARED_MAIN=-L"$(OMHOME)/$(LIB_OMC)" $(EXTRA_LD_FLAGS)

default: all

../Util/Autoconf.mo: ../Util/Autoconf.mo.omdev.mingw
	sed "s/@ISMINGW64@/$(ISMINGW64)/" "$<" > "$@.tmp"
	sed -i "s/@IS_NEW_OMDEV@/$(IS_NEW_OMDEV)/" "$@.tmp"
	sed -i "s/@IS_NEW_NEW_OMDEV@/$(IS_NEW_NEW_OMDEV)/" "$@.tmp"
	mv "$@.tmp" "$@"

include Makefile.common
