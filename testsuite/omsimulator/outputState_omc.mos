// name : outputState_omc.mos
// status: correct
// teardown_command: rm -rf outputState.lua outputState.fmu outputState.log sink.fmu sink.log outputState_systemCall.log temp-outputState/

setCommandLineOptions("-g=MetaModelica");

loadString("
model outputState
  output Real y(start=y_start, fixed=true);
  parameter Real y_start = 1.0;
equation
  der(y) = -1.0;
end outputState;

model sink
  input Real u;
end sink;
"); getErrorString();

buildModelFMU(outputState, version="2.0", fmuType="me", platforms={"static"}); getErrorString();
buildModelFMU(sink, version="2.0", fmuType="me", platforms={"static"}); getErrorString();

echo(false);

loadOMSimulator();
oms_setCommandLineOption("--suppressPath=true");
oms_setTempDirectory("./temp-outputState/");

oms_newModel("test");
oms_addSystem("test.root",  OpenModelica.Scripting.oms_system.oms_system_sc);
oms_addSubModel("test.root.A", "outputState.fmu");
oms_addSubModel("test.root.B", "sink.fmu");
oms_addConnection("test.root.A.y", "test.root.B.u");
oms_setResultFile("test", "");

oms_instantiate("test");
oms_setReal("test.root.A.y_start", 1.5);

oms_initialize("test");
(v1,_):=oms_getReal("test.root.A.y");
(v2,_):=oms_getReal("test.root.B.u");

print("info:    Initialization\n");
print("info:      A.y: " + realString(v1)+"\n");
print("info:      B.u: " + realString(v1)+"\n");

oms_simulate("test");
(v1,_):=oms_getReal("test.root.A.y");
(v2,_):=oms_getReal("test.root.B.u");

print("info:    Simulation\n");
print("info:      A.y: " + realString(v1)+"\n");
print("info:      B.u: " + realString(v1)+"\n");

oms_terminate("test");
oms_delete("test");
unloadOMSimulator();


// Result:
// true
// true
// ""
// "outputState.fmu"
// ""
// "sink.fmu"
// ""
// info:    maximum step size for 'test.root': 0.001000
// info:    Result file: test_res.mat (bufferSize=10)
// info:    Initialization
// info:      A.y: 1.5
// info:      B.u: 1.5
// info:    Simulation
// info:      A.y: 0.5000000000000554
// info:      B.u: 0.5000000000000554
// info:    Final Statistics for 'test.root':
//          NumSteps = 1001 NumRhsEvals  = 1002 NumLinSolvSetups = 51
//          NumNonlinSolvIters = 1001 NumNonlinSolvConvFails = 0 NumErrTestFails = 0
// endResult
