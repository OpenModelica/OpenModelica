// name:     Surfaces
// keywords: visualization
// status:   correct
// cflags: -d=newInst
//

loadModel(Modelica, {"4.0.0"}); getErrorString();
setDebugFlags("visxml"); getErrorString();
translateModel(Modelica.Mechanics.MultiBody.Examples.Elementary.Surfaces); getErrorString();
readFile("Modelica.Mechanics.MultiBody.Examples.Elementary.Surfaces_visual.xml");
getErrorString();
// Result:
// true
// ""
// true
// ""
// true
// ""
// "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>
// <visualization>
//   <shape>
//       <ident>world.z_label.cylinders[1]</ident>
//       <type>cylinder</type>
//       <T>
//           <cref>world.z_label.cylinders[1].R.T[1,1]</cref>
//           <cref>world.z_label.cylinders[1].R.T[1,2]</cref>
//           <cref>world.z_label.cylinders[1].R.T[1,3]</cref>
//           <cref>world.z_label.cylinders[1].R.T[2,1]</cref>
//           <cref>world.z_label.cylinders[1].R.T[2,2]</cref>
//           <cref>world.z_label.cylinders[1].R.T[2,3]</cref>
//           <cref>world.z_label.cylinders[1].R.T[3,1]</cref>
//           <cref>world.z_label.cylinders[1].R.T[3,2]</cref>
//           <cref>world.z_label.cylinders[1].R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>world.z_label.cylinders[1].r[1]</cref>
//           <cref>world.z_label.cylinders[1].r[2]</cref>
//           <cref>world.z_label.cylinders[1].r[3]</cref>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <cref>world.z_label.cylinders[1].lengthDirection[1]</cref>
//           <cref>world.z_label.cylinders[1].lengthDirection[2]</cref>
//           <cref>world.z_label.cylinders[1].lengthDirection[3]</cref>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.z_label.cylinders[1].length</cref></length>
//       <width><cref>world.z_label.cylinders[1].width</cref></width>
//       <height><cref>world.z_label.cylinders[1].height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <cref>world.z_label.cylinders[1].color[1]</cref>
//           <cref>world.z_label.cylinders[1].color[2]</cref>
//           <cref>world.z_label.cylinders[1].color[3]</cref>
//       </color>
//       <specCoeff><cref>world.z_label.cylinders[1].specularCoefficient</cref></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.z_label.cylinders[2]</ident>
//       <type>cylinder</type>
//       <T>
//           <cref>world.z_label.cylinders[2].R.T[1,1]</cref>
//           <cref>world.z_label.cylinders[2].R.T[1,2]</cref>
//           <cref>world.z_label.cylinders[2].R.T[1,3]</cref>
//           <cref>world.z_label.cylinders[2].R.T[2,1]</cref>
//           <cref>world.z_label.cylinders[2].R.T[2,2]</cref>
//           <cref>world.z_label.cylinders[2].R.T[2,3]</cref>
//           <cref>world.z_label.cylinders[2].R.T[3,1]</cref>
//           <cref>world.z_label.cylinders[2].R.T[3,2]</cref>
//           <cref>world.z_label.cylinders[2].R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>world.z_label.cylinders[2].r[1]</cref>
//           <cref>world.z_label.cylinders[2].r[2]</cref>
//           <cref>world.z_label.cylinders[2].r[3]</cref>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <cref>world.z_label.cylinders[2].lengthDirection[1]</cref>
//           <cref>world.z_label.cylinders[2].lengthDirection[2]</cref>
//           <cref>world.z_label.cylinders[2].lengthDirection[3]</cref>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.z_label.cylinders[2].length</cref></length>
//       <width><cref>world.z_label.cylinders[2].width</cref></width>
//       <height><cref>world.z_label.cylinders[2].height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <cref>world.z_label.cylinders[2].color[1]</cref>
//           <cref>world.z_label.cylinders[2].color[2]</cref>
//           <cref>world.z_label.cylinders[2].color[3]</cref>
//       </color>
//       <specCoeff><cref>world.z_label.cylinders[2].specularCoefficient</cref></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.x_label.cylinders[1]</ident>
//       <type>cylinder</type>
//       <T>
//           <cref>world.x_label.cylinders[1].R.T[1,1]</cref>
//           <cref>world.x_label.cylinders[1].R.T[1,2]</cref>
//           <cref>world.x_label.cylinders[1].R.T[1,3]</cref>
//           <cref>world.x_label.cylinders[1].R.T[2,1]</cref>
//           <cref>world.x_label.cylinders[1].R.T[2,2]</cref>
//           <cref>world.x_label.cylinders[1].R.T[2,3]</cref>
//           <cref>world.x_label.cylinders[1].R.T[3,1]</cref>
//           <cref>world.x_label.cylinders[1].R.T[3,2]</cref>
//           <cref>world.x_label.cylinders[1].R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>world.x_label.cylinders[1].r[1]</cref>
//           <cref>world.x_label.cylinders[1].r[2]</cref>
//           <cref>world.x_label.cylinders[1].r[3]</cref>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <cref>world.x_label.cylinders[1].lengthDirection[1]</cref>
//           <cref>world.x_label.cylinders[1].lengthDirection[2]</cref>
//           <cref>world.x_label.cylinders[1].lengthDirection[3]</cref>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.x_label.cylinders[1].length</cref></length>
//       <width><cref>world.x_label.cylinders[1].width</cref></width>
//       <height><cref>world.x_label.cylinders[1].height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <cref>world.x_label.cylinders[1].color[1]</cref>
//           <cref>world.x_label.cylinders[1].color[2]</cref>
//           <cref>world.x_label.cylinders[1].color[3]</cref>
//       </color>
//       <specCoeff><cref>world.x_label.cylinders[1].specularCoefficient</cref></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.x_label.cylinders[2]</ident>
//       <type>cylinder</type>
//       <T>
//           <cref>world.x_label.cylinders[2].R.T[1,1]</cref>
//           <cref>world.x_label.cylinders[2].R.T[1,2]</cref>
//           <cref>world.x_label.cylinders[2].R.T[1,3]</cref>
//           <cref>world.x_label.cylinders[2].R.T[2,1]</cref>
//           <cref>world.x_label.cylinders[2].R.T[2,2]</cref>
//           <cref>world.x_label.cylinders[2].R.T[2,3]</cref>
//           <cref>world.x_label.cylinders[2].R.T[3,1]</cref>
//           <cref>world.x_label.cylinders[2].R.T[3,2]</cref>
//           <cref>world.x_label.cylinders[2].R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>world.x_label.cylinders[2].r[1]</cref>
//           <cref>world.x_label.cylinders[2].r[2]</cref>
//           <cref>world.x_label.cylinders[2].r[3]</cref>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <cref>world.x_label.cylinders[2].lengthDirection[1]</cref>
//           <cref>world.x_label.cylinders[2].lengthDirection[2]</cref>
//           <cref>world.x_label.cylinders[2].lengthDirection[3]</cref>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.x_label.cylinders[2].length</cref></length>
//       <width><cref>world.x_label.cylinders[2].width</cref></width>
//       <height><cref>world.x_label.cylinders[2].height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </color>
//       <specCoeff><cref>world.x_label.cylinders[2].specularCoefficient</cref></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.y_label.cylinders[1]</ident>
//       <type>cylinder</type>
//       <T>
//           <cref>world.y_label.cylinders[1].R.T[1,1]</cref>
//           <cref>world.y_label.cylinders[1].R.T[1,2]</cref>
//           <cref>world.y_label.cylinders[1].R.T[1,3]</cref>
//           <cref>world.y_label.cylinders[1].R.T[2,1]</cref>
//           <cref>world.y_label.cylinders[1].R.T[2,2]</cref>
//           <cref>world.y_label.cylinders[1].R.T[2,3]</cref>
//           <cref>world.y_label.cylinders[1].R.T[3,1]</cref>
//           <cref>world.y_label.cylinders[1].R.T[3,2]</cref>
//           <cref>world.y_label.cylinders[1].R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>world.y_label.cylinders[1].r[1]</cref>
//           <cref>world.y_label.cylinders[1].r[2]</cref>
//           <cref>world.y_label.cylinders[1].r[3]</cref>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <cref>world.y_label.cylinders[1].lengthDirection[1]</cref>
//           <cref>world.y_label.cylinders[1].lengthDirection[2]</cref>
//           <cref>world.y_label.cylinders[1].lengthDirection[3]</cref>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.y_label.cylinders[1].length</cref></length>
//       <width><cref>world.y_label.cylinders[1].width</cref></width>
//       <height><cref>world.y_label.cylinders[1].height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <cref>world.y_label.cylinders[1].color[1]</cref>
//           <cref>world.y_label.cylinders[1].color[2]</cref>
//           <cref>world.y_label.cylinders[1].color[3]</cref>
//       </color>
//       <specCoeff><cref>world.y_label.cylinders[1].specularCoefficient</cref></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.y_label.cylinders[2]</ident>
//       <type>cylinder</type>
//       <T>
//           <cref>world.y_label.cylinders[2].R.T[1,1]</cref>
//           <cref>world.y_label.cylinders[2].R.T[1,2]</cref>
//           <cref>world.y_label.cylinders[2].R.T[1,3]</cref>
//           <cref>world.y_label.cylinders[2].R.T[2,1]</cref>
//           <cref>world.y_label.cylinders[2].R.T[2,2]</cref>
//           <cref>world.y_label.cylinders[2].R.T[2,3]</cref>
//           <cref>world.y_label.cylinders[2].R.T[3,1]</cref>
//           <cref>world.y_label.cylinders[2].R.T[3,2]</cref>
//           <cref>world.y_label.cylinders[2].R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>world.y_label.cylinders[2].r[1]</cref>
//           <cref>world.y_label.cylinders[2].r[2]</cref>
//           <cref>world.y_label.cylinders[2].r[3]</cref>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <cref>world.y_label.cylinders[2].lengthDirection[1]</cref>
//           <cref>world.y_label.cylinders[2].lengthDirection[2]</cref>
//           <cref>world.y_label.cylinders[2].lengthDirection[3]</cref>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.y_label.cylinders[2].length</cref></length>
//       <width><cref>world.y_label.cylinders[2].width</cref></width>
//       <height><cref>world.y_label.cylinders[2].height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </color>
//       <specCoeff><cref>world.y_label.cylinders[2].specularCoefficient</cref></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.z_label.cylinders[3]</ident>
//       <type>cylinder</type>
//       <T>
//           <cref>world.z_label.cylinders[3].R.T[1,1]</cref>
//           <cref>world.z_label.cylinders[3].R.T[1,2]</cref>
//           <cref>world.z_label.cylinders[3].R.T[1,3]</cref>
//           <cref>world.z_label.cylinders[3].R.T[2,1]</cref>
//           <cref>world.z_label.cylinders[3].R.T[2,2]</cref>
//           <cref>world.z_label.cylinders[3].R.T[2,3]</cref>
//           <cref>world.z_label.cylinders[3].R.T[3,1]</cref>
//           <cref>world.z_label.cylinders[3].R.T[3,2]</cref>
//           <cref>world.z_label.cylinders[3].R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>world.z_label.cylinders[3].r[1]</cref>
//           <cref>world.z_label.cylinders[3].r[2]</cref>
//           <cref>world.z_label.cylinders[3].r[3]</cref>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <cref>world.z_label.cylinders[3].lengthDirection[1]</cref>
//           <cref>world.z_label.cylinders[3].lengthDirection[2]</cref>
//           <cref>world.z_label.cylinders[3].lengthDirection[3]</cref>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.z_label.cylinders[3].length</cref></length>
//       <width><cref>world.z_label.cylinders[3].width</cref></width>
//       <height><cref>world.z_label.cylinders[3].height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </color>
//       <specCoeff><cref>world.z_label.cylinders[3].specularCoefficient</cref></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.x_arrowLine</ident>
//       <type>cylinder</type>
//       <T>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </T>
//       <r>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.x_arrowLine.length</cref></length>
//       <width><cref>world.x_arrowLine.width</cref></width>
//       <height><cref>world.x_arrowLine.height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <cref>world.x_arrowLine.color[1]</cref>
//           <cref>world.x_arrowLine.color[2]</cref>
//           <cref>world.x_arrowLine.color[3]</cref>
//       </color>
//       <specCoeff><exp>0.0</exp></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.y_arrowLine</ident>
//       <type>cylinder</type>
//       <T>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </T>
//       <r>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </lengthDir>
//       <widthDir>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.y_arrowLine.length</cref></length>
//       <width><cref>world.y_arrowLine.width</cref></width>
//       <height><cref>world.y_arrowLine.height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <cref>world.y_arrowLine.color[1]</cref>
//           <cref>world.y_arrowLine.color[2]</cref>
//           <cref>world.y_arrowLine.color[3]</cref>
//       </color>
//       <specCoeff><exp>0.0</exp></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.z_arrowLine</ident>
//       <type>cylinder</type>
//       <T>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </T>
//       <r>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.z_arrowLine.length</cref></length>
//       <width><cref>world.z_arrowLine.width</cref></width>
//       <height><cref>world.z_arrowLine.height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <cref>world.z_arrowLine.color[1]</cref>
//           <cref>world.z_arrowLine.color[2]</cref>
//           <cref>world.z_arrowLine.color[3]</cref>
//       </color>
//       <specCoeff><exp>0.0</exp></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.gravityArrowLine</ident>
//       <type>cylinder</type>
//       <T>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </T>
//       <r>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r>
//       <r_shape>
//           <cref>world.gravityArrowLine.r_shape[1]</cref>
//           <cref>world.gravityArrowLine.r_shape[2]</cref>
//           <cref>world.gravityArrowLine.r_shape[3]</cref>
//       </r_shape>
//       <lengthDir>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>-1.0</exp>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.gravityArrowLine.length</cref></length>
//       <width><cref>world.gravityArrowLine.width</cref></width>
//       <height><cref>world.gravityArrowLine.height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <cref>world.gravityArrowLine.color[1]</cref>
//           <cref>world.gravityArrowLine.color[2]</cref>
//           <cref>world.gravityArrowLine.color[3]</cref>
//       </color>
//       <specCoeff><exp>0.0</exp></specCoeff>
//   </shape>
//   <surface>
//       <ident>torus.surface</ident>
//       <T>
//           <cref>torus.surface.R.T[1,1]</cref>
//           <cref>torus.surface.R.T[1,2]</cref>
//           <cref>torus.surface.R.T[1,3]</cref>
//           <cref>torus.surface.R.T[2,1]</cref>
//           <cref>torus.surface.R.T[2,2]</cref>
//           <cref>torus.surface.R.T[2,3]</cref>
//           <cref>torus.surface.R.T[3,1]</cref>
//           <cref>torus.surface.R.T[3,2]</cref>
//           <cref>torus.surface.R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>torus.surface.r_0[1]</cref>
//           <cref>torus.surface.r_0[2]</cref>
//           <cref>torus.surface.r_0[3]</cref>
//       </r>
//       <nu><cref>torus.surface.nu</cref></nu>
//       <nv><cref>torus.surface.nv</cref></nv>
//       <wireframe><cref>torus.surface.wireframe</cref></wireframe>
//       <multiColored><bconst>false</bconst></multiColored>
//       <color>
//           <cref>torus.surface.color[1]</cref>
//           <cref>torus.surface.color[2]</cref>
//           <cref>torus.surface.color[3]</cref>
//       </color>
//       <specCoeff><cref>torus.surface.specularCoefficient</cref></specCoeff>
//       <transparency><cref>torus.surface.transparency</cref></transparency>
//   </surface>
//   <surface>
//       <ident>pipeWithScalarField.pipe.surface</ident>
//       <T>
//           <cref>pipeWithScalarField.pipe.surface.R.T[1,1]</cref>
//           <cref>pipeWithScalarField.pipe.surface.R.T[1,2]</cref>
//           <cref>pipeWithScalarField.pipe.surface.R.T[1,3]</cref>
//           <cref>pipeWithScalarField.pipe.surface.R.T[2,1]</cref>
//           <cref>pipeWithScalarField.pipe.surface.R.T[2,2]</cref>
//           <cref>pipeWithScalarField.pipe.surface.R.T[2,3]</cref>
//           <cref>pipeWithScalarField.pipe.surface.R.T[3,1]</cref>
//           <cref>pipeWithScalarField.pipe.surface.R.T[3,2]</cref>
//           <cref>pipeWithScalarField.pipe.surface.R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>pipeWithScalarField.pipe.surface.r_0[1]</cref>
//           <cref>pipeWithScalarField.pipe.surface.r_0[2]</cref>
//           <cref>pipeWithScalarField.pipe.surface.r_0[3]</cref>
//       </r>
//       <nu><cref>pipeWithScalarField.pipe.surface.nu</cref></nu>
//       <nv><cref>pipeWithScalarField.pipe.surface.nv</cref></nv>
//       <wireframe><bconst>false</bconst></wireframe>
//       <multiColored><bconst>false</bconst></multiColored>
//       <color>
//           <exp>255.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </color>
//       <specCoeff><cref>pipeWithScalarField.pipe.surface.specularCoefficient</cref></specCoeff>
//       <transparency><cref>pipeWithScalarField.pipe.surface.transparency</cref></transparency>
//   </surface>
//   <shape>
//       <ident>wheel.pipe</ident>
//       <type>pipe</type>
//       <T>
//           <cref>wheel.pipe.R.T[1,1]</cref>
//           <cref>wheel.pipe.R.T[1,2]</cref>
//           <cref>wheel.pipe.R.T[1,3]</cref>
//           <cref>wheel.pipe.R.T[2,1]</cref>
//           <cref>wheel.pipe.R.T[2,2]</cref>
//           <cref>wheel.pipe.R.T[2,3]</cref>
//           <cref>wheel.pipe.R.T[3,1]</cref>
//           <cref>wheel.pipe.R.T[3,2]</cref>
//           <cref>wheel.pipe.R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>wheel.pipe.r[1]</cref>
//           <cref>wheel.pipe.r[2]</cref>
//           <cref>wheel.pipe.r[3]</cref>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <cref>wheel.pipe.r_shape[2]</cref>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </widthDir>
//       <length><cref>wheel.pipe.length</cref></length>
//       <width><cref>wheel.pipe.width</cref></width>
//       <height><cref>wheel.pipe.height</cref></height>
//       <extra><cref>wheel.pipe.extra</cref></extra>
//       <color>
//           <cref>wheel.pipe.color[1]</cref>
//           <cref>wheel.pipe.color[2]</cref>
//           <cref>wheel.pipe.color[3]</cref>
//       </color>
//       <specCoeff><cref>wheel.pipe.specularCoefficient</cref></specCoeff>
//   </shape>
//   <surface>
//       <ident>wheel.torus</ident>
//       <T>
//           <cref>wheel.torus.R.T[1,1]</cref>
//           <cref>wheel.torus.R.T[1,2]</cref>
//           <cref>wheel.torus.R.T[1,3]</cref>
//           <cref>wheel.torus.R.T[2,1]</cref>
//           <cref>wheel.torus.R.T[2,2]</cref>
//           <cref>wheel.torus.R.T[2,3]</cref>
//           <cref>wheel.torus.R.T[3,1]</cref>
//           <cref>wheel.torus.R.T[3,2]</cref>
//           <cref>wheel.torus.R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>wheel.torus.r_0[1]</cref>
//           <cref>wheel.torus.r_0[2]</cref>
//           <cref>wheel.torus.r_0[3]</cref>
//       </r>
//       <nu><cref>wheel.torus.nu</cref></nu>
//       <nv><cref>wheel.torus.nv</cref></nv>
//       <wireframe><bconst>false</bconst></wireframe>
//       <multiColored><bconst>false</bconst></multiColored>
//       <color>
//           <cref>wheel.torus.color[1]</cref>
//           <cref>wheel.torus.color[2]</cref>
//           <cref>wheel.torus.color[3]</cref>
//       </color>
//       <specCoeff><cref>wheel.torus.specularCoefficient</cref></specCoeff>
//       <transparency><exp>0.0</exp></transparency>
//   </surface>
//   <surface>
//       <ident>surface</ident>
//       <T>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </T>
//       <r>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r>
//       <nu><exp>50</exp></nu>
//       <nv><exp>50</exp></nv>
//       <wireframe><bconst>false</bconst></wireframe>
//       <multiColored><bconst>false</bconst></multiColored>
//       <color>
//           <exp>255.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </color>
//       <specCoeff><exp>0.7</exp></specCoeff>
//       <transparency><exp>0.0</exp></transparency>
//   </surface>
//   <shape>
//       <ident>world.x_arrowHead</ident>
//       <type>cone</type>
//       <T>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </T>
//       <r>
//           <cref>world.x_arrowHead.r[1]</cref>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.x_arrowHead.length</cref></length>
//       <width><cref>world.x_arrowHead.width</cref></width>
//       <height><cref>world.x_arrowHead.height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </color>
//       <specCoeff><exp>0.0</exp></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.y_arrowHead</ident>
//       <type>cone</type>
//       <T>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </T>
//       <r>
//           <exp>0.0</exp>
//           <cref>world.y_arrowHead.r[2]</cref>
//           <exp>0.0</exp>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </lengthDir>
//       <widthDir>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.y_arrowHead.length</cref></length>
//       <width><cref>world.y_arrowHead.width</cref></width>
//       <height><cref>world.y_arrowHead.height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </color>
//       <specCoeff><exp>0.0</exp></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.z_arrowHead</ident>
//       <type>cone</type>
//       <T>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </T>
//       <r>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <cref>world.z_arrowHead.r[3]</cref>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.z_arrowHead.length</cref></length>
//       <width><cref>world.z_arrowHead.width</cref></width>
//       <height><cref>world.z_arrowHead.height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </color>
//       <specCoeff><exp>0.0</exp></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.gravityArrowHead</ident>
//       <type>cone</type>
//       <T>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </T>
//       <r>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r>
//       <r_shape>
//           <cref>world.gravityArrowHead.r_shape[1]</cref>
//           <cref>world.gravityArrowHead.r_shape[2]</cref>
//           <cref>world.gravityArrowHead.r_shape[3]</cref>
//       </r_shape>
//       <lengthDir>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>-1.0</exp>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.gravityArrowHead.length</cref></length>
//       <width><cref>world.gravityArrowHead.width</cref></width>
//       <height><cref>world.gravityArrowHead.height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <exp>0.0</exp>
//           <exp>230.0</exp>
//           <exp>0.0</exp>
//       </color>
//       <specCoeff><exp>0.0</exp></specCoeff>
//   </shape>
//   <surface>
//       <ident>world.surface</ident>
//       <T>
//           <exp>1.0</exp>
//           <exp>6.123233995736766e-17</exp>
//           <exp>-6.123233995736766e-17</exp>
//           <exp>6.123233995736766e-17</exp>
//           <exp>-1.0</exp>
//           <exp>0.0</exp>
//           <exp>-6.123233995736766e-17</exp>
//           <exp>-3.749399456654644e-33</exp>
//           <exp>-1.0</exp>
//       </T>
//       <r>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r>
//       <nu><exp>2</exp></nu>
//       <nv><exp>2</exp></nv>
//       <wireframe><bconst>false</bconst></wireframe>
//       <multiColored><bconst>false</bconst></multiColored>
//       <color>
//           <exp>215.0</exp>
//           <exp>215.0</exp>
//           <exp>215.0</exp>
//       </color>
//       <specCoeff><exp>0.0</exp></specCoeff>
//       <transparency><exp>0.0</exp></transparency>
//   </surface>
// </visualization>"
// ""
// endResult
