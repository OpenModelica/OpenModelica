// name:     ForceAndTorque
// keywords: visualization
// status:   correct
// cflags: -d=newInst
//

loadModel(Modelica, {"4.0.0"}); getErrorString();
setDebugFlags("visxml"); getErrorString();
translateModel(Modelica.Mechanics.MultiBody.Examples.Elementary.ForceAndTorque); getErrorString();
readFile("Modelica.Mechanics.MultiBody.Examples.Elementary.ForceAndTorque_visual.xml");
getErrorString();
// Result:
// true
// ""
// true
// ""
// true
// ""
// "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>
// <visualization>
//   <shape>
//       <ident>world.z_label.cylinders[1]</ident>
//       <type>cylinder</type>
//       <T>
//           <cref>world.z_label.cylinders[1].R.T[1,1]</cref>
//           <cref>world.z_label.cylinders[1].R.T[1,2]</cref>
//           <cref>world.z_label.cylinders[1].R.T[1,3]</cref>
//           <cref>world.z_label.cylinders[1].R.T[2,1]</cref>
//           <cref>world.z_label.cylinders[1].R.T[2,2]</cref>
//           <cref>world.z_label.cylinders[1].R.T[2,3]</cref>
//           <cref>world.z_label.cylinders[1].R.T[3,1]</cref>
//           <cref>world.z_label.cylinders[1].R.T[3,2]</cref>
//           <cref>world.z_label.cylinders[1].R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>world.z_label.cylinders[1].r[1]</cref>
//           <cref>world.z_label.cylinders[1].r[2]</cref>
//           <cref>world.z_label.cylinders[1].r[3]</cref>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <cref>world.z_label.cylinders[1].lengthDirection[1]</cref>
//           <cref>world.z_label.cylinders[1].lengthDirection[2]</cref>
//           <cref>world.z_label.cylinders[1].lengthDirection[3]</cref>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.z_label.cylinders[1].length</cref></length>
//       <width><cref>world.z_label.cylinders[1].width</cref></width>
//       <height><cref>world.z_label.cylinders[1].height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <cref>world.z_label.cylinders[1].color[1]</cref>
//           <cref>world.z_label.cylinders[1].color[2]</cref>
//           <cref>world.z_label.cylinders[1].color[3]</cref>
//       </color>
//       <specCoeff><cref>world.z_label.cylinders[1].specularCoefficient</cref></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.z_label.cylinders[2]</ident>
//       <type>cylinder</type>
//       <T>
//           <cref>world.z_label.cylinders[2].R.T[1,1]</cref>
//           <cref>world.z_label.cylinders[2].R.T[1,2]</cref>
//           <cref>world.z_label.cylinders[2].R.T[1,3]</cref>
//           <cref>world.z_label.cylinders[2].R.T[2,1]</cref>
//           <cref>world.z_label.cylinders[2].R.T[2,2]</cref>
//           <cref>world.z_label.cylinders[2].R.T[2,3]</cref>
//           <cref>world.z_label.cylinders[2].R.T[3,1]</cref>
//           <cref>world.z_label.cylinders[2].R.T[3,2]</cref>
//           <cref>world.z_label.cylinders[2].R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>world.z_label.cylinders[2].r[1]</cref>
//           <cref>world.z_label.cylinders[2].r[2]</cref>
//           <cref>world.z_label.cylinders[2].r[3]</cref>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <cref>world.z_label.cylinders[2].lengthDirection[1]</cref>
//           <cref>world.z_label.cylinders[2].lengthDirection[2]</cref>
//           <cref>world.z_label.cylinders[2].lengthDirection[3]</cref>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.z_label.cylinders[2].length</cref></length>
//       <width><cref>world.z_label.cylinders[2].width</cref></width>
//       <height><cref>world.z_label.cylinders[2].height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <cref>world.z_label.cylinders[2].color[1]</cref>
//           <cref>world.z_label.cylinders[2].color[2]</cref>
//           <cref>world.z_label.cylinders[2].color[3]</cref>
//       </color>
//       <specCoeff><cref>world.z_label.cylinders[2].specularCoefficient</cref></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.x_label.cylinders[1]</ident>
//       <type>cylinder</type>
//       <T>
//           <cref>world.x_label.cylinders[1].R.T[1,1]</cref>
//           <cref>world.x_label.cylinders[1].R.T[1,2]</cref>
//           <cref>world.x_label.cylinders[1].R.T[1,3]</cref>
//           <cref>world.x_label.cylinders[1].R.T[2,1]</cref>
//           <cref>world.x_label.cylinders[1].R.T[2,2]</cref>
//           <cref>world.x_label.cylinders[1].R.T[2,3]</cref>
//           <cref>world.x_label.cylinders[1].R.T[3,1]</cref>
//           <cref>world.x_label.cylinders[1].R.T[3,2]</cref>
//           <cref>world.x_label.cylinders[1].R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>world.x_label.cylinders[1].r[1]</cref>
//           <cref>world.x_label.cylinders[1].r[2]</cref>
//           <cref>world.x_label.cylinders[1].r[3]</cref>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <cref>world.x_label.cylinders[1].lengthDirection[1]</cref>
//           <cref>world.x_label.cylinders[1].lengthDirection[2]</cref>
//           <cref>world.x_label.cylinders[1].lengthDirection[3]</cref>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.x_label.cylinders[1].length</cref></length>
//       <width><cref>world.x_label.cylinders[1].width</cref></width>
//       <height><cref>world.x_label.cylinders[1].height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <cref>world.x_label.cylinders[1].color[1]</cref>
//           <cref>world.x_label.cylinders[1].color[2]</cref>
//           <cref>world.x_label.cylinders[1].color[3]</cref>
//       </color>
//       <specCoeff><cref>world.x_label.cylinders[1].specularCoefficient</cref></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.x_label.cylinders[2]</ident>
//       <type>cylinder</type>
//       <T>
//           <cref>world.x_label.cylinders[2].R.T[1,1]</cref>
//           <cref>world.x_label.cylinders[2].R.T[1,2]</cref>
//           <cref>world.x_label.cylinders[2].R.T[1,3]</cref>
//           <cref>world.x_label.cylinders[2].R.T[2,1]</cref>
//           <cref>world.x_label.cylinders[2].R.T[2,2]</cref>
//           <cref>world.x_label.cylinders[2].R.T[2,3]</cref>
//           <cref>world.x_label.cylinders[2].R.T[3,1]</cref>
//           <cref>world.x_label.cylinders[2].R.T[3,2]</cref>
//           <cref>world.x_label.cylinders[2].R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>world.x_label.cylinders[2].r[1]</cref>
//           <cref>world.x_label.cylinders[2].r[2]</cref>
//           <cref>world.x_label.cylinders[2].r[3]</cref>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <cref>world.x_label.cylinders[2].lengthDirection[1]</cref>
//           <cref>world.x_label.cylinders[2].lengthDirection[2]</cref>
//           <cref>world.x_label.cylinders[2].lengthDirection[3]</cref>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.x_label.cylinders[2].length</cref></length>
//       <width><cref>world.x_label.cylinders[2].width</cref></width>
//       <height><cref>world.x_label.cylinders[2].height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </color>
//       <specCoeff><cref>world.x_label.cylinders[2].specularCoefficient</cref></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.y_label.cylinders[1]</ident>
//       <type>cylinder</type>
//       <T>
//           <cref>world.y_label.cylinders[1].R.T[1,1]</cref>
//           <cref>world.y_label.cylinders[1].R.T[1,2]</cref>
//           <cref>world.y_label.cylinders[1].R.T[1,3]</cref>
//           <cref>world.y_label.cylinders[1].R.T[2,1]</cref>
//           <cref>world.y_label.cylinders[1].R.T[2,2]</cref>
//           <cref>world.y_label.cylinders[1].R.T[2,3]</cref>
//           <cref>world.y_label.cylinders[1].R.T[3,1]</cref>
//           <cref>world.y_label.cylinders[1].R.T[3,2]</cref>
//           <cref>world.y_label.cylinders[1].R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>world.y_label.cylinders[1].r[1]</cref>
//           <cref>world.y_label.cylinders[1].r[2]</cref>
//           <cref>world.y_label.cylinders[1].r[3]</cref>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <cref>world.y_label.cylinders[1].lengthDirection[1]</cref>
//           <cref>world.y_label.cylinders[1].lengthDirection[2]</cref>
//           <cref>world.y_label.cylinders[1].lengthDirection[3]</cref>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.y_label.cylinders[1].length</cref></length>
//       <width><cref>world.y_label.cylinders[1].width</cref></width>
//       <height><cref>world.y_label.cylinders[1].height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <cref>world.y_label.cylinders[1].color[1]</cref>
//           <cref>world.y_label.cylinders[1].color[2]</cref>
//           <cref>world.y_label.cylinders[1].color[3]</cref>
//       </color>
//       <specCoeff><cref>world.y_label.cylinders[1].specularCoefficient</cref></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.y_label.cylinders[2]</ident>
//       <type>cylinder</type>
//       <T>
//           <cref>world.y_label.cylinders[2].R.T[1,1]</cref>
//           <cref>world.y_label.cylinders[2].R.T[1,2]</cref>
//           <cref>world.y_label.cylinders[2].R.T[1,3]</cref>
//           <cref>world.y_label.cylinders[2].R.T[2,1]</cref>
//           <cref>world.y_label.cylinders[2].R.T[2,2]</cref>
//           <cref>world.y_label.cylinders[2].R.T[2,3]</cref>
//           <cref>world.y_label.cylinders[2].R.T[3,1]</cref>
//           <cref>world.y_label.cylinders[2].R.T[3,2]</cref>
//           <cref>world.y_label.cylinders[2].R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>world.y_label.cylinders[2].r[1]</cref>
//           <cref>world.y_label.cylinders[2].r[2]</cref>
//           <cref>world.y_label.cylinders[2].r[3]</cref>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <cref>world.y_label.cylinders[2].lengthDirection[1]</cref>
//           <cref>world.y_label.cylinders[2].lengthDirection[2]</cref>
//           <cref>world.y_label.cylinders[2].lengthDirection[3]</cref>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.y_label.cylinders[2].length</cref></length>
//       <width><cref>world.y_label.cylinders[2].width</cref></width>
//       <height><cref>world.y_label.cylinders[2].height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </color>
//       <specCoeff><cref>world.y_label.cylinders[2].specularCoefficient</cref></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.z_label.cylinders[3]</ident>
//       <type>cylinder</type>
//       <T>
//           <cref>world.z_label.cylinders[3].R.T[1,1]</cref>
//           <cref>world.z_label.cylinders[3].R.T[1,2]</cref>
//           <cref>world.z_label.cylinders[3].R.T[1,3]</cref>
//           <cref>world.z_label.cylinders[3].R.T[2,1]</cref>
//           <cref>world.z_label.cylinders[3].R.T[2,2]</cref>
//           <cref>world.z_label.cylinders[3].R.T[2,3]</cref>
//           <cref>world.z_label.cylinders[3].R.T[3,1]</cref>
//           <cref>world.z_label.cylinders[3].R.T[3,2]</cref>
//           <cref>world.z_label.cylinders[3].R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>world.z_label.cylinders[3].r[1]</cref>
//           <cref>world.z_label.cylinders[3].r[2]</cref>
//           <cref>world.z_label.cylinders[3].r[3]</cref>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <cref>world.z_label.cylinders[3].lengthDirection[1]</cref>
//           <cref>world.z_label.cylinders[3].lengthDirection[2]</cref>
//           <cref>world.z_label.cylinders[3].lengthDirection[3]</cref>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.z_label.cylinders[3].length</cref></length>
//       <width><cref>world.z_label.cylinders[3].width</cref></width>
//       <height><cref>world.z_label.cylinders[3].height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </color>
//       <specCoeff><cref>world.z_label.cylinders[3].specularCoefficient</cref></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.x_arrowLine</ident>
//       <type>cylinder</type>
//       <T>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </T>
//       <r>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.x_arrowLine.length</cref></length>
//       <width><cref>world.x_arrowLine.width</cref></width>
//       <height><cref>world.x_arrowLine.height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <cref>world.x_arrowLine.color[1]</cref>
//           <cref>world.x_arrowLine.color[2]</cref>
//           <cref>world.x_arrowLine.color[3]</cref>
//       </color>
//       <specCoeff><exp>0.0</exp></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.y_arrowLine</ident>
//       <type>cylinder</type>
//       <T>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </T>
//       <r>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </lengthDir>
//       <widthDir>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.y_arrowLine.length</cref></length>
//       <width><cref>world.y_arrowLine.width</cref></width>
//       <height><cref>world.y_arrowLine.height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <cref>world.y_arrowLine.color[1]</cref>
//           <cref>world.y_arrowLine.color[2]</cref>
//           <cref>world.y_arrowLine.color[3]</cref>
//       </color>
//       <specCoeff><exp>0.0</exp></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.z_arrowLine</ident>
//       <type>cylinder</type>
//       <T>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </T>
//       <r>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.z_arrowLine.length</cref></length>
//       <width><cref>world.z_arrowLine.width</cref></width>
//       <height><cref>world.z_arrowLine.height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <cref>world.z_arrowLine.color[1]</cref>
//           <cref>world.z_arrowLine.color[2]</cref>
//           <cref>world.z_arrowLine.color[3]</cref>
//       </color>
//       <specCoeff><exp>0.0</exp></specCoeff>
//   </shape>
//   <vector>
//       <ident>forceAndTorque.forceArrow.arrowLine</ident>
//       <T>
//           <cref>forceAndTorque.forceArrow.arrowLine.R.T[1,1]</cref>
//           <cref>forceAndTorque.forceArrow.arrowLine.R.T[1,2]</cref>
//           <cref>forceAndTorque.forceArrow.arrowLine.R.T[1,3]</cref>
//           <cref>forceAndTorque.forceArrow.arrowLine.R.T[2,1]</cref>
//           <cref>forceAndTorque.forceArrow.arrowLine.R.T[2,2]</cref>
//           <cref>forceAndTorque.forceArrow.arrowLine.R.T[2,3]</cref>
//           <cref>forceAndTorque.forceArrow.arrowLine.R.T[3,1]</cref>
//           <cref>forceAndTorque.forceArrow.arrowLine.R.T[3,2]</cref>
//           <cref>forceAndTorque.forceArrow.arrowLine.R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>forceAndTorque.forceArrow.arrowLine.r[1]</cref>
//           <cref>forceAndTorque.forceArrow.arrowLine.r[2]</cref>
//           <cref>forceAndTorque.forceArrow.arrowLine.r[3]</cref>
//       </r>
//       <coordinates>
//           <cref>forceAndTorque.forceArrow.arrowLine.coordinates[1]</cref>
//           <cref>forceAndTorque.forceArrow.arrowLine.coordinates[2]</cref>
//           <cref>forceAndTorque.forceArrow.arrowLine.coordinates[3]</cref>
//       </coordinates>
//       <color>
//           <cref>forceAndTorque.forceArrow.arrowLine.color[1]</cref>
//           <cref>forceAndTorque.forceArrow.arrowLine.color[2]</cref>
//           <cref>forceAndTorque.forceArrow.arrowLine.color[3]</cref>
//       </color>
//       <specCoeff><cref>forceAndTorque.forceArrow.arrowLine.specularCoefficient</cref></specCoeff>
//       <quantity><cref>forceAndTorque.forceArrow.arrowLine.quantity</cref></quantity>
//       <headAtOrigin><cref>forceAndTorque.forceArrow.arrowLine.headAtOrigin</cref></headAtOrigin>
//       <twoHeadedArrow><bconst>false</bconst></twoHeadedArrow>
//   </vector>
//   <vector>
//       <ident>forceAndTorque.torqueArrow.arrowLine</ident>
//       <T>
//           <cref>forceAndTorque.torqueArrow.arrowLine.R.T[1,1]</cref>
//           <cref>forceAndTorque.torqueArrow.arrowLine.R.T[1,2]</cref>
//           <cref>forceAndTorque.torqueArrow.arrowLine.R.T[1,3]</cref>
//           <cref>forceAndTorque.torqueArrow.arrowLine.R.T[2,1]</cref>
//           <cref>forceAndTorque.torqueArrow.arrowLine.R.T[2,2]</cref>
//           <cref>forceAndTorque.torqueArrow.arrowLine.R.T[2,3]</cref>
//           <cref>forceAndTorque.torqueArrow.arrowLine.R.T[3,1]</cref>
//           <cref>forceAndTorque.torqueArrow.arrowLine.R.T[3,2]</cref>
//           <cref>forceAndTorque.torqueArrow.arrowLine.R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>forceAndTorque.torqueArrow.arrowLine.r[1]</cref>
//           <cref>forceAndTorque.torqueArrow.arrowLine.r[2]</cref>
//           <cref>forceAndTorque.torqueArrow.arrowLine.r[3]</cref>
//       </r>
//       <coordinates>
//           <cref>forceAndTorque.torqueArrow.arrowLine.coordinates[1]</cref>
//           <cref>forceAndTorque.torqueArrow.arrowLine.coordinates[2]</cref>
//           <cref>forceAndTorque.torqueArrow.arrowLine.coordinates[3]</cref>
//       </coordinates>
//       <color>
//           <cref>forceAndTorque.torqueArrow.arrowLine.color[1]</cref>
//           <cref>forceAndTorque.torqueArrow.arrowLine.color[2]</cref>
//           <cref>forceAndTorque.torqueArrow.arrowLine.color[3]</cref>
//       </color>
//       <specCoeff><cref>forceAndTorque.torqueArrow.arrowLine.specularCoefficient</cref></specCoeff>
//       <quantity><cref>forceAndTorque.torqueArrow.arrowLine.quantity</cref></quantity>
//       <headAtOrigin><cref>forceAndTorque.torqueArrow.arrowLine.headAtOrigin</cref></headAtOrigin>
//       <twoHeadedArrow><bconst>true</bconst></twoHeadedArrow>
//   </vector>
//   <shape>
//       <ident>body.frameTranslation.shape</ident>
//       <type>pipecylinder</type>
//       <T>
//           <cref>body.frameTranslation.shape.R.T[1,1]</cref>
//           <cref>body.frameTranslation.shape.R.T[1,2]</cref>
//           <cref>body.frameTranslation.shape.R.T[1,3]</cref>
//           <cref>body.frameTranslation.shape.R.T[2,1]</cref>
//           <cref>body.frameTranslation.shape.R.T[2,2]</cref>
//           <cref>body.frameTranslation.shape.R.T[2,3]</cref>
//           <cref>body.frameTranslation.shape.R.T[3,1]</cref>
//           <cref>body.frameTranslation.shape.R.T[3,2]</cref>
//           <cref>body.frameTranslation.shape.R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>body.frameTranslation.shape.r[1]</cref>
//           <cref>body.frameTranslation.shape.r[2]</cref>
//           <cref>body.frameTranslation.shape.r[3]</cref>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>body.frameTranslation.shape.length</cref></length>
//       <width><cref>body.frameTranslation.shape.width</cref></width>
//       <height><cref>body.frameTranslation.shape.height</cref></height>
//       <extra><cref>body.frameTranslation.shape.extra</cref></extra>
//       <color>
//           <exp>0.0</exp>
//           <exp>128.0</exp>
//           <exp>255.0</exp>
//       </color>
//       <specCoeff><cref>body.frameTranslation.shape.specularCoefficient</cref></specCoeff>
//   </shape>
//   <shape>
//       <ident>forceAndTorque.connectionLine</ident>
//       <type>cylinder</type>
//       <T>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </T>
//       <r>
//           <cref>forceAndTorque.connectionLine.r[1]</cref>
//           <cref>forceAndTorque.connectionLine.r[2]</cref>
//           <cref>forceAndTorque.connectionLine.r[3]</cref>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <cref>forceAndTorque.connectionLine.lengthDirection[1]</cref>
//           <cref>forceAndTorque.connectionLine.lengthDirection[2]</cref>
//           <cref>forceAndTorque.connectionLine.lengthDirection[3]</cref>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>forceAndTorque.connectionLine.length</cref></length>
//       <width><cref>forceAndTorque.connectionLine.width</cref></width>
//       <height><cref>forceAndTorque.connectionLine.height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <exp>255.0</exp>
//           <exp>255.0</exp>
//           <exp>0.0</exp>
//       </color>
//       <specCoeff><cref>forceAndTorque.connectionLine.specularCoefficient</cref></specCoeff>
//   </shape>
//   <shape>
//       <ident>revolute2.cylinder</ident>
//       <type>cylinder</type>
//       <T>
//           <cref>revolute2.cylinder.R.T[1,1]</cref>
//           <cref>revolute2.cylinder.R.T[1,2]</cref>
//           <cref>revolute2.cylinder.R.T[1,3]</cref>
//           <cref>revolute2.cylinder.R.T[2,1]</cref>
//           <cref>revolute2.cylinder.R.T[2,2]</cref>
//           <cref>revolute2.cylinder.R.T[2,3]</cref>
//           <cref>revolute2.cylinder.R.T[3,1]</cref>
//           <cref>revolute2.cylinder.R.T[3,2]</cref>
//           <cref>revolute2.cylinder.R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>revolute2.cylinder.r[1]</cref>
//           <cref>revolute2.cylinder.r[2]</cref>
//           <cref>revolute2.cylinder.r[3]</cref>
//       </r>
//       <r_shape>
//           <cref>revolute2.cylinder.r_shape[1]</cref>
//           <cref>revolute2.cylinder.r_shape[2]</cref>
//           <cref>revolute2.cylinder.r_shape[3]</cref>
//       </r_shape>
//       <lengthDir>
//           <cref>revolute2.cylinder.lengthDirection[1]</cref>
//           <cref>revolute2.cylinder.lengthDirection[2]</cref>
//           <cref>revolute2.cylinder.lengthDirection[3]</cref>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>revolute2.cylinder.length</cref></length>
//       <width><cref>revolute2.cylinder.width</cref></width>
//       <height><cref>revolute2.cylinder.height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <exp>255.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </color>
//       <specCoeff><cref>revolute2.cylinder.specularCoefficient</cref></specCoeff>
//   </shape>
//   <shape>
//       <ident>revolute1.cylinder</ident>
//       <type>cylinder</type>
//       <T>
//           <cref>revolute1.cylinder.R.T[1,1]</cref>
//           <cref>revolute1.cylinder.R.T[1,2]</cref>
//           <cref>revolute1.cylinder.R.T[1,3]</cref>
//           <cref>revolute1.cylinder.R.T[2,1]</cref>
//           <cref>revolute1.cylinder.R.T[2,2]</cref>
//           <cref>revolute1.cylinder.R.T[2,3]</cref>
//           <cref>revolute1.cylinder.R.T[3,1]</cref>
//           <cref>revolute1.cylinder.R.T[3,2]</cref>
//           <cref>revolute1.cylinder.R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>revolute1.cylinder.r[1]</cref>
//           <cref>revolute1.cylinder.r[2]</cref>
//           <cref>revolute1.cylinder.r[3]</cref>
//       </r>
//       <r_shape>
//           <cref>revolute1.cylinder.r_shape[1]</cref>
//           <cref>revolute1.cylinder.r_shape[2]</cref>
//           <cref>revolute1.cylinder.r_shape[3]</cref>
//       </r_shape>
//       <lengthDir>
//           <cref>revolute1.cylinder.lengthDirection[1]</cref>
//           <cref>revolute1.cylinder.lengthDirection[2]</cref>
//           <cref>revolute1.cylinder.lengthDirection[3]</cref>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>revolute1.cylinder.length</cref></length>
//       <width><cref>revolute1.cylinder.width</cref></width>
//       <height><cref>revolute1.cylinder.height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <exp>255.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </color>
//       <specCoeff><cref>revolute1.cylinder.specularCoefficient</cref></specCoeff>
//   </shape>
//   <shape>
//       <ident>fixedRotation.shape</ident>
//       <type>cylinder</type>
//       <T>
//           <cref>fixedRotation.shape.R.T[1,1]</cref>
//           <cref>fixedRotation.shape.R.T[1,2]</cref>
//           <cref>fixedRotation.shape.R.T[1,3]</cref>
//           <cref>fixedRotation.shape.R.T[2,1]</cref>
//           <cref>fixedRotation.shape.R.T[2,2]</cref>
//           <cref>fixedRotation.shape.R.T[2,3]</cref>
//           <cref>fixedRotation.shape.R.T[3,1]</cref>
//           <cref>fixedRotation.shape.R.T[3,2]</cref>
//           <cref>fixedRotation.shape.R.T[3,3]</cref>
//       </T>
//       <r>
//           <cref>fixedRotation.shape.r[1]</cref>
//           <cref>fixedRotation.shape.r[2]</cref>
//           <cref>fixedRotation.shape.r[3]</cref>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>fixedRotation.shape.length</cref></length>
//       <width><cref>fixedRotation.shape.width</cref></width>
//       <height><cref>fixedRotation.shape.height</cref></height>
//       <extra><cref>fixedRotation.shape.extra</cref></extra>
//       <color>
//           <exp>155.0</exp>
//           <exp>155.0</exp>
//           <exp>155.0</exp>
//       </color>
//       <specCoeff><cref>fixedRotation.shape.specularCoefficient</cref></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.x_arrowHead</ident>
//       <type>cone</type>
//       <T>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </T>
//       <r>
//           <cref>world.x_arrowHead.r[1]</cref>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.x_arrowHead.length</cref></length>
//       <width><cref>world.x_arrowHead.width</cref></width>
//       <height><cref>world.x_arrowHead.height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </color>
//       <specCoeff><exp>0.0</exp></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.y_arrowHead</ident>
//       <type>cone</type>
//       <T>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </T>
//       <r>
//           <exp>0.0</exp>
//           <cref>world.y_arrowHead.r[2]</cref>
//           <exp>0.0</exp>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </lengthDir>
//       <widthDir>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.y_arrowHead.length</cref></length>
//       <width><cref>world.y_arrowHead.width</cref></width>
//       <height><cref>world.y_arrowHead.height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </color>
//       <specCoeff><exp>0.0</exp></specCoeff>
//   </shape>
//   <shape>
//       <ident>world.z_arrowHead</ident>
//       <type>cone</type>
//       <T>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </T>
//       <r>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <cref>world.z_arrowHead.r[3]</cref>
//       </r>
//       <r_shape>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r_shape>
//       <lengthDir>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </lengthDir>
//       <widthDir>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//       </widthDir>
//       <length><cref>world.z_arrowHead.length</cref></length>
//       <width><cref>world.z_arrowHead.width</cref></width>
//       <height><cref>world.z_arrowHead.height</cref></height>
//       <extra><exp>0.0</exp></extra>
//       <color>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </color>
//       <specCoeff><exp>0.0</exp></specCoeff>
//   </shape>
//   <shape>
//       <ident>fixed1.shape</ident>
//       <type>cylinder</type>
//       <T>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </T>
//       <r>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r>
//       <r_shape>
//           <cref>fixed1.shape.r_shape[1]</cref>
//           <cref>fixed1.shape.r_shape[2]</cref>
//           <cref>fixed1.shape.r_shape[3]</cref>
//       </r_shape>
//       <lengthDir>
//           <cref>fixed1.shape.lengthDirection[1]</cref>
//           <cref>fixed1.shape.lengthDirection[2]</cref>
//           <cref>fixed1.shape.lengthDirection[3]</cref>
//       </lengthDir>
//       <widthDir>
//           <cref>fixed1.shape.widthDirection[1]</cref>
//           <cref>fixed1.shape.widthDirection[2]</cref>
//           <cref>fixed1.shape.widthDirection[3]</cref>
//       </widthDir>
//       <length><cref>fixed1.shape.length</cref></length>
//       <width><cref>fixed1.shape.width</cref></width>
//       <height><cref>fixed1.shape.height</cref></height>
//       <extra><cref>fixed1.shape.extra</cref></extra>
//       <color>
//           <exp>155.0</exp>
//           <exp>155.0</exp>
//           <exp>155.0</exp>
//       </color>
//       <specCoeff><cref>fixed1.shape.specularCoefficient</cref></specCoeff>
//   </shape>
//   <shape>
//       <ident>fixed2.shape</ident>
//       <type>cylinder</type>
//       <T>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>1.0</exp>
//       </T>
//       <r>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//           <exp>0.0</exp>
//       </r>
//       <r_shape>
//           <cref>fixed2.shape.r_shape[1]</cref>
//           <cref>fixed2.shape.r_shape[2]</cref>
//           <cref>fixed2.shape.r_shape[3]</cref>
//       </r_shape>
//       <lengthDir>
//           <cref>fixed2.shape.lengthDirection[1]</cref>
//           <cref>fixed2.shape.lengthDirection[2]</cref>
//           <cref>fixed2.shape.lengthDirection[3]</cref>
//       </lengthDir>
//       <widthDir>
//           <cref>fixed2.shape.widthDirection[1]</cref>
//           <cref>fixed2.shape.widthDirection[2]</cref>
//           <cref>fixed2.shape.widthDirection[3]</cref>
//       </widthDir>
//       <length><cref>fixed2.shape.length</cref></length>
//       <width><cref>fixed2.shape.width</cref></width>
//       <height><cref>fixed2.shape.height</cref></height>
//       <extra><cref>fixed2.shape.extra</cref></extra>
//       <color>
//           <exp>155.0</exp>
//           <exp>155.0</exp>
//           <exp>155.0</exp>
//       </color>
//       <specCoeff><cref>fixed2.shape.specularCoefficient</cref></specCoeff>
//   </shape>
// </visualization>"
// ""
// endResult
