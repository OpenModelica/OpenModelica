// name:     BouncingBall
// keywords: fmu export import
// status: correct
// teardown_command: rm -rf binaries sources modelDescription.xml BouncingBallFMI20* output.log BouncingBallFMI20/*
// Event handling in FMU Import
//

loadString("
model BouncingBallFMI20
  parameter Real e=0.7 \"coefficient of restitution\";
  parameter Real g=9.81 \"gravity acceleration\";
  Real h(start=1) \"height of ball\";
  Real v \"velocity of ball\";
  Real v_new;
equation
  der(v) = -g;
  der(h) = v;

  when h <= 0.0 then
    v_new = -e*pre(v);
    reinit(v, v_new);
  end when;

end BouncingBallFMI20;
"); getErrorString();
translateModelFMU(BouncingBallFMI20, version = "2.0", fmuType="me_cs"); getErrorString();
importFMU("BouncingBallFMI20.fmu"); getErrorString();
loadFile("BouncingBallFMI20_me_FMU.mo"); getErrorString();
simulate(BouncingBallFMI20_me_FMU, stopTime=3.0); getErrorString();
val(h,0);
val(h,1);
val(h,3);

// Result:
// true
// ""
// "BouncingBallFMI20.fmu"
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions(\"-d=initialization\").
// "
// "BouncingBallFMI20_me_FMU.mo"
// ""
// true
// ""
// record SimulationResult
//     resultFile = "BouncingBallFMI20_me_FMU_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 3.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'BouncingBallFMI20_me_FMU', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// 1.0
// 0.2250205209353687
// -0.9555208441479278
// endResult
