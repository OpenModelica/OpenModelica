// name:     testRecordDiff linearization
// keywords: differentiation linearization records
// status:   correct
// teardown_command: rm -rf recordDiffTest* output.log linear_recordDiffTest*
//
//

loadString("
record R
  Real r;
  Integer i;
end R;

function f
  input Real x;
  output R z;
algorithm
  for i in 1:1 loop
    z.r := x+3;
    z.i := integer(x);
  end for;
end f;

model recordDiffTest
  Real x;
  Real y;
  R z;
  output Real o;
equation
  der(x) = if z.i>=0 then cos(x) else sin(z.r);
  0 = y*z.r + 2;
  z = f(y+x);
  o = der(x)+y;
end recordDiffTest;
");
getErrorString();

setCommandLineOptions("--generateSymbolicLinearization");
linearize(recordDiffTest, stopTime=0.0);
getErrorString();

loadFile("linear_recordDiffTest.mo");
list(linear_recordDiffTest);


// Result:
// true
// ""
// true
// record SimulationResult
//     resultFile = "recordDiffTest_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 0.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'recordDiffTest', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "stdout            | info    | Linearization will be performed at point of time: 0.000000
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// stdout            | info    | Linear model is created.
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions(\"-d=initialization\").
// "
// true
// "model linear_recordDiffTest
//   parameter Integer n = 1 \"number of states\";
//   parameter Integer m = 0 \"number of inputs\";
//   parameter Integer p = 1 \"number of outputs\";
//   parameter Real x0[n] = {0};
//   parameter Real u0[m] = zeros(0);
//   parameter Real A[n, n] = [-0.8322936730942848];
//   parameter Real B[n, m] = zeros(n, m);
//   parameter Real C[p, n] = [0.1677063269057152];
//   parameter Real D[p, m] = zeros(p, m);
//   Real x[n](start = x0);
//   input Real u[m];
//   output Real y[p];
//   Real 'x_x' = x[1];
//   Real 'y_o' = y[1];
// equation
//   der(x) = A * x + B * u;
//   y = C * x + D * u;
// end linear_recordDiffTest;"
// endResult
