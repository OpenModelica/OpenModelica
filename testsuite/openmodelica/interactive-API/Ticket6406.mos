// name: Ticket6406.mos
// keywords:
// status: correct
//
// Tests if -d=nfAPI will give the correct response for getComponentAnnotations
//

setCommandLineOptions("-d=nfAPI,showStatement"); getErrorString();

loadFile("Ticket6406.mo"); getErrorString();

getElementAnnotations(Modelica.Fluid.Examples.HeatExchanger.BaseClasses.BasicHX); getErrorString();
getElements(Modelica.Fluid.Sources.Boundary_pT, useQuotes = true); getErrorString();
getIconAnnotation(Modelica.Fluid.Interfaces.PartialTwoPort); getErrorString();
getIconAnnotation(Modelica.Fluid.Sources.Boundary_pT); getErrorString();
getIconAnnotation(Modelica.Fluid.Sources.MassFlowSource_T); getErrorString();


// Result:
// true
// Evaluating: getErrorString()
// ""
// Evaluating: loadFile("Ticket6406.mo")
// true
// Evaluating: getErrorString()
// ""
// Evaluating: getElementAnnotations(Modelica.Fluid.Examples.HeatExchanger.BaseClasses.BasicHX)
// {{},{},{},{Evaluate=true, Dialog("General","Fluid 1",true,false,false,-,-,-,-,"",false)},{Evaluate=true, Dialog("General","Fluid 2",true,false,false,-,-,-,-,"",false)},{choicesAllMatching=true, Dialog("General","Fluid 1",true,false,false,-,-,-,-,"",false)},{choicesAllMatching=true, Dialog("General","Fluid 2",true,false,false,-,-,-,-,"",false)},{Dialog("General","Fluid 1",true,false,false,-,-,-,-,"",false)},{Dialog("General","Fluid 2",true,false,false,-,-,-,-,"",false)},{Dialog("General","Fluid 1",true,false,false,-,-,-,-,"",false)},{Dialog("General","Fluid 2",true,false,false,-,-,-,-,"",false)},{},{choicesAllMatching=true, Dialog("General","Fluid 1",true,false,false,-,-,-,-,"",false)},{choicesAllMatching=true, Dialog("General","Fluid 2",true,false,false,-,-,-,-,"",false)},{Dialog("General","Fluid 1",true,false,false,-,-,-,-,"",false)},{Dialog("General","Fluid 2",true,false,false,-,-,-,-,"",false)},{Dialog("General","Wall properties",true,false,false,-,-,-,-,"",false)},{Dialog("General","Wall properties",true,false,false,-,-,-,-,"",false)},{Dialog("General","Wall properties",true,false,false,-,-,-,-,"",false)},{Dialog("General","Wall properties",true,false,false,-,-,-,-,"",false)},{},{},{Dialog("Assumptions","Parameters",true,false,false,-,-,-,-,"",false), Evaluate=true},{Evaluate=true, Dialog("Assumptions","Dynamics",true,false,false,-,-,-,-,"",false)},{Evaluate=true, Dialog("Assumptions","Dynamics",true,false,false,-,-,-,-,"",false)},{Evaluate=true, Dialog("Assumptions","Dynamics",true,false,false,-,-,-,-,"",false)},{Dialog("Initialization","Wall",true,false,false,-,-,-,-,"",false)},{Dialog("Initialization","Wall",true,false,false,-,-,-,-,"",false)},{Evaluate=true, Dialog("Initialization","Parameters",true,false,false,-,-,-,-,"",false)},{Dialog("Initialization","Fluid 1",true,false,false,-,-,-,-,"",false)},{Dialog("Initialization","Fluid 1",true,false,false,-,-,-,-,"",false)},{Evaluate=true, Dialog("Initialization","Fluid 1",true,false,false,-,-,-,-,"",false)},{Evaluate=true, Dialog("Initialization","Fluid 1",false,false,false,-,-,-,-,"",false)},{Dialog("Initialization","Fluid 1",false,false,false,-,-,-,-,"",false)},{Evaluate=true, Dialog("Initialization","Fluid 1",true,false,false,-,-,-,-,"",false)},{Dialog("Initialization","Fluid 2",true,false,false,-,-,-,-,"",false)},{Dialog("Initialization","Fluid 2",true,false,false,-,-,-,-,"",false)},{Evaluate=true, Dialog("Initialization","Fluid 2",true,false,false,-,-,-,-,"",false)},{Evaluate=true, Dialog("Initialization","Fluid 2",false,false,false,-,-,-,-,"",false)},{Dialog("Initialization","Fluid 2",false,false,false,-,-,-,-,"",false)},{Evaluate=true, Dialog("Initialization","Fluid 2",true,false,false,-,-,-,-,"",false)},{choicesAllMatching=true, Dialog("General","Fluid 1",true,false,false,-,-,-,-,"",false)},{choicesAllMatching=true, Dialog("General","Fluid 2",true,false,false,-,-,-,-,"",false)},{Dialog("General","Fluid 1",true,false,false,-,-,-,-,"",false)},{Dialog("General","Fluid 2",true,false,false,-,-,-,-,"",false)},{},{},{Placement(true,-,-,-29.0,-23.0,9.0,35.0,-,-,-,-,-,-,-,)},{Placement(true,-,-,-40.0,-80.0,20.0,-20.0,-,-,-,-,-,-,-,)},{Placement(true,-,-,20.0,88.0,-40.0,28.0,-,-,-,-,-,-,-,)},{Placement(true,-,-,100.0,-12.0,120.0,8.0,-,-,-,-,-,-,-,)},{Placement(true,-,-,-120.0,-12.0,-100.0,8.0,-,-,-,-,-,-,-,)},{Placement(true,-,-,-120.0,36.0,-100.0,56.0,-,-,-,-,-,-,-,)},{Placement(true,-,-,100.0,-56.0,120.0,-36.0,-,-,-,-,-,-,-,)}}
// Evaluating: getErrorString()
// ""
// Evaluating: getElements(Modelica.Fluid.Sources.Boundary_pT, useQuotes = true)
// {{"co", "-", "Boolean", "use_p_in", "Get the pressure from the input connector", "public", "false", "false", "false", "false", "parameter", "none", "unspecified", "$Any", "{}"},{"co", "-", "Boolean", "use_T_in", "Get the temperature from the input connector", "public", "false", "false", "false", "false", "parameter", "none", "unspecified", "$Any", "{}"},{"co", "-", "Boolean", "use_X_in", "Get the composition from the input connector", "public", "false", "false", "false", "false", "parameter", "none", "unspecified", "$Any", "{}"},{"co", "-", "Boolean", "use_C_in", "Get the trace substances from the input connector", "public", "false", "false", "false", "false", "parameter", "none", "unspecified", "$Any", "{}"},{"co", "-", "Medium.AbsolutePressure", "p", "Fixed value of pressure", "public", "false", "false", "false", "false", "parameter", "none", "unspecified", "$Any", "{}"},{"co", "-", "Medium.Temperature", "T", "Fixed value of temperature", "public", "false", "false", "false", "false", "parameter", "none", "unspecified", "$Any", "{}"},{"co", "-", "Medium.MassFraction", "X", "Fixed value of composition", "public", "false", "false", "false", "false", "parameter", "none", "unspecified", "$Any", "{Medium.nX}"},{"co", "-", "Medium.ExtraProperty", "C", "Fixed values of trace substances", "public", "false", "false", "false", "false", "parameter", "none", "unspecified", "$Any", "{Medium.nC}"},{"co", "-", "Modelica.Blocks.Interfaces.RealInput", "p_in", "Prescribed boundary pressure", "public", "false", "false", "false", "false", "unspecified", "none", "unspecified", "$Any", "{}"},{"co", "-", "Modelica.Blocks.Interfaces.RealInput", "T_in", "Prescribed boundary temperature", "public", "false", "false", "false", "false", "unspecified", "none", "unspecified", "$Any", "{}"},{"co", "-", "Modelica.Blocks.Interfaces.RealInput", "X_in", "Prescribed boundary composition", "public", "false", "false", "false", "false", "unspecified", "none", "unspecified", "$Any", "{Medium.nX}"},{"co", "-", "Modelica.Blocks.Interfaces.RealInput", "C_in", "Prescribed boundary trace substances", "public", "false", "false", "false", "false", "unspecified", "none", "unspecified", "$Any", "{Medium.nC}"},{"co", "-", "Modelica.Blocks.Interfaces.RealInput", "p_in_internal", "Needed to connect to conditional connector", "protected", "false", "false", "false", "false", "unspecified", "none", "unspecified", "$Any", "{}"},{"co", "-", "Modelica.Blocks.Interfaces.RealInput", "T_in_internal", "Needed to connect to conditional connector", "protected", "false", "false", "false", "false", "unspecified", "none", "unspecified", "$Any", "{}"},{"co", "-", "Modelica.Blocks.Interfaces.RealInput", "X_in_internal", "Needed to connect to conditional connector", "protected", "false", "false", "false", "false", "unspecified", "none", "unspecified", "$Any", "{Medium.nX}"},{"co", "-", "Modelica.Blocks.Interfaces.RealInput", "C_in_internal", "Needed to connect to conditional connector", "protected", "false", "false", "false", "false", "unspecified", "none", "unspecified", "$Any", "{Medium.nC}"}}
// Evaluating: getErrorString()
// ""
// Evaluating: getIconAnnotation(Modelica.Fluid.Interfaces.PartialTwoPort)
// {-100.0,-100.0,100.0,100.0,true,-,-,, {Polygon(true, {0.0, 0.0}, 0.0, {0, 128, 255}, {0, 128, 255}, LinePattern.Solid, FillPattern.Solid, 0.25, {{20.0, -70.0}, {60.0, -85.0}, {20.0, -100.0}, {20.0, -70.0}}, Smooth.None), Polygon(true, {0.0, 0.0}, 0.0, {255, 255, 255}, {255, 255, 255}, LinePattern.Solid, FillPattern.Solid, 0.25, {{20.0, -75.0}, {50.0, -85.0}, {20.0, -95.0}, {20.0, -75.0}}, Smooth.None), Line(true, {0.0, 0.0}, 0.0, {{55.0, -85.0}, {-60.0, -85.0}}, {0, 128, 255}, LinePattern.Solid, 0.25, {Arrow.None, Arrow.None}, 3.0, Smooth.None), Text(true, {0.0, 0.0}, 0.0, {0, 0, 0}, {0, 0, 0}, LinePattern.Solid, FillPattern.None, 0.25, {{-149.0, -114.0}, {151.0, -154.0}}, "%name", 0.0, {0, 0, 255}, "", {}, TextAlignment.Center), Ellipse(false, {0.0, 0.0}, 0.0, {0, 0, 0}, {0, 0, 0}, LinePattern.Solid, FillPattern.Solid, 0.25, {{-110.0, 26.0}, {-90.0, -24.0}}, 0.0, 360.0, EllipseClosure.Chord), Ellipse(false, {0.0, 0.0}, 0.0, {0, 0, 0}, {0, 0, 0}, LinePattern.Solid, FillPattern.Solid, 0.25, {{90.0, 25.0}, {110.0, -25.0}}, 0.0, 360.0, EllipseClosure.Chord)}}
// Evaluating: getErrorString()
// ""
// Evaluating: getIconAnnotation(Modelica.Fluid.Sources.Boundary_pT)
// {-100.0,-100.0,100.0,100.0,false,-,-,, {Ellipse(true, {0.0, 0.0}, 0.0, {0, 0, 0}, {0, 127, 255}, LinePattern.Solid, FillPattern.Sphere, 0.25, {{-100.0, 100.0}, {100.0, -100.0}}, 0.0, 360.0, EllipseClosure.Chord), Text(true, {0.0, 0.0}, 0.0, {0, 0, 0}, {0, 0, 0}, LinePattern.Solid, FillPattern.None, 0.25, {{-150.0, 120.0}, {150.0, 160.0}}, "%name", 0.0, {0, 0, 255}, "", {}, TextAlignment.Center), Line(false, {0.0, 0.0}, 0.0, {{-100.0, 80.0}, {-58.0, 80.0}}, {0, 0, 255}, LinePattern.Solid, 0.25, {Arrow.None, Arrow.None}, 3.0, Smooth.None), Line(false, {0.0, 0.0}, 0.0, {{-100.0, 40.0}, {-92.0, 40.0}}, {0, 0, 255}, LinePattern.Solid, 0.25, {Arrow.None, Arrow.None}, 3.0, Smooth.None), Line(false, {0.0, 0.0}, 0.0, {{-100.0, -40.0}, {-92.0, -40.0}}, {0, 0, 255}, LinePattern.Solid, 0.25, {Arrow.None, Arrow.None}, 3.0, Smooth.None), Line(false, {0.0, 0.0}, 0.0, {{-100.0, -80.0}, {-60.0, -80.0}}, {0, 0, 255}, LinePattern.Solid, 0.25, {Arrow.None, Arrow.None}, 3.0, Smooth.None), Text(false, {0.0, 0.0}, 0.0, {0, 0, 0}, {0, 0, 0}, LinePattern.Solid, FillPattern.None, 0.25, {{-152.0, 134.0}, {-68.0, 94.0}}, "p", 0.0, {-1, -1, -1}, "", {}, TextAlignment.Center), Text(false, {0.0, 0.0}, 0.0, {0, 0, 0}, {0, 0, 0}, LinePattern.Solid, FillPattern.None, 0.25, {{-164.0, 4.0}, {-62.0, -36.0}}, "X", 0.0, {-1, -1, -1}, "", {}, TextAlignment.Center), Text(false, {0.0, 0.0}, 0.0, {0, 0, 0}, {0, 0, 0}, LinePattern.Solid, FillPattern.None, 0.25, {{-164.0, -90.0}, {-62.0, -130.0}}, "C", 0.0, {-1, -1, -1}, "", {}, TextAlignment.Center), Text(false, {0.0, 0.0}, 0.0, {0, 0, 0}, {0, 0, 0}, LinePattern.Solid, FillPattern.None, 0.25, {{-162.0, 34.0}, {-60.0, -6.0}}, "T", 0.0, {-1, -1, -1}, "", {}, TextAlignment.Center)}}
// Evaluating: getErrorString()
// ""
// Evaluating: getIconAnnotation(Modelica.Fluid.Sources.MassFlowSource_T)
// {-100.0,-100.0,100.0,100.0,true,-,-,, {Rectangle(true, {0.0, 0.0}, 0.0, {0, 0, 0}, {0, 127, 255}, LinePattern.Solid, FillPattern.HorizontalCylinder, 0.25, BorderPattern.None, {{35.0, 45.0}, {100.0, -45.0}}, 0.0), Ellipse(true, {0.0, 0.0}, 0.0, {0, 0, 255}, {255, 255, 255}, LinePattern.Solid, FillPattern.Solid, 0.25, {{-100.0, 80.0}, {60.0, -80.0}}, 0.0, 360.0, EllipseClosure.Chord), Polygon(true, {0.0, 0.0}, 0.0, {0, 0, 255}, {0, 0, 255}, LinePattern.Solid, FillPattern.Solid, 0.25, {{-60.0, 70.0}, {60.0, 0.0}, {-60.0, -68.0}, {-60.0, 70.0}}, Smooth.None), Text(true, {0.0, 0.0}, 0.0, {0, 0, 0}, {0, 0, 0}, LinePattern.Solid, FillPattern.None, 0.25, {{-54.0, 32.0}, {16.0, -30.0}}, "m", 0.0, {255, 0, 0}, "", {}, TextAlignment.Center), Text(true, {0.0, 0.0}, 0.0, {0, 0, 0}, {0, 0, 0}, LinePattern.Solid, FillPattern.None, 0.25, {{-150.0, 130.0}, {150.0, 170.0}}, "%name", 0.0, {0, 0, 255}, "", {}, TextAlignment.Center), Ellipse(true, {0.0, 0.0}, 0.0, {255, 0, 0}, {255, 0, 0}, LinePattern.Solid, FillPattern.Solid, 0.25, {{-26.0, 30.0}, {-18.0, 22.0}}, 0.0, 360.0, EllipseClosure.Chord), Text(false, {0.0, 0.0}, 0.0, {0, 0, 0}, {0, 0, 0}, LinePattern.Solid, FillPattern.None, 0.25, {{-185.0, 132.0}, {-45.0, 100.0}}, "m_flow", 0.0, {-1, -1, -1}, "", {}, TextAlignment.Center), Text(false, {0.0, 0.0}, 0.0, {0, 0, 0}, {0, 0, 0}, LinePattern.Solid, FillPattern.None, 0.25, {{-111.0, 71.0}, {-71.0, 37.0}}, "T", 0.0, {-1, -1, -1}, "", {}, TextAlignment.Center), Text(false, {0.0, 0.0}, 0.0, {0, 0, 0}, {0, 0, 0}, LinePattern.Solid, FillPattern.None, 0.25, {{-153.0, -44.0}, {-33.0, -72.0}}, "X", 0.0, {-1, -1, -1}, "", {}, TextAlignment.Center), Text(false, {0.0, 0.0}, 0.0, {0, 0, 0}, {0, 0, 0}, LinePattern.Solid, FillPattern.None, 0.25, {{-155.0, -98.0}, {-35.0, -126.0}}, "C", 0.0, {-1, -1, -1}, "", {}, TextAlignment.Center)}}
// Evaluating: getErrorString()
// ""
// endResult
