// name:     Splitter5f
// keywords: extraction algorithm
// status:   correct
// depends: ./NewDataReconciliationSimpleTests/resources/NewDataReconciliationSimpleTests.Splitter5f_Inputs.csv
// cflags: -d=-newInst


setCommandLineOptions("--preOptModules+=dataReconciliation");
getErrorString();

loadFile("NewDataReconciliationSimpleTests/package.mo");
getErrorString();

simulate(NewDataReconciliationSimpleTests.Splitter5f, simflags="-reconcile -sx=./NewDataReconciliationSimpleTests/resources/NewDataReconciliationSimpleTests.Splitter5f_Inputs.csv -eps=0.0023 -lv=LOG_JAC");
getErrorString();


// Result:
// true
// ""
// true
// "Notification: Automatically loaded package Modelica 3.2.3 due to uses annotation.
// Notification: Automatically loaded package Complex 3.2.3 due to uses annotation.
// Notification: Automatically loaded package ModelicaServices 3.2.3 due to uses annotation.
// Notification: Automatically loaded package ThermoSysPro 3.2 due to uses annotation.
// "
//
// ModelInfo: NewDataReconciliationSimpleTests.Splitter5f
// ==========================================================================
//
//
// OrderedVariables (48)
// ========================================
// 1: T3_h:VARIABLE()  type: Real
// 2: T2_h:VARIABLE()  type: Real
// 3: T1_h:VARIABLE()  type: Real
// 4: V_h5:VARIABLE()  type: Real
// 5: V_h4:VARIABLE()  type: Real
// 6: V_h3:VARIABLE()  type: Real
// 7: V_h2:VARIABLE()  type: Real
// 8: V_h1:VARIABLE()  type: Real
// 9: V_h:VARIABLE()  type: Real
// 10: V_P3:VARIABLE()  type: Real
// 11: V_P2:VARIABLE()  type: Real
// 12: V_P1:VARIABLE()  type: Real
// 13: P:VARIABLE()  type: Real
// 14: T3_Q2:VARIABLE()  type: Real
// 15: T3_Q1:VARIABLE()  type: Real
// 16: T2_Q2:VARIABLE()  type: Real
// 17: T2_Q1:VARIABLE()  type: Real
// 18: T1_Q2:VARIABLE()  type: Real
// 19: T1_Q1:VARIABLE()  type: Real
// 20: V_Q5:VARIABLE()  type: Real
// 21: V_Q4:VARIABLE()  type: Real
// 22: V_Q3:VARIABLE()  type: Real
// 23: V_Q2:VARIABLE()  type: Real
// 24: V_Q1:VARIABLE()  type: Real
// 25: T3_P2:VARIABLE()  type: Real
// 26: T3_P1:VARIABLE()  type: Real
// 27: T2_P2:VARIABLE()  type: Real
// 28: T2_P1:VARIABLE()  type: Real
// 29: T1_P2:VARIABLE()  type: Real
// 30: T1_P1:VARIABLE()  type: Real
// 31: Q05:VARIABLE()  type: Real
// 32: Q04:VARIABLE()  type: Real
// 33: h03:VARIABLE()  type: Real
// 34: h02:VARIABLE()  type: Real
// 35: h01:VARIABLE()  type: Real
// 36: Q03:VARIABLE()  type: Real
// 37: Q02:VARIABLE()  type: Real
// 38: P01:VARIABLE()  type: Real
// 39: P3:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 40: P2:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 41: P1:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 42: T:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 43: T3:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 44: T2:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 45: T1:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 46: Q3:VARIABLE(start = 1.0 uncertain=Uncertainty.refine)  type: Real
// 47: Q2:VARIABLE(start = 1.0 uncertain=Uncertainty.refine)  type: Real
// 48: Q1:VARIABLE(start = 2.0 uncertain=Uncertainty.refine)  type: Real
//
//
// OrderedEquation (48, 48)
// ========================================
// 1/1 (1): P01 = 10.0   [binding |0|0|0|0|]
// 2/2 (1): Q02 = 1.0   [binding |0|0|0|0|]
// 3/3 (1): Q03 = 1.0   [binding |0|0|0|0|]
// 4/4 (1): h01 = 100000.0   [binding |0|0|0|0|]
// 5/5 (1): h02 = 100000.0   [binding |0|0|0|0|]
// 6/6 (1): h03 = 100000.0   [binding |0|0|0|0|]
// 7/7 (1): Q04 = 0.0   [dynamic |0|0|0|0|]
// 8/8 (1): V_h4 = 100000.0   [dynamic |0|0|0|0|]
// 9/9 (1): Q05 = 0.0   [dynamic |0|0|0|0|]
// 10/10 (1): V_h5 = 100000.0   [dynamic |0|0|0|0|]
// 11/11 (1): V_Q4 = Q04   [dynamic |0|0|0|0|]
// 12/12 (1): V_Q5 = Q05   [dynamic |0|0|0|0|]
// 13/13 (1): T1_P1 = P01   [dynamic |0|0|0|0|]
// 14/14 (1): T2_Q2 = Q02   [dynamic |0|0|0|0|]
// 15/15 (1): T3_Q2 = Q03   [dynamic |0|0|0|0|]
// 16/16 (1): T1_P1 - T1_P2 = Q1 ^ 2.0   [dynamic |0|0|0|0|]
// 17/17 (1): T2_P1 - T2_P2 = Q2 ^ 2.0   [dynamic |0|0|0|0|]
// 18/18 (1): T3_P1 - T3_P2 = Q3 ^ 2.0   [dynamic |0|0|0|0|]
// 19/19 (1): V_Q1 = V_Q2 + V_Q3 + V_Q4 + V_Q5   [dynamic |0|0|0|0|]
// 20/20 (1): V_Q1 = T1_Q2   [dynamic |0|0|0|0|]
// 21/21 (1): T1_Q2 = Q1   [dynamic |0|0|0|0|]
// 22/22 (1): V_Q2 = T2_Q1   [dynamic |0|0|0|0|]
// 23/23 (1): T2_Q1 = Q2   [dynamic |0|0|0|0|]
// 24/24 (1): V_Q3 = T3_Q1   [dynamic |0|0|0|0|]
// 25/25 (1): T3_Q1 = Q3   [dynamic |0|0|0|0|]
// 26/26 (1): T1_P2 = V_P1   [dynamic |0|0|0|0|]
// 27/27 (1): V_P1 = P   [dynamic |0|0|0|0|]
// 28/28 (1): T2_P1 = V_P2   [dynamic |0|0|0|0|]
// 29/29 (1): V_P2 = P   [dynamic |0|0|0|0|]
// 30/30 (1): T3_P1 = V_P3   [dynamic |0|0|0|0|]
// 31/31 (1): V_P3 = P   [dynamic |0|0|0|0|]
// 32/32 (1): T1_Q1 = Q1   [dynamic |0|0|0|0|]
// 33/33 (1): T2_Q2 = Q2   [dynamic |0|0|0|0|]
// 34/34 (1): T3_Q2 = Q3   [dynamic |0|0|0|0|]
// 35/35 (1): 0.0 = V_h1 * V_Q1 + W + (-V_h4) * V_Q4 - V_h3 * V_Q3 - V_h2 * V_Q2 - V_h5 * V_Q5   [dynamic |0|0|0|0|]
// 36/36 (1): V_h1 = T1_h   [dynamic |0|0|0|0|]
// 37/37 (1): V_h2 = T2_h   [dynamic |0|0|0|0|]
// 38/38 (1): V_h3 = T3_h   [dynamic |0|0|0|0|]
// 39/39 (1): T1_h = h01   [dynamic |0|0|0|0|]
// 40/40 (1): T2_h = V_h   [dynamic |0|0|0|0|]
// 41/41 (1): T3_h = V_h   [dynamic |0|0|0|0|]
// 42/42 (1): T1_h = cp * T1 + b * P1   [dynamic |0|0|0|0|]
// 43/43 (1): T2_h = cp * T2 + b * P2   [dynamic |0|0|0|0|]
// 44/44 (1): T3_h = cp * T3 + b * P3   [dynamic |0|0|0|0|]
// 45/45 (1): V_h = cp * T + b * P   [dynamic |0|0|0|0|]
// 46/46 (1): P1 = 0.5 * (T1_P1 + T1_P2)   [dynamic |0|0|0|0|]
// 47/47 (1): P2 = 0.5 * (T2_P1 + T2_P2)   [dynamic |0|0|0|0|]
// 48/48 (1): P3 = 0.5 * (T3_P1 + T3_P2)   [dynamic |0|0|0|0|]
//
// Matching
// ========================================
// 48 variables and equations
// var 1 is solved in eqn 41
// var 2 is solved in eqn 37
// var 3 is solved in eqn 39
// var 4 is solved in eqn 10
// var 5 is solved in eqn 8
// var 6 is solved in eqn 38
// var 7 is solved in eqn 35
// var 8 is solved in eqn 36
// var 9 is solved in eqn 40
// var 10 is solved in eqn 31
// var 11 is solved in eqn 29
// var 12 is solved in eqn 26
// var 13 is solved in eqn 27
// var 14 is solved in eqn 15
// var 15 is solved in eqn 25
// var 16 is solved in eqn 14
// var 17 is solved in eqn 23
// var 18 is solved in eqn 20
// var 19 is solved in eqn 32
// var 20 is solved in eqn 12
// var 21 is solved in eqn 11
// var 22 is solved in eqn 24
// var 23 is solved in eqn 22
// var 24 is solved in eqn 19
// var 25 is solved in eqn 18
// var 26 is solved in eqn 30
// var 27 is solved in eqn 17
// var 28 is solved in eqn 28
// var 29 is solved in eqn 16
// var 30 is solved in eqn 13
// var 31 is solved in eqn 9
// var 32 is solved in eqn 7
// var 33 is solved in eqn 6
// var 34 is solved in eqn 5
// var 35 is solved in eqn 4
// var 36 is solved in eqn 3
// var 37 is solved in eqn 2
// var 38 is solved in eqn 1
// var 39 is solved in eqn 48
// var 40 is solved in eqn 47
// var 41 is solved in eqn 46
// var 42 is solved in eqn 45
// var 43 is solved in eqn 44
// var 44 is solved in eqn 43
// var 45 is solved in eqn 42
// var 46 is solved in eqn 34
// var 47 is solved in eqn 33
// var 48 is solved in eqn 21
//
// Standard BLT of the original model:(48)
// ============================================================
//
// 48: Q1: (21/21): (1): T1_Q2 = Q1
// 47: Q2: (33/33): (1): T2_Q2 = Q2
// 46: Q3: (34/34): (1): T3_Q2 = Q3
// 45: T1: (42/42): (1): T1_h = cp * T1 + b * P1
// 44: T2: (43/43): (1): T2_h = cp * T2 + b * P2
// 43: T3: (44/44): (1): T3_h = cp * T3 + b * P3
// 42: T: (45/45): (1): V_h = cp * T + b * P
// 41: P1: (46/46): (1): P1 = 0.5 * (T1_P1 + T1_P2)
// 40: P2: (47/47): (1): P2 = 0.5 * (T2_P1 + T2_P2)
// 39: P3: (48/48): (1): P3 = 0.5 * (T3_P1 + T3_P2)
// 38: P01: (1/1): (1): P01 = 10.0
// 37: Q02: (2/2): (1): Q02 = 1.0
// 36: Q03: (3/3): (1): Q03 = 1.0
// 35: h01: (4/4): (1): h01 = 100000.0
// 34: h02: (5/5): (1): h02 = 100000.0
// 33: h03: (6/6): (1): h03 = 100000.0
// 32: Q04: (7/7): (1): Q04 = 0.0
// 31: Q05: (9/9): (1): Q05 = 0.0
// 30: T1_P1: (13/13): (1): T1_P1 = P01
// 29: T1_P2: (16/16): (1): T1_P1 - T1_P2 = Q1 ^ 2.0
// 28: T2_P1: (28/28): (1): T2_P1 = V_P2
// 27: T2_P2: (17/17): (1): T2_P1 - T2_P2 = Q2 ^ 2.0
// 26: T3_P1: (30/30): (1): T3_P1 = V_P3
// 25: T3_P2: (18/18): (1): T3_P1 - T3_P2 = Q3 ^ 2.0
// 24: V_Q1: (19/19): (1): V_Q1 = V_Q2 + V_Q3 + V_Q4 + V_Q5
// 23: V_Q2: (22/22): (1): V_Q2 = T2_Q1
// 22: V_Q3: (24/24): (1): V_Q3 = T3_Q1
// 21: V_Q4: (11/11): (1): V_Q4 = Q04
// 20: V_Q5: (12/12): (1): V_Q5 = Q05
// 19: T1_Q1: (32/32): (1): T1_Q1 = Q1
// 18: T1_Q2: (20/20): (1): V_Q1 = T1_Q2
// 17: T2_Q1: (23/23): (1): T2_Q1 = Q2
// 16: T2_Q2: (14/14): (1): T2_Q2 = Q02
// 15: T3_Q1: (25/25): (1): T3_Q1 = Q3
// 14: T3_Q2: (15/15): (1): T3_Q2 = Q03
// 13: P: (27/27): (1): V_P1 = P
// 12: V_P1: (26/26): (1): T1_P2 = V_P1
// 11: V_P2: (29/29): (1): V_P2 = P
// 10: V_P3: (31/31): (1): V_P3 = P
// 9: V_h: (40/40): (1): T2_h = V_h
// 8: V_h1: (36/36): (1): V_h1 = T1_h
// 7: V_h2: (35/35): (1): 0.0 = V_h1 * V_Q1 + W + (-V_h4) * V_Q4 - V_h3 * V_Q3 - V_h2 * V_Q2 - V_h5 * V_Q5
// 6: V_h3: (38/38): (1): V_h3 = T3_h
// 5: V_h4: (8/8): (1): V_h4 = 100000.0
// 4: V_h5: (10/10): (1): V_h5 = 100000.0
// 3: T1_h: (39/39): (1): T1_h = h01
// 2: T2_h: (37/37): (1): V_h2 = T2_h
// 1: T3_h: (41/41): (1): T3_h = V_h
//
//
// Variables of interest (10)
// ========================================
// 1: P3:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 2: P2:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 3: P1:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 4: T:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 5: T3:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 6: T2:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 7: T1:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 8: Q3:VARIABLE(start = 1.0 uncertain=Uncertainty.refine)  type: Real
// 9: Q2:VARIABLE(start = 1.0 uncertain=Uncertainty.refine)  type: Real
// 10: Q1:VARIABLE(start = 2.0 uncertain=Uncertainty.refine)  type: Real
//
//
// Boundary conditions (6)
// ========================================
// 1: h03:VARIABLE()  type: Real
// 2: h02:VARIABLE()  type: Real
// 3: h01:VARIABLE()  type: Real
// 4: Q03:VARIABLE()  type: Real
// 5: Q02:VARIABLE()  type: Real
// 6: P01:VARIABLE()  type: Real
//
//
// Binding equations:(6)
// ============================================================
//
// 33: h03: (6/6): (1): h03 = 100000.0
// 34: h02: (5/5): (1): h02 = 100000.0
// 35: h01: (4/4): (1): h01 = 100000.0
// 36: Q03: (3/3): (1): Q03 = 1.0
// 37: Q02: (2/2): (1): Q02 = 1.0
// 38: P01: (1/1): (1): P01 = 10.0
//
//
// E-BLT: equations that compute the variables of interest:(10)
// ============================================================
//
// 39: P3: (48/48): (1): P3 = 0.5 * (T3_P1 + T3_P2)
// 40: P2: (47/47): (1): P2 = 0.5 * (T2_P1 + T2_P2)
// 41: P1: (46/46): (1): P1 = 0.5 * (T1_P1 + T1_P2)
// 42: T: (45/45): (1): V_h = cp * T + b * P
// 43: T3: (44/44): (1): T3_h = cp * T3 + b * P3
// 44: T2: (43/43): (1): T2_h = cp * T2 + b * P2
// 45: T1: (42/42): (1): T1_h = cp * T1 + b * P1
// 46: Q3: (34/34): (1): T3_Q2 = Q3
// 47: Q2: (33/33): (1): T2_Q2 = Q2
// 48: Q1: (21/21): (1): T1_Q2 = Q1
//
//
// Extracting SET-C and SET-S from E-BLT
// Procedure is applied on each equation in the E-BLT
// ==========================================================================
// >>>39: P3: (48/48): (1): P3 = 0.5 * (T3_P1 + T3_P2)
// 26: T3_P1: (30/30): (1): T3_P1 = V_P3
// 10: V_P3: (31/31): (1): V_P3 = P
// 13: P: (27/27): (1): V_P1 = P
// 12: V_P1: (26/26): (1): T1_P2 = V_P1
// 29: T1_P2: (16/16): (1): T1_P1 - T1_P2 = Q1 ^ 2.0
// 30: T1_P1: (13/13): (1): T1_P1 = P01
// P01 is a boundary condition ---> exit procedure
// Procedure failed
//
// >>>40: P2: (47/47): (1): P2 = 0.5 * (T2_P1 + T2_P2)
// 28: T2_P1: (28/28): (1): T2_P1 = V_P2
// 11: V_P2: (29/29): (1): V_P2 = P
// 13: P: (27/27): (1): V_P1 = P
// 12: V_P1: (26/26): (1): T1_P2 = V_P1
// 29: T1_P2: (16/16): (1): T1_P1 - T1_P2 = Q1 ^ 2.0
// 30: T1_P1: (13/13): (1): T1_P1 = P01
// P01 is a boundary condition ---> exit procedure
// Procedure failed
//
// >>>41: P1: (46/46): (1): P1 = 0.5 * (T1_P1 + T1_P2)
// 30: T1_P1: (13/13): (1): T1_P1 = P01
// P01 is a boundary condition ---> exit procedure
// Procedure failed
//
// >>>42: T: (45/45): (1): V_h = cp * T + b * P
// 13: P: (27/27): (1): V_P1 = P
// 12: V_P1: (26/26): (1): T1_P2 = V_P1
// 29: T1_P2: (16/16): (1): T1_P1 - T1_P2 = Q1 ^ 2.0
// 30: T1_P1: (13/13): (1): T1_P1 = P01
// P01 is a boundary condition ---> exit procedure
// Procedure failed
//
// >>>43: T3: (44/44): (1): T3_h = cp * T3 + b * P3
// 1: T3_h: (41/41): (1): T3_h = V_h
// 9: V_h: (40/40): (1): T2_h = V_h
// 2: T2_h: (37/37): (1): V_h2 = T2_h
// 7: V_h2: (35/35): (1): 0.0 = V_h1 * V_Q1 + W + (-V_h4) * V_Q4 - V_h3 * V_Q3 - V_h2 * V_Q2 - V_h5 * V_Q5
// 4: V_h5: (10/10): (1): V_h5 = 100000.0
// 5: V_h4: (8/8): (1): V_h4 = 100000.0
// 6: V_h3: (38/38): (1): V_h3 = T3_h
// 8: V_h1: (36/36): (1): V_h1 = T1_h
// 3: T1_h: (39/39): (1): T1_h = h01
// h01 is a boundary condition ---> exit procedure
// Procedure failed
//
// >>>44: T2: (43/43): (1): T2_h = cp * T2 + b * P2
// 2: T2_h: (37/37): (1): V_h2 = T2_h
// 7: V_h2: (35/35): (1): 0.0 = V_h1 * V_Q1 + W + (-V_h4) * V_Q4 - V_h3 * V_Q3 - V_h2 * V_Q2 - V_h5 * V_Q5
// 4: V_h5: (10/10): (1): V_h5 = 100000.0
// 5: V_h4: (8/8): (1): V_h4 = 100000.0
// 6: V_h3: (38/38): (1): V_h3 = T3_h
// 1: T3_h: (41/41): (1): T3_h = V_h
// 9: V_h: (40/40): (1): T2_h = V_h
// 8: V_h1: (36/36): (1): V_h1 = T1_h
// 3: T1_h: (39/39): (1): T1_h = h01
// h01 is a boundary condition ---> exit procedure
// Procedure failed
//
// >>>45: T1: (42/42): (1): T1_h = cp * T1 + b * P1
// 3: T1_h: (39/39): (1): T1_h = h01
// h01 is a boundary condition ---> exit procedure
// Procedure failed
//
// >>>46: Q3: (34/34): (1): T3_Q2 = Q3
// 14: T3_Q2: (15/15): (1): T3_Q2 = Q03
// Q03 is a boundary condition ---> exit procedure
// Procedure failed
//
// >>>47: Q2: (33/33): (1): T2_Q2 = Q2
// 16: T2_Q2: (14/14): (1): T2_Q2 = Q02
// Q02 is a boundary condition ---> exit procedure
// Procedure failed
//
// >>>48: Q1: (21/21): (1): T1_Q2 = Q1
// 18: T1_Q2: (20/20): (1): V_Q1 = T1_Q2
// 24: V_Q1: (19/19): (1): V_Q1 = V_Q2 + V_Q3 + V_Q4 + V_Q5
// 20: V_Q5: (12/12): (1): V_Q5 = Q05
// 31: Q05: (9/9): (1): Q05 = 0.0
// 21: V_Q4: (11/11): (1): V_Q4 = Q04
// 32: Q04: (7/7): (1): Q04 = 0.0
// 22: V_Q3: (24/24): (1): V_Q3 = T3_Q1
// 15: T3_Q1: (25/25): (1): T3_Q1 = Q3
// 23: V_Q2: (22/22): (1): V_Q2 = T2_Q1
// 17: T2_Q1: (23/23): (1): T2_Q1 = Q2
// Procedure success
//
// Extraction procedure failed for iteration count: 1, re-running with modified model
// ==========================================================================
//
// OrderedVariables (48)
// ========================================
// 1: T3_h:VARIABLE()  type: Real
// 2: T2_h:VARIABLE()  type: Real
// 3: T1_h:VARIABLE()  type: Real
// 4: V_h5:VARIABLE()  type: Real
// 5: V_h4:VARIABLE()  type: Real
// 6: V_h3:VARIABLE()  type: Real
// 7: V_h2:VARIABLE()  type: Real
// 8: V_h1:VARIABLE()  type: Real
// 9: V_h:VARIABLE()  type: Real
// 10: V_P3:VARIABLE()  type: Real
// 11: V_P2:VARIABLE()  type: Real
// 12: V_P1:VARIABLE()  type: Real
// 13: P:VARIABLE()  type: Real
// 14: T3_Q2:VARIABLE()  type: Real
// 15: T3_Q1:VARIABLE()  type: Real
// 16: T2_Q2:VARIABLE()  type: Real
// 17: T2_Q1:VARIABLE()  type: Real
// 18: T1_Q2:VARIABLE()  type: Real
// 19: T1_Q1:VARIABLE()  type: Real
// 20: V_Q5:VARIABLE()  type: Real
// 21: V_Q4:VARIABLE()  type: Real
// 22: V_Q3:VARIABLE()  type: Real
// 23: V_Q2:VARIABLE()  type: Real
// 24: V_Q1:VARIABLE()  type: Real
// 25: T3_P2:VARIABLE()  type: Real
// 26: T3_P1:VARIABLE()  type: Real
// 27: T2_P2:VARIABLE()  type: Real
// 28: T2_P1:VARIABLE()  type: Real
// 29: T1_P2:VARIABLE()  type: Real
// 30: T1_P1:VARIABLE()  type: Real
// 31: Q05:VARIABLE()  type: Real
// 32: Q04:VARIABLE()  type: Real
// 33: h03:VARIABLE()  type: Real
// 34: h02:VARIABLE()  type: Real
// 35: h01:VARIABLE()  type: Real
// 36: Q03:VARIABLE()  type: Real
// 37: Q02:VARIABLE()  type: Real
// 38: P01:VARIABLE()  type: Real
// 39: P3:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 40: P2:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 41: P1:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 42: T:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 43: T3:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 44: T2:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 45: T1:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 46: Q3:VARIABLE(start = 1.0 uncertain=Uncertainty.refine)  type: Real
// 47: Q2:VARIABLE(start = 1.0 uncertain=Uncertainty.refine)  type: Real
// 48: Q1:VARIABLE(start = 2.0 uncertain=Uncertainty.refine)  type: Real
//
//
// OrderedEquation (48, 48)
// ========================================
// 1/1 (1): P3 = 0.0   [binding |0|0|0|0|]
// 2/2 (1): T3 = 0.0   [binding |0|0|0|0|]
// 3/3 (1): Q3 = 0.0   [binding |0|0|0|0|]
// 4/4 (1): Q2 = 0.0   [binding |0|0|0|0|]
// 5/5 (1): P01 = 10.0   [binding |0|0|0|0|]
// 6/6 (1): Q02 = 1.0   [binding |0|0|0|0|]
// 7/7 (1): Q03 = 1.0   [binding |0|0|0|0|]
// 8/8 (1): h01 = 100000.0   [binding |0|0|0|0|]
// 9/9 (1): h02 = 100000.0   [binding |0|0|0|0|]
// 10/10 (1): h03 = 100000.0   [binding |0|0|0|0|]
// 11/11 (1): Q04 = 0.0   [dynamic |0|0|0|0|]
// 12/12 (1): V_h4 = 100000.0   [dynamic |0|0|0|0|]
// 13/13 (1): Q05 = 0.0   [dynamic |0|0|0|0|]
// 14/14 (1): V_h5 = 100000.0   [dynamic |0|0|0|0|]
// 15/15 (1): V_Q4 = Q04   [dynamic |0|0|0|0|]
// 16/16 (1): V_Q5 = Q05   [dynamic |0|0|0|0|]
// 17/17 (1): T1_P1 - T1_P2 = Q1 ^ 2.0   [dynamic |0|0|0|0|]
// 18/18 (1): T2_P1 - T2_P2 = Q2 ^ 2.0   [dynamic |0|0|0|0|]
// 19/19 (1): T3_P1 - T3_P2 = Q3 ^ 2.0   [dynamic |0|0|0|0|]
// 20/20 (1): V_Q1 = V_Q2 + V_Q3 + V_Q4 + V_Q5   [dynamic |0|0|0|0|]
// 21/21 (1): V_Q1 = T1_Q2   [dynamic |0|0|0|0|]
// 22/22 (1): T1_Q2 = Q1   [dynamic |0|0|0|0|]
// 23/23 (1): V_Q2 = T2_Q1   [dynamic |0|0|0|0|]
// 24/24 (1): T2_Q1 = Q2   [dynamic |0|0|0|0|]
// 25/25 (1): V_Q3 = T3_Q1   [dynamic |0|0|0|0|]
// 26/26 (1): T3_Q1 = Q3   [dynamic |0|0|0|0|]
// 27/27 (1): T1_P2 = V_P1   [dynamic |0|0|0|0|]
// 28/28 (1): V_P1 = P   [dynamic |0|0|0|0|]
// 29/29 (1): T2_P1 = V_P2   [dynamic |0|0|0|0|]
// 30/30 (1): V_P2 = P   [dynamic |0|0|0|0|]
// 31/31 (1): T3_P1 = V_P3   [dynamic |0|0|0|0|]
// 32/32 (1): V_P3 = P   [dynamic |0|0|0|0|]
// 33/33 (1): T1_Q1 = Q1   [dynamic |0|0|0|0|]
// 34/34 (1): T2_Q2 = Q2   [dynamic |0|0|0|0|]
// 35/35 (1): T3_Q2 = Q3   [dynamic |0|0|0|0|]
// 36/36 (1): 0.0 = V_h1 * V_Q1 + W + (-V_h4) * V_Q4 - V_h3 * V_Q3 - V_h2 * V_Q2 - V_h5 * V_Q5   [dynamic |0|0|0|0|]
// 37/37 (1): V_h1 = T1_h   [dynamic |0|0|0|0|]
// 38/38 (1): V_h2 = T2_h   [dynamic |0|0|0|0|]
// 39/39 (1): V_h3 = T3_h   [dynamic |0|0|0|0|]
// 40/40 (1): T2_h = V_h   [dynamic |0|0|0|0|]
// 41/41 (1): T3_h = V_h   [dynamic |0|0|0|0|]
// 42/42 (1): T1_h = cp * T1 + b * P1   [dynamic |0|0|0|0|]
// 43/43 (1): T2_h = cp * T2 + b * P2   [dynamic |0|0|0|0|]
// 44/44 (1): T3_h = cp * T3 + b * P3   [dynamic |0|0|0|0|]
// 45/45 (1): V_h = cp * T + b * P   [dynamic |0|0|0|0|]
// 46/46 (1): P1 = 0.5 * (T1_P1 + T1_P2)   [dynamic |0|0|0|0|]
// 47/47 (1): P2 = 0.5 * (T2_P1 + T2_P2)   [dynamic |0|0|0|0|]
// 48/48 (1): P3 = 0.5 * (T3_P1 + T3_P2)   [dynamic |0|0|0|0|]
//
// Matching
// ========================================
// 48 variables and equations
// var 1 is solved in eqn 44
// var 2 is solved in eqn 40
// var 3 is solved in eqn 37
// var 4 is solved in eqn 14
// var 5 is solved in eqn 12
// var 6 is solved in eqn 39
// var 7 is solved in eqn 38
// var 8 is solved in eqn 36
// var 9 is solved in eqn 41
// var 10 is solved in eqn 31
// var 11 is solved in eqn 30
// var 12 is solved in eqn 28
// var 13 is solved in eqn 32
// var 14 is solved in eqn 35
// var 15 is solved in eqn 26
// var 16 is solved in eqn 34
// var 17 is solved in eqn 24
// var 18 is solved in eqn 21
// var 19 is solved in eqn 33
// var 20 is solved in eqn 16
// var 21 is solved in eqn 15
// var 22 is solved in eqn 25
// var 23 is solved in eqn 23
// var 24 is solved in eqn 20
// var 25 is solved in eqn 48
// var 26 is solved in eqn 19
// var 27 is solved in eqn 18
// var 28 is solved in eqn 29
// var 29 is solved in eqn 27
// var 30 is solved in eqn 17
// var 31 is solved in eqn 13
// var 32 is solved in eqn 11
// var 33 is solved in eqn 10
// var 34 is solved in eqn 9
// var 35 is solved in eqn 8
// var 36 is solved in eqn 7
// var 37 is solved in eqn 6
// var 38 is solved in eqn 5
// var 39 is solved in eqn 1
// var 40 is solved in eqn 47
// var 41 is solved in eqn 46
// var 42 is solved in eqn 45
// var 43 is solved in eqn 2
// var 44 is solved in eqn 43
// var 45 is solved in eqn 42
// var 46 is solved in eqn 3
// var 47 is solved in eqn 4
// var 48 is solved in eqn 22
//
// Standard BLT of the original model:(48)
// ============================================================
//
// 48: Q1: (22/22): (1): T1_Q2 = Q1
// 47: Q2: (4/4): (1): Q2 = 0.0
// 46: Q3: (3/3): (1): Q3 = 0.0
// 45: T1: (42/42): (1): T1_h = cp * T1 + b * P1
// 44: T2: (43/43): (1): T2_h = cp * T2 + b * P2
// 43: T3: (2/2): (1): T3 = 0.0
// 42: T: (45/45): (1): V_h = cp * T + b * P
// 41: P1: (46/46): (1): P1 = 0.5 * (T1_P1 + T1_P2)
// 40: P2: (47/47): (1): P2 = 0.5 * (T2_P1 + T2_P2)
// 39: P3: (1/1): (1): P3 = 0.0
// 38: P01: (5/5): (1): P01 = 10.0
// 37: Q02: (6/6): (1): Q02 = 1.0
// 36: Q03: (7/7): (1): Q03 = 1.0
// 35: h01: (8/8): (1): h01 = 100000.0
// 34: h02: (9/9): (1): h02 = 100000.0
// 33: h03: (10/10): (1): h03 = 100000.0
// 32: Q04: (11/11): (1): Q04 = 0.0
// 31: Q05: (13/13): (1): Q05 = 0.0
// 30: T1_P1: (17/17): (1): T1_P1 - T1_P2 = Q1 ^ 2.0
// 29: T1_P2: (27/27): (1): T1_P2 = V_P1
// 28: T2_P1: (29/29): (1): T2_P1 = V_P2
// 27: T2_P2: (18/18): (1): T2_P1 - T2_P2 = Q2 ^ 2.0
// 26: T3_P1: (19/19): (1): T3_P1 - T3_P2 = Q3 ^ 2.0
// 25: T3_P2: (48/48): (1): P3 = 0.5 * (T3_P1 + T3_P2)
// 24: V_Q1: (20/20): (1): V_Q1 = V_Q2 + V_Q3 + V_Q4 + V_Q5
// 23: V_Q2: (23/23): (1): V_Q2 = T2_Q1
// 22: V_Q3: (25/25): (1): V_Q3 = T3_Q1
// 21: V_Q4: (15/15): (1): V_Q4 = Q04
// 20: V_Q5: (16/16): (1): V_Q5 = Q05
// 19: T1_Q1: (33/33): (1): T1_Q1 = Q1
// 18: T1_Q2: (21/21): (1): V_Q1 = T1_Q2
// 17: T2_Q1: (24/24): (1): T2_Q1 = Q2
// 16: T2_Q2: (34/34): (1): T2_Q2 = Q2
// 15: T3_Q1: (26/26): (1): T3_Q1 = Q3
// 14: T3_Q2: (35/35): (1): T3_Q2 = Q3
// 13: P: (32/32): (1): V_P3 = P
// 12: V_P1: (28/28): (1): V_P1 = P
// 11: V_P2: (30/30): (1): V_P2 = P
// 10: V_P3: (31/31): (1): T3_P1 = V_P3
// 9: V_h: (41/41): (1): T3_h = V_h
// 8: V_h1: (36/36): (1): 0.0 = V_h1 * V_Q1 + W + (-V_h4) * V_Q4 - V_h3 * V_Q3 - V_h2 * V_Q2 - V_h5 * V_Q5
// 7: V_h2: (38/38): (1): V_h2 = T2_h
// 6: V_h3: (39/39): (1): V_h3 = T3_h
// 5: V_h4: (12/12): (1): V_h4 = 100000.0
// 4: V_h5: (14/14): (1): V_h5 = 100000.0
// 3: T1_h: (37/37): (1): V_h1 = T1_h
// 2: T2_h: (40/40): (1): T2_h = V_h
// 1: T3_h: (44/44): (1): T3_h = cp * T3 + b * P3
//
//
// Variables of interest (10)
// ========================================
// 1: P3:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 2: P2:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 3: P1:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 4: T:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 5: T3:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 6: T2:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 7: T1:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 8: Q3:VARIABLE(start = 1.0 uncertain=Uncertainty.refine)  type: Real
// 9: Q2:VARIABLE(start = 1.0 uncertain=Uncertainty.refine)  type: Real
// 10: Q1:VARIABLE(start = 2.0 uncertain=Uncertainty.refine)  type: Real
//
//
// Boundary conditions (6)
// ========================================
// 1: h03:VARIABLE()  type: Real
// 2: h02:VARIABLE()  type: Real
// 3: h01:VARIABLE()  type: Real
// 4: Q03:VARIABLE()  type: Real
// 5: Q02:VARIABLE()  type: Real
// 6: P01:VARIABLE()  type: Real
//
//
// Binding equations:(10)
// ============================================================
//
// 33: h03: (10/10): (1): h03 = 100000.0
// 34: h02: (9/9): (1): h02 = 100000.0
// 35: h01: (8/8): (1): h01 = 100000.0
// 36: Q03: (7/7): (1): Q03 = 1.0
// 37: Q02: (6/6): (1): Q02 = 1.0
// 38: P01: (5/5): (1): P01 = 10.0
// 47: Q2: (4/4): (1): Q2 = 0.0
// 46: Q3: (3/3): (1): Q3 = 0.0
// 43: T3: (2/2): (1): T3 = 0.0
// 39: P3: (1/1): (1): P3 = 0.0
//
//
// E-BLT: equations that compute the variables of interest:(6)
// ============================================================
//
// 40: P2: (47/47): (1): P2 = 0.5 * (T2_P1 + T2_P2)
// 41: P1: (46/46): (1): P1 = 0.5 * (T1_P1 + T1_P2)
// 42: T: (45/45): (1): V_h = cp * T + b * P
// 44: T2: (43/43): (1): T2_h = cp * T2 + b * P2
// 45: T1: (42/42): (1): T1_h = cp * T1 + b * P1
// 48: Q1: (22/22): (1): T1_Q2 = Q1
//
//
// Extracting SET-C and SET-S from E-BLT
// Procedure is applied on each equation in the E-BLT
// ==========================================================================
// >>>40: P2: (47/47): (1): P2 = 0.5 * (T2_P1 + T2_P2)
// 28: T2_P1: (29/29): (1): T2_P1 = V_P2
// 11: V_P2: (30/30): (1): V_P2 = P
// 13: P: (32/32): (1): V_P3 = P
// 10: V_P3: (31/31): (1): T3_P1 = V_P3
// 26: T3_P1: (19/19): (1): T3_P1 - T3_P2 = Q3 ^ 2.0
// 25: T3_P2: (48/48): (1): P3 = 0.5 * (T3_P1 + T3_P2)
// 27: T2_P2: (18/18): (1): T2_P1 - T2_P2 = Q2 ^ 2.0
// Procedure success
//
// >>>41: P1: (46/46): (1): P1 = 0.5 * (T1_P1 + T1_P2)
// 30: T1_P1: (17/17): (1): T1_P1 - T1_P2 = Q1 ^ 2.0
// 29: T1_P2: (27/27): (1): T1_P2 = V_P1
// 12: V_P1: (28/28): (1): V_P1 = P
// 13: P: (32/32): (1): V_P3 = P
// 10: V_P3: (31/31): (1): T3_P1 = V_P3
// 26: T3_P1: (19/19): (1): T3_P1 - T3_P2 = Q3 ^ 2.0
// 25: T3_P2: (48/48): (1): P3 = 0.5 * (T3_P1 + T3_P2)
// Procedure success
//
// >>>42: T: (45/45): (1): V_h = cp * T + b * P
// 13: P: (32/32): (1): V_P3 = P
// 10: V_P3: (31/31): (1): T3_P1 = V_P3
// 26: T3_P1: (19/19): (1): T3_P1 - T3_P2 = Q3 ^ 2.0
// 25: T3_P2: (48/48): (1): P3 = 0.5 * (T3_P1 + T3_P2)
// 9: V_h: (41/41): (1): T3_h = V_h
// 1: T3_h: (44/44): (1): T3_h = cp * T3 + b * P3
// Procedure success
//
// >>>44: T2: (43/43): (1): T2_h = cp * T2 + b * P2
// 2: T2_h: (40/40): (1): T2_h = V_h
// 9: V_h: (41/41): (1): T3_h = V_h
// 1: T3_h: (44/44): (1): T3_h = cp * T3 + b * P3
// Procedure success
//
// >>>45: T1: (42/42): (1): T1_h = cp * T1 + b * P1
// 3: T1_h: (37/37): (1): V_h1 = T1_h
// 8: V_h1: (36/36): (1): 0.0 = V_h1 * V_Q1 + W + (-V_h4) * V_Q4 - V_h3 * V_Q3 - V_h2 * V_Q2 - V_h5 * V_Q5
// 4: V_h5: (14/14): (1): V_h5 = 100000.0
// 5: V_h4: (12/12): (1): V_h4 = 100000.0
// 6: V_h3: (39/39): (1): V_h3 = T3_h
// 1: T3_h: (44/44): (1): T3_h = cp * T3 + b * P3
// 7: V_h2: (38/38): (1): V_h2 = T2_h
// 2: T2_h: (40/40): (1): T2_h = V_h
// 9: V_h: (41/41): (1): T3_h = V_h
// 20: V_Q5: (16/16): (1): V_Q5 = Q05
// 31: Q05: (13/13): (1): Q05 = 0.0
// 21: V_Q4: (15/15): (1): V_Q4 = Q04
// 32: Q04: (11/11): (1): Q04 = 0.0
// 22: V_Q3: (25/25): (1): V_Q3 = T3_Q1
// 15: T3_Q1: (26/26): (1): T3_Q1 = Q3
// 23: V_Q2: (23/23): (1): V_Q2 = T2_Q1
// 17: T2_Q1: (24/24): (1): T2_Q1 = Q2
// 24: V_Q1: (20/20): (1): V_Q1 = V_Q2 + V_Q3 + V_Q4 + V_Q5
// Procedure success
//
// >>>48: Q1: (22/22): (1): T1_Q2 = Q1
// 18: T1_Q2: (21/21): (1): V_Q1 = T1_Q2
// 24: V_Q1: (20/20): (1): V_Q1 = V_Q2 + V_Q3 + V_Q4 + V_Q5
// 20: V_Q5: (16/16): (1): V_Q5 = Q05
// 31: Q05: (13/13): (1): Q05 = 0.0
// 21: V_Q4: (15/15): (1): V_Q4 = Q04
// 32: Q04: (11/11): (1): Q04 = 0.0
// 22: V_Q3: (25/25): (1): V_Q3 = T3_Q1
// 15: T3_Q1: (26/26): (1): T3_Q1 = Q3
// 23: V_Q2: (23/23): (1): V_Q2 = T2_Q1
// 17: T2_Q1: (24/24): (1): T2_Q1 = Q2
// Procedure success
//
// Extraction procedure is successfully completed in iteration count: 2
// ==========================================================================
//
// Final set of equations after extraction algorithm
// ==========================================================================
// SET_C: {47, 46, 45, 43, 42, 22}
// SET_S: {18, 48, 19, 31, 32, 30, 29, 28, 27, 17, 44, 41, 40, 20, 24, 23, 26, 25, 11, 15, 13, 16, 38, 39, 12, 14, 36, 37, 21}
//
//
// SET_C (6, 6)
// ========================================
// 1/1 (1): P2 = 0.5 * (T2_P1 + T2_P2)   [dynamic |0|0|0|0|]
// 2/2 (1): P1 = 0.5 * (T1_P1 + T1_P2)   [dynamic |0|0|0|0|]
// 3/3 (1): V_h = cp * T + b * P   [dynamic |0|0|0|0|]
// 4/4 (1): T2_h = cp * T2 + b * P2   [dynamic |0|0|0|0|]
// 5/5 (1): T1_h = cp * T1 + b * P1   [dynamic |0|0|0|0|]
// 6/6 (1): T1_Q2 = Q1   [dynamic |0|0|0|0|]
//
//
// SET_S (29, 29)
// ========================================
// 1/1 (1): T2_P1 - T2_P2 = Q2 ^ 2.0   [dynamic |0|0|0|0|]
// 2/2 (1): P3 = 0.5 * (T3_P1 + T3_P2)   [dynamic |0|0|0|0|]
// 3/3 (1): T3_P1 - T3_P2 = Q3 ^ 2.0   [dynamic |0|0|0|0|]
// 4/4 (1): T3_P1 = V_P3   [dynamic |0|0|0|0|]
// 5/5 (1): V_P3 = P   [dynamic |0|0|0|0|]
// 6/6 (1): V_P2 = P   [dynamic |0|0|0|0|]
// 7/7 (1): T2_P1 = V_P2   [dynamic |0|0|0|0|]
// 8/8 (1): V_P1 = P   [dynamic |0|0|0|0|]
// 9/9 (1): T1_P2 = V_P1   [dynamic |0|0|0|0|]
// 10/10 (1): T1_P1 - T1_P2 = Q1 ^ 2.0   [dynamic |0|0|0|0|]
// 11/11 (1): T3_h = cp * T3 + b * P3   [dynamic |0|0|0|0|]
// 12/12 (1): T3_h = V_h   [dynamic |0|0|0|0|]
// 13/13 (1): T2_h = V_h   [dynamic |0|0|0|0|]
// 14/14 (1): V_Q1 = V_Q2 + V_Q3 + V_Q4 + V_Q5   [dynamic |0|0|0|0|]
// 15/15 (1): T2_Q1 = Q2   [dynamic |0|0|0|0|]
// 16/16 (1): V_Q2 = T2_Q1   [dynamic |0|0|0|0|]
// 17/17 (1): T3_Q1 = Q3   [dynamic |0|0|0|0|]
// 18/18 (1): V_Q3 = T3_Q1   [dynamic |0|0|0|0|]
// 19/19 (1): Q04 = 0.0   [dynamic |0|0|0|0|]
// 20/20 (1): V_Q4 = Q04   [dynamic |0|0|0|0|]
// 21/21 (1): Q05 = 0.0   [dynamic |0|0|0|0|]
// 22/22 (1): V_Q5 = Q05   [dynamic |0|0|0|0|]
// 23/23 (1): V_h2 = T2_h   [dynamic |0|0|0|0|]
// 24/24 (1): V_h3 = T3_h   [dynamic |0|0|0|0|]
// 25/25 (1): V_h4 = 100000.0   [dynamic |0|0|0|0|]
// 26/26 (1): V_h5 = 100000.0   [dynamic |0|0|0|0|]
// 27/27 (1): 0.0 = V_h1 * V_Q1 + W + (-V_h4) * V_Q4 - V_h3 * V_Q3 - V_h2 * V_Q2 - V_h5 * V_Q5   [dynamic |0|0|0|0|]
// 28/28 (1): V_h1 = T1_h   [dynamic |0|0|0|0|]
// 29/29 (1): V_Q1 = T1_Q2   [dynamic |0|0|0|0|]
//
//
// Unknown variables in SET_S (29)
// ========================================
//
// 1: T2_P2 type: Real
// 2: T3_P2 type: Real
// 3: T3_P1 type: Real
// 4: V_P3 type: Real
// 5: T2_P1 type: Real
// 6: V_P2 type: Real
// 7: P type: Real
// 8: V_P1 type: Real
// 9: T1_P1 type: Real
// 10: T1_P2 type: Real
// 11: V_h type: Real
// 12: T2_Q1 type: Real
// 13: T3_Q1 type: Real
// 14: Q04 type: Real
// 15: Q05 type: Real
// 16: T2_h type: Real
// 17: T3_h type: Real
// 18: V_Q2 type: Real
// 19: V_Q3 type: Real
// 20: V_Q4 type: Real
// 21: V_Q5 type: Real
// 22: V_h2 type: Real
// 23: V_h3 type: Real
// 24: V_h4 type: Real
// 25: V_h5 type: Real
// 26: V_h1 type: Real
// 27: T1_h type: Real
// 28: V_Q1 type: Real
// 29: T1_Q2 type: Real
//
//
// Parameters in SET_S (3)
// ========================================
// 1: W:PARAM()  = 1000000.0  type: Real
// 2: b:PARAM()  = -0.01  type: Real
// 3: cp:PARAM()  = 5000.0  type: Real
//
//
//
// Automatic Verification Steps of DataReconciliation Algorithm
// ==========================================================================
//
// knownVariables:{39, 40, 41, 42, 43, 44, 45, 46, 47, 48} (10)
// ========================================
// 1: P3:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 2: P2:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 3: P1:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 4: T:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 5: T3:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 6: T2:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 7: T1:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 8: Q3:VARIABLE(start = 1.0 uncertain=Uncertainty.refine)  type: Real
// 9: Q2:VARIABLE(start = 1.0 uncertain=Uncertainty.refine)  type: Real
// 10: Q1:VARIABLE(start = 2.0 uncertain=Uncertainty.refine)  type: Real
//
// -SET_C:{47, 46, 45, 43, 42, 22}
// -SET_S:{18, 48, 19, 31, 32, 30, 29, 28, 27, 17, 44, 41, 40, 20, 24, 23, 26, 25, 11, 15, 13, 16, 38, 39, 12, 14, 36, 37, 21}
//
// Condition-1 "SET_C and SET_S must not have no equations in common"
// ==========================================================================
// -Passed
//
// Condition-2 "All variables of interest must be involved in SET_C or SET_S"
// ==========================================================================
// -Passed
//
// -SET_C has known variables:{48, 41, 45, 40, 44, 42} (6)
// ========================================
// 1: Q1:VARIABLE(start = 2.0 uncertain=Uncertainty.refine)  type: Real
// 2: P1:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 3: T1:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 4: P2:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 5: T2:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 6: T:VARIABLE(uncertain=Uncertainty.refine)  type: Real
//
//
// -SET_S has known variables:{47, 46, 43, 39} (4)
// ========================================
// 1: Q2:VARIABLE(start = 1.0 uncertain=Uncertainty.refine)  type: Real
// 2: Q3:VARIABLE(start = 1.0 uncertain=Uncertainty.refine)  type: Real
// 3: T3:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 4: P3:VARIABLE(uncertain=Uncertainty.refine)  type: Real
//
// Condition-3 "SET_C equations must be strictly less than Variable of Interest"
// ==========================================================================
// -Passed
// -SET_C contains:6 equations < 10 known variables
//
// Condition-4 "SET_S should contain all intermediate variables involved in SET_C"
// ==========================================================================
//
// -SET_C has intermediate variables:{18, 3, 2, 9, 13, 29, 30, 27, 28} (9)
// ========================================
// 1: T1_Q2:VARIABLE()  type: Real
// 2: T1_h:VARIABLE()  type: Real
// 3: T2_h:VARIABLE()  type: Real
// 4: V_h:VARIABLE()  type: Real
// 5: P:VARIABLE()  type: Real
// 6: T1_P2:VARIABLE()  type: Real
// 7: T1_P1:VARIABLE()  type: Real
// 8: T2_P2:VARIABLE()  type: Real
// 9: T2_P1:VARIABLE()  type: Real
//
//
// -SET_S has intermediate variables involved in SET_C:{18, 3, 2, 9, 13, 29, 30, 27, 28} (9)
// ========================================
// 1: T1_Q2:VARIABLE()  type: Real
// 2: T1_h:VARIABLE()  type: Real
// 3: T2_h:VARIABLE()  type: Real
// 4: V_h:VARIABLE()  type: Real
// 5: P:VARIABLE()  type: Real
// 6: T1_P2:VARIABLE()  type: Real
// 7: T1_P1:VARIABLE()  type: Real
// 8: T2_P2:VARIABLE()  type: Real
// 9: T2_P1:VARIABLE()  type: Real
//
// -Passed
//
// Condition-5 "SET_S should be square"
// ==========================================================================
// -Passed
//  Set_S has 29 equations and 29 variables
//
// record SimulationResult
//     resultFile = "econcile",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'NewDataReconciliationSimpleTests.Splitter5f', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-reconcile -sx=./NewDataReconciliationSimpleTests/resources/NewDataReconciliationSimpleTests.Splitter5f_Inputs.csv -eps=0.0023 -lv=LOG_JAC'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// stdout            | info    | DataReconciliation Starting!
// stdout            | info    | NewDataReconciliationSimpleTests.Splitter5f
// stdout            | info    | DataReconciliation Completed!
// "
// end SimulationResult;
// "Warning: Requested package ThermoSysPro of version default, but this package was already loaded with version 3.2. OpenModelica cannot reason about compatibility between the two packages since they are not semantic versions.
// "
// endResult
