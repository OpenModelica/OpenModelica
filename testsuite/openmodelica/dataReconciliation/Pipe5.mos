// name:     Pipe5
// keywords: extraction algorithm
// status:   correct
// depends: ./NewDataReconciliationSimpleTests/resources/DataReconciliationSimpleTests.Pipe5_Inputs.csv


setCommandLineOptions("--preOptModules+=dataReconciliation");
getErrorString();

loadFile("NewDataReconciliationSimpleTests/package.mo");
getErrorString();

simulate(NewDataReconciliationSimpleTests.Pipe5, simflags="-reconcile -sx=./NewDataReconciliationSimpleTests/resources/DataReconciliationSimpleTests.Pipe5_Inputs.csv -eps=0.0023 -lv=LOG_JAC");
getErrorString();


// Result:
// true
// ""
// true
// "Notification: Automatically loaded package Modelica 3.2.3 due to uses annotation.
// Notification: Automatically loaded package Complex 3.2.3 due to uses annotation.
// Notification: Automatically loaded package ModelicaServices 3.2.3 due to uses annotation.
// Notification: Automatically loaded package ThermoSysPro 3.2 due to uses annotation.
// "
//
// ModelInfo: NewDataReconciliationSimpleTests.Pipe5
// ==========================================================================
//
//
// OrderedVariables (5)
// ========================================
// 1: y2:VARIABLE()  type: Real
// 2: y1:VARIABLE()  type: Real
// 3: Q2:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 4: Q1:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 5: p:VARIABLE()  type: Real
//
//
// OrderedEquation (5, 5)
// ========================================
// 1/1 (1): p = 2.0   [dynamic |0|0|0|0|]
// 2/2 (1): Q1 = y1   [dynamic |0|0|0|0|]
// 3/3 (1): Q2 = q * y2   [dynamic |0|0|0|0|]
// 4/4 (1): y1 = q * y2   [dynamic |0|0|0|0|]
// 5/5 (1): Q1 = p   [dynamic |0|0|0|0|]
//
// Matching
// ========================================
// 5 variables and equations
// var 1 is solved in eqn 4
// var 2 is solved in eqn 2
// var 3 is solved in eqn 3
// var 4 is solved in eqn 5
// var 5 is solved in eqn 1
//
// Standard BLT of the original model:(5)
// ============================================================
//
// 5: p: (1/1): (1): p = 2.0
// 4: Q1: (5/5): (1): Q1 = p
// 3: Q2: (3/3): (1): Q2 = q * y2
// 2: y1: (2/2): (1): Q1 = y1
// 1: y2: (4/4): (1): y1 = q * y2
//
//
// Variables of interest (2)
// ========================================
// 1: Q2:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 2: Q1:VARIABLE(uncertain=Uncertainty.refine)  type: Real
//
//
// Boundary conditions (1)
// ========================================
// 1: p:VARIABLE()  type: Real
//
//
// Binding equations:(0)
// ============================================================
//
//
//
// E-BLT: equations that compute the variables of interest:(2)
// ============================================================
//
// 3: Q2: (3/3): (1): Q2 = q * y2
// 4: Q1: (5/5): (1): Q1 = p
//
//
// Extracting SET-C and SET-S from E-BLT
// Procedure is applied on each equation in the E-BLT
// ==========================================================================
// >>>3: Q2: (3/3): (1): Q2 = q * y2
// 1: y2: (4/4): (1): y1 = q * y2
// 2: y1: (2/2): (1): Q1 = y1
// Procedure success
//
// >>>4: Q1: (5/5): (1): Q1 = p
// p is a boundary condition ---> exit procedure
// Procedure failed
//
// Extraction procedure failed for iteration count: 1, re-running with modified model
// ==========================================================================
//
// OrderedVariables (5)
// ========================================
// 1: y2:VARIABLE()  type: Real
// 2: y1:VARIABLE()  type: Real
// 3: Q2:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 4: Q1:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 5: p:VARIABLE()  type: Real
//
//
// OrderedEquation (5, 5)
// ========================================
// 1/1 (1): Q1 = 0.0   [binding |0|0|0|0|]
// 2/2 (1): p = 2.0   [dynamic |0|0|0|0|]
// 3/3 (1): Q1 = y1   [dynamic |0|0|0|0|]
// 4/4 (1): Q2 = q * y2   [dynamic |0|0|0|0|]
// 5/5 (1): y1 = q * y2   [dynamic |0|0|0|0|]
//
// Matching
// ========================================
// 5 variables and equations
// var 1 is solved in eqn 5
// var 2 is solved in eqn 3
// var 3 is solved in eqn 4
// var 4 is solved in eqn 1
// var 5 is solved in eqn 2
//
// Standard BLT of the original model:(5)
// ============================================================
//
// 5: p: (2/2): (1): p = 2.0
// 4: Q1: (1/1): (1): Q1 = 0.0
// 3: Q2: (4/4): (1): Q2 = q * y2
// 2: y1: (3/3): (1): Q1 = y1
// 1: y2: (5/5): (1): y1 = q * y2
//
//
// Variables of interest (2)
// ========================================
// 1: Q2:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 2: Q1:VARIABLE(uncertain=Uncertainty.refine)  type: Real
//
//
// Boundary conditions (1)
// ========================================
// 1: p:VARIABLE()  type: Real
//
//
// Binding equations:(1)
// ============================================================
//
// 4: Q1: (1/1): (1): Q1 = 0.0
//
//
// E-BLT: equations that compute the variables of interest:(1)
// ============================================================
//
// 3: Q2: (4/4): (1): Q2 = q * y2
//
//
// Extracting SET-C and SET-S from E-BLT
// Procedure is applied on each equation in the E-BLT
// ==========================================================================
// >>>3: Q2: (4/4): (1): Q2 = q * y2
// 1: y2: (5/5): (1): y1 = q * y2
// 2: y1: (3/3): (1): Q1 = y1
// Procedure success
//
// Extraction procedure is successfully completed in iteration count: 2
// ==========================================================================
//
// Final set of equations after extraction algorithm
// ==========================================================================
// SET_C: {4}
// SET_S: {3, 5}
//
//
// SET_C (1, 1)
// ========================================
// 1/1 (1): Q2 = q * y2   [dynamic |0|0|0|0|]
//
//
// SET_S (2, 2)
// ========================================
// 1/1 (1): Q1 = y1   [dynamic |0|0|0|0|]
// 2/2 (1): y1 = q * y2   [dynamic |0|0|0|0|]
//
//
// Unknown variables in SET_S (2)
// ========================================
//
// 1: y1 type: Real
// 2: y2 type: Real
//
//
// Parameters in SET_S (1)
// ========================================
// 1: q:PARAM()  = 1.0  type: Real
//
//
//
// Automatic Verification Steps of DataReconciliation Algorithm
// ==========================================================================
//
// knownVariables:{3, 4} (2)
// ========================================
// 1: Q2:VARIABLE(uncertain=Uncertainty.refine)  type: Real
// 2: Q1:VARIABLE(uncertain=Uncertainty.refine)  type: Real
//
// -SET_C:{4}
// -SET_S:{3, 5}
//
// Condition-1 "SET_C and SET_S must not have no equations in common"
// ==========================================================================
// -Passed
//
// Condition-2 "All variables of interest must be involved in SET_C or SET_S"
// ==========================================================================
// -Passed
//
// -SET_C has known variables:{3} (1)
// ========================================
// 1: Q2:VARIABLE(uncertain=Uncertainty.refine)  type: Real
//
//
// -SET_S has known variables:{4} (1)
// ========================================
// 1: Q1:VARIABLE(uncertain=Uncertainty.refine)  type: Real
//
// Condition-3 "SET_C equations must be strictly less than Variable of Interest"
// ==========================================================================
// -Passed
// -SET_C contains:1 equations < 2 known variables
//
// Condition-4 "SET_S should contain all intermediate variables involved in SET_C"
// ==========================================================================
//
// -SET_C has intermediate variables:{1} (1)
// ========================================
// 1: y2:VARIABLE()  type: Real
//
//
// -SET_S has intermediate variables involved in SET_C:{1} (1)
// ========================================
// 1: y2:VARIABLE()  type: Real
//
// -Passed
//
// Condition-5 "SET_S should be square"
// ==========================================================================
// -Passed
//  Set_S has 2 equations and 2 variables
//
// record SimulationResult
//     resultFile = "econcile",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'NewDataReconciliationSimpleTests.Pipe5', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-reconcile -sx=./NewDataReconciliationSimpleTests/resources/DataReconciliationSimpleTests.Pipe5_Inputs.csv -eps=0.0023 -lv=LOG_JAC'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// stdout            | info    | DataReconciliation Starting!
// stdout            | info    | NewDataReconciliationSimpleTests.Pipe5
// stdout            | info    | DataReconciliation Completed!
// "
// end SimulationResult;
// ""
// endResult
