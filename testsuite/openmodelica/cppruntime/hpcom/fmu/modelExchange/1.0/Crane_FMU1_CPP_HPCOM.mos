// name:     Crane_HPCOM_FMI_1_0_CPP_HPCOM
// keywords: Crane FMI-Export FMI-Import
// status:   correct
// cflags: -d=-newInst
// Real variables, Real input variable, continuous-time states, state events, event iteration

loadModel(Modelica, {"3.2.3"}); getErrorString();
setDebugFlags("hpcom,hardcodedStartValues"); getErrorString();
setCommandLineOptions("+simCodeTarget=Cpp +n=2 +hpcomCode=openmp +hpcomScheduler=level"); getErrorString();
loadFile("cranes.mo"); getErrorString();
translateModelFMU(cranes.crane); getErrorString();

setCommandLineOptions("+simCodeTarget=C"); getErrorString();
clearDebugFlags(); getErrorString();
//importFMU("cranes_crane.fmu", "<default>", 6); getErrorString();
importFMU("cranes_crane.fmu"); getErrorString();
loadFile("cranes_crane_me_FMU.mo"); getErrorString();
simulate(cranes_crane_me_FMU, numberOfIntervals=150); getErrorString();

val(position_s, 1);
val(prismatic_v, 1);

// Result:
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// readCalcTimesFromFile: No valid profiling-file found.
// Warning: The costs have been estimated. Maybe cranes_crane_eqs_prof-file is missing.
// Using level Scheduler for the DAE system
// Using level Scheduler for the ODE system
// Using level Scheduler for the ZeroFunc system
// HpcOm is still under construction.
// "SimCode: The model cranes.crane has been translated to FMU"
// ""
// true
// ""
// true
// ""
// "cranes_crane_me_FMU.mo"
// ""
// true
// ""
// record SimulationResult
//     resultFile = "cranes_crane_me_FMU_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 150, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'cranes_crane_me_FMU', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// ""
// 0.9493545676148136
// 0.3948240567413477
// endResult
