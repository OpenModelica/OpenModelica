// name:     Modelica.Mechanics.MultiBody.Examples.Systems.RobotR3.fullRobot
// keywords: simulation MSL Examples
// status: correct
// teardown_command: rm -f *_init.xml *_records.c *.exe *.log *_res.csv *.c *.libs *.makefile *.o *.dll *.so *_functions.h *.h *_diff.csv
// cflags: 	 +simCodeTarget=Cpp -d=-newInst
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica,{"3.1"});

simulate(Modelica.Mechanics.MultiBody.Examples.Systems.RobotR3.fullRobot,stopTime=1.85604500771, outputFormat="csv");
res := OpenModelica.Scripting.compareSimulationResults("Modelica.Mechanics.MultiBody.Examples.Systems.RobotR3.fullRobot_res.csv",
  "../../../../simulation/libraries/msl31/ReferenceFiles/Modelica.Mechanics.MultiBody.Examples.Systems.RobotR3.fullRobot.mat","Modelica.Mechanics.MultiBody.Examples.Systems.RobotR3.fullRobot_diff.csv",0.01,0.00001,
  {"axis1.controller.PI.x","axis1.gear.spring.phi_rel","axis1.gear.spring.w_rel","axis1.motor.C.v","axis1.motor.La.i","axis2.controller.PI.x","axis2.gear.spring.phi_rel",
   "axis2.gear.spring.w_rel","axis2.motor.C.v","axis2.motor.La.i","axis3.controller.PI.x","axis3.gear.spring.phi_rel","axis3.gear.spring.w_rel","axis3.motor.C.v",
   "axis3.motor.La.i","axis4.controller.PI.x","axis4.motor.C.v","axis4.motor.La.i","axis5.controller.PI.x","axis5.motor.C.v","axis5.motor.La.i","axis6.controller.PI.x",
   "axis6.motor.C.v","axis6.motor.La.i","mechanics.b2.body.w_a[1]","mechanics.r1.phi","mechanics.r1.w","mechanics.r2.phi","mechanics.r3.phi","mechanics.r3.w",
   "mechanics.r4.phi","mechanics.r4.w","mechanics.r5.phi","mechanics.r5.w","mechanics.r6.phi","mechanics.r6.w"});

// Result:
// true
// true
// record SimulationResult
//     resultFile = "Modelica.Mechanics.MultiBody.Examples.Systems.RobotR3.fullRobot_res.csv",
//     simulationOptions = "startTime = 0.0, stopTime = 1.85604500771, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Mechanics.MultiBody.Examples.Systems.RobotR3.fullRobot', storeInTemp = false, noClean = false, options = '', outputFormat = 'mat', variableFilter = '.*', cflags = ''",
//     messages = ""
// end SimulationResult;
// endResult
