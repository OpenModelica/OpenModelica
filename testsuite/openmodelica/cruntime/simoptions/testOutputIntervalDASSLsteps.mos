// name:     testOutputIntervalDASSLSteps
// keywords: events, emit, results, dassl
// status: correct
// teardown_command: rm -rf testModel* output.log
//
// Event handling
//
loadString("
model testModel
  parameter Real e=0.7;
  parameter Real g=9.81;
  Real h(start=1);
  Real v;
  Boolean flying(start=true);
  Boolean impact;
  Real v_new;
  discrete Integer n_bounce(start=0);
equation
  impact = h <= 0.0;
  der(v) = if flying then -g else 0;
  der(h) = v;

  when {h <= 0.0 and v <= 0.0,impact} then
    v_new = if edge(impact) then -e*pre(v) else 0;
    flying = v_new > 0;
    reinit(v, v_new);
    n_bounce=pre(n_bounce)+1;
  end when;

end testModel;");
simulate(testModel, stopTime=2.0, method="dassl", simflags="-noEquidistantTimeGrid");
readSimulationResultSize("testModel_res.mat");
simulate(testModel, stopTime=2.0, numberOfIntervals= 20, method="dassl", simflags="-noEquidistantTimeGrid -noEventEmit");
readSimulationResultSize("testModel_res.mat");
simulate(testModel, stopTime=2.0, numberOfIntervals= 20, method="dassl", simflags="-noEquidistantTimeGrid -maxStepSize=0.001");
readSimulationResultSize("testModel_res.mat");
simulate(testModel, stopTime=2.0, numberOfIntervals= 20, method="dassl", simflags="-noEquidistantTimeGrid -maxIntegrationOrder=1");
readSimulationResultSize("testModel_res.mat");
simulate(testModel, stopTime=0.4, numberOfIntervals= 20, method="dassl", simflags="-noEquidistantTimeGrid");
readSimulationResultSize("testModel_res.mat");
simulate(testModel, stopTime=0.4, numberOfIntervals= 20, method="dassl", simflags="-noEquidistantTimeGrid -noEquidistantOutputFrequency=5");
readSimulationResultSize("testModel_res.mat");
simulate(testModel, stopTime=0.4, numberOfIntervals= 20, method="dassl", simflags="-noEquidistantTimeGrid -noEquidistantOutputTime=0.1");
readSimulationResultSize("testModel_res.mat");
simulate(testModel, stopTime=0.4, numberOfIntervals= 20, method="dassl", simflags="-noEquidistantTimeGrid -noEquidistantOutputTime=0.1 -noEquidistantOutputFrequency=2");
readSimulationResultSize("testModel_res.mat");


// Result:
// true
// record SimulationResult
//     resultFile = "testModel_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 2.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'testModel', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-noEquidistantTimeGrid'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// 211
// record SimulationResult
//     resultFile = "testModel_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 2.0, numberOfIntervals = 20, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'testModel', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-noEquidistantTimeGrid -noEventEmit'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// 186
// record SimulationResult
//     resultFile = "testModel_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 2.0, numberOfIntervals = 20, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'testModel', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-noEquidistantTimeGrid -maxStepSize=0.001'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// 2134
// record SimulationResult
//     resultFile = "testModel_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 2.0, numberOfIntervals = 20, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'testModel', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-noEquidistantTimeGrid -maxIntegrationOrder=1'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// 6691
// record SimulationResult
//     resultFile = "testModel_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 0.4, numberOfIntervals = 20, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'testModel', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-noEquidistantTimeGrid'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// 26
// record SimulationResult
//     resultFile = "testModel_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 0.4, numberOfIntervals = 20, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'testModel', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-noEquidistantTimeGrid -noEquidistantOutputFrequency=5'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// 8
// record SimulationResult
//     resultFile = "testModel_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 0.4, numberOfIntervals = 20, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'testModel', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-noEquidistantTimeGrid -noEquidistantOutputTime=0.1'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// 7
// record SimulationResult
//     resultFile = "testModel_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 0.4, numberOfIntervals = 20, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'testModel', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-noEquidistantTimeGrid -noEquidistantOutputTime=0.1 -noEquidistantOutputFrequency=2'",
//     messages = "stdout            | warning | The flags are  \"noEquidistantOutputFrequency\" and \"noEquidistantOutputTime\" are in opposition to each other. The flag \"noEquidistantOutputFrequency\" superiors.
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// 15
// endResult
