// status: correct

loadString("
model testModel
  parameter Real e=0.7;
  parameter Real g=9.81;
  Real h(start=1);
  Real v;
  Boolean flying(start=true);
  Boolean impact;
  Real v_new;
  discrete Integer n_bounce(start=0);
equation
  impact = h <= 0.0;
  der(v) = if flying then -g else 0;
  der(h) = v;

  when {h <= 0.0 and v <= 0.0,impact} then
    v_new = if edge(impact) then -e*pre(v) else 0;
    flying = v_new > 0;
    reinit(v, v_new);
    n_bounce=pre(n_bounce)+1;
  end when;

end testModel;");

buildModel(testModel, stopTime=3.0);getErrorString();
system("./testModel -single -r single.mat");
system("./testModel -r double.mat");
echo(false);
(b1,s1,m1) := OpenModelica.Scripting.stat("single.mat");
(b2,s2,m1) := OpenModelica.Scripting.stat("double.mat");
echo(true);
b1 and b2;
s2 > s1;
diffSimulationResults("single.mat", "double.mat", "single-double-diff");getErrorString();

// Result:
// true
// {"testModel","testModel_init.xml"}
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions(\"-d=initialization\").
// "
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// 0
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// 0
// true
// true
// true
// (true,{})
// ""
// endResult
