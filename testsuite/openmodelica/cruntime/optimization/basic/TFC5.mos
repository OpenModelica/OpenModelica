// name: testFinalCon_5
// status: correct
// cflags: -d=-newInst

setCommandLineOptions("+gDynopt");
getErrorString();

loadString("
model testFinalCon5
  Real x1;
  Real x2;
  Real y1;
  Real y2;
  Real y3(start = -1);
  input Real u;

  Real final_con1(min = 0, max = 0) annotation(isFinalConstraint = true);
  Real final_con2(min = 0, max = 0) annotation(isFinalConstraint = true);
  Real cost annotation(isLagrange = true);

equation
  der(x1) = x2*u - x1;
  der(x2) = x1 + y1;
  final_con1 = x1 - 2; //0 <= x1 - 2 <= 0 for t = tf
  final_con2 = x2 - 3;
   0 = 3*y1 + y2 - exp(1 + u);
   0 = y1 - 5*y2 - exp(1 + time);
   y3^2 = 1 + time;
  cost = u^2;
end testFinalCon5;

model testFinalCon5_
  extends testFinalCon5;
end testFinalCon5_;

");
getErrorString();

// Test with maxSizeSolveLinearSystem=0
setCommandLineOptions("+maxSizeSolveLinearSystem=0");
print("Trying with maxSizeSolveLinearSystem=0");
getErrorString();

optimize(testFinalCon5_, numberOfIntervals=20, tolerance = 1e-08, stopTime = 5, simflags="-optimizerNP=1 -iif=ReferenceFiles/testFinalCon5_ref.mat -ipopt_init=FILE");
getErrorString();

res := OpenModelica.Scripting.compareSimulationResults("testFinalCon5__res.mat","ReferenceFiles/testFinalCon5_ref.mat","testFinalCon_diff.csv",0.01,0.0001, {
"x2",
"x1",
"y1",
"final_con1"
});
getErrorString();


// Testing other convergence with solveLinearSystem
print("Trying with maxSizeSolveLinearSystem=20");
setCommandLineOptions("+maxSizeSolveLinearSystem=20");
getErrorString();

optimize(testFinalCon5, numberOfIntervals=20, tolerance = 1e-08, stopTime = 5, simflags="-optimizerNP=1");
getErrorString();

res := OpenModelica.Scripting.compareSimulationResults("testFinalCon5__res.mat","ReferenceFiles/testFinalCon5_ref.mat","testFinalCon_diff.csv",0.01,0.0001, {
"x2",
"x1",
"y1",
"final_con1"
});
getErrorString();

// Result:
// true
// ""
// true
// ""
// true
// Trying with maxSizeSolveLinearSystem=0
// ""
// record SimulationResult
//     resultFile = "testFinalCon5__res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 5.0, numberOfIntervals = 20, tolerance = 1e-08, method = 'optimization', fileNamePrefix = 'testFinalCon5_', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-optimizerNP=1 -iif=ReferenceFiles/testFinalCon5_ref.mat -ipopt_init=FILE'",
//     messages = "LOG_ASSERT        | warning | The following assertion has been violated at time 0.000000
// |                 | |       | (($finalCon$final_con2 >= 0.0 and $finalCon$final_con2 <= 0.0)) --> \"Variable violating min/max constraint: 0.0 <= $finalCon$final_con2 <= 0.0, has value: -3\"
// LOG_ASSERT        | warning | The following assertion has been violated at time 0.000000
// |                 | |       | (($finalCon$final_con1 >= 0.0 and $finalCon$final_con1 <= 0.0)) --> \"Variable violating min/max constraint: 0.0 <= $finalCon$final_con1 <= 0.0, has value: -2\"
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
//
// Optimizer Variables
// ========================================================
// State[0]:x1(start = 0, nominal = 1, min = -Inf, max = +Inf, init = 0)
// State[1]:x2(start = 0, nominal = 1, min = -Inf, max = +Inf, init = 0)
// Input[2]:u(start = 5.47918, nominal = 6.47918, min = -Inf, max = +Inf)
// --------------------------------------------------------
// number of nonlinear constraints: 0
// ========================================================
// LOG_STDOUT        | info    | Using values from file as initial guess.
//
// ******************************************************************************
// This program contains Ipopt, a library for large-scale nonlinear optimization.
//  Ipopt is released as open source code under the Eclipse Public License (EPL).
//          For more information visit https://github.com/coin-or/Ipopt
// ******************************************************************************
//
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->Show additional information from the initialization process, in OMNotebook call setCommandLineOptions(\"-d=initialization\").
// "
// {"Files Equal!"}
// "Warning: 'compareSimulationResults' is deprecated. It is recommended to use 'diffSimulationResults' instead.
// "
// Trying with maxSizeSolveLinearSystem=20
// true
// ""
// record SimulationResult
//     resultFile = "testFinalCon5_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 5.0, numberOfIntervals = 20, tolerance = 1e-08, method = 'optimization', fileNamePrefix = 'testFinalCon5', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-optimizerNP=1'",
//     messages = "LOG_ASSERT        | warning | The following assertion has been violated at time 0.000000
// |                 | |       | (($finalCon$final_con2 >= 0.0 and $finalCon$final_con2 <= 0.0)) --> \"Variable violating min/max constraint: 0.0 <= $finalCon$final_con2 <= 0.0, has value: -3\"
// LOG_ASSERT        | warning | The following assertion has been violated at time 0.000000
// |                 | |       | (($finalCon$final_con1 >= 0.0 and $finalCon$final_con1 <= 0.0)) --> \"Variable violating min/max constraint: 0.0 <= $finalCon$final_con1 <= 0.0, has value: -2\"
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
//
// Optimizer Variables
// ========================================================
// State[0]:x1(start = 0, nominal = 1, min = -Inf, max = +Inf, init = 0)
// State[1]:x2(start = 0, nominal = 1, min = -Inf, max = +Inf, init = 0)
// Input[2]:u(start = 0, nominal = 1, min = -Inf, max = +Inf)
// --------------------------------------------------------
// number of nonlinear constraints: 0
// ========================================================
//
// ******************************************************************************
// This program contains Ipopt, a library for large-scale nonlinear optimization.
//  Ipopt is released as open source code under the Eclipse Public License (EPL).
//          For more information visit https://github.com/coin-or/Ipopt
// ******************************************************************************
//
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->Show additional information from the initialization process, in OMNotebook call setCommandLineOptions(\"-d=initialization\").
// "
// {"Files Equal!"}
// "Warning: 'compareSimulationResults' is deprecated. It is recommended to use 'diffSimulationResults' instead.
// "
// endResult
