// name: BatchReactorCon3
// status: correct
// cflags: -d=-newInst

setCommandLineOptions("+g=Optimica");
getErrorString();

loadFile("BatchReactor.mo");
getErrorString();

loadString("
optimization nmpcBatchReactorCon3(objectiveIntegrand = -x2)
  extends BatchReactor(a = 1, b = 1);
  Real c1 = min(exp(2*time),c3)-0.5;
  Real c2 = 1+ exp(time) ;
  Real c3 = 2+ exp(time) ;
constraint
 u >= c1;
 u >= c2;
 u <= c3;
 u <= 5*(1+time);
 u <= 10*(1+time);
end nmpcBatchReactorCon3;
");
getErrorString();

optimize(nmpcBatchReactorCon3, numberOfIntervals=20, tolerance = 1e-08);
getErrorString();

res := OpenModelica.Scripting.compareSimulationResults("nmpcBatchReactorCon3_res.mat","ReferenceFiles/nmpcBatchReactorCon2_ref.mat","nmpcBatchReactorCon2_res.csv",0.01,0.0001);
getErrorString();

// Result:
// true
// ""
// true
// ""
// true
// ""
// record SimulationResult
//     resultFile = "nmpcBatchReactorCon3_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 20, tolerance = 1e-08, method = 'optimization', fileNamePrefix = 'nmpcBatchReactorCon3', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "assert            | warning | The following assertion has been violated at time 0.000000
// |                 | |       | $con$2 >= -1e+21 and $con$2 <= 0.0
// assert            | warning | Variable violating min/max constraint: -1e+21 <= $con$2 <= 0.0, has value: 1
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
//
// Optimizer Variables
// ========================================================
// State[0]:y1(start = 1, nominal = 1, min = 0, max = 1, init = 1)
// State[1]:y2(start = 0, nominal = 1, min = 0, max = 1, init = 0)
// Input[2]:u(start = 1, nominal = 1, min = 0, max = 5)
// --------------------------------------------------------
// number of nonlinear constraints: 5
// ========================================================
//
// ******************************************************************************
// This program contains Ipopt, a library for large-scale nonlinear optimization.
//  Ipopt is released as open source code under the Eclipse Public License (EPL).
//          For more information visit https://github.com/coin-or/Ipopt
// ******************************************************************************
//
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// {"Files Equal!"}
// "Warning: 'compareSimulationResults' is deprecated. It is recommended to use 'diffSimulationResults' instead.
// "
// endResult
