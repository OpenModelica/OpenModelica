// name: testFinalCon_4
// status: correct

setCommandLineOptions("+g=Optimica");
getErrorString();

loadString("
model testFinalCon
  Real x1;
  Real x2;
  Real y1;
  Real y2;
  Real y3(start = -1);
  input Real u;
  
  Real final_con1(min = 0, max = 0) annotation(isFinalConstraint = true);
  Real final_con2(min = 0, max = 0) annotation(isFinalConstraint = true);
  Real cost annotation(isLagrange = true);

equation
  der(x1) = x2*u - x1;
  der(x2) = x1 + y1;
  final_con1 = x1 - 2; //0 <= x1 - 2 <= 0 for t = tf
  final_con2 = x2 - 3;
   0 = exp(y1 + y2) - exp(1 + u);
   0 = exp(y1 - y2) - exp(1 + time);
   y3^2 = 1 + time;
  cost = u^2;
end testFinalCon;
");
getErrorString();

/*
optimize(testFinalCon, numberOfIntervals=50, tolerance = 1e-08, stopTime = 5, simflags="-stateFile ReferenceFiles/initTCF_2.csv -lv LOG_IPOPT_ERROR");
getErrorString();

res := OpenModelica.Scripting.compareSimulationResults("testFinalCon_res.mat","ReferenceFiles/testFinalCon3_ref.mat","testFinalCon_diff.csv",0.01,0.0001);
getErrorString();
*/
optimize(testFinalCon, numberOfIntervals=50, tolerance = 1e-08, stopTime = 5, simflags="-iif ReferenceFiles/testFinalCon3_ref.mat -lv LOG_IPOPT_ERROR -ipopt_max_iter=-1 -ipopt_init FILE -iim none");
getErrorString();
res := OpenModelica.Scripting.compareSimulationResults("testFinalCon_res.mat","ReferenceFiles/testFinalCon3_ref.mat","testFinalCon_diff.csv",0.01,0.0001);
getErrorString();

// Result:
// true
// ""
// true
// ""
// record SimulationResult
//     resultFile = "testFinalCon_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 5.0, numberOfIntervals = 50, tolerance = 1e-08, method = 'optimization', fileNamePrefix = 'testFinalCon', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-iif ReferenceFiles/testFinalCon3_ref.mat -lv LOG_IPOPT_ERROR -ipopt_max_iter=-1 -ipopt_init FILE -iim none'",
//     messages = "assert            | warning | The following assertion has been violated at time 0.000000
// |                 | |       | $finalCon$final_con2 >= 0.0 and $finalCon$final_con2 <= 0.0
// assert            | warning | Variable violating min/max constraint: 0.0 <= $finalCon$final_con2 <= 0.0, has value: -4
// assert            | warning | The following assertion has been violated at time 0.000000
// |                 | |       | $finalCon$final_con1 >= 0.0 and $finalCon$final_con1 <= 0.0
// assert            | warning | Variable violating min/max constraint: 0.0 <= $finalCon$final_con1 <= 0.0, has value: -1
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
//
// Optimizer Variables
// ========================================================
// State[0]:x1(start = 1, nominal = 2, min = -Inf, max = +Inf, init = 1)
// State[1]:x2(start = -1, nominal = 2, min = -Inf, max = +Inf, init = -1)
// Input[2]:u(start = -0.163468, nominal = 1.16347, min = -Inf, max = +Inf)
// --------------------------------------------------------
// number of nonlinear constraints: 0
// ========================================================
// stdout            | info    | Using values from file as initial guess.
//
// max_iter = -1LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions(\"-d=initialization\").
// "
// {"Files Equal!"}
// "Warning: 'compareSimulationResults' is deprecated. It is recommended to use 'diffSimulationResults' instead.
// "
// endResult
