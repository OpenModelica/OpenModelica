// name: pendel
// status: correct

setCommandLineOptions("+gDynopt +indexReductionMethod=dummyDerivatives --tearingStrictness=casual +loop2con=all");
getErrorString();

loadString("
model pendel
  final parameter Real m = 1;
  final parameter Real L = 1;
  final parameter Real g = 9.81;
  final parameter Real x0 = 0.5;
  final parameter Real y0 = sqrt(L^2 - x0^2);
  Real F(min=-10,max=15);
  input Real Fy(min=-5,max=10);
  input Real Fx(min=-5,max=0.5);

  Real x(start=x0,min=0,max=1);
  Real y(start=y0, fixed=true, min=0,max=1);

  Real vx(start=0);
  Real vy(start=0,min=-1,max=0.0);
  Real cost(nominal=100) =( cos(Fx)-sin(Fy))*sin(time^2) annotation(isLagrange = true);
  Real posX(min=0,max=0) = x-0.7 annotation(isFinalConstraint = true);
  Real conVx(min=0,max=0) = vx-1 annotation(isFinalConstraint = true);
  Real conFx(min=0,max=0) = Fx-0.5 annotation(isFinalConstraint = true);
  Real conDerVX(min=0,max=0) = der(vx)*vy+0.5 annotation(isFinalConstraint = true);
  Real costDerVy = (der(vy))^2 annotation(isLangrange = true);
  Real posDerVX(min=-5,max=5) = der(vx) annotation(isConstraint = true);
  Real posDerVY(min=-5,max=5) = der(vy) annotation(isConstraint = true);

equation
  m*der(vx) = -x/L*F + Fx*x;
  m*der(vy) = -y/L*F - m*g + Fy*y;
  x^2 + y^2 = (L)^2;
  der(x) = vx;
  der(y) = vy;
end pendel;
");
getErrorString();

echo(false);
res:=optimize(pendel, numberOfIntervals=250, tolerance = 1e-08, stopTime = 10, simflags="-optimizerNP 1 -lv LOG_IPOPT -ipopt_max_iter 5000 -ipopt_hesse NUM");
getErrorString();
messages:=res.messages;
echo(true);
res.resultFile;
if regexBool(messages, "EXIT: Optimal Solution Found.\n") then
  print("Optimal Solution Found!\n");
  if regexBool(messages,"Number of Iterations....: 91") then
    print("Number of Iterations....: 91\n");
  else
    print("wrong Number of Iterations! Update test\n");
  end if;
else
  print("No optimal solution found");
  exit(1);
end if;

getErrorString();

getErrorString();
val(cost,0.0);
val(cost,1.0);
val(cost,2.0);
val(cost,3.0);
val(cost,4.0);
val(cost,5.0);

val(x,0.0);
val(x,1.0);
val(x,2.0);
val(x,3.0);
val(x,4.0);
val(x,5.0);

val(Fx,0.0);
val(Fx,1.0);
val(Fx,2.0);
val(Fx,3.0);
val(Fx,4.0);
val(Fx,5.0);


// Result:
// true
// ""
// true
// ""
// true
// "pendel_res.mat"
// Optimal Solution Found!
// Number of Iterations....: 91
//
// ""
// ""
// -0.0
// -1.659802327071079
// -0.1810650803223208
// -0.8129041257070627
// -0.06888096344942475
// -0.03166506452173983
// 0.4999999993337779
// 0.4999999833403194
// 0.4999999666751017
// 0.4999999501796328
// 0.4999999337320414
// 0.4999999182288091
// -3.307612995835737
// -3.307611589112298
// -5.0
// -3.307611465222483
// -4.999999999999887
// -4.999999953525426
// endResult
