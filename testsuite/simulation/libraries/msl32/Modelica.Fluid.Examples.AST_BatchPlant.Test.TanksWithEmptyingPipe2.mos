// name:     Modelica.Fluid.Examples.AST_BatchPlant.Test.TanksWithEmptyingPipe2
// keywords: simulation MSL Examples
// status: correct
// cflags: -d=-newInst
//
// Simulation Results
// Modelica Standard Library
//

runScript("../common/ModelTestingDefaults.mos"); getErrorString();

modelTestingType := OpenModelicaModelTesting.Kind.VerifiedSimulation;
modelName := $TypeName(Modelica.Fluid.Examples.AST_BatchPlant.Test.TanksWithEmptyingPipe2);
compareVars :=
{
   "tank3.level",
   "tank3.medium.T",
   "tank1.level",
   "tank1.medium.T",
   "tank2.level",
   "tank2.medium.T"
};

runScript(modelTesting);getErrorString();

// Result:
// "true
// "
// ""
// OpenModelicaModelTesting.Kind.VerifiedSimulation
// Modelica.Fluid.Examples.AST_BatchPlant.Test.TanksWithEmptyingPipe2
// {"tank3.level","tank3.medium.T","tank1.level","tank1.medium.T","tank2.level","tank2.medium.T"}
// Simulation options: startTime = 0.0, stopTime = 120.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Fluid.Examples.AST_BatchPlant.Test.TanksWithEmptyingPipe2', options = '', outputFormat = 'mat', variableFilter = 'time|tank3.level|tank3.medium.T|tank1.level|tank1.medium.T|tank2.level|tank2.medium.T', cflags = '', simflags = ' -abortSlowSimulation -alarm=360 -emit_protected'
// Result file: Modelica.Fluid.Examples.AST_BatchPlant.Test.TanksWithEmptyingPipe2_res.mat
// Messages: stdout            | warning | Sparsity pattern for non-linear system 0 is not regular. This indicates that something went wrong during sparsity pattern generation. Removing sparsity pattern and disabeling NLS scaling.
// stdout            | warning | Sparsity pattern for non-linear system 1 is not regular. This indicates that something went wrong during sparsity pattern generation. Removing sparsity pattern and disabeling NLS scaling.
// stdout            | warning | Sparsity pattern for non-linear system 2 is not regular. This indicates that something went wrong during sparsity pattern generation. Removing sparsity pattern and disabeling NLS scaling.
// stdout            | warning | Sparsity pattern for non-linear system 3 is not regular. This indicates that something went wrong during sparsity pattern generation. Removing sparsity pattern and disabeling NLS scaling.
// stdout            | warning | Sparsity pattern for non-linear system 4 is not regular. This indicates that something went wrong during sparsity pattern generation. Removing sparsity pattern and disabeling NLS scaling.
// stdout            | warning | Sparsity pattern for non-linear system 5 is not regular. This indicates that something went wrong during sparsity pattern generation. Removing sparsity pattern and disabeling NLS scaling.
// stdout            | warning | Sparsity pattern for non-linear system 6 is not regular. This indicates that something went wrong during sparsity pattern generation. Removing sparsity pattern and disabeling NLS scaling.
// stdout            | warning | Sparsity pattern for non-linear system 7 is not regular. This indicates that something went wrong during sparsity pattern generation. Removing sparsity pattern and disabeling NLS scaling.
// stdout            | warning | Sparsity pattern for non-linear system 8 is not regular. This indicates that something went wrong during sparsity pattern generation. Removing sparsity pattern and disabeling NLS scaling.
// stdout            | warning | Sparsity pattern for non-linear system 9 is not regular. This indicates that something went wrong during sparsity pattern generation. Removing sparsity pattern and disabeling NLS scaling.
// stdout            | warning | Sparsity pattern for non-linear system 10 is not regular. This indicates that something went wrong during sparsity pattern generation. Removing sparsity pattern and disabeling NLS scaling.
// stdout            | warning | Sparsity pattern for non-linear system 11 is not regular. This indicates that something went wrong during sparsity pattern generation. Removing sparsity pattern and disabeling NLS scaling.
// LOG_SUCCESS       | info    | The initialization finished successfully with 3 homotopy steps.
// LOG_SUCCESS       | info    | The simulation finished successfully.
//
// Files Equal!
// "true
// "
// ""
// endResult
