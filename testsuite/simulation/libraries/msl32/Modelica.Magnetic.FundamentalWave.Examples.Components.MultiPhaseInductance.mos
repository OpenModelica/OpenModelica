// name:     Modelica.Magnetic.FundamentalWave.Examples.Components.MultiPhaseInductance
// keywords: simulation MSL Examples
// status: correct
// cflags: -d=-newInst
//
// Simulation Results
// Modelica Standard Library
//

runScript("../common/ModelTestingDefaults.mos"); getErrorString();

modelTestingType := OpenModelicaModelTesting.Kind.VerifiedSimulation;
modelName := $TypeName(Modelica.Magnetic.FundamentalWave.Examples.Components.MultiPhaseInductance);
compareVars :=
{
   "converter_m.singlePhaseElectroMagneticConverter[1].Phi.re",
   "converter_m.singlePhaseElectroMagneticConverter[2].Phi.im",
   "inductor_e.inductor[1].i",
   "inductor_e.inductor[2].i",
   "inductor_e.inductor[3].i"
};

runScript(modelTesting);getErrorString();

// Result:
// "true
// "
// ""
// OpenModelicaModelTesting.Kind.VerifiedSimulation
// Modelica.Magnetic.FundamentalWave.Examples.Components.MultiPhaseInductance
// {"converter_m.singlePhaseElectroMagneticConverter[1].Phi.re","converter_m.singlePhaseElectroMagneticConverter[2].Phi.im","inductor_e.inductor[1].i","inductor_e.inductor[2].i","inductor_e.inductor[3].i"}
// Simulation options: startTime = 0.0, stopTime = 100.0, numberOfIntervals = 10000, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Magnetic.FundamentalWave.Examples.Components.MultiPhaseInductance', options = '', outputFormat = 'mat', variableFilter = 'time|converter_m.singlePhaseElectroMagneticConverter.1..Phi.re|converter_m.singlePhaseElectroMagneticConverter.2..Phi.im|inductor_e.inductor.1..i|inductor_e.inductor.2..i|inductor_e.inductor.3..i', cflags = '', simflags = ' -abortSlowSimulation -alarm=360 -emit_protected'
// Result file: Modelica.Magnetic.FundamentalWave.Examples.Components.MultiPhaseInductance_res.mat
// Messages: LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
//
// Files Equal!
// "true
// "
// ""
// endResult
