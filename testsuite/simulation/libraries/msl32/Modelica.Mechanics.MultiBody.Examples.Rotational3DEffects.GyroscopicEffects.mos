// name:     Modelica.Mechanics.MultiBody.Examples.Rotational3DEffects.GyroscopicEffects
// keywords: simulation MSL Examples
// status: correct
// cflags: -d=-newInst
//
// Simulation Results
// Modelica Standard Library
//

runScript("../common/ModelTestingDefaults.mos"); getErrorString();

modelTestingType := OpenModelicaModelTesting.Kind.VerifiedSimulation;
modelName := $TypeName(Modelica.Mechanics.MultiBody.Examples.Rotational3DEffects.GyroscopicEffects);
compareVars :=
{
   "bodyCylinder2.body.frame_a.R.T[1,1]",
   "bodyCylinder2.body.frame_a.R.T[1,2]",
   "bodyCylinder2.body.frame_a.R.T[1,3]",
   "bodyCylinder2.body.frame_a.R.T[2,1]",
   "bodyCylinder2.body.frame_a.R.T[2,2]",
   "bodyCylinder2.body.frame_a.R.T[2,3]",
   "bodyCylinder2.body.frame_a.R.T[3,1]",
   "bodyCylinder2.body.frame_a.R.T[3,2]",
   "bodyCylinder2.body.frame_a.R.T[3,3]",
   "bodyCylinder2.body.w_a[1]",
   "bodyCylinder2.body.w_a[2]",
   "bodyCylinder2.body.w_a[3]",
   "revolute.phi",
   "revolute.w",
   "bodyCylinder3.body.frame_a.R.T[1,1]",
   "bodyCylinder3.body.frame_a.R.T[1,2]",
   "bodyCylinder3.body.frame_a.R.T[1,3]",
   "bodyCylinder3.body.frame_a.R.T[2,1]",
   "bodyCylinder3.body.frame_a.R.T[2,2]",
   "bodyCylinder3.body.frame_a.R.T[2,3]",
   "bodyCylinder3.body.frame_a.R.T[3,1]",
   "bodyCylinder3.body.frame_a.R.T[3,2]",
   "bodyCylinder3.body.frame_a.R.T[3,3]",
   "bodyCylinder3.body.w_a[1]",
   "bodyCylinder3.body.w_a[2]",
   "bodyCylinder3.body.w_a[3]",
   "rotor1D.phi",
   "rotor1D.w"
};

runScript(modelTesting);getErrorString();

// Result:
// "true
// "
// ""
// OpenModelicaModelTesting.Kind.VerifiedSimulation
// Modelica.Mechanics.MultiBody.Examples.Rotational3DEffects.GyroscopicEffects
// {"bodyCylinder2.body.frame_a.R.T[1,1]","bodyCylinder2.body.frame_a.R.T[1,2]","bodyCylinder2.body.frame_a.R.T[1,3]","bodyCylinder2.body.frame_a.R.T[2,1]","bodyCylinder2.body.frame_a.R.T[2,2]","bodyCylinder2.body.frame_a.R.T[2,3]","bodyCylinder2.body.frame_a.R.T[3,1]","bodyCylinder2.body.frame_a.R.T[3,2]","bodyCylinder2.body.frame_a.R.T[3,3]","bodyCylinder2.body.w_a[1]","bodyCylinder2.body.w_a[2]","bodyCylinder2.body.w_a[3]","revolute.phi","revolute.w","bodyCylinder3.body.frame_a.R.T[1,1]","bodyCylinder3.body.frame_a.R.T[1,2]","bodyCylinder3.body.frame_a.R.T[1,3]","bodyCylinder3.body.frame_a.R.T[2,1]","bodyCylinder3.body.frame_a.R.T[2,2]","bodyCylinder3.body.frame_a.R.T[2,3]","bodyCylinder3.body.frame_a.R.T[3,1]","bodyCylinder3.body.frame_a.R.T[3,2]","bodyCylinder3.body.frame_a.R.T[3,3]","bodyCylinder3.body.w_a[1]","bodyCylinder3.body.w_a[2]","bodyCylinder3.body.w_a[3]","rotor1D.phi","rotor1D.w"}
// Simulation options: startTime = 0.0, stopTime = 5.0, numberOfIntervals = 500, tolerance = 1e-08, method = 'dassl', fileNamePrefix = 'Modelica.Mechanics.MultiBody.Examples.Rotational3DEffects.GyroscopicEffects', options = '', outputFormat = 'mat', variableFilter = 'time|bodyCylinder2.body.frame_a.R.T.1,1.|bodyCylinder2.body.frame_a.R.T.1,2.|bodyCylinder2.body.frame_a.R.T.1,3.|bodyCylinder2.body.frame_a.R.T.2,1.|bodyCylinder2.body.frame_a.R.T.2,2.|bodyCylinder2.body.frame_a.R.T.2,3.|bodyCylinder2.body.frame_a.R.T.3,1.|bodyCylinder2.body.frame_a.R.T.3,2.|bodyCylinder2.body.frame_a.R.T.3,3.|bodyCylinder2.body.w_a.1.|bodyCylinder2.body.w_a.2.|bodyCylinder2.body.w_a.3.|revolute.phi|revolute.w|bodyCylinder3.body.frame_a.R.T.1,1.|bodyCylinder3.body.frame_a.R.T.1,2.|bodyCylinder3.body.frame_a.R.T.1,3.|bodyCylinder3.body.frame_a.R.T.2,1.|bodyCylinder3.body.frame_a.R.T.2,2.|bodyCylinder3.body.frame_a.R.T.2,3.|bodyCylinder3.body.frame_a.R.T.3,1.|bodyCylinder3.body.frame_a.R.T.3,2.|bodyCylinder3.body.frame_a.R.T.3,3.|bodyCylinder3.body.w_a.1.|bodyCylinder3.body.w_a.2.|bodyCylinder3.body.w_a.3.|rotor1D.phi|rotor1D.w', cflags = '', simflags = ' -abortSlowSimulation -alarm=360 -emit_protected'
// Result file: Modelica.Mechanics.MultiBody.Examples.Rotational3DEffects.GyroscopicEffects_res.mat
// Messages: LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
//
// Files Equal!
// "true
// "
// ""
// endResult
