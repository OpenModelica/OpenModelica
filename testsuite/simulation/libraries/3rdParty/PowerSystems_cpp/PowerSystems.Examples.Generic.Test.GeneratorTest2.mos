// name:     PowerSystems.Examples.Generic.Test.GeneratorTest2
// keywords: simulation PowerSystems Examples
// status: correct
//
// Simulation Results
// PowerSystems Library
//

runScript("../../common/ModelTestingDefaults.mos"); getErrorString();

modelTestingType := OpenModelicaModelTesting.Kind.VerifiedSimulation;
modelName := $TypeName(PowerSystems.Examples.Generic.Test.GeneratorTest2);
compareVars :=
{
  "generator.p[1]",
  "generator.p[2]",
  "generator.phi",
  "generator1.p[1]",
  "generator1.p[2]",
  "generator1.phi"
};

runScript("common.mos"); getErrorString();

runScript(modelTesting);getErrorString();

// Result:
// "true
// "
// ""
// OpenModelicaModelTesting.Kind.VerifiedSimulation
// PowerSystems.Examples.Generic.Test.GeneratorTest2
// {"generator.p[1]","generator.p[2]","generator.phi","generator1.p[1]","generator1.p[2]","generator1.phi"}
// "PowerSystems
// \"\"
// OpenModelicaModelTesting.SimulationRuntime.Cpp
// \"PowerSystems\"
// "
// ""
// Simulation options: startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'PowerSystems.Examples.Generic.Test.GeneratorTest2', options = '', outputFormat = 'mat', variableFilter = 'time|generator.p.1.|generator.p.2.|generator.phi|generator1.p.1.|generator1.p.2.|generator1.phi', cflags = '', simflags = ' -emit_protected'
// Result file: PowerSystems.Examples.Generic.Test.GeneratorTest2_res.mat
// Files Equal!
// "true
// "
// ""
// endResult
