// name:     PowerSystems.Examples.Introductory.InitialSteadyState
// keywords: simulation PowerSystems Examples
// status: correct
//
// Simulation Results
// PowerSystems Library
//

runScript("../../common/ModelTestingDefaults.mos"); getErrorString();

modelTestingType := OpenModelicaModelTesting.Kind.VerifiedSimulation;
modelName := $TypeName(PowerSystems.Examples.Introductory.InitialSteadyState);
compareVars :=
{
  "meter_dq0.p[1]",
  "meter_dq0.p[2]",
  "meter_dq0.p[3]",
  "meter_dq0.v[1]",
  "meter_dq0.v[2]",
  "meter_dq0.v[3]",
  "meter_dq0.i[1]",
  "meter_dq0.i[2]",
  "meter_dq0.i[3]"
};

runScript("common.mos"); getErrorString();

runScript(modelTesting);getErrorString();

// Result:
// "true
// "
// ""
// OpenModelicaModelTesting.Kind.VerifiedSimulation
// PowerSystems.Examples.Introductory.InitialSteadyState
// {"meter_dq0.p[1]","meter_dq0.p[2]","meter_dq0.p[3]","meter_dq0.v[1]","meter_dq0.v[2]","meter_dq0.v[3]","meter_dq0.i[1]","meter_dq0.i[2]","meter_dq0.i[3]"}
// "PowerSystems
// \"\"
// OpenModelicaModelTesting.SimulationRuntime.Cpp
// \"PowerSystems\"
// "
// ""
// Simulation options: startTime = 0.0, stopTime = 0.1, numberOfIntervals = 1000, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'PowerSystems.Examples.Introductory.InitialSteadyState', options = '', outputFormat = 'mat', variableFilter = 'time|meter_dq0.p.1.|meter_dq0.p.2.|meter_dq0.p.3.|meter_dq0.v.1.|meter_dq0.v.2.|meter_dq0.v.3.|meter_dq0.i.1.|meter_dq0.i.2.|meter_dq0.i.3.', cflags = '', simflags = ' -emit_protected'
// Result file: PowerSystems.Examples.Introductory.InitialSteadyState_res.mat
// Files Equal!
// "true
// "
// ""
// endResult
