// name:     DrModelicaForTesting.SampleSignalGenerator.mos [simulation checking]
// keywords: simulation DrModelicaForTesting.SampleSignalGenerator
// status: correct
// teardown_command: rm -rf _DrModelicaForTesting.SampleSignalGenerator.* DrModelicaForTesting.SampleSignalGenerator_* DrModelicaForTesting.SampleSignalGenerator DrModelicaForTesting.SampleSignalGenerator.exe DrModelicaForTesting.SampleSignalGenerator.cpp DrModelicaForTesting.SampleSignalGenerator.makefile DrModelicaForTesting.SampleSignalGenerator.libs DrModelicaForTesting.SampleSignalGenerator.log DrModelicaForTesting.SampleSignalGenerator.c DrModelicaForTesting.SampleSignalGenerator.o output.log
// cflags: -d=-newInst
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica,{"3.1"}); getErrorString();
loadFile("DrModelicaForTesting.mo"); getErrorString();


simulate(DrModelicaForTesting.SampleSignalGenerator, numberOfIntervals=190, stopTime=1.0); getErrorString();

res := OpenModelica.Scripting.compareSimulationResults("DrModelicaForTesting.SampleSignalGenerator_res.mat",
  "ReferenceFiles/SampleSignalGenerator_ref.mat","DrModelicaForTesting.SampleSignalGenerator_diff.csv",0.01,0.013,
  {"startTime","period","outSignal"});
  
// Result:
// true
// ""
// true
// ""
// record SimulationResult
//     resultFile = "DrModelicaForTesting.SampleSignalGenerator_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 190, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'DrModelicaForTesting.SampleSignalGenerator', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// {"Files not Equal!","outSignal"}
// endResult
