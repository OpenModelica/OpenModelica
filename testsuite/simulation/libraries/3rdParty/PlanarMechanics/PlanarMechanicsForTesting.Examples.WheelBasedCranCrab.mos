// name:     PlanarMechanicsForTesting.Examples.WheelBasedCranCrab.mos [simulation checking]
// keywords: simulation PlanarMechanicsForTesting.Examples
// status: correct
// teardown_command: rm -rf _PlanarMechanicsForTesting.Examples.WheelBasedCranCrab.* PlanarMechanicsForTesting.Examples.WheelBasedCranCrab_* PlanarMechanicsForTesting.Examples.WheelBasedCranCrab PlanarMechanicsForTesting.Examples.WheelBasedCranCrab.exe PlanarMechanicsForTesting.Examples.WheelBasedCranCrab.cpp PlanarMechanicsForTesting.Examples.WheelBasedCranCrab.makefile PlanarMechanicsForTesting.Examples.WheelBasedCranCrab.libs PlanarMechanicsForTesting.Examples.WheelBasedCranCrab.log PlanarMechanicsForTesting.Examples.WheelBasedCranCrab.c PlanarMechanicsForTesting.Examples.WheelBasedCranCrab.o output.log
// cflags: -d=-newInst
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica,{"3.1"}); getErrorString();
loadFile("PlanarMechanicsForTesting.mo"); getErrorString();

setMatchingAlgorithm("PFPlus");
setIndexReductionMethod("dynamicStateSelection");
// adrpo: stopTime=3 is got from the experiment annotation in the model
simulate(PlanarMechanicsForTesting.Examples.WheelBasedCranCrab); getErrorString();

res := OpenModelica.Scripting.compareSimulationResults("PlanarMechanicsForTesting.Examples.WheelBasedCranCrab_res.mat",
  getEnvironmentVar("REFERENCEFILES")+"/PlanarMechanics//WheelBasedCranCrab.mat","PlanarMechanicsForTesting.Examples.WheelBasedCranCrab_diff.csv",0.01,0.035,
  {"revolute.phi", "der(revolute.phi)", "idealRolling.w", "idealRolling.vx", "idealRolling.phi"});

// Result:
// true
// ""
// true
// ""
// true
// true
// record SimulationResult
//     resultFile = "PlanarMechanicsForTesting.Examples.WheelBasedCranCrab_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 4.5, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'PlanarMechanicsForTesting.Examples.WheelBasedCranCrab', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// {"Files Equal!"}
// endResult
