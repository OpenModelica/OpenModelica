// name:     Modelica.Magnetic.FundamentalWave.Examples.BasicMachines.AIMC_DOL_MultiPhase
// keywords: simulation MSL Examples
// status: correct
// cflags: -d=-newInst
//
// Simulation Results
// Modelica Standard Library
//

runScript("../common/ModelTestingDefaults.mos"); getErrorString();

modelTestingType := OpenModelicaModelTesting.Kind.SimpleSimulation;
modelName := $TypeName(Modelica.Magnetic.FundamentalWave.Examples.BasicMachines.AIMC_DOL_MultiPhase);
compareVars :=
{
   "aimc3.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[1].Phi.re",
   "aimc3.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[2].Phi.im",
   "aimc3.stator.strayReluctance.port_p.Phi.im",
   "aimc3.stator.strayReluctance.port_p.Phi.re",
   "aimcM.rotorCage.strayInductor.inductor[4].i",
   "aimcM.rotorCage.strayInductor.inductor[5].i",
   "aimcM.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[1].Phi.re",
   "aimcM.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[2].Phi.im",
   "aimcM.stator.strayReluctance.port_p.Phi.im",
   "aimcM.stator.strayReluctance.port_p.Phi.re",
   "loadInertia3.phi",
   "loadInertia3.w",
   "loadInertiaM.phi",
   "loadInertiaM.w"
};

simulationRuntime := OpenModelicaModelTesting.SimulationRuntime.Cpp;

runScript(modelTesting);getErrorString();

// Result:
// "true
// "
// ""
// OpenModelicaModelTesting.Kind.SimpleSimulation
// Modelica.Magnetic.FundamentalWave.Examples.BasicMachines.AIMC_DOL_MultiPhase
// {"aimc3.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[1].Phi.re","aimc3.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[2].Phi.im","aimc3.stator.strayReluctance.port_p.Phi.im","aimc3.stator.strayReluctance.port_p.Phi.re","aimcM.rotorCage.strayInductor.inductor[4].i","aimcM.rotorCage.strayInductor.inductor[5].i","aimcM.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[1].Phi.re","aimcM.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[2].Phi.im","aimcM.stator.strayReluctance.port_p.Phi.im","aimcM.stator.strayReluctance.port_p.Phi.re","loadInertia3.phi","loadInertia3.w","loadInertiaM.phi","loadInertiaM.w"}
// OpenModelicaModelTesting.SimulationRuntime.Cpp
// endResult
