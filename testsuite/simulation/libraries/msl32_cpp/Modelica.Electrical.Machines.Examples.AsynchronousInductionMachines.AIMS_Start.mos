// name:     Modelica.Electrical.Machines.Examples.AsynchronousInductionMachines.AIMS_Start
// keywords: simulation MSL Examples
// status: correct
// cflags: -d=-newInst
//
// Simulation Results
// Modelica Standard Library
//

runScript("../common/ModelTestingDefaults.mos"); getErrorString();

modelTestingType := OpenModelicaModelTesting.Kind.SimpleSimulation;
modelName := $TypeName(Modelica.Electrical.Machines.Examples.AsynchronousInductionMachines.AIMS_Start);
compareVars :=
{
   "aims.idq_rr[1]",
   "aims.idq_rr[2]",
   "aims.lssigma.i_[1]",
   "aims.lssigma.i_[2]",
   "aims.lszero.i",
   "aims.lrzero.i",
   "loadInertia.phi",
   "loadInertia.w"
};

simulationRuntime := OpenModelicaModelTesting.SimulationRuntime.Cpp;

runScript(modelTesting);getErrorString();

// Result:
// "true
// "
// ""
// OpenModelicaModelTesting.Kind.SimpleSimulation
// Modelica.Electrical.Machines.Examples.AsynchronousInductionMachines.AIMS_Start
// {"aims.idq_rr[1]","aims.idq_rr[2]","aims.lssigma.i_[1]","aims.lssigma.i_[2]","aims.lszero.i","aims.lrzero.i","loadInertia.phi","loadInertia.w"}
// OpenModelicaModelTesting.SimulationRuntime.Cpp
// Simulation options: startTime = 0.0, stopTime = 1.5, numberOfIntervals = 1500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Electrical.Machines.Examples.AsynchronousInductionMachines.AIMS_Start', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''
// Result file: Modelica.Electrical.Machines.Examples.AsynchronousInductionMachines.AIMS_Start_res.mat
// "true
// "
// ""
// endResult
