// name:     Modelica.Magnetic.FundamentalWave.Examples.BasicMachines.SMPM_Inverter_MultiPhase
// keywords: simulation MSL Examples
// status: correct
// cflags: -d=-newInst
//
// Simulation Results
// Modelica Standard Library
//

runScript("../common/ModelTestingDefaults.mos"); getErrorString();

modelTestingType := OpenModelicaModelTesting.Kind.VerifiedSimulation;
modelName := $TypeName(Modelica.Magnetic.FundamentalWave.Examples.BasicMachines.SMPM_Inverter_MultiPhase);
compareVars :=
{
   "loadInertia3.phi",
   "loadInertia3.w",
   "loadInertiaM.phi",
   "loadInertiaM.w",
   "smpm3.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[1].Phi.re",
   "smpm3.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[2].Phi.im",
   "smpm3.stator.strayReluctance.port_p.Phi.im",
   "smpm3.stator.strayReluctance.port_p.Phi.re",
   "smpmM.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[1].Phi.re",
   "smpmM.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[2].Phi.im",
   "smpmM.stator.strayReluctance.port_p.Phi.im",
   "smpmM.stator.strayReluctance.port_p.Phi.re",
   "vfController.x",
   "vfController3.x"
};

simulationRuntime := OpenModelicaModelTesting.SimulationRuntime.Cpp;

runScript(modelTesting);getErrorString();

// Result:
// "true
// "
// ""
// OpenModelicaModelTesting.Kind.VerifiedSimulation
// Modelica.Magnetic.FundamentalWave.Examples.BasicMachines.SMPM_Inverter_MultiPhase
// {"loadInertia3.phi","loadInertia3.w","loadInertiaM.phi","loadInertiaM.w","smpm3.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[1].Phi.re","smpm3.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[2].Phi.im","smpm3.stator.strayReluctance.port_p.Phi.im","smpm3.stator.strayReluctance.port_p.Phi.re","smpmM.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[1].Phi.re","smpmM.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[2].Phi.im","smpmM.stator.strayReluctance.port_p.Phi.im","smpmM.stator.strayReluctance.port_p.Phi.re","vfController.x","vfController3.x"}
// OpenModelicaModelTesting.SimulationRuntime.Cpp
// Simulation options: startTime = 0.0, stopTime = 1.5, numberOfIntervals = 3000, tolerance = 1e-05, method = 'dassl', fileNamePrefix = 'Modelica.Magnetic.FundamentalWave.Examples.BasicMachines.SMPM_Inverter_MultiPhase', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''
// Result file: Modelica.Magnetic.FundamentalWave.Examples.BasicMachines.SMPM_Inverter_MultiPhase_res.mat
// Files Equal!
// "true
// "
// ""
// endResult
