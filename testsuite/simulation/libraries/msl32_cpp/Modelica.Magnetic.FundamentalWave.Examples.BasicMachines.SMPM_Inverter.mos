// name:     Modelica.Magnetic.FundamentalWave.Examples.BasicMachines.SMPM_Inverter
// keywords: simulation MSL Examples
// status: correct
// cflags: -d=-newInst
//
// Simulation Results
// Modelica Standard Library
//

runScript("../common/ModelTestingDefaults.mos"); getErrorString();

modelTestingType := OpenModelicaModelTesting.Kind.SimpleSimulation;
modelName := $TypeName(Modelica.Magnetic.FundamentalWave.Examples.BasicMachines.SMPM_Inverter);
compareVars :=
{
   "loadInertiaE.phi",
   "loadInertiaE.w",
   "loadInertiaM.phi",
   "loadInertiaM.w",
   "smpmE.idq_dr[1]",
   "smpmE.idq_rr[2]",
   "smpmE.idq_sr[1]",
   "smpmE.idq_sr[2]",
   "smpmM.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[1].Phi.re",
   "smpmM.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[2].Phi.im",
   "smpmM.stator.strayReluctance.port_p.Phi.im",
   "smpmM.stator.strayReluctance.port_p.Phi.re",
   "vfController.x"
};

simulationRuntime := OpenModelicaModelTesting.SimulationRuntime.Cpp;

runScript(modelTesting);getErrorString();

// Result:
// "true
// "
// ""
// OpenModelicaModelTesting.Kind.SimpleSimulation
// Modelica.Magnetic.FundamentalWave.Examples.BasicMachines.SMPM_Inverter
// {"loadInertiaE.phi","loadInertiaE.w","loadInertiaM.phi","loadInertiaM.w","smpmE.idq_dr[1]","smpmE.idq_rr[2]","smpmE.idq_sr[1]","smpmE.idq_sr[2]","smpmM.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[1].Phi.re","smpmM.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[2].Phi.im","smpmM.stator.strayReluctance.port_p.Phi.im","smpmM.stator.strayReluctance.port_p.Phi.re","vfController.x"}
// OpenModelicaModelTesting.SimulationRuntime.Cpp
// Simulation options: startTime = 0.0, stopTime = 1.5, numberOfIntervals = 3000, tolerance = 1e-05, method = 'dassl', fileNamePrefix = 'Modelica.Magnetic.FundamentalWave.Examples.BasicMachines.SMPM_Inverter', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''
// Result file: Modelica.Magnetic.FundamentalWave.Examples.BasicMachines.SMPM_Inverter_res.mat
// "true
// "
// ""
// endResult
