// name:     Modelica.Magnetic.FundamentalWave.Examples.BasicMachines.SMEE_Generator_MultiPhase
// keywords: simulation MSL Examples
// status: correct
// cflags: -d=-newInst
//
// Simulation Results
// Modelica Standard Library
//

runScript("../common/ModelTestingDefaults.mos"); getErrorString();

modelTestingType := OpenModelicaModelTesting.Kind.SimpleSimulation;
modelName := $TypeName(Modelica.Magnetic.FundamentalWave.Examples.BasicMachines.SMEE_Generator_MultiPhase);
compareVars :=
{
   "constantSpeed3.phi",
   "constantSpeedM.phi",
   "smee3.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[1].Phi.re",
   "smee3.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[2].Phi.im",
   "smee3.stator.strayReluctance.port_p.Phi.im",
   "smee3.stator.strayReluctance.port_p.Phi.re",
   "smeeM.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[1].Phi.re",
   "smeeM.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[2].Phi.im",
   "smeeM.stator.strayReluctance.port_p.Phi.im",
   "smeeM.stator.strayReluctance.port_p.Phi.re"
};

simulationRuntime := OpenModelicaModelTesting.SimulationRuntime.Cpp;

runScript(modelTesting);getErrorString();

// Result:
// "true
// "
// ""
// OpenModelicaModelTesting.Kind.SimpleSimulation
// Modelica.Magnetic.FundamentalWave.Examples.BasicMachines.SMEE_Generator_MultiPhase
// {"constantSpeed3.phi","constantSpeedM.phi","smee3.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[1].Phi.re","smee3.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[2].Phi.im","smee3.stator.strayReluctance.port_p.Phi.im","smee3.stator.strayReluctance.port_p.Phi.re","smeeM.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[1].Phi.re","smeeM.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[2].Phi.im","smeeM.stator.strayReluctance.port_p.Phi.im","smeeM.stator.strayReluctance.port_p.Phi.re"}
// OpenModelicaModelTesting.SimulationRuntime.Cpp
// Simulation options: startTime = 0.0, stopTime = 30.0, numberOfIntervals = 6000, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Magnetic.FundamentalWave.Examples.BasicMachines.SMEE_Generator_MultiPhase', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''
// Result file: Modelica.Magnetic.FundamentalWave.Examples.BasicMachines.SMEE_Generator_MultiPhase_res.mat
// Warning: The initial conditions are not fully specified. For more information set +d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions("+d=initialization").
//
// "true
// "
// ""
// endResult
