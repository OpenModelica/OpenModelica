// name:     Modelica.Electrical.Machines.Examples.AsynchronousInductionMachines.AIMC_withLosses
// keywords: simulation MSL Examples
// status: correct
// cflags: -d=-newInst
//
// Simulation Results
// Modelica Standard Library
//

runScript("../common/ModelTestingDefaults.mos"); getErrorString();

modelTestingType := OpenModelicaModelTesting.Kind.VerifiedSimulation;
modelName := $TypeName(Modelica.Electrical.Machines.Examples.AsynchronousInductionMachines.AIMC_withLosses);
compareVars :=
{
   "PI.x",
   "aimc.i_0_s",
   "aimc.idq_sr[1]",
   "aimc.idq_sr[2]",
   "aimc.idq_rr[1]",
   "aimc.idq_rr[2]",
   "loadInertia.phi",
   "loadInertia.w"
};

simulationRuntime := OpenModelicaModelTesting.SimulationRuntime.Cpp;

runScript(modelTesting);getErrorString();

// Result:
// "true
// "
// ""
// OpenModelicaModelTesting.Kind.VerifiedSimulation
// Modelica.Electrical.Machines.Examples.AsynchronousInductionMachines.AIMC_withLosses
// {"PI.x","aimc.i_0_s","aimc.idq_sr[1]","aimc.idq_sr[2]","aimc.idq_rr[1]","aimc.idq_rr[2]","loadInertia.phi","loadInertia.w"}
// OpenModelicaModelTesting.SimulationRuntime.Cpp
// Simulation options: startTime = 0.0, stopTime = 5.0, numberOfIntervals = 5000, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Electrical.Machines.Examples.AsynchronousInductionMachines.AIMC_withLosses', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''
// Result file: Modelica.Electrical.Machines.Examples.AsynchronousInductionMachines.AIMC_withLosses_res.mat
// Files Equal!
// "true
// "
// ""
// endResult
