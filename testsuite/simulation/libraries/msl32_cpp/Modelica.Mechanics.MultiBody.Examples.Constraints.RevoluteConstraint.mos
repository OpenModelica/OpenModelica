// name:     Modelica.Mechanics.MultiBody.Examples.Constraints.RevoluteConstraint
// keywords: simulation MSL Examples
// status: correct
// cflags: -d=-newInst
//
// Simulation Results
// Modelica Standard Library
//

runScript("../common/ModelTestingDefaults.mos"); getErrorString();

setMatchingAlgorithm("MC21A"); getErrorString();
modelTestingType := OpenModelicaModelTesting.Kind.VerifiedSimulation;
modelName := $TypeName(Modelica.Mechanics.MultiBody.Examples.Constraints.RevoluteConstraint);
compareVars :=
{
   "bodyOfJoint.body.w_a[2]",
   "joint.phi",
   "freeMotionScalarInit.initAngle.angle[1]",
   "freeMotionScalarInit.initAngle.angle[2]",
   "freeMotionScalarInit.initAngle.angle[3]",
   "bodyOfConstraint.body.w_a[1]",
   "bodyOfConstraint.body.w_a[2]",
   "bodyOfConstraint.body.w_a[3]",
   "freeMotionScalarInit.angle_d_1",
   "freeMotionScalarInit.angle_d_2",
   "freeMotionScalarInit.angle_d_3"
};

simulationRuntime := OpenModelicaModelTesting.SimulationRuntime.Cpp;

runScript(modelTesting);getErrorString();

// Result:
// "true
// "
// ""
// true
// ""
// OpenModelicaModelTesting.Kind.VerifiedSimulation
// Modelica.Mechanics.MultiBody.Examples.Constraints.RevoluteConstraint
// {"bodyOfJoint.body.w_a[2]","joint.phi","freeMotionScalarInit.initAngle.angle[1]","freeMotionScalarInit.initAngle.angle[2]","freeMotionScalarInit.initAngle.angle[3]","bodyOfConstraint.body.w_a[1]","bodyOfConstraint.body.w_a[2]","bodyOfConstraint.body.w_a[3]","freeMotionScalarInit.angle_d_1","freeMotionScalarInit.angle_d_2","freeMotionScalarInit.angle_d_3"}
// OpenModelicaModelTesting.SimulationRuntime.Cpp
// Simulation options: startTime = 0.0, stopTime = 10.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Mechanics.MultiBody.Examples.Constraints.RevoluteConstraint', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''
// Result file: Modelica.Mechanics.MultiBody.Examples.Constraints.RevoluteConstraint_res.mat
// Files Equal!
// Warning: Alias set with several free start values
//  * candidate: bodyOfConstraint.r_0[3](start = 0.1)
//  * candidate: bodyOfConstraint.body.r_0[3](start = 0.0)
// => select value from bodyOfConstraint.r_0[3](start = 0.1) for variable: bodyOfConstraint.body.frame_a.r_0[3]
// Warning: Alias set with several free start values
//  * candidate: bodyOfConstraint.r_0[2](start = -0.5)
//  * candidate: bodyOfConstraint.body.r_0[2](start = 0.0)
// => select value from bodyOfConstraint.r_0[2](start = -0.5) for variable: bodyOfConstraint.body.frame_a.r_0[2]
// Warning: Alias set with several free start values
//  * candidate: bodyOfConstraint.r_0[1](start = 0.2)
//  * candidate: bodyOfConstraint.body.r_0[1](start = 0.0)
// => select value from bodyOfConstraint.r_0[1](start = 0.2) for variable: bodyOfConstraint.body.frame_a.r_0[1]
// Warning: Alias set with several free start values
//  * candidate: bodyOfJoint.r_0[3](start = 0.1)
//  * candidate: bodyOfJoint.body.r_0[3](start = 0.0)
// => select value from bodyOfJoint.r_0[3](start = 0.1) for variable: bodyOfJoint.body.frame_a.r_0[3]
// Warning: Alias set with several free start values
//  * candidate: bodyOfJoint.r_0[2](start = -0.5)
//  * candidate: bodyOfJoint.body.r_0[2](start = 0.0)
// => select value from bodyOfJoint.r_0[2](start = -0.5) for variable: bodyOfJoint.body.frame_a.r_0[2]
// Warning: Alias set with several free start values
//  * candidate: bodyOfJoint.r_0[1](start = 0.2)
//  * candidate: bodyOfJoint.body.r_0[1](start = 0.0)
// => select value from bodyOfJoint.r_0[1](start = 0.2) for variable: bodyOfJoint.body.frame_a.r_0[1]
//
// "true
// "
// ""
// endResult
