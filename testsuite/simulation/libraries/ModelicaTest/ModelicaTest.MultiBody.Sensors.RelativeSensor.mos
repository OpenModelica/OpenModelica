// name:     ModelicaTest.MultiBody.Sensors.RelativeSensor
// keywords: simulation MSL Examples
// status: correct
// cflags: -d=-newInst
//
// Simulation Results 
// Modelica Standard Library
//

loadModel(Modelica,{"3.2.1"});
loadModel(ModelicaTest);

setMatchingAlgorithm("PFPlusExt");
setIndexReductionMethod("dynamicStateSelection");
simulate(ModelicaTest.MultiBody.Sensors.RelativeSensor);


res := OpenModelica.Scripting.compareSimulationResults("ModelicaTest.MultiBody.Sensors.RelativeSensor_res.mat",
  "ReferenceFiles/ModelicaTest.MultiBody.Sensors.RelativeSensor.mat",
  "ModelicaTest.MultiBody.Sensors.RelativeSensor_diff.csv",0.01,0.0001,
  {"revolute.phi",
"revolute.w",
"revolute1.phi",
"revolute1.w","err1[1].y","err1[2].y","err1[3].y","err1[4].y","err1[5].y","err1[6].y","err1[7].y","err1[8].y","err1[9].y",
"err1[10].y","err1[11].y","err1[12].y","err1[13].y","err1[14].y","err1[15].y","err1[16].y","err1[17].y","err1[18].y",
"err2[1].y","err2[2].y","err2[3].y","err2[4].y","err2[5].y","err2[6].y","err2[7].y","err2[8].y","err2[9].y",
"err2[10].y","err2[11].y","err2[12].y","err2[13].y","err2[14].y","err2[15].y","err2[16].y","err2[17].y","err2[18].y"});

// Result:
// b'true,
// true,
// true,
// true,
// record SimulationResult,
//     resultFile = "ModelicaTest.MultiBody.Sensors.RelativeSensor_res.mat",,
//     simulationOptions = "startTime = 0.0, stopTime = 2.0, numberOfIntervals = 500, tolerance = 1e-06, method = \'dassl\', fileNamePrefix = \'ModelicaTest.MultiBody.Sensors.RelativeSensor\', storeInTemp = false, noClean = false, options = \'\', outputFormat = \'mat\', variableFilter = \'.*\', cflags = \'\', simflags = \'\'",,
//     messages = "",,
// end SimulationResult;,
// "Files Equal!",
// '
// endResult
