//name:        Simulate Modelica.Electrical.Analog.Examples [version 3.1]
//keyword:     instantiating/check/simulate MSL 3.1 Modelica.Electrical.Analog.Examples
//status:      correct
// cflags: -d=-newInst
//
// instantiate/check/simulate model example
//

loadModel(Modelica,{"3.1"}); getErrorString();

// Modelica.Electrical.Analog.Examples
instantiateModel(Modelica.Electrical.Analog.Examples.AmplifierWithOpAmpDetailed);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.AmplifierWithOpAmpDetailed);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.AmplifierWithOpAmpDetailed);  getErrorString(); 


instantiateModel(Modelica.Electrical.Analog.Examples.CauerLowPassAnalog);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.CauerLowPassAnalog);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.CauerLowPassAnalog);  getErrorString(); 


instantiateModel(Modelica.Electrical.Analog.Examples.CauerLowPassOPV);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.CauerLowPassOPV);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.CauerLowPassOPV);  getErrorString(); 


instantiateModel(Modelica.Electrical.Analog.Examples.CauerLowPassSC);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.CauerLowPassSC);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.CauerLowPassSC);  getErrorString(); 


instantiateModel(Modelica.Electrical.Analog.Examples.CauerLowPassSC.Rn);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.CauerLowPassSC.Rn);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.CauerLowPassSC.Rn);  getErrorString(); 


instantiateModel(Modelica.Electrical.Analog.Examples.CauerLowPassSC.Rp);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.CauerLowPassSC.Rp);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.CauerLowPassSC.Rp);  getErrorString(); 


instantiateModel(Modelica.Electrical.Analog.Examples.CharacteristicIdealDiodes);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.CharacteristicIdealDiodes);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.CharacteristicIdealDiodes);  getErrorString(); 


instantiateModel(Modelica.Electrical.Analog.Examples.CharacteristicThyristors);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.CharacteristicThyristors);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.CharacteristicThyristors);  getErrorString(); 


instantiateModel(Modelica.Electrical.Analog.Examples.ChuaCircuit);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.ChuaCircuit);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.ChuaCircuit);  getErrorString(); 


instantiateModel(Modelica.Electrical.Analog.Examples.CompareTransformers);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.CompareTransformers);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.CompareTransformers);  getErrorString(); 


instantiateModel(Modelica.Electrical.Analog.Examples.ControlledSwitchWithArc);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.ControlledSwitchWithArc);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.ControlledSwitchWithArc);  getErrorString(); 


instantiateModel(Modelica.Electrical.Analog.Examples.DifferenceAmplifier);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.DifferenceAmplifier);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.DifferenceAmplifier);  getErrorString(); 


instantiateModel(Modelica.Electrical.Analog.Examples.HeatingMOSInverter);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.HeatingMOSInverter);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.HeatingMOSInverter);  getErrorString(); 


instantiateModel(Modelica.Electrical.Analog.Examples.HeatingNPN_OrGate);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.HeatingNPN_OrGate);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.HeatingNPN_OrGate);  getErrorString(); 


instantiateModel(Modelica.Electrical.Analog.Examples.HeatingRectifier);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.HeatingRectifier);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.HeatingRectifier);  getErrorString(); 


instantiateModel(Modelica.Electrical.Analog.Examples.HeatingResistor);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.HeatingResistor);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.HeatingResistor);  getErrorString(); 


instantiateModel(Modelica.Electrical.Analog.Examples.NandGate);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.NandGate);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.NandGate);  getErrorString(); 


instantiateModel(Modelica.Electrical.Analog.Examples.OvervoltageProtection);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.OvervoltageProtection);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.OvervoltageProtection);  getErrorString(); 


instantiateModel(Modelica.Electrical.Analog.Examples.Rectifier);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.Rectifier);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.Rectifier);  getErrorString(); 


instantiateModel(Modelica.Electrical.Analog.Examples.ShowSaturatingInductor);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.ShowSaturatingInductor);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.ShowSaturatingInductor);  getErrorString(); 


instantiateModel(Modelica.Electrical.Analog.Examples.ShowVariableResistor);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.ShowVariableResistor);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.ShowVariableResistor);  getErrorString(); 


instantiateModel(Modelica.Electrical.Analog.Examples.SwitchWithArc);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.SwitchWithArc);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.SwitchWithArc);  getErrorString(); 


instantiateModel(Modelica.Electrical.Analog.Examples.ThyristorBehaviourTest);  getErrorString(); 
checkModel(Modelica.Electrical.Analog.Examples.ThyristorBehaviourTest);  getErrorString(); 
simulate(Modelica.Electrical.Analog.Examples.ThyristorBehaviourTest);  getErrorString(); 

system("rm -f *.c *.dll *.log *.makefile *.cpp *.exe *.h *.libs *_init.xml *_init.txt *_res.mat");


// Result:
// true
// ""
// "function Modelica.Electrical.Analog.Basic.OpAmpDetailed.FCNiout_limit
//   input Real v_source(quantity = "ElectricPotential", unit = "V");
//   input Real v_out(quantity = "ElectricPotential", unit = "V");
//   input Real Rout(quantity = "Resistance", unit = "Ohm");
//   input Real Imaxsi_val(quantity = "ElectricCurrent", unit = "A");
//   input Real Imaxso_val(quantity = "ElectricCurrent", unit = "A");
//   output Real result(quantity = "ElectricCurrent", unit = "A");
// algorithm
//   if v_out > v_source + Rout * Imaxsi_val then
//     result := Imaxsi_val;
//   elseif v_out < v_source - Rout * Imaxso_val then
//     result := -Imaxso_val;
//   else
//     result := (v_out - v_source) / Rout;
//   end if;
//   return;
// end Modelica.Electrical.Analog.Basic.OpAmpDetailed.FCNiout_limit;
// 
// function Modelica.Electrical.Analog.Basic.OpAmpDetailed.FCNq_sum_limit
//   input Real q_sum(quantity = "ElectricPotential", unit = "V");
//   input Real q_sum_ltf(quantity = "ElectricPotential", unit = "V");
//   input Real v_pos(quantity = "ElectricPotential", unit = "V");
//   input Real v_neg(quantity = "ElectricPotential", unit = "V");
//   input Real vcp(quantity = "ElectricPotential", unit = "V");
//   input Real vcm(quantity = "ElectricPotential", unit = "V");
//   output Real result(quantity = "ElectricPotential", unit = "V");
// algorithm
//   if q_sum > v_pos - vcp AND q_sum_ltf >= v_pos - vcp then
//     result := v_pos - vcp;
//   elseif q_sum < v_neg + vcm AND q_sum_ltf <= v_neg + vcm then
//     result := v_neg + vcm;
//   else
//     result := q_sum;
//   end if;
//   return;
// end Modelica.Electrical.Analog.Basic.OpAmpDetailed.FCNq_sum_limit;
// 
// function Modelica.Math.asin
//   input Real u;
//   output Real y(quantity = "Angle", unit = "rad", displayUnit = "deg");
// 
// external "C";
// end Modelica.Math.asin;
// 
// function Modelica.Math.sin
//   input Real u(quantity = "Angle", unit = "rad", displayUnit = "deg");
//   output Real y;
// 
// external "C";
// end Modelica.Math.sin;
// 
// class Modelica.Electrical.Analog.Examples.AmplifierWithOpAmpDetailed
//   parameter Real opAmp.Rdm(quantity = "Resistance", unit = "Ohm") = 2000000.0 "input resistance (differential input mode)";
//   parameter Real opAmp.Rcm(quantity = "Resistance", unit = "Ohm") = 2000000000.0 "input resistance (common mode)";
//   parameter Real opAmp.Cin(quantity = "Capacitance", unit = "F", min = 0.0) = 1.4e-12 "input capacitance";
//   parameter Real opAmp.Vos(quantity = "ElectricPotential", unit = "V") = 0.001 "input offset voltage";
//   parameter Real opAmp.Ib(quantity = "ElectricCurrent", unit = "A") = 8e-08 "input bias current";
//   parameter Real opAmp.Ios(quantity = "ElectricCurrent", unit = "A") = 2e-08 "input offset current";
//   parameter Real opAmp.vcp(quantity = "ElectricPotential", unit = "V") = 0.0 "correction value for limiting by p_supply";
//   parameter Real opAmp.vcm(quantity = "ElectricPotential", unit = "V") = 0.0 "correction value for limiting by msupply";
//   parameter Real opAmp.Avd0 = 106.0 "differential amplifier [dB]";
//   parameter Real opAmp.CMRR = 90.0 "common-mode rejection [dB]";
//   parameter Real opAmp.fp1(quantity = "Frequency", unit = "Hz") = 5.0 "dominant pole";
//   parameter Real opAmp.fp2(quantity = "Frequency", unit = "Hz") = 2000000.0 "pole frequency";
//   parameter Real opAmp.fp3(quantity = "Frequency", unit = "Hz") = 20000000.0 "pole frequency";
//   parameter Real opAmp.fp4(quantity = "Frequency", unit = "Hz") = 100000000.0 "pole frequency";
//   parameter Real opAmp.fz(quantity = "Frequency", unit = "Hz") = 5000000.0 "zero frequency";
//   parameter Real opAmp.sr_p(quantity = "VoltageSlope", unit = "V/s") = 500000.0 "slew rate for increase";
//   parameter Real opAmp.sr_m(quantity = "VoltageSlope", unit = "V/s") = 500000.0 "slew rate for decrease";
//   parameter Real opAmp.Rout(quantity = "Resistance", unit = "Ohm") = 75.0 "output resistance";
//   parameter Real opAmp.Imaxso(quantity = "ElectricCurrent", unit = "A") = 0.025 "maximal output current (source current)";
//   parameter Real opAmp.Imaxsi(quantity = "ElectricCurrent", unit = "A") = 0.025 "maximal output current (sink current)";
//   parameter Real opAmp.Ts(quantity = "Time", unit = "s") = 1.2e-06 "sampling time";
//   constant Real opAmp.Pi = 3.141592654;
//   parameter Real opAmp.vcp_abs(quantity = "ElectricPotential", unit = "V") = abs(opAmp.vcp);
//   parameter Real opAmp.vcm_abs(quantity = "ElectricPotential", unit = "V") = abs(opAmp.vcm);
//   parameter Real opAmp.I1(quantity = "ElectricCurrent", unit = "A") = opAmp.Ib + opAmp.Ios / 2.0;
//   parameter Real opAmp.I2(quantity = "ElectricCurrent", unit = "A") = opAmp.Ib - opAmp.Ios / 2.0;
//   parameter Real opAmp.Avd0_val = 10.0 ^ (opAmp.Avd0 / 20.0) "differential mode gain";
//   parameter Real opAmp.Avcm_val = opAmp.Avd0_val * 10.0 ^ ((-opAmp.CMRR) / 20.0) / 2.0 "common mode gain";
//   parameter Real opAmp.sr_p_val(quantity = "VoltageSlope", unit = "V/s") = abs(opAmp.sr_p);
//   parameter Real opAmp.sr_m_val(quantity = "VoltageSlope", unit = "V/s") = -abs(opAmp.sr_m);
//   parameter Real opAmp.Imaxso_val(quantity = "ElectricCurrent", unit = "A") = abs(opAmp.Imaxso) "orientation out outp";
//   parameter Real opAmp.Imaxsi_val(quantity = "ElectricCurrent", unit = "A") = abs(opAmp.Imaxsi) "orientation into outp";
//   Real opAmp.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real opAmp.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real opAmp.m.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real opAmp.m.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real opAmp.outp.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real opAmp.outp.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real opAmp.p_supply.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real opAmp.p_supply.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real opAmp.m_supply.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real opAmp.m_supply.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real opAmp.v_pos(quantity = "ElectricPotential", unit = "V");
//   Real opAmp.v_neg(quantity = "ElectricPotential", unit = "V");
//   Real opAmp.v_vos(quantity = "ElectricPotential", unit = "V");
//   Real opAmp.v_3(quantity = "ElectricPotential", unit = "V");
//   Real opAmp.v_in(quantity = "ElectricPotential", unit = "V");
//   Real opAmp.v_4(quantity = "ElectricPotential", unit = "V");
//   Real opAmp.i_vos(quantity = "ElectricCurrent", unit = "A");
//   Real opAmp.i_3(quantity = "ElectricCurrent", unit = "A");
//   Real opAmp.i_r2(quantity = "ElectricCurrent", unit = "A");
//   Real opAmp.i_c3(quantity = "ElectricCurrent", unit = "A");
//   Real opAmp.i_4(quantity = "ElectricCurrent", unit = "A");
//   Real opAmp.q_fr1;
//   Real opAmp.q_fr2;
//   Real opAmp.q_fr3;
//   Real opAmp.q_sum(quantity = "ElectricPotential", unit = "V");
//   Real opAmp.q_sum_help(quantity = "ElectricPotential", unit = "V");
//   Real opAmp.q_fp1(quantity = "ElectricPotential", unit = "V");
//   Real opAmp.v_source(quantity = "ElectricPotential", unit = "V");
//   Real opAmp.x(quantity = "ElectricPotential", unit = "V") "auxiliary variable for slew rate";
//   Real opAmp.v_out(quantity = "ElectricPotential", unit = "V");
//   Real opAmp.i_out(quantity = "ElectricCurrent", unit = "A");
//   Real resistor.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real resistor.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real resistor.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real resistor.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean resistor.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real resistor.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = resistor.T_ref "Fixed device temperature if useHeatPort = false";
//   Real resistor.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real resistor.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real resistor.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 10000.0 "Resistance at temperature T_ref";
//   parameter Real resistor.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real resistor.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real resistor.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real resistor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real resistor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real resistor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real resistor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean resistor1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real resistor1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = resistor1.T_ref "Fixed device temperature if useHeatPort = false";
//   Real resistor1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real resistor1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real resistor1.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 20000.0 "Resistance at temperature T_ref";
//   parameter Real resistor1.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real resistor1.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real resistor1.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real resistor2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real resistor2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real resistor2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real resistor2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean resistor2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real resistor2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = resistor2.T_ref "Fixed device temperature if useHeatPort = false";
//   Real resistor2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real resistor2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real resistor2.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 10000.0 "Resistance at temperature T_ref";
//   parameter Real resistor2.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real resistor2.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real resistor2.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real sineVoltage.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real sineVoltage.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real sineVoltage.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real sineVoltage.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real sineVoltage.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real sineVoltage.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real sineVoltage.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real sineVoltage.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real sineVoltage.signalSource.y "Connector of Real output signal";
//   parameter Real sineVoltage.signalSource.amplitude = sineVoltage.V "Amplitude of sine wave";
//   parameter Real sineVoltage.signalSource.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = sineVoltage.freqHz "Frequency of sine wave";
//   parameter Real sineVoltage.signalSource.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = sineVoltage.phase "Phase of sine wave";
//   parameter Real sineVoltage.signalSource.offset = sineVoltage.offset "Offset of output signal";
//   parameter Real sineVoltage.signalSource.startTime(quantity = "Time", unit = "s") = sineVoltage.startTime "Output = offset for time < startTime";
//   protected constant Real sineVoltage.signalSource.pi = 3.14159265358979;
//   parameter Real sineVoltage.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 12.0 "Amplitude of sine wave";
//   parameter Real sineVoltage.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = 0.0 "Phase of sine wave";
//   parameter Real sineVoltage.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = 1000.0 "Frequency of sine wave";
//   Real ground.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real ground.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real constantVoltage.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real constantVoltage.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real constantVoltage.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real constantVoltage.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real constantVoltage.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real constantVoltage.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real constantVoltage.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 15.0 "Value of constant voltage";
//   Real constantVoltage1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real constantVoltage1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real constantVoltage1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real constantVoltage1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real constantVoltage1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real constantVoltage1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real constantVoltage1.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = -15.0 "Value of constant voltage";
// equation
//   assert(opAmp.Rout > 0.0,"Rout must be > 0.0.");
//   opAmp.v_pos = opAmp.p_supply.v;
//   opAmp.v_neg = opAmp.m_supply.v;
//   opAmp.p.i = opAmp.i_vos;
//   opAmp.m.i = opAmp.i_4 - opAmp.i_r2 - opAmp.i_c3;
//   0.0 = opAmp.i_3 + (opAmp.i_r2 + opAmp.i_c3) - opAmp.i_vos;
//   opAmp.p.v - opAmp.m.v = opAmp.v_vos + opAmp.v_in;
//   opAmp.v_4 = opAmp.m.v;
//   opAmp.v_3 = opAmp.p.v - opAmp.v_vos;
//   opAmp.v_vos = opAmp.Vos;
//   opAmp.i_3 = opAmp.I1 + opAmp.v_3 / opAmp.Rcm;
//   opAmp.v_in = opAmp.Rdm * opAmp.i_r2;
//   opAmp.i_c3 = opAmp.Cin * der(opAmp.v_in);
//   opAmp.i_4 = opAmp.I2 + opAmp.v_4 / opAmp.Rcm;
//   der(opAmp.q_fr1) = 6.283185308 * (opAmp.fp2 * (opAmp.v_in - opAmp.q_fr1));
//   opAmp.q_fr2 + der(opAmp.q_fr2) * 1.0 / opAmp.fp3 / 6.283185308 = opAmp.q_fr1 + der(opAmp.q_fr1) * 1.0 / opAmp.fz / 6.283185308;
//   der(opAmp.q_fr3) = 6.283185308 * (opAmp.fp4 * (opAmp.q_fr2 - opAmp.q_fr3));
//   opAmp.q_sum = opAmp.Avd0_val * opAmp.q_fr3 + opAmp.Avcm_val * (opAmp.v_3 + opAmp.v_4);
//   opAmp.q_sum_help = Modelica.Electrical.Analog.Basic.OpAmpDetailed.FCNq_sum_limit(opAmp.q_sum,opAmp.q_fp1,opAmp.v_pos,opAmp.v_neg,opAmp.vcp_abs,opAmp.vcm_abs);
//   der(opAmp.q_fp1) = 6.283185308 * (opAmp.fp1 * (opAmp.q_sum_help - opAmp.q_fp1));
//   if initial() then
//   opAmp.v_source = opAmp.q_fp1;
//   opAmp.x = 0.0;
//   end if;
//   der(opAmp.x) = (opAmp.q_fp1 - opAmp.v_source) / opAmp.Ts;
//   der(opAmp.v_source) = if noEvent(der(opAmp.x) > opAmp.sr_p_val) then opAmp.sr_p_val else if noEvent(der(opAmp.x) < opAmp.sr_m_val) then opAmp.sr_m_val else der(opAmp.x);
//   opAmp.v_out = opAmp.outp.v;
//   opAmp.i_out = opAmp.outp.i;
//   opAmp.i_out = Modelica.Electrical.Analog.Basic.OpAmpDetailed.FCNiout_limit(opAmp.v_source,opAmp.v_out,opAmp.Rout,opAmp.Imaxsi_val,opAmp.Imaxso_val);
//   opAmp.p_supply.i = 0.0;
//   opAmp.m_supply.i = 0.0;
//   assert(1.0 + resistor.alpha * (resistor.T_heatPort - resistor.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   resistor.R_actual = resistor.R * (1.0 + resistor.alpha * (resistor.T_heatPort - resistor.T_ref));
//   resistor.v = resistor.R_actual * resistor.i;
//   resistor.LossPower = resistor.v * resistor.i;
//   resistor.i = resistor.p.i;
//   0.0 = resistor.p.i + resistor.n.i;
//   resistor.v = resistor.p.v - resistor.n.v;
//   resistor.T_heatPort = resistor.T;
//   assert(1.0 + resistor1.alpha * (resistor1.T_heatPort - resistor1.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   resistor1.R_actual = resistor1.R * (1.0 + resistor1.alpha * (resistor1.T_heatPort - resistor1.T_ref));
//   resistor1.v = resistor1.R_actual * resistor1.i;
//   resistor1.LossPower = resistor1.v * resistor1.i;
//   resistor1.i = resistor1.p.i;
//   0.0 = resistor1.p.i + resistor1.n.i;
//   resistor1.v = resistor1.p.v - resistor1.n.v;
//   resistor1.T_heatPort = resistor1.T;
//   assert(1.0 + resistor2.alpha * (resistor2.T_heatPort - resistor2.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   resistor2.R_actual = resistor2.R * (1.0 + resistor2.alpha * (resistor2.T_heatPort - resistor2.T_ref));
//   resistor2.v = resistor2.R_actual * resistor2.i;
//   resistor2.LossPower = resistor2.v * resistor2.i;
//   resistor2.i = resistor2.p.i;
//   0.0 = resistor2.p.i + resistor2.n.i;
//   resistor2.v = resistor2.p.v - resistor2.n.v;
//   resistor2.T_heatPort = resistor2.T;
//   sineVoltage.signalSource.y = sineVoltage.signalSource.offset + (if time < sineVoltage.signalSource.startTime then 0.0 else sineVoltage.signalSource.amplitude * Modelica.Math.sin(6.28318530717959 * (sineVoltage.signalSource.freqHz * (time - sineVoltage.signalSource.startTime)) + sineVoltage.signalSource.phase));
//   sineVoltage.v = sineVoltage.signalSource.y;
//   sineVoltage.v = sineVoltage.p.v - sineVoltage.n.v;
//   0.0 = sineVoltage.p.i + sineVoltage.n.i;
//   sineVoltage.i = sineVoltage.p.i;
//   ground.p.v = 0.0;
//   constantVoltage.v = constantVoltage.V;
//   constantVoltage.v = constantVoltage.p.v - constantVoltage.n.v;
//   0.0 = constantVoltage.p.i + constantVoltage.n.i;
//   constantVoltage.i = constantVoltage.p.i;
//   constantVoltage1.v = constantVoltage1.V;
//   constantVoltage1.v = constantVoltage1.p.v - constantVoltage1.n.v;
//   0.0 = constantVoltage1.p.i + constantVoltage1.n.i;
//   constantVoltage1.i = constantVoltage1.p.i;
//   opAmp.outp.i + (resistor1.n.i + resistor2.p.i) = 0.0;
//   opAmp.outp.v = resistor1.n.v;
//   opAmp.outp.v = resistor2.p.v;
//   constantVoltage.n.i + (constantVoltage1.n.i + (resistor2.n.i + (opAmp.p.i + (sineVoltage.n.i + ground.p.i)))) = 0.0;
//   constantVoltage.n.v = constantVoltage1.n.v;
//   constantVoltage.n.v = ground.p.v;
//   constantVoltage.n.v = opAmp.p.v;
//   constantVoltage.n.v = resistor2.n.v;
//   constantVoltage.n.v = sineVoltage.n.v;
//   opAmp.m_supply.i + constantVoltage1.p.i = 0.0;
//   constantVoltage1.p.v = opAmp.m_supply.v;
//   opAmp.p_supply.i + constantVoltage.p.i = 0.0;
//   constantVoltage.p.v = opAmp.p_supply.v;
//   resistor1.p.i + (resistor.n.i + opAmp.m.i) = 0.0;
//   opAmp.m.v = resistor.n.v;
//   opAmp.m.v = resistor1.p.v;
//   resistor.p.i + sineVoltage.p.i = 0.0;
//   resistor.p.v = sineVoltage.p.v;
// end Modelica.Electrical.Analog.Examples.AmplifierWithOpAmpDetailed;
// "
// ""
// "Check of Modelica.Electrical.Analog.Examples.AmplifierWithOpAmpDetailed completed successfully.
// 
// 
// Class Modelica.Electrical.Analog.Examples.AmplifierWithOpAmpDetailed has 79 equation(s) and 79 variable(s).
// 43 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "",
//     messages = "Simulation failed for model: Modelica.Electrical.Analog.Examples.AmplifierWithOpAmpDetailed
// [Basic.mo:1798:6-1801:12:writable] Error: If-equation with conditions that are not parameter expressions must have the same number of equations in each branch, equation count is {2,0} for each respective branch.
// [Basic.mo:1798:6-1801:12:writable] Error: The language feature if-equations is not supported. Suggested workaround: rewrite equations using if-expressions: equation
//   if initial() then
//   opAmp.v_source = opAmp.q_fp1;
//   opAmp.x = 0.0;
//   end if;
// 
// "
// end SimulationResult;
// ""
// "class Modelica.Electrical.Analog.Examples.CauerLowPassAnalog
//   parameter Real l1(quantity = "Inductance", unit = "H") = 1.304 "filter coefficient I1";
//   parameter Real l2(quantity = "Inductance", unit = "H") = 0.8586 "filter coefficient I2";
//   parameter Real c1(quantity = "Capacitance", unit = "F", min = 0.0) = 1.072 "filter coefficient c1";
//   parameter Real c2(quantity = "Capacitance", unit = "F", min = 0.0) = 1.0 / l1 / 2.906997720064 "filter coefficient c2";
//   parameter Real c3(quantity = "Capacitance", unit = "F", min = 0.0) = 1.682 "filter coefficient c3";
//   parameter Real c4(quantity = "Capacitance", unit = "F", min = 0.0) = 1.0 / l2 / 1.392270203025 "filter coefficient c4";
//   parameter Real c5(quantity = "Capacitance", unit = "F", min = 0.0) = 0.7262 "filter coefficient c5";
//   Real G.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real G.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C1.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = c1 "Capacitance";
//   Real C2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C2.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = c2 "Capacitance";
//   Real C3.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C3.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C3.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C3.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C3.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C3.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C3.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = c3 "Capacitance";
//   Real C4.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C4.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C4.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C4.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C4.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C4.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C4.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = c4 "Capacitance";
//   Real C5.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C5.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C5.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C5.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C5.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C5.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C5.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = c5 "Capacitance";
//   Real L1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real L1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real L1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real L1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real L1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real L1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real L1.L(quantity = "Inductance", unit = "H", start = 1.0) = l1 "Inductance";
//   Real L2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real L2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real L2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real L2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real L2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real L2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real L2.L(quantity = "Inductance", unit = "H", start = 1.0) = l2 "Inductance";
//   Real R1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R1.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R1.R(quantity = "Resistance", unit = "Ohm", start = 1.0) "Resistance at temperature T_ref";
//   parameter Real R1.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R1.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R1.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R2.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R2.R(quantity = "Resistance", unit = "Ohm", start = 1.0) "Resistance at temperature T_ref";
//   parameter Real R2.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R2.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R2.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real V.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real V.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real V.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real V.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real V.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real V.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real V.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real V.startTime(quantity = "Time", unit = "s") = 1.0 "Time offset";
//   output Real V.signalSource.y "Connector of Real output signal";
//   parameter Real V.signalSource.offset = V.offset "Offset of output signal y";
//   parameter Real V.signalSource.startTime(quantity = "Time", unit = "s") = V.startTime "Output y = offset for time < startTime";
//   parameter Real V.signalSource.height = V.V "Height of step";
//   parameter Real V.V(quantity = "ElectricPotential", unit = "V", start = 1.0) "Height of step";
// equation
//   G.p.v = 0.0;
//   C1.i = C1.C * der(C1.v);
//   C1.v = C1.p.v - C1.n.v;
//   0.0 = C1.p.i + C1.n.i;
//   C1.i = C1.p.i;
//   C2.i = C2.C * der(C2.v);
//   C2.v = C2.p.v - C2.n.v;
//   0.0 = C2.p.i + C2.n.i;
//   C2.i = C2.p.i;
//   C3.i = C3.C * der(C3.v);
//   C3.v = C3.p.v - C3.n.v;
//   0.0 = C3.p.i + C3.n.i;
//   C3.i = C3.p.i;
//   C4.i = C4.C * der(C4.v);
//   C4.v = C4.p.v - C4.n.v;
//   0.0 = C4.p.i + C4.n.i;
//   C4.i = C4.p.i;
//   C5.i = C5.C * der(C5.v);
//   C5.v = C5.p.v - C5.n.v;
//   0.0 = C5.p.i + C5.n.i;
//   C5.i = C5.p.i;
//   L1.L * der(L1.i) = L1.v;
//   L1.v = L1.p.v - L1.n.v;
//   0.0 = L1.p.i + L1.n.i;
//   L1.i = L1.p.i;
//   L2.L * der(L2.i) = L2.v;
//   L2.v = L2.p.v - L2.n.v;
//   0.0 = L2.p.i + L2.n.i;
//   L2.i = L2.p.i;
//   assert(1.0 + R1.alpha * (R1.T_heatPort - R1.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R1.R_actual = R1.R * (1.0 + R1.alpha * (R1.T_heatPort - R1.T_ref));
//   R1.v = R1.R_actual * R1.i;
//   R1.LossPower = R1.v * R1.i;
//   R1.i = R1.p.i;
//   0.0 = R1.p.i + R1.n.i;
//   R1.v = R1.p.v - R1.n.v;
//   R1.T_heatPort = R1.T;
//   assert(1.0 + R2.alpha * (R2.T_heatPort - R2.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R2.R_actual = R2.R * (1.0 + R2.alpha * (R2.T_heatPort - R2.T_ref));
//   R2.v = R2.R_actual * R2.i;
//   R2.LossPower = R2.v * R2.i;
//   R2.i = R2.p.i;
//   0.0 = R2.p.i + R2.n.i;
//   R2.v = R2.p.v - R2.n.v;
//   R2.T_heatPort = R2.T;
//   V.signalSource.y = V.signalSource.offset + (if time < V.signalSource.startTime then 0.0 else V.signalSource.height);
//   V.v = V.signalSource.y;
//   V.v = V.p.v - V.n.v;
//   0.0 = V.p.i + V.n.i;
//   V.i = V.p.i;
//   V.n.i + (C5.n.i + (C3.n.i + (R2.n.i + (C1.n.i + G.p.i)))) = 0.0;
//   C1.n.v = C3.n.v;
//   C1.n.v = C5.n.v;
//   C1.n.v = G.p.v;
//   C1.n.v = R2.n.v;
//   C1.n.v = V.n.v;
//   R1.p.i + V.p.i = 0.0;
//   R1.p.v = V.p.v;
//   L2.n.i + (C4.n.i + (C5.p.i + R2.p.i)) = 0.0;
//   C4.n.v = C5.p.v;
//   C4.n.v = L2.n.v;
//   C4.n.v = R2.p.v;
//   L2.p.i + (L1.n.i + (C2.n.i + (C3.p.i + C4.p.i))) = 0.0;
//   C2.n.v = C3.p.v;
//   C2.n.v = C4.p.v;
//   C2.n.v = L1.n.v;
//   C2.n.v = L2.p.v;
//   L1.p.i + (R1.n.i + (C1.p.i + C2.p.i)) = 0.0;
//   C1.p.v = C2.p.v;
//   C1.p.v = L1.p.v;
//   C1.p.v = R1.n.v;
// end Modelica.Electrical.Analog.Examples.CauerLowPassAnalog;
// "
// ""
// "Check of Modelica.Electrical.Analog.Examples.CauerLowPassAnalog completed successfully.
// 
// 
// Class Modelica.Electrical.Analog.Examples.CauerLowPassAnalog has 69 equation(s) and 69 variable(s).
// 41 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.CauerLowPassAnalog_res.mat",
//     messages = ""
// end SimulationResult;
// "Error: Variable V.V not found in scope <global scope>
// "
// "class Modelica.Electrical.Analog.Examples.CauerLowPassOPV
//   parameter Real l1(quantity = "Capacitance", unit = "F", min = 0.0) = 1.304 "filter coefficient i1";
//   parameter Real l2(quantity = "Capacitance", unit = "F", min = 0.0) = 0.8586 "filter coefficient i2";
//   parameter Real c1(quantity = "Capacitance", unit = "F", min = 0.0) = 1.072 "filter coefficient c1";
//   parameter Real c2(quantity = "Capacitance", unit = "F", min = 0.0) = 1.0 / l1 / 2.906997720064 "filter coefficient c2";
//   parameter Real c3(quantity = "Capacitance", unit = "F", min = 0.0) = 1.682 "filter coefficient c3";
//   parameter Real c4(quantity = "Capacitance", unit = "F", min = 0.0) = 1.0 / l2 / 1.392270203025 "filter coefficient c4";
//   parameter Real c5(quantity = "Capacitance", unit = "F", min = 0.0) = 0.7262 "filter coefficient c5";
//   Real C1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C1.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = c1 + c2 "Capacitance";
//   Real C2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C2.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = c2 "Capacitance";
//   Real C3.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C3.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C3.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C3.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C3.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C3.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C3.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = l1 "Capacitance";
//   Real C4.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C4.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C4.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C4.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C4.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C4.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C4.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = c4 "Capacitance";
//   Real C5.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C5.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C5.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C5.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C5.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C5.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C5.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = c2 "Capacitance";
//   Real R1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R1.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R1.R(quantity = "Resistance", unit = "Ohm", start = 1.0) "Resistance at temperature T_ref";
//   parameter Real R1.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R1.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R1.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R2.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R2.R(quantity = "Resistance", unit = "Ohm", start = 1.0) "Resistance at temperature T_ref";
//   parameter Real R2.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R2.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R2.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R3.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R3.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R3.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R3.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R3.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R3.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R3.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R3.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R3.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R3.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R3.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R3.R(quantity = "Resistance", unit = "Ohm", start = 1.0) "Resistance at temperature T_ref";
//   parameter Real R3.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R3.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R3.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real Op1.in_p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op1.in_p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op1.in_n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op1.in_n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op1.out.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op1.out.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real G.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real G.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R4.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R4.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R4.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R4.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R4.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R4.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R4.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R4.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R4.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R4.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R4.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R4.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = -1.0 "Resistance at temperature T_ref";
//   parameter Real R4.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R4.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R4.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R5.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R5.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R5.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R5.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R5.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R5.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R5.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R5.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R5.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R5.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R5.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R5.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = -1.0 "Resistance at temperature T_ref";
//   parameter Real R5.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R5.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R5.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real Op2.in_p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op2.in_p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op2.in_n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op2.in_n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op2.out.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op2.out.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op3.in_p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op3.in_p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op3.in_n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op3.in_n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op3.out.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op3.out.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real G1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real G1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R6.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R6.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R6.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R6.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R6.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R6.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R6.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R6.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R6.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R6.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R6.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R6.R(quantity = "Resistance", unit = "Ohm", start = 1.0) "Resistance at temperature T_ref";
//   parameter Real R6.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R6.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R6.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R7.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R7.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R7.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R7.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R7.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R7.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R7.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R7.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R7.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R7.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R7.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R7.R(quantity = "Resistance", unit = "Ohm", start = 1.0) "Resistance at temperature T_ref";
//   parameter Real R7.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R7.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R7.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real C6.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C6.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C6.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C6.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C6.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C6.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C6.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = c2 + (c3 + c4) "Capacitance";
//   Real R8.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R8.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R8.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R8.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R8.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R8.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R8.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R8.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R8.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R8.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R8.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R8.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = -1.0 "Resistance at temperature T_ref";
//   parameter Real R8.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R8.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R8.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R9.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R9.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R9.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R9.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R9.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R9.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R9.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R9.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R9.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R9.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R9.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R9.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = -1.0 "Resistance at temperature T_ref";
//   parameter Real R9.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R9.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R9.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R10.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R10.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R10.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R10.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R10.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R10.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R10.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R10.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R10.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R10.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R10.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R10.R(quantity = "Resistance", unit = "Ohm", start = 1.0) "Resistance at temperature T_ref";
//   parameter Real R10.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R10.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R10.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real Op4.in_p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op4.in_p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op4.in_n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op4.in_n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op4.out.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op4.out.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op5.in_p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op5.in_p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op5.in_n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op5.in_n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op5.out.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op5.out.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C7.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C7.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C7.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C7.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C7.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C7.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C7.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = l2 "Capacitance";
//   Real C8.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C8.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C8.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C8.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C8.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C8.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C8.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = c4 "Capacitance";
//   Real C9.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C9.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C9.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C9.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C9.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C9.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C9.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = c4 + c5 "Capacitance";
//   Real R11.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R11.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R11.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R11.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R11.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R11.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R11.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R11.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R11.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R11.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R11.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R11.R(quantity = "Resistance", unit = "Ohm", start = 1.0) "Resistance at temperature T_ref";
//   parameter Real R11.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R11.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R11.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n3.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n3.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n4.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n4.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n5.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n5.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real p1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real p1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n6.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n6.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n7.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n7.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n8.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n8.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real p2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real p2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real out1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real out1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real p3.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real p3.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n9.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n9.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n10.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n10.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n11.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n11.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real G2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real G2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n12.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n12.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n13.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n13.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real p4.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real p4.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n14.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n14.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real G3.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real G3.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real G4.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real G4.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real V.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real V.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real V.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real V.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real V.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real V.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real V.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real V.startTime(quantity = "Time", unit = "s") = 1.0 "Time offset";
//   output Real V.signalSource.y "Connector of Real output signal";
//   parameter Real V.signalSource.offset = V.offset "Offset of output signal y";
//   parameter Real V.signalSource.startTime(quantity = "Time", unit = "s") = V.startTime "Output y = offset for time < startTime";
//   parameter Real V.signalSource.height = V.V "Height of step";
//   parameter Real V.V(quantity = "ElectricPotential", unit = "V", start = 1.0) "Height of step";
//   Real Ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
// equation
//   C1.i = C1.C * der(C1.v);
//   C1.v = C1.p.v - C1.n.v;
//   0.0 = C1.p.i + C1.n.i;
//   C1.i = C1.p.i;
//   C2.i = C2.C * der(C2.v);
//   C2.v = C2.p.v - C2.n.v;
//   0.0 = C2.p.i + C2.n.i;
//   C2.i = C2.p.i;
//   C3.i = C3.C * der(C3.v);
//   C3.v = C3.p.v - C3.n.v;
//   0.0 = C3.p.i + C3.n.i;
//   C3.i = C3.p.i;
//   C4.i = C4.C * der(C4.v);
//   C4.v = C4.p.v - C4.n.v;
//   0.0 = C4.p.i + C4.n.i;
//   C4.i = C4.p.i;
//   C5.i = C5.C * der(C5.v);
//   C5.v = C5.p.v - C5.n.v;
//   0.0 = C5.p.i + C5.n.i;
//   C5.i = C5.p.i;
//   assert(1.0 + R1.alpha * (R1.T_heatPort - R1.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R1.R_actual = R1.R * (1.0 + R1.alpha * (R1.T_heatPort - R1.T_ref));
//   R1.v = R1.R_actual * R1.i;
//   R1.LossPower = R1.v * R1.i;
//   R1.i = R1.p.i;
//   0.0 = R1.p.i + R1.n.i;
//   R1.v = R1.p.v - R1.n.v;
//   R1.T_heatPort = R1.T;
//   assert(1.0 + R2.alpha * (R2.T_heatPort - R2.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R2.R_actual = R2.R * (1.0 + R2.alpha * (R2.T_heatPort - R2.T_ref));
//   R2.v = R2.R_actual * R2.i;
//   R2.LossPower = R2.v * R2.i;
//   R2.i = R2.p.i;
//   0.0 = R2.p.i + R2.n.i;
//   R2.v = R2.p.v - R2.n.v;
//   R2.T_heatPort = R2.T;
//   assert(1.0 + R3.alpha * (R3.T_heatPort - R3.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R3.R_actual = R3.R * (1.0 + R3.alpha * (R3.T_heatPort - R3.T_ref));
//   R3.v = R3.R_actual * R3.i;
//   R3.LossPower = R3.v * R3.i;
//   R3.i = R3.p.i;
//   0.0 = R3.p.i + R3.n.i;
//   R3.v = R3.p.v - R3.n.v;
//   R3.T_heatPort = R3.T;
//   Op1.in_p.v = Op1.in_n.v;
//   Op1.in_p.i = 0.0;
//   Op1.in_n.i = 0.0;
//   G.p.v = 0.0;
//   assert(1.0 + R4.alpha * (R4.T_heatPort - R4.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R4.R_actual = R4.R * (1.0 + R4.alpha * (R4.T_heatPort - R4.T_ref));
//   R4.v = R4.R_actual * R4.i;
//   R4.LossPower = R4.v * R4.i;
//   R4.i = R4.p.i;
//   0.0 = R4.p.i + R4.n.i;
//   R4.v = R4.p.v - R4.n.v;
//   R4.T_heatPort = R4.T;
//   assert(1.0 + R5.alpha * (R5.T_heatPort - R5.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R5.R_actual = R5.R * (1.0 + R5.alpha * (R5.T_heatPort - R5.T_ref));
//   R5.v = R5.R_actual * R5.i;
//   R5.LossPower = R5.v * R5.i;
//   R5.i = R5.p.i;
//   0.0 = R5.p.i + R5.n.i;
//   R5.v = R5.p.v - R5.n.v;
//   R5.T_heatPort = R5.T;
//   Op2.in_p.v = Op2.in_n.v;
//   Op2.in_p.i = 0.0;
//   Op2.in_n.i = 0.0;
//   Op3.in_p.v = Op3.in_n.v;
//   Op3.in_p.i = 0.0;
//   Op3.in_n.i = 0.0;
//   G1.p.v = 0.0;
//   assert(1.0 + R6.alpha * (R6.T_heatPort - R6.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R6.R_actual = R6.R * (1.0 + R6.alpha * (R6.T_heatPort - R6.T_ref));
//   R6.v = R6.R_actual * R6.i;
//   R6.LossPower = R6.v * R6.i;
//   R6.i = R6.p.i;
//   0.0 = R6.p.i + R6.n.i;
//   R6.v = R6.p.v - R6.n.v;
//   R6.T_heatPort = R6.T;
//   assert(1.0 + R7.alpha * (R7.T_heatPort - R7.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R7.R_actual = R7.R * (1.0 + R7.alpha * (R7.T_heatPort - R7.T_ref));
//   R7.v = R7.R_actual * R7.i;
//   R7.LossPower = R7.v * R7.i;
//   R7.i = R7.p.i;
//   0.0 = R7.p.i + R7.n.i;
//   R7.v = R7.p.v - R7.n.v;
//   R7.T_heatPort = R7.T;
//   C6.i = C6.C * der(C6.v);
//   C6.v = C6.p.v - C6.n.v;
//   0.0 = C6.p.i + C6.n.i;
//   C6.i = C6.p.i;
//   assert(1.0 + R8.alpha * (R8.T_heatPort - R8.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R8.R_actual = R8.R * (1.0 + R8.alpha * (R8.T_heatPort - R8.T_ref));
//   R8.v = R8.R_actual * R8.i;
//   R8.LossPower = R8.v * R8.i;
//   R8.i = R8.p.i;
//   0.0 = R8.p.i + R8.n.i;
//   R8.v = R8.p.v - R8.n.v;
//   R8.T_heatPort = R8.T;
//   assert(1.0 + R9.alpha * (R9.T_heatPort - R9.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R9.R_actual = R9.R * (1.0 + R9.alpha * (R9.T_heatPort - R9.T_ref));
//   R9.v = R9.R_actual * R9.i;
//   R9.LossPower = R9.v * R9.i;
//   R9.i = R9.p.i;
//   0.0 = R9.p.i + R9.n.i;
//   R9.v = R9.p.v - R9.n.v;
//   R9.T_heatPort = R9.T;
//   assert(1.0 + R10.alpha * (R10.T_heatPort - R10.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R10.R_actual = R10.R * (1.0 + R10.alpha * (R10.T_heatPort - R10.T_ref));
//   R10.v = R10.R_actual * R10.i;
//   R10.LossPower = R10.v * R10.i;
//   R10.i = R10.p.i;
//   0.0 = R10.p.i + R10.n.i;
//   R10.v = R10.p.v - R10.n.v;
//   R10.T_heatPort = R10.T;
//   Op4.in_p.v = Op4.in_n.v;
//   Op4.in_p.i = 0.0;
//   Op4.in_n.i = 0.0;
//   Op5.in_p.v = Op5.in_n.v;
//   Op5.in_p.i = 0.0;
//   Op5.in_n.i = 0.0;
//   C7.i = C7.C * der(C7.v);
//   C7.v = C7.p.v - C7.n.v;
//   0.0 = C7.p.i + C7.n.i;
//   C7.i = C7.p.i;
//   C8.i = C8.C * der(C8.v);
//   C8.v = C8.p.v - C8.n.v;
//   0.0 = C8.p.i + C8.n.i;
//   C8.i = C8.p.i;
//   C9.i = C9.C * der(C9.v);
//   C9.v = C9.p.v - C9.n.v;
//   0.0 = C9.p.i + C9.n.i;
//   C9.i = C9.p.i;
//   assert(1.0 + R11.alpha * (R11.T_heatPort - R11.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R11.R_actual = R11.R * (1.0 + R11.alpha * (R11.T_heatPort - R11.T_ref));
//   R11.v = R11.R_actual * R11.i;
//   R11.LossPower = R11.v * R11.i;
//   R11.i = R11.p.i;
//   0.0 = R11.p.i + R11.n.i;
//   R11.v = R11.p.v - R11.n.v;
//   R11.T_heatPort = R11.T;
//   G2.p.v = 0.0;
//   G3.p.v = 0.0;
//   G4.p.v = 0.0;
//   V.signalSource.y = V.signalSource.offset + (if time < V.signalSource.startTime then 0.0 else V.signalSource.height);
//   V.v = V.signalSource.y;
//   V.v = V.p.v - V.n.v;
//   0.0 = V.p.i + V.n.i;
//   V.i = V.p.i;
//   Ground1.p.v = 0.0;
//   V.n.i + R1.p.i = 0.0;
//   R1.p.v = V.n.v;
//   V.p.i + Ground1.p.i = 0.0;
//   Ground1.p.v = V.p.v;
//   Op5.in_p.i + G4.p.i = 0.0;
//   G4.p.v = Op5.in_p.v;
//   Op4.in_p.i + G3.p.i = 0.0;
//   G3.p.v = Op4.in_p.v;
//   C8.n.i + (Op5.in_n.i + (R11.p.i + (C9.p.i + ((-p4.i) + (R10.n.i + (-n14.i)))))) = 0.0;
//   C8.n.v = C9.p.v;
//   C8.n.v = Op5.in_n.v;
//   C8.n.v = R10.n.v;
//   C8.n.v = R11.p.v;
//   C8.n.v = n14.v;
//   C8.n.v = p4.v;
//   C4.p.i + ((-p3.i) + (R8.p.i + (R11.n.i + ((-n12.i) + (C9.n.i + ((-n13.i) + Op5.out.i)))))) = 0.0;
//   C4.p.v = C9.n.v;
//   C4.p.v = Op5.out.v;
//   C4.p.v = R11.n.v;
//   C4.p.v = R8.p.v;
//   C4.p.v = n12.v;
//   C4.p.v = n13.v;
//   C4.p.v = p3.v;
//   G2.p.i + Op3.in_p.i = 0.0;
//   G2.p.v = Op3.in_p.v;
//   R6.p.i + (C7.n.i + ((-n11.i) + (Op4.out.i + R10.p.i))) = 0.0;
//   C7.n.v = Op4.out.v;
//   C7.n.v = R10.p.v;
//   C7.n.v = R6.p.v;
//   C7.n.v = n11.v;
//   R9.n.i + (R8.n.i + ((-n9.i) + ((-n10.i) + (Op4.in_n.i + C7.p.i)))) = 0.0;
//   C7.p.v = Op4.in_n.v;
//   C7.p.v = R8.n.v;
//   C7.p.v = R9.n.v;
//   C7.p.v = n10.v;
//   C7.p.v = n9.v;
//   C2.p.i + (R5.p.i + ((-p1.i) + (R9.p.i + (C6.n.i + (Op3.out.i + ((-out1.i) + C8.p.i)))))) = 0.0;
//   C2.p.v = C6.n.v;
//   C2.p.v = C8.p.v;
//   C2.p.v = Op3.out.v;
//   C2.p.v = R5.p.v;
//   C2.p.v = R9.p.v;
//   C2.p.v = out1.v;
//   C2.p.v = p1.v;
//   C4.n.i + (C5.n.i + (R7.n.i + ((-n7.i) + (Op3.in_n.i + (R6.n.i + ((-n8.i) + (C6.p.i + (-p2.i)))))))) = 0.0;
//   C4.n.v = C5.n.v;
//   C4.n.v = C6.p.v;
//   C4.n.v = Op3.in_n.v;
//   C4.n.v = R6.n.v;
//   C4.n.v = R7.n.v;
//   C4.n.v = n7.v;
//   C4.n.v = n8.v;
//   C4.n.v = p2.v;
//   R2.p.i + (C3.n.i + ((-n6.i) + (Op2.out.i + R7.p.i))) = 0.0;
//   C3.n.v = Op2.out.v;
//   C3.n.v = R2.p.v;
//   C3.n.v = R7.p.v;
//   C3.n.v = n6.v;
//   R5.n.i + (C3.p.i + (R4.n.i + ((-n5.i) + Op2.in_n.i))) = 0.0;
//   C3.p.v = Op2.in_n.v;
//   C3.p.v = R4.n.v;
//   C3.p.v = R5.n.v;
//   C3.p.v = n5.v;
//   C5.p.i + (R4.p.i + (R3.n.i + (C1.n.i + ((-n4.i) + Op1.out.i)))) = 0.0;
//   C1.n.v = C5.p.v;
//   C1.n.v = Op1.out.v;
//   C1.n.v = R3.n.v;
//   C1.n.v = R4.p.v;
//   C1.n.v = n4.v;
//   C2.n.i + (R1.n.i + ((-n1.i) + (Op1.in_n.i + (R2.n.i + ((-n2.i) + ((-n3.i) + (C1.p.i + R3.p.i))))))) = 0.0;
//   C1.p.v = C2.n.v;
//   C1.p.v = Op1.in_n.v;
//   C1.p.v = R1.n.v;
//   C1.p.v = R2.n.v;
//   C1.p.v = R3.p.v;
//   C1.p.v = n1.v;
//   C1.p.v = n2.v;
//   C1.p.v = n3.v;
//   G1.p.i + Op2.in_p.i = 0.0;
//   G1.p.v = Op2.in_p.v;
//   Op1.in_p.i + G.p.i = 0.0;
//   G.p.v = Op1.in_p.v;
//   n14.i = 0.0;
//   p4.i = 0.0;
//   n13.i = 0.0;
//   n12.i = 0.0;
//   n11.i = 0.0;
//   n10.i = 0.0;
//   n9.i = 0.0;
//   p3.i = 0.0;
//   out1.i = 0.0;
//   p2.i = 0.0;
//   n8.i = 0.0;
//   n7.i = 0.0;
//   n6.i = 0.0;
//   p1.i = 0.0;
//   n5.i = 0.0;
//   n4.i = 0.0;
//   n3.i = 0.0;
//   n2.i = 0.0;
//   n1.i = 0.0;
// end Modelica.Electrical.Analog.Examples.CauerLowPassOPV;
// "
// ""
// "Check of Modelica.Electrical.Analog.Examples.CauerLowPassOPV completed successfully.
// 
// 
// Class Modelica.Electrical.Analog.Examples.CauerLowPassOPV has 240 equation(s) and 240 variable(s).
// 166 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.CauerLowPassOPV_res.mat",
//     messages = ""
// end SimulationResult;
// "Error: Variable V.V not found in scope <global scope>
// "
// "class Modelica.Electrical.Analog.Examples.CauerLowPassSC
//   parameter Real l1(quantity = "Capacitance", unit = "F", min = 0.0) = 1.304 "filter coefficient i1";
//   parameter Real l2(quantity = "Capacitance", unit = "F", min = 0.0) = 0.8586 "filter coefficient i2";
//   parameter Real c1(quantity = "Capacitance", unit = "F", min = 0.0) = 1.072 "filter coefficient c1";
//   parameter Real c2(quantity = "Capacitance", unit = "F", min = 0.0) = 1.0 / l1 / 2.906997720064 "filter coefficient c2";
//   parameter Real c3(quantity = "Capacitance", unit = "F", min = 0.0) = 1.682 "filter coefficient c3";
//   parameter Real c4(quantity = "Capacitance", unit = "F", min = 0.0) = 1.0 / l2 / 1.392270203025 "filter coefficient c4";
//   parameter Real c5(quantity = "Capacitance", unit = "F", min = 0.0) = 0.7262 "filter coefficient c5";
//   Real C1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C1.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = c1 + c2 "Capacitance";
//   Real C2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C2.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = c2 "Capacitance";
//   Real C3.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C3.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C3.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C3.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C3.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C3.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C3.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = l1 "Capacitance";
//   Real C4.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C4.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C4.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C4.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C4.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C4.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C4.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = c4 "Capacitance";
//   Real C5.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C5.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C5.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C5.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C5.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C5.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C5.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = c2 "Capacitance";
//   Real Op1.in_p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op1.in_p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op1.in_n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op1.in_n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op1.out.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op1.out.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real G.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real G.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op2.in_p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op2.in_p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op2.in_n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op2.in_n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op2.out.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op2.out.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op3.in_p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op3.in_p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op3.in_n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op3.in_n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op3.out.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op3.out.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real G1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real G1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C6.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C6.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C6.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C6.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C6.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C6.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C6.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = c2 + (c3 + c4) "Capacitance";
//   Real Op4.in_p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op4.in_p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op4.in_n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op4.in_n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op4.out.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op4.out.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op5.in_p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op5.in_p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op5.in_n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op5.in_n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Op5.out.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Op5.out.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C7.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C7.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C7.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C7.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C7.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C7.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C7.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = l2 "Capacitance";
//   Real C8.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C8.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C8.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C8.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C8.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C8.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C8.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = c4 "Capacitance";
//   Real C9.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C9.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C9.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C9.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C9.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C9.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C9.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = c4 + c5 "Capacitance";
//   Real n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n3.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n3.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n4.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n4.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n5.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n5.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real p1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real p1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n6.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n6.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n7.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n7.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n8.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n8.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real p2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real p2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real out1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real out1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real p3.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real p3.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n9.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n9.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n10.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n10.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n11.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n11.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real G2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real G2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n12.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n12.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n13.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n13.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real p4.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real p4.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n14.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n14.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real G3.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real G3.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real G4.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real G4.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real V.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real V.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real V.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real V.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real V.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real V.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real V.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real V.startTime(quantity = "Time", unit = "s") = 1.0 "Time offset";
//   output Real V.signalSource.y "Connector of Real output signal";
//   parameter Real V.signalSource.offset = V.offset "Offset of output signal y";
//   parameter Real V.signalSource.startTime(quantity = "Time", unit = "s") = V.startTime "Output y = offset for time < startTime";
//   parameter Real V.signalSource.height = V.V "Height of step";
//   parameter Real V.V(quantity = "ElectricPotential", unit = "V", start = 1.0) "Height of step";
//   Real Ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real R4.clock(quantity = "Time", unit = "s") = 0.1 "clock";
//   parameter Real R4.R(quantity = "Resistance", unit = "Ohm", min = 1e-15) = 1.0 "Resistance";
//   output Boolean R4.BooleanPulse1.y "Connector of Boolean output signal";
//   parameter Real R4.BooleanPulse1.width(min = 1e-60, max = 100.0) = 50.0 "Width of pulse in % of period";
//   parameter Real R4.BooleanPulse1.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = R4.clock "Time for one period";
//   parameter Real R4.BooleanPulse1.startTime(quantity = "Time", unit = "s") = 0.0 "Time instant of first pulse";
//   protected parameter Real R4.BooleanPulse1.Twidth(quantity = "Time", unit = "s") = R4.BooleanPulse1.period * R4.BooleanPulse1.width / 100.0 "width of one pulse";
//   protected discrete Real R4.BooleanPulse1.pulsStart(quantity = "Time", unit = "s") "Start time of pulse";
//   Real R4.Capacitor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R4.Capacitor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R4.Capacitor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R4.Capacitor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R4.Capacitor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R4.Capacitor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real R4.Capacitor1.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = R4.clock / R4.R "Capacitance";
//   parameter Boolean R4.IdealCommutingSwitch1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R4.IdealCommutingSwitch1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real R4.IdealCommutingSwitch1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R4.IdealCommutingSwitch1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R4.IdealCommutingSwitch1.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real R4.IdealCommutingSwitch1.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real R4.IdealCommutingSwitch1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R4.IdealCommutingSwitch1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R4.IdealCommutingSwitch1.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R4.IdealCommutingSwitch1.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R4.IdealCommutingSwitch1.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R4.IdealCommutingSwitch1.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean R4.IdealCommutingSwitch1.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real R4.IdealCommutingSwitch1.s1(unit = "1");
//   protected Real R4.IdealCommutingSwitch1.s2(unit = "1") "Auxiliary variables";
//   protected constant Real R4.IdealCommutingSwitch1.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real R4.IdealCommutingSwitch1.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   parameter Boolean R4.IdealCommutingSwitch2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R4.IdealCommutingSwitch2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real R4.IdealCommutingSwitch2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R4.IdealCommutingSwitch2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R4.IdealCommutingSwitch2.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real R4.IdealCommutingSwitch2.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real R4.IdealCommutingSwitch2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R4.IdealCommutingSwitch2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R4.IdealCommutingSwitch2.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R4.IdealCommutingSwitch2.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R4.IdealCommutingSwitch2.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R4.IdealCommutingSwitch2.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean R4.IdealCommutingSwitch2.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real R4.IdealCommutingSwitch2.s1(unit = "1");
//   protected Real R4.IdealCommutingSwitch2.s2(unit = "1") "Auxiliary variables";
//   protected constant Real R4.IdealCommutingSwitch2.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real R4.IdealCommutingSwitch2.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real R4.Ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R4.Ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R4.Ground2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R4.Ground2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R4.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R4.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R4.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R4.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real R5.clock(quantity = "Time", unit = "s") = 0.1 "clock";
//   parameter Real R5.R(quantity = "Resistance", unit = "Ohm", min = 1e-15) = 1.0 "Resistance";
//   output Boolean R5.BooleanPulse1.y "Connector of Boolean output signal";
//   parameter Real R5.BooleanPulse1.width(min = 1e-60, max = 100.0) = 50.0 "Width of pulse in % of period";
//   parameter Real R5.BooleanPulse1.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = R5.clock "Time for one period";
//   parameter Real R5.BooleanPulse1.startTime(quantity = "Time", unit = "s") = 0.0 "Time instant of first pulse";
//   protected parameter Real R5.BooleanPulse1.Twidth(quantity = "Time", unit = "s") = R5.BooleanPulse1.period * R5.BooleanPulse1.width / 100.0 "width of one pulse";
//   protected discrete Real R5.BooleanPulse1.pulsStart(quantity = "Time", unit = "s") "Start time of pulse";
//   Real R5.Capacitor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R5.Capacitor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R5.Capacitor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R5.Capacitor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R5.Capacitor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R5.Capacitor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real R5.Capacitor1.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = R5.clock / R5.R "Capacitance";
//   parameter Boolean R5.IdealCommutingSwitch1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R5.IdealCommutingSwitch1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real R5.IdealCommutingSwitch1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R5.IdealCommutingSwitch1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R5.IdealCommutingSwitch1.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real R5.IdealCommutingSwitch1.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real R5.IdealCommutingSwitch1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R5.IdealCommutingSwitch1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R5.IdealCommutingSwitch1.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R5.IdealCommutingSwitch1.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R5.IdealCommutingSwitch1.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R5.IdealCommutingSwitch1.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean R5.IdealCommutingSwitch1.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real R5.IdealCommutingSwitch1.s1(unit = "1");
//   protected Real R5.IdealCommutingSwitch1.s2(unit = "1") "Auxiliary variables";
//   protected constant Real R5.IdealCommutingSwitch1.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real R5.IdealCommutingSwitch1.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   parameter Boolean R5.IdealCommutingSwitch2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R5.IdealCommutingSwitch2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real R5.IdealCommutingSwitch2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R5.IdealCommutingSwitch2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R5.IdealCommutingSwitch2.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real R5.IdealCommutingSwitch2.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real R5.IdealCommutingSwitch2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R5.IdealCommutingSwitch2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R5.IdealCommutingSwitch2.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R5.IdealCommutingSwitch2.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R5.IdealCommutingSwitch2.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R5.IdealCommutingSwitch2.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean R5.IdealCommutingSwitch2.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real R5.IdealCommutingSwitch2.s1(unit = "1");
//   protected Real R5.IdealCommutingSwitch2.s2(unit = "1") "Auxiliary variables";
//   protected constant Real R5.IdealCommutingSwitch2.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real R5.IdealCommutingSwitch2.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real R5.Ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R5.Ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R5.Ground2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R5.Ground2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R5.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R5.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R5.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R5.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real R8.clock(quantity = "Time", unit = "s") = 0.1 "clock";
//   parameter Real R8.R(quantity = "Resistance", unit = "Ohm", min = 1e-15) = 1.0 "Resistance";
//   output Boolean R8.BooleanPulse1.y "Connector of Boolean output signal";
//   parameter Real R8.BooleanPulse1.width(min = 1e-60, max = 100.0) = 50.0 "Width of pulse in % of period";
//   parameter Real R8.BooleanPulse1.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = R8.clock "Time for one period";
//   parameter Real R8.BooleanPulse1.startTime(quantity = "Time", unit = "s") = 0.0 "Time instant of first pulse";
//   protected parameter Real R8.BooleanPulse1.Twidth(quantity = "Time", unit = "s") = R8.BooleanPulse1.period * R8.BooleanPulse1.width / 100.0 "width of one pulse";
//   protected discrete Real R8.BooleanPulse1.pulsStart(quantity = "Time", unit = "s") "Start time of pulse";
//   Real R8.Capacitor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R8.Capacitor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R8.Capacitor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R8.Capacitor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R8.Capacitor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R8.Capacitor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real R8.Capacitor1.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = R8.clock / R8.R "Capacitance";
//   parameter Boolean R8.IdealCommutingSwitch1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R8.IdealCommutingSwitch1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real R8.IdealCommutingSwitch1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R8.IdealCommutingSwitch1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R8.IdealCommutingSwitch1.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real R8.IdealCommutingSwitch1.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real R8.IdealCommutingSwitch1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R8.IdealCommutingSwitch1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R8.IdealCommutingSwitch1.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R8.IdealCommutingSwitch1.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R8.IdealCommutingSwitch1.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R8.IdealCommutingSwitch1.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean R8.IdealCommutingSwitch1.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real R8.IdealCommutingSwitch1.s1(unit = "1");
//   protected Real R8.IdealCommutingSwitch1.s2(unit = "1") "Auxiliary variables";
//   protected constant Real R8.IdealCommutingSwitch1.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real R8.IdealCommutingSwitch1.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   parameter Boolean R8.IdealCommutingSwitch2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R8.IdealCommutingSwitch2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real R8.IdealCommutingSwitch2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R8.IdealCommutingSwitch2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R8.IdealCommutingSwitch2.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real R8.IdealCommutingSwitch2.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real R8.IdealCommutingSwitch2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R8.IdealCommutingSwitch2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R8.IdealCommutingSwitch2.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R8.IdealCommutingSwitch2.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R8.IdealCommutingSwitch2.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R8.IdealCommutingSwitch2.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean R8.IdealCommutingSwitch2.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real R8.IdealCommutingSwitch2.s1(unit = "1");
//   protected Real R8.IdealCommutingSwitch2.s2(unit = "1") "Auxiliary variables";
//   protected constant Real R8.IdealCommutingSwitch2.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real R8.IdealCommutingSwitch2.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real R8.Ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R8.Ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R8.Ground2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R8.Ground2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R8.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R8.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R8.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R8.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real R9.clock(quantity = "Time", unit = "s") = 0.1 "clock";
//   parameter Real R9.R(quantity = "Resistance", unit = "Ohm", min = 1e-15) = 1.0 "Resistance";
//   output Boolean R9.BooleanPulse1.y "Connector of Boolean output signal";
//   parameter Real R9.BooleanPulse1.width(min = 1e-60, max = 100.0) = 50.0 "Width of pulse in % of period";
//   parameter Real R9.BooleanPulse1.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = R9.clock "Time for one period";
//   parameter Real R9.BooleanPulse1.startTime(quantity = "Time", unit = "s") = 0.0 "Time instant of first pulse";
//   protected parameter Real R9.BooleanPulse1.Twidth(quantity = "Time", unit = "s") = R9.BooleanPulse1.period * R9.BooleanPulse1.width / 100.0 "width of one pulse";
//   protected discrete Real R9.BooleanPulse1.pulsStart(quantity = "Time", unit = "s") "Start time of pulse";
//   Real R9.Capacitor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R9.Capacitor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R9.Capacitor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R9.Capacitor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R9.Capacitor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R9.Capacitor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real R9.Capacitor1.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = R9.clock / R9.R "Capacitance";
//   parameter Boolean R9.IdealCommutingSwitch1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R9.IdealCommutingSwitch1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real R9.IdealCommutingSwitch1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R9.IdealCommutingSwitch1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R9.IdealCommutingSwitch1.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real R9.IdealCommutingSwitch1.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real R9.IdealCommutingSwitch1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R9.IdealCommutingSwitch1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R9.IdealCommutingSwitch1.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R9.IdealCommutingSwitch1.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R9.IdealCommutingSwitch1.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R9.IdealCommutingSwitch1.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean R9.IdealCommutingSwitch1.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real R9.IdealCommutingSwitch1.s1(unit = "1");
//   protected Real R9.IdealCommutingSwitch1.s2(unit = "1") "Auxiliary variables";
//   protected constant Real R9.IdealCommutingSwitch1.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real R9.IdealCommutingSwitch1.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   parameter Boolean R9.IdealCommutingSwitch2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R9.IdealCommutingSwitch2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real R9.IdealCommutingSwitch2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R9.IdealCommutingSwitch2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R9.IdealCommutingSwitch2.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real R9.IdealCommutingSwitch2.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real R9.IdealCommutingSwitch2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R9.IdealCommutingSwitch2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R9.IdealCommutingSwitch2.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R9.IdealCommutingSwitch2.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R9.IdealCommutingSwitch2.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R9.IdealCommutingSwitch2.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean R9.IdealCommutingSwitch2.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real R9.IdealCommutingSwitch2.s1(unit = "1");
//   protected Real R9.IdealCommutingSwitch2.s2(unit = "1") "Auxiliary variables";
//   protected constant Real R9.IdealCommutingSwitch2.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real R9.IdealCommutingSwitch2.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real R9.Ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R9.Ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R9.Ground2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R9.Ground2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R9.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R9.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R9.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R9.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real R1.clock(quantity = "Time", unit = "s") = 0.1 "clock";
//   parameter Real R1.R(quantity = "Resistance", unit = "Ohm", min = 1e-15) = 1.0 "Resistance";
//   output Boolean R1.BooleanPulse1.y "Connector of Boolean output signal";
//   parameter Real R1.BooleanPulse1.width(min = 1e-60, max = 100.0) = 50.0 "Width of pulse in % of period";
//   parameter Real R1.BooleanPulse1.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = R1.clock "Time for one period";
//   parameter Real R1.BooleanPulse1.startTime(quantity = "Time", unit = "s") = 0.0 "Time instant of first pulse";
//   protected parameter Real R1.BooleanPulse1.Twidth(quantity = "Time", unit = "s") = R1.BooleanPulse1.period * R1.BooleanPulse1.width / 100.0 "width of one pulse";
//   protected discrete Real R1.BooleanPulse1.pulsStart(quantity = "Time", unit = "s") "Start time of pulse";
//   Real R1.Capacitor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R1.Capacitor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R1.Capacitor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.Capacitor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R1.Capacitor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.Capacitor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real R1.Capacitor1.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = R1.clock / R1.R "Capacitance";
//   parameter Boolean R1.IdealCommutingSwitch1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R1.IdealCommutingSwitch1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real R1.IdealCommutingSwitch1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R1.IdealCommutingSwitch1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R1.IdealCommutingSwitch1.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real R1.IdealCommutingSwitch1.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real R1.IdealCommutingSwitch1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.IdealCommutingSwitch1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R1.IdealCommutingSwitch1.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.IdealCommutingSwitch1.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R1.IdealCommutingSwitch1.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.IdealCommutingSwitch1.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean R1.IdealCommutingSwitch1.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real R1.IdealCommutingSwitch1.s1(unit = "1");
//   protected Real R1.IdealCommutingSwitch1.s2(unit = "1") "Auxiliary variables";
//   protected constant Real R1.IdealCommutingSwitch1.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real R1.IdealCommutingSwitch1.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   parameter Boolean R1.IdealCommutingSwitch2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R1.IdealCommutingSwitch2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real R1.IdealCommutingSwitch2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R1.IdealCommutingSwitch2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R1.IdealCommutingSwitch2.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real R1.IdealCommutingSwitch2.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real R1.IdealCommutingSwitch2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.IdealCommutingSwitch2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R1.IdealCommutingSwitch2.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.IdealCommutingSwitch2.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R1.IdealCommutingSwitch2.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.IdealCommutingSwitch2.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean R1.IdealCommutingSwitch2.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real R1.IdealCommutingSwitch2.s1(unit = "1");
//   protected Real R1.IdealCommutingSwitch2.s2(unit = "1") "Auxiliary variables";
//   protected constant Real R1.IdealCommutingSwitch2.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real R1.IdealCommutingSwitch2.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real R1.Ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.Ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R1.Ground2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.Ground2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R1.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R1.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real R2.clock(quantity = "Time", unit = "s") = 0.1 "clock";
//   parameter Real R2.R(quantity = "Resistance", unit = "Ohm", min = 1e-15) = 1.0 "Resistance";
//   output Boolean R2.BooleanPulse1.y "Connector of Boolean output signal";
//   parameter Real R2.BooleanPulse1.width(min = 1e-60, max = 100.0) = 50.0 "Width of pulse in % of period";
//   parameter Real R2.BooleanPulse1.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = R2.clock "Time for one period";
//   parameter Real R2.BooleanPulse1.startTime(quantity = "Time", unit = "s") = 0.0 "Time instant of first pulse";
//   protected parameter Real R2.BooleanPulse1.Twidth(quantity = "Time", unit = "s") = R2.BooleanPulse1.period * R2.BooleanPulse1.width / 100.0 "width of one pulse";
//   protected discrete Real R2.BooleanPulse1.pulsStart(quantity = "Time", unit = "s") "Start time of pulse";
//   Real R2.Capacitor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R2.Capacitor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R2.Capacitor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.Capacitor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R2.Capacitor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.Capacitor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real R2.Capacitor1.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = R2.clock / R2.R "Capacitance";
//   parameter Boolean R2.IdealCommutingSwitch1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R2.IdealCommutingSwitch1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real R2.IdealCommutingSwitch1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R2.IdealCommutingSwitch1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R2.IdealCommutingSwitch1.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real R2.IdealCommutingSwitch1.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real R2.IdealCommutingSwitch1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.IdealCommutingSwitch1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R2.IdealCommutingSwitch1.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.IdealCommutingSwitch1.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R2.IdealCommutingSwitch1.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.IdealCommutingSwitch1.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean R2.IdealCommutingSwitch1.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real R2.IdealCommutingSwitch1.s1(unit = "1");
//   protected Real R2.IdealCommutingSwitch1.s2(unit = "1") "Auxiliary variables";
//   protected constant Real R2.IdealCommutingSwitch1.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real R2.IdealCommutingSwitch1.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   parameter Boolean R2.IdealCommutingSwitch2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R2.IdealCommutingSwitch2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real R2.IdealCommutingSwitch2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R2.IdealCommutingSwitch2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R2.IdealCommutingSwitch2.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real R2.IdealCommutingSwitch2.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real R2.IdealCommutingSwitch2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.IdealCommutingSwitch2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R2.IdealCommutingSwitch2.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.IdealCommutingSwitch2.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R2.IdealCommutingSwitch2.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.IdealCommutingSwitch2.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean R2.IdealCommutingSwitch2.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real R2.IdealCommutingSwitch2.s1(unit = "1");
//   protected Real R2.IdealCommutingSwitch2.s2(unit = "1") "Auxiliary variables";
//   protected constant Real R2.IdealCommutingSwitch2.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real R2.IdealCommutingSwitch2.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real R2.Ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.Ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R2.Ground2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.Ground2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R2.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R2.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real R3.clock(quantity = "Time", unit = "s") = 0.1 "clock";
//   parameter Real R3.R(quantity = "Resistance", unit = "Ohm", min = 1e-15) = 1.0 "Resistance";
//   output Boolean R3.BooleanPulse1.y "Connector of Boolean output signal";
//   parameter Real R3.BooleanPulse1.width(min = 1e-60, max = 100.0) = 50.0 "Width of pulse in % of period";
//   parameter Real R3.BooleanPulse1.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = R3.clock "Time for one period";
//   parameter Real R3.BooleanPulse1.startTime(quantity = "Time", unit = "s") = 0.0 "Time instant of first pulse";
//   protected parameter Real R3.BooleanPulse1.Twidth(quantity = "Time", unit = "s") = R3.BooleanPulse1.period * R3.BooleanPulse1.width / 100.0 "width of one pulse";
//   protected discrete Real R3.BooleanPulse1.pulsStart(quantity = "Time", unit = "s") "Start time of pulse";
//   Real R3.Capacitor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R3.Capacitor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R3.Capacitor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R3.Capacitor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R3.Capacitor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R3.Capacitor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real R3.Capacitor1.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = R3.clock / R3.R "Capacitance";
//   parameter Boolean R3.IdealCommutingSwitch1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R3.IdealCommutingSwitch1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real R3.IdealCommutingSwitch1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R3.IdealCommutingSwitch1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R3.IdealCommutingSwitch1.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real R3.IdealCommutingSwitch1.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real R3.IdealCommutingSwitch1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R3.IdealCommutingSwitch1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R3.IdealCommutingSwitch1.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R3.IdealCommutingSwitch1.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R3.IdealCommutingSwitch1.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R3.IdealCommutingSwitch1.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean R3.IdealCommutingSwitch1.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real R3.IdealCommutingSwitch1.s1(unit = "1");
//   protected Real R3.IdealCommutingSwitch1.s2(unit = "1") "Auxiliary variables";
//   protected constant Real R3.IdealCommutingSwitch1.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real R3.IdealCommutingSwitch1.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   parameter Boolean R3.IdealCommutingSwitch2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R3.IdealCommutingSwitch2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real R3.IdealCommutingSwitch2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R3.IdealCommutingSwitch2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R3.IdealCommutingSwitch2.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real R3.IdealCommutingSwitch2.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real R3.IdealCommutingSwitch2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R3.IdealCommutingSwitch2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R3.IdealCommutingSwitch2.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R3.IdealCommutingSwitch2.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R3.IdealCommutingSwitch2.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R3.IdealCommutingSwitch2.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean R3.IdealCommutingSwitch2.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real R3.IdealCommutingSwitch2.s1(unit = "1");
//   protected Real R3.IdealCommutingSwitch2.s2(unit = "1") "Auxiliary variables";
//   protected constant Real R3.IdealCommutingSwitch2.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real R3.IdealCommutingSwitch2.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real R3.Ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R3.Ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R3.Ground2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R3.Ground2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R3.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R3.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R3.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R3.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real Rp1.clock(quantity = "Time", unit = "s") = 0.1 "clock";
//   parameter Real Rp1.R(quantity = "Resistance", unit = "Ohm", min = 1e-15) = 1.0 "Resistance";
//   output Boolean Rp1.BooleanPulse1.y "Connector of Boolean output signal";
//   parameter Real Rp1.BooleanPulse1.width(min = 1e-60, max = 100.0) = 50.0 "Width of pulse in % of period";
//   parameter Real Rp1.BooleanPulse1.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = Rp1.clock "Time for one period";
//   parameter Real Rp1.BooleanPulse1.startTime(quantity = "Time", unit = "s") = 0.0 "Time instant of first pulse";
//   protected parameter Real Rp1.BooleanPulse1.Twidth(quantity = "Time", unit = "s") = Rp1.BooleanPulse1.period * Rp1.BooleanPulse1.width / 100.0 "width of one pulse";
//   protected discrete Real Rp1.BooleanPulse1.pulsStart(quantity = "Time", unit = "s") "Start time of pulse";
//   Real Rp1.Capacitor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Rp1.Capacitor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Rp1.Capacitor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Rp1.Capacitor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Rp1.Capacitor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Rp1.Capacitor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real Rp1.Capacitor1.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = Rp1.clock / Rp1.R "Capacitance";
//   parameter Boolean Rp1.IdealCommutingSwitch1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real Rp1.IdealCommutingSwitch1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real Rp1.IdealCommutingSwitch1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real Rp1.IdealCommutingSwitch1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real Rp1.IdealCommutingSwitch1.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real Rp1.IdealCommutingSwitch1.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real Rp1.IdealCommutingSwitch1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Rp1.IdealCommutingSwitch1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Rp1.IdealCommutingSwitch1.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Rp1.IdealCommutingSwitch1.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Rp1.IdealCommutingSwitch1.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Rp1.IdealCommutingSwitch1.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean Rp1.IdealCommutingSwitch1.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real Rp1.IdealCommutingSwitch1.s1(unit = "1");
//   protected Real Rp1.IdealCommutingSwitch1.s2(unit = "1") "Auxiliary variables";
//   protected constant Real Rp1.IdealCommutingSwitch1.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real Rp1.IdealCommutingSwitch1.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   parameter Boolean Rp1.IdealCommutingSwitch2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real Rp1.IdealCommutingSwitch2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real Rp1.IdealCommutingSwitch2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real Rp1.IdealCommutingSwitch2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real Rp1.IdealCommutingSwitch2.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real Rp1.IdealCommutingSwitch2.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real Rp1.IdealCommutingSwitch2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Rp1.IdealCommutingSwitch2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Rp1.IdealCommutingSwitch2.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Rp1.IdealCommutingSwitch2.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Rp1.IdealCommutingSwitch2.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Rp1.IdealCommutingSwitch2.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean Rp1.IdealCommutingSwitch2.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real Rp1.IdealCommutingSwitch2.s1(unit = "1");
//   protected Real Rp1.IdealCommutingSwitch2.s2(unit = "1") "Auxiliary variables";
//   protected constant Real Rp1.IdealCommutingSwitch2.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real Rp1.IdealCommutingSwitch2.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real Rp1.Ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Rp1.Ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Rp1.Ground2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Rp1.Ground2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Rp1.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Rp1.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Rp1.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Rp1.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real R7.clock(quantity = "Time", unit = "s") = 0.1 "clock";
//   parameter Real R7.R(quantity = "Resistance", unit = "Ohm", min = 1e-15) = 1.0 "Resistance";
//   output Boolean R7.BooleanPulse1.y "Connector of Boolean output signal";
//   parameter Real R7.BooleanPulse1.width(min = 1e-60, max = 100.0) = 50.0 "Width of pulse in % of period";
//   parameter Real R7.BooleanPulse1.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = R7.clock "Time for one period";
//   parameter Real R7.BooleanPulse1.startTime(quantity = "Time", unit = "s") = 0.0 "Time instant of first pulse";
//   protected parameter Real R7.BooleanPulse1.Twidth(quantity = "Time", unit = "s") = R7.BooleanPulse1.period * R7.BooleanPulse1.width / 100.0 "width of one pulse";
//   protected discrete Real R7.BooleanPulse1.pulsStart(quantity = "Time", unit = "s") "Start time of pulse";
//   Real R7.Capacitor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R7.Capacitor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R7.Capacitor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R7.Capacitor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R7.Capacitor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R7.Capacitor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real R7.Capacitor1.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = R7.clock / R7.R "Capacitance";
//   parameter Boolean R7.IdealCommutingSwitch1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R7.IdealCommutingSwitch1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real R7.IdealCommutingSwitch1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R7.IdealCommutingSwitch1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R7.IdealCommutingSwitch1.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real R7.IdealCommutingSwitch1.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real R7.IdealCommutingSwitch1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R7.IdealCommutingSwitch1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R7.IdealCommutingSwitch1.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R7.IdealCommutingSwitch1.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R7.IdealCommutingSwitch1.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R7.IdealCommutingSwitch1.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean R7.IdealCommutingSwitch1.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real R7.IdealCommutingSwitch1.s1(unit = "1");
//   protected Real R7.IdealCommutingSwitch1.s2(unit = "1") "Auxiliary variables";
//   protected constant Real R7.IdealCommutingSwitch1.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real R7.IdealCommutingSwitch1.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   parameter Boolean R7.IdealCommutingSwitch2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R7.IdealCommutingSwitch2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real R7.IdealCommutingSwitch2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R7.IdealCommutingSwitch2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R7.IdealCommutingSwitch2.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real R7.IdealCommutingSwitch2.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real R7.IdealCommutingSwitch2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R7.IdealCommutingSwitch2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R7.IdealCommutingSwitch2.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R7.IdealCommutingSwitch2.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R7.IdealCommutingSwitch2.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R7.IdealCommutingSwitch2.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean R7.IdealCommutingSwitch2.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real R7.IdealCommutingSwitch2.s1(unit = "1");
//   protected Real R7.IdealCommutingSwitch2.s2(unit = "1") "Auxiliary variables";
//   protected constant Real R7.IdealCommutingSwitch2.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real R7.IdealCommutingSwitch2.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real R7.Ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R7.Ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R7.Ground2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R7.Ground2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R7.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R7.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R7.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R7.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real R10.clock(quantity = "Time", unit = "s") = 0.1 "clock";
//   parameter Real R10.R(quantity = "Resistance", unit = "Ohm", min = 1e-15) = 1.0 "Resistance";
//   output Boolean R10.BooleanPulse1.y "Connector of Boolean output signal";
//   parameter Real R10.BooleanPulse1.width(min = 1e-60, max = 100.0) = 50.0 "Width of pulse in % of period";
//   parameter Real R10.BooleanPulse1.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = R10.clock "Time for one period";
//   parameter Real R10.BooleanPulse1.startTime(quantity = "Time", unit = "s") = 0.0 "Time instant of first pulse";
//   protected parameter Real R10.BooleanPulse1.Twidth(quantity = "Time", unit = "s") = R10.BooleanPulse1.period * R10.BooleanPulse1.width / 100.0 "width of one pulse";
//   protected discrete Real R10.BooleanPulse1.pulsStart(quantity = "Time", unit = "s") "Start time of pulse";
//   Real R10.Capacitor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R10.Capacitor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R10.Capacitor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R10.Capacitor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R10.Capacitor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R10.Capacitor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real R10.Capacitor1.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = R10.clock / R10.R "Capacitance";
//   parameter Boolean R10.IdealCommutingSwitch1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R10.IdealCommutingSwitch1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real R10.IdealCommutingSwitch1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R10.IdealCommutingSwitch1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R10.IdealCommutingSwitch1.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real R10.IdealCommutingSwitch1.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real R10.IdealCommutingSwitch1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R10.IdealCommutingSwitch1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R10.IdealCommutingSwitch1.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R10.IdealCommutingSwitch1.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R10.IdealCommutingSwitch1.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R10.IdealCommutingSwitch1.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean R10.IdealCommutingSwitch1.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real R10.IdealCommutingSwitch1.s1(unit = "1");
//   protected Real R10.IdealCommutingSwitch1.s2(unit = "1") "Auxiliary variables";
//   protected constant Real R10.IdealCommutingSwitch1.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real R10.IdealCommutingSwitch1.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   parameter Boolean R10.IdealCommutingSwitch2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R10.IdealCommutingSwitch2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real R10.IdealCommutingSwitch2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R10.IdealCommutingSwitch2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R10.IdealCommutingSwitch2.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real R10.IdealCommutingSwitch2.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real R10.IdealCommutingSwitch2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R10.IdealCommutingSwitch2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R10.IdealCommutingSwitch2.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R10.IdealCommutingSwitch2.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R10.IdealCommutingSwitch2.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R10.IdealCommutingSwitch2.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean R10.IdealCommutingSwitch2.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real R10.IdealCommutingSwitch2.s1(unit = "1");
//   protected Real R10.IdealCommutingSwitch2.s2(unit = "1") "Auxiliary variables";
//   protected constant Real R10.IdealCommutingSwitch2.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real R10.IdealCommutingSwitch2.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real R10.Ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R10.Ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R10.Ground2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R10.Ground2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R10.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R10.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R10.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R10.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real R11.clock(quantity = "Time", unit = "s") = 0.1 "clock";
//   parameter Real R11.R(quantity = "Resistance", unit = "Ohm", min = 1e-15) = 1.0 "Resistance";
//   output Boolean R11.BooleanPulse1.y "Connector of Boolean output signal";
//   parameter Real R11.BooleanPulse1.width(min = 1e-60, max = 100.0) = 50.0 "Width of pulse in % of period";
//   parameter Real R11.BooleanPulse1.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = R11.clock "Time for one period";
//   parameter Real R11.BooleanPulse1.startTime(quantity = "Time", unit = "s") = 0.0 "Time instant of first pulse";
//   protected parameter Real R11.BooleanPulse1.Twidth(quantity = "Time", unit = "s") = R11.BooleanPulse1.period * R11.BooleanPulse1.width / 100.0 "width of one pulse";
//   protected discrete Real R11.BooleanPulse1.pulsStart(quantity = "Time", unit = "s") "Start time of pulse";
//   Real R11.Capacitor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R11.Capacitor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R11.Capacitor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R11.Capacitor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R11.Capacitor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R11.Capacitor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real R11.Capacitor1.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = R11.clock / R11.R "Capacitance";
//   parameter Boolean R11.IdealCommutingSwitch1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R11.IdealCommutingSwitch1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real R11.IdealCommutingSwitch1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R11.IdealCommutingSwitch1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R11.IdealCommutingSwitch1.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real R11.IdealCommutingSwitch1.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real R11.IdealCommutingSwitch1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R11.IdealCommutingSwitch1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R11.IdealCommutingSwitch1.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R11.IdealCommutingSwitch1.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R11.IdealCommutingSwitch1.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R11.IdealCommutingSwitch1.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean R11.IdealCommutingSwitch1.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real R11.IdealCommutingSwitch1.s1(unit = "1");
//   protected Real R11.IdealCommutingSwitch1.s2(unit = "1") "Auxiliary variables";
//   protected constant Real R11.IdealCommutingSwitch1.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real R11.IdealCommutingSwitch1.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   parameter Boolean R11.IdealCommutingSwitch2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R11.IdealCommutingSwitch2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real R11.IdealCommutingSwitch2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R11.IdealCommutingSwitch2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R11.IdealCommutingSwitch2.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real R11.IdealCommutingSwitch2.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real R11.IdealCommutingSwitch2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R11.IdealCommutingSwitch2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R11.IdealCommutingSwitch2.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R11.IdealCommutingSwitch2.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R11.IdealCommutingSwitch2.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R11.IdealCommutingSwitch2.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean R11.IdealCommutingSwitch2.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real R11.IdealCommutingSwitch2.s1(unit = "1");
//   protected Real R11.IdealCommutingSwitch2.s2(unit = "1") "Auxiliary variables";
//   protected constant Real R11.IdealCommutingSwitch2.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real R11.IdealCommutingSwitch2.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real R11.Ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R11.Ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R11.Ground2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R11.Ground2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R11.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R11.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R11.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R11.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
// initial equation
//   R4.BooleanPulse1.pulsStart = R4.BooleanPulse1.startTime;
//   R5.BooleanPulse1.pulsStart = R5.BooleanPulse1.startTime;
//   R8.BooleanPulse1.pulsStart = R8.BooleanPulse1.startTime;
//   R9.BooleanPulse1.pulsStart = R9.BooleanPulse1.startTime;
//   R1.BooleanPulse1.pulsStart = R1.BooleanPulse1.startTime;
//   R2.BooleanPulse1.pulsStart = R2.BooleanPulse1.startTime;
//   R3.BooleanPulse1.pulsStart = R3.BooleanPulse1.startTime;
//   Rp1.BooleanPulse1.pulsStart = Rp1.BooleanPulse1.startTime;
//   R7.BooleanPulse1.pulsStart = R7.BooleanPulse1.startTime;
//   R10.BooleanPulse1.pulsStart = R10.BooleanPulse1.startTime;
//   R11.BooleanPulse1.pulsStart = R11.BooleanPulse1.startTime;
// equation
//   C1.i = C1.C * der(C1.v);
//   C1.v = C1.p.v - C1.n.v;
//   0.0 = C1.p.i + C1.n.i;
//   C1.i = C1.p.i;
//   C2.i = C2.C * der(C2.v);
//   C2.v = C2.p.v - C2.n.v;
//   0.0 = C2.p.i + C2.n.i;
//   C2.i = C2.p.i;
//   C3.i = C3.C * der(C3.v);
//   C3.v = C3.p.v - C3.n.v;
//   0.0 = C3.p.i + C3.n.i;
//   C3.i = C3.p.i;
//   C4.i = C4.C * der(C4.v);
//   C4.v = C4.p.v - C4.n.v;
//   0.0 = C4.p.i + C4.n.i;
//   C4.i = C4.p.i;
//   C5.i = C5.C * der(C5.v);
//   C5.v = C5.p.v - C5.n.v;
//   0.0 = C5.p.i + C5.n.i;
//   C5.i = C5.p.i;
//   Op1.in_p.v = Op1.in_n.v;
//   Op1.in_p.i = 0.0;
//   Op1.in_n.i = 0.0;
//   G.p.v = 0.0;
//   Op2.in_p.v = Op2.in_n.v;
//   Op2.in_p.i = 0.0;
//   Op2.in_n.i = 0.0;
//   Op3.in_p.v = Op3.in_n.v;
//   Op3.in_p.i = 0.0;
//   Op3.in_n.i = 0.0;
//   G1.p.v = 0.0;
//   C6.i = C6.C * der(C6.v);
//   C6.v = C6.p.v - C6.n.v;
//   0.0 = C6.p.i + C6.n.i;
//   C6.i = C6.p.i;
//   Op4.in_p.v = Op4.in_n.v;
//   Op4.in_p.i = 0.0;
//   Op4.in_n.i = 0.0;
//   Op5.in_p.v = Op5.in_n.v;
//   Op5.in_p.i = 0.0;
//   Op5.in_n.i = 0.0;
//   C7.i = C7.C * der(C7.v);
//   C7.v = C7.p.v - C7.n.v;
//   0.0 = C7.p.i + C7.n.i;
//   C7.i = C7.p.i;
//   C8.i = C8.C * der(C8.v);
//   C8.v = C8.p.v - C8.n.v;
//   0.0 = C8.p.i + C8.n.i;
//   C8.i = C8.p.i;
//   C9.i = C9.C * der(C9.v);
//   C9.v = C9.p.v - C9.n.v;
//   0.0 = C9.p.i + C9.n.i;
//   C9.i = C9.p.i;
//   G2.p.v = 0.0;
//   G3.p.v = 0.0;
//   G4.p.v = 0.0;
//   V.signalSource.y = V.signalSource.offset + (if time < V.signalSource.startTime then 0.0 else V.signalSource.height);
//   V.v = V.signalSource.y;
//   V.v = V.p.v - V.n.v;
//   0.0 = V.p.i + V.n.i;
//   V.i = V.p.i;
//   Ground1.p.v = 0.0;
//   when sample(R4.BooleanPulse1.startTime,R4.BooleanPulse1.period) then
//   R4.BooleanPulse1.pulsStart = time;
//   end when;
//   R4.BooleanPulse1.y = time >= R4.BooleanPulse1.pulsStart AND time < R4.BooleanPulse1.pulsStart + R4.BooleanPulse1.Twidth;
//   R4.Capacitor1.i = R4.Capacitor1.C * der(R4.Capacitor1.v);
//   R4.Capacitor1.v = R4.Capacitor1.p.v - R4.Capacitor1.n.v;
//   0.0 = R4.Capacitor1.p.i + R4.Capacitor1.n.i;
//   R4.Capacitor1.i = R4.Capacitor1.p.i;
//   0.0 = R4.IdealCommutingSwitch1.p.i + (R4.IdealCommutingSwitch1.n2.i + R4.IdealCommutingSwitch1.n1.i);
//   R4.IdealCommutingSwitch1.p.v - R4.IdealCommutingSwitch1.n1.v = R4.IdealCommutingSwitch1.s1 * (if R4.IdealCommutingSwitch1.control then 1.0 else R4.IdealCommutingSwitch1.Ron);
//   R4.IdealCommutingSwitch1.n1.i = (-R4.IdealCommutingSwitch1.s1) * (if R4.IdealCommutingSwitch1.control then R4.IdealCommutingSwitch1.Goff else 1.0);
//   R4.IdealCommutingSwitch1.p.v - R4.IdealCommutingSwitch1.n2.v = R4.IdealCommutingSwitch1.s2 * (if R4.IdealCommutingSwitch1.control then R4.IdealCommutingSwitch1.Ron else 1.0);
//   R4.IdealCommutingSwitch1.n2.i = (-R4.IdealCommutingSwitch1.s2) * (if R4.IdealCommutingSwitch1.control then 1.0 else R4.IdealCommutingSwitch1.Goff);
//   R4.IdealCommutingSwitch1.LossPower = R4.IdealCommutingSwitch1.p.i * R4.IdealCommutingSwitch1.p.v + (R4.IdealCommutingSwitch1.n1.i * R4.IdealCommutingSwitch1.n1.v + R4.IdealCommutingSwitch1.n2.i * R4.IdealCommutingSwitch1.n2.v);
//   R4.IdealCommutingSwitch1.T_heatPort = R4.IdealCommutingSwitch1.T;
//   0.0 = R4.IdealCommutingSwitch2.p.i + (R4.IdealCommutingSwitch2.n2.i + R4.IdealCommutingSwitch2.n1.i);
//   R4.IdealCommutingSwitch2.p.v - R4.IdealCommutingSwitch2.n1.v = R4.IdealCommutingSwitch2.s1 * (if R4.IdealCommutingSwitch2.control then 1.0 else R4.IdealCommutingSwitch2.Ron);
//   R4.IdealCommutingSwitch2.n1.i = (-R4.IdealCommutingSwitch2.s1) * (if R4.IdealCommutingSwitch2.control then R4.IdealCommutingSwitch2.Goff else 1.0);
//   R4.IdealCommutingSwitch2.p.v - R4.IdealCommutingSwitch2.n2.v = R4.IdealCommutingSwitch2.s2 * (if R4.IdealCommutingSwitch2.control then R4.IdealCommutingSwitch2.Ron else 1.0);
//   R4.IdealCommutingSwitch2.n2.i = (-R4.IdealCommutingSwitch2.s2) * (if R4.IdealCommutingSwitch2.control then 1.0 else R4.IdealCommutingSwitch2.Goff);
//   R4.IdealCommutingSwitch2.LossPower = R4.IdealCommutingSwitch2.p.i * R4.IdealCommutingSwitch2.p.v + (R4.IdealCommutingSwitch2.n1.i * R4.IdealCommutingSwitch2.n1.v + R4.IdealCommutingSwitch2.n2.i * R4.IdealCommutingSwitch2.n2.v);
//   R4.IdealCommutingSwitch2.T_heatPort = R4.IdealCommutingSwitch2.T;
//   R4.Ground1.p.v = 0.0;
//   R4.Ground2.p.v = 0.0;
//   when sample(R5.BooleanPulse1.startTime,R5.BooleanPulse1.period) then
//   R5.BooleanPulse1.pulsStart = time;
//   end when;
//   R5.BooleanPulse1.y = time >= R5.BooleanPulse1.pulsStart AND time < R5.BooleanPulse1.pulsStart + R5.BooleanPulse1.Twidth;
//   R5.Capacitor1.i = R5.Capacitor1.C * der(R5.Capacitor1.v);
//   R5.Capacitor1.v = R5.Capacitor1.p.v - R5.Capacitor1.n.v;
//   0.0 = R5.Capacitor1.p.i + R5.Capacitor1.n.i;
//   R5.Capacitor1.i = R5.Capacitor1.p.i;
//   0.0 = R5.IdealCommutingSwitch1.p.i + (R5.IdealCommutingSwitch1.n2.i + R5.IdealCommutingSwitch1.n1.i);
//   R5.IdealCommutingSwitch1.p.v - R5.IdealCommutingSwitch1.n1.v = R5.IdealCommutingSwitch1.s1 * (if R5.IdealCommutingSwitch1.control then 1.0 else R5.IdealCommutingSwitch1.Ron);
//   R5.IdealCommutingSwitch1.n1.i = (-R5.IdealCommutingSwitch1.s1) * (if R5.IdealCommutingSwitch1.control then R5.IdealCommutingSwitch1.Goff else 1.0);
//   R5.IdealCommutingSwitch1.p.v - R5.IdealCommutingSwitch1.n2.v = R5.IdealCommutingSwitch1.s2 * (if R5.IdealCommutingSwitch1.control then R5.IdealCommutingSwitch1.Ron else 1.0);
//   R5.IdealCommutingSwitch1.n2.i = (-R5.IdealCommutingSwitch1.s2) * (if R5.IdealCommutingSwitch1.control then 1.0 else R5.IdealCommutingSwitch1.Goff);
//   R5.IdealCommutingSwitch1.LossPower = R5.IdealCommutingSwitch1.p.i * R5.IdealCommutingSwitch1.p.v + (R5.IdealCommutingSwitch1.n1.i * R5.IdealCommutingSwitch1.n1.v + R5.IdealCommutingSwitch1.n2.i * R5.IdealCommutingSwitch1.n2.v);
//   R5.IdealCommutingSwitch1.T_heatPort = R5.IdealCommutingSwitch1.T;
//   0.0 = R5.IdealCommutingSwitch2.p.i + (R5.IdealCommutingSwitch2.n2.i + R5.IdealCommutingSwitch2.n1.i);
//   R5.IdealCommutingSwitch2.p.v - R5.IdealCommutingSwitch2.n1.v = R5.IdealCommutingSwitch2.s1 * (if R5.IdealCommutingSwitch2.control then 1.0 else R5.IdealCommutingSwitch2.Ron);
//   R5.IdealCommutingSwitch2.n1.i = (-R5.IdealCommutingSwitch2.s1) * (if R5.IdealCommutingSwitch2.control then R5.IdealCommutingSwitch2.Goff else 1.0);
//   R5.IdealCommutingSwitch2.p.v - R5.IdealCommutingSwitch2.n2.v = R5.IdealCommutingSwitch2.s2 * (if R5.IdealCommutingSwitch2.control then R5.IdealCommutingSwitch2.Ron else 1.0);
//   R5.IdealCommutingSwitch2.n2.i = (-R5.IdealCommutingSwitch2.s2) * (if R5.IdealCommutingSwitch2.control then 1.0 else R5.IdealCommutingSwitch2.Goff);
//   R5.IdealCommutingSwitch2.LossPower = R5.IdealCommutingSwitch2.p.i * R5.IdealCommutingSwitch2.p.v + (R5.IdealCommutingSwitch2.n1.i * R5.IdealCommutingSwitch2.n1.v + R5.IdealCommutingSwitch2.n2.i * R5.IdealCommutingSwitch2.n2.v);
//   R5.IdealCommutingSwitch2.T_heatPort = R5.IdealCommutingSwitch2.T;
//   R5.Ground1.p.v = 0.0;
//   R5.Ground2.p.v = 0.0;
//   when sample(R8.BooleanPulse1.startTime,R8.BooleanPulse1.period) then
//   R8.BooleanPulse1.pulsStart = time;
//   end when;
//   R8.BooleanPulse1.y = time >= R8.BooleanPulse1.pulsStart AND time < R8.BooleanPulse1.pulsStart + R8.BooleanPulse1.Twidth;
//   R8.Capacitor1.i = R8.Capacitor1.C * der(R8.Capacitor1.v);
//   R8.Capacitor1.v = R8.Capacitor1.p.v - R8.Capacitor1.n.v;
//   0.0 = R8.Capacitor1.p.i + R8.Capacitor1.n.i;
//   R8.Capacitor1.i = R8.Capacitor1.p.i;
//   0.0 = R8.IdealCommutingSwitch1.p.i + (R8.IdealCommutingSwitch1.n2.i + R8.IdealCommutingSwitch1.n1.i);
//   R8.IdealCommutingSwitch1.p.v - R8.IdealCommutingSwitch1.n1.v = R8.IdealCommutingSwitch1.s1 * (if R8.IdealCommutingSwitch1.control then 1.0 else R8.IdealCommutingSwitch1.Ron);
//   R8.IdealCommutingSwitch1.n1.i = (-R8.IdealCommutingSwitch1.s1) * (if R8.IdealCommutingSwitch1.control then R8.IdealCommutingSwitch1.Goff else 1.0);
//   R8.IdealCommutingSwitch1.p.v - R8.IdealCommutingSwitch1.n2.v = R8.IdealCommutingSwitch1.s2 * (if R8.IdealCommutingSwitch1.control then R8.IdealCommutingSwitch1.Ron else 1.0);
//   R8.IdealCommutingSwitch1.n2.i = (-R8.IdealCommutingSwitch1.s2) * (if R8.IdealCommutingSwitch1.control then 1.0 else R8.IdealCommutingSwitch1.Goff);
//   R8.IdealCommutingSwitch1.LossPower = R8.IdealCommutingSwitch1.p.i * R8.IdealCommutingSwitch1.p.v + (R8.IdealCommutingSwitch1.n1.i * R8.IdealCommutingSwitch1.n1.v + R8.IdealCommutingSwitch1.n2.i * R8.IdealCommutingSwitch1.n2.v);
//   R8.IdealCommutingSwitch1.T_heatPort = R8.IdealCommutingSwitch1.T;
//   0.0 = R8.IdealCommutingSwitch2.p.i + (R8.IdealCommutingSwitch2.n2.i + R8.IdealCommutingSwitch2.n1.i);
//   R8.IdealCommutingSwitch2.p.v - R8.IdealCommutingSwitch2.n1.v = R8.IdealCommutingSwitch2.s1 * (if R8.IdealCommutingSwitch2.control then 1.0 else R8.IdealCommutingSwitch2.Ron);
//   R8.IdealCommutingSwitch2.n1.i = (-R8.IdealCommutingSwitch2.s1) * (if R8.IdealCommutingSwitch2.control then R8.IdealCommutingSwitch2.Goff else 1.0);
//   R8.IdealCommutingSwitch2.p.v - R8.IdealCommutingSwitch2.n2.v = R8.IdealCommutingSwitch2.s2 * (if R8.IdealCommutingSwitch2.control then R8.IdealCommutingSwitch2.Ron else 1.0);
//   R8.IdealCommutingSwitch2.n2.i = (-R8.IdealCommutingSwitch2.s2) * (if R8.IdealCommutingSwitch2.control then 1.0 else R8.IdealCommutingSwitch2.Goff);
//   R8.IdealCommutingSwitch2.LossPower = R8.IdealCommutingSwitch2.p.i * R8.IdealCommutingSwitch2.p.v + (R8.IdealCommutingSwitch2.n1.i * R8.IdealCommutingSwitch2.n1.v + R8.IdealCommutingSwitch2.n2.i * R8.IdealCommutingSwitch2.n2.v);
//   R8.IdealCommutingSwitch2.T_heatPort = R8.IdealCommutingSwitch2.T;
//   R8.Ground1.p.v = 0.0;
//   R8.Ground2.p.v = 0.0;
//   when sample(R9.BooleanPulse1.startTime,R9.BooleanPulse1.period) then
//   R9.BooleanPulse1.pulsStart = time;
//   end when;
//   R9.BooleanPulse1.y = time >= R9.BooleanPulse1.pulsStart AND time < R9.BooleanPulse1.pulsStart + R9.BooleanPulse1.Twidth;
//   R9.Capacitor1.i = R9.Capacitor1.C * der(R9.Capacitor1.v);
//   R9.Capacitor1.v = R9.Capacitor1.p.v - R9.Capacitor1.n.v;
//   0.0 = R9.Capacitor1.p.i + R9.Capacitor1.n.i;
//   R9.Capacitor1.i = R9.Capacitor1.p.i;
//   0.0 = R9.IdealCommutingSwitch1.p.i + (R9.IdealCommutingSwitch1.n2.i + R9.IdealCommutingSwitch1.n1.i);
//   R9.IdealCommutingSwitch1.p.v - R9.IdealCommutingSwitch1.n1.v = R9.IdealCommutingSwitch1.s1 * (if R9.IdealCommutingSwitch1.control then 1.0 else R9.IdealCommutingSwitch1.Ron);
//   R9.IdealCommutingSwitch1.n1.i = (-R9.IdealCommutingSwitch1.s1) * (if R9.IdealCommutingSwitch1.control then R9.IdealCommutingSwitch1.Goff else 1.0);
//   R9.IdealCommutingSwitch1.p.v - R9.IdealCommutingSwitch1.n2.v = R9.IdealCommutingSwitch1.s2 * (if R9.IdealCommutingSwitch1.control then R9.IdealCommutingSwitch1.Ron else 1.0);
//   R9.IdealCommutingSwitch1.n2.i = (-R9.IdealCommutingSwitch1.s2) * (if R9.IdealCommutingSwitch1.control then 1.0 else R9.IdealCommutingSwitch1.Goff);
//   R9.IdealCommutingSwitch1.LossPower = R9.IdealCommutingSwitch1.p.i * R9.IdealCommutingSwitch1.p.v + (R9.IdealCommutingSwitch1.n1.i * R9.IdealCommutingSwitch1.n1.v + R9.IdealCommutingSwitch1.n2.i * R9.IdealCommutingSwitch1.n2.v);
//   R9.IdealCommutingSwitch1.T_heatPort = R9.IdealCommutingSwitch1.T;
//   0.0 = R9.IdealCommutingSwitch2.p.i + (R9.IdealCommutingSwitch2.n2.i + R9.IdealCommutingSwitch2.n1.i);
//   R9.IdealCommutingSwitch2.p.v - R9.IdealCommutingSwitch2.n1.v = R9.IdealCommutingSwitch2.s1 * (if R9.IdealCommutingSwitch2.control then 1.0 else R9.IdealCommutingSwitch2.Ron);
//   R9.IdealCommutingSwitch2.n1.i = (-R9.IdealCommutingSwitch2.s1) * (if R9.IdealCommutingSwitch2.control then R9.IdealCommutingSwitch2.Goff else 1.0);
//   R9.IdealCommutingSwitch2.p.v - R9.IdealCommutingSwitch2.n2.v = R9.IdealCommutingSwitch2.s2 * (if R9.IdealCommutingSwitch2.control then R9.IdealCommutingSwitch2.Ron else 1.0);
//   R9.IdealCommutingSwitch2.n2.i = (-R9.IdealCommutingSwitch2.s2) * (if R9.IdealCommutingSwitch2.control then 1.0 else R9.IdealCommutingSwitch2.Goff);
//   R9.IdealCommutingSwitch2.LossPower = R9.IdealCommutingSwitch2.p.i * R9.IdealCommutingSwitch2.p.v + (R9.IdealCommutingSwitch2.n1.i * R9.IdealCommutingSwitch2.n1.v + R9.IdealCommutingSwitch2.n2.i * R9.IdealCommutingSwitch2.n2.v);
//   R9.IdealCommutingSwitch2.T_heatPort = R9.IdealCommutingSwitch2.T;
//   R9.Ground1.p.v = 0.0;
//   R9.Ground2.p.v = 0.0;
//   when sample(R1.BooleanPulse1.startTime,R1.BooleanPulse1.period) then
//   R1.BooleanPulse1.pulsStart = time;
//   end when;
//   R1.BooleanPulse1.y = time >= R1.BooleanPulse1.pulsStart AND time < R1.BooleanPulse1.pulsStart + R1.BooleanPulse1.Twidth;
//   R1.Capacitor1.i = R1.Capacitor1.C * der(R1.Capacitor1.v);
//   R1.Capacitor1.v = R1.Capacitor1.p.v - R1.Capacitor1.n.v;
//   0.0 = R1.Capacitor1.p.i + R1.Capacitor1.n.i;
//   R1.Capacitor1.i = R1.Capacitor1.p.i;
//   0.0 = R1.IdealCommutingSwitch1.p.i + (R1.IdealCommutingSwitch1.n2.i + R1.IdealCommutingSwitch1.n1.i);
//   R1.IdealCommutingSwitch1.p.v - R1.IdealCommutingSwitch1.n1.v = R1.IdealCommutingSwitch1.s1 * (if R1.IdealCommutingSwitch1.control then 1.0 else R1.IdealCommutingSwitch1.Ron);
//   R1.IdealCommutingSwitch1.n1.i = (-R1.IdealCommutingSwitch1.s1) * (if R1.IdealCommutingSwitch1.control then R1.IdealCommutingSwitch1.Goff else 1.0);
//   R1.IdealCommutingSwitch1.p.v - R1.IdealCommutingSwitch1.n2.v = R1.IdealCommutingSwitch1.s2 * (if R1.IdealCommutingSwitch1.control then R1.IdealCommutingSwitch1.Ron else 1.0);
//   R1.IdealCommutingSwitch1.n2.i = (-R1.IdealCommutingSwitch1.s2) * (if R1.IdealCommutingSwitch1.control then 1.0 else R1.IdealCommutingSwitch1.Goff);
//   R1.IdealCommutingSwitch1.LossPower = R1.IdealCommutingSwitch1.p.i * R1.IdealCommutingSwitch1.p.v + (R1.IdealCommutingSwitch1.n1.i * R1.IdealCommutingSwitch1.n1.v + R1.IdealCommutingSwitch1.n2.i * R1.IdealCommutingSwitch1.n2.v);
//   R1.IdealCommutingSwitch1.T_heatPort = R1.IdealCommutingSwitch1.T;
//   0.0 = R1.IdealCommutingSwitch2.p.i + (R1.IdealCommutingSwitch2.n2.i + R1.IdealCommutingSwitch2.n1.i);
//   R1.IdealCommutingSwitch2.p.v - R1.IdealCommutingSwitch2.n1.v = R1.IdealCommutingSwitch2.s1 * (if R1.IdealCommutingSwitch2.control then 1.0 else R1.IdealCommutingSwitch2.Ron);
//   R1.IdealCommutingSwitch2.n1.i = (-R1.IdealCommutingSwitch2.s1) * (if R1.IdealCommutingSwitch2.control then R1.IdealCommutingSwitch2.Goff else 1.0);
//   R1.IdealCommutingSwitch2.p.v - R1.IdealCommutingSwitch2.n2.v = R1.IdealCommutingSwitch2.s2 * (if R1.IdealCommutingSwitch2.control then R1.IdealCommutingSwitch2.Ron else 1.0);
//   R1.IdealCommutingSwitch2.n2.i = (-R1.IdealCommutingSwitch2.s2) * (if R1.IdealCommutingSwitch2.control then 1.0 else R1.IdealCommutingSwitch2.Goff);
//   R1.IdealCommutingSwitch2.LossPower = R1.IdealCommutingSwitch2.p.i * R1.IdealCommutingSwitch2.p.v + (R1.IdealCommutingSwitch2.n1.i * R1.IdealCommutingSwitch2.n1.v + R1.IdealCommutingSwitch2.n2.i * R1.IdealCommutingSwitch2.n2.v);
//   R1.IdealCommutingSwitch2.T_heatPort = R1.IdealCommutingSwitch2.T;
//   R1.Ground1.p.v = 0.0;
//   R1.Ground2.p.v = 0.0;
//   when sample(R2.BooleanPulse1.startTime,R2.BooleanPulse1.period) then
//   R2.BooleanPulse1.pulsStart = time;
//   end when;
//   R2.BooleanPulse1.y = time >= R2.BooleanPulse1.pulsStart AND time < R2.BooleanPulse1.pulsStart + R2.BooleanPulse1.Twidth;
//   R2.Capacitor1.i = R2.Capacitor1.C * der(R2.Capacitor1.v);
//   R2.Capacitor1.v = R2.Capacitor1.p.v - R2.Capacitor1.n.v;
//   0.0 = R2.Capacitor1.p.i + R2.Capacitor1.n.i;
//   R2.Capacitor1.i = R2.Capacitor1.p.i;
//   0.0 = R2.IdealCommutingSwitch1.p.i + (R2.IdealCommutingSwitch1.n2.i + R2.IdealCommutingSwitch1.n1.i);
//   R2.IdealCommutingSwitch1.p.v - R2.IdealCommutingSwitch1.n1.v = R2.IdealCommutingSwitch1.s1 * (if R2.IdealCommutingSwitch1.control then 1.0 else R2.IdealCommutingSwitch1.Ron);
//   R2.IdealCommutingSwitch1.n1.i = (-R2.IdealCommutingSwitch1.s1) * (if R2.IdealCommutingSwitch1.control then R2.IdealCommutingSwitch1.Goff else 1.0);
//   R2.IdealCommutingSwitch1.p.v - R2.IdealCommutingSwitch1.n2.v = R2.IdealCommutingSwitch1.s2 * (if R2.IdealCommutingSwitch1.control then R2.IdealCommutingSwitch1.Ron else 1.0);
//   R2.IdealCommutingSwitch1.n2.i = (-R2.IdealCommutingSwitch1.s2) * (if R2.IdealCommutingSwitch1.control then 1.0 else R2.IdealCommutingSwitch1.Goff);
//   R2.IdealCommutingSwitch1.LossPower = R2.IdealCommutingSwitch1.p.i * R2.IdealCommutingSwitch1.p.v + (R2.IdealCommutingSwitch1.n1.i * R2.IdealCommutingSwitch1.n1.v + R2.IdealCommutingSwitch1.n2.i * R2.IdealCommutingSwitch1.n2.v);
//   R2.IdealCommutingSwitch1.T_heatPort = R2.IdealCommutingSwitch1.T;
//   0.0 = R2.IdealCommutingSwitch2.p.i + (R2.IdealCommutingSwitch2.n2.i + R2.IdealCommutingSwitch2.n1.i);
//   R2.IdealCommutingSwitch2.p.v - R2.IdealCommutingSwitch2.n1.v = R2.IdealCommutingSwitch2.s1 * (if R2.IdealCommutingSwitch2.control then 1.0 else R2.IdealCommutingSwitch2.Ron);
//   R2.IdealCommutingSwitch2.n1.i = (-R2.IdealCommutingSwitch2.s1) * (if R2.IdealCommutingSwitch2.control then R2.IdealCommutingSwitch2.Goff else 1.0);
//   R2.IdealCommutingSwitch2.p.v - R2.IdealCommutingSwitch2.n2.v = R2.IdealCommutingSwitch2.s2 * (if R2.IdealCommutingSwitch2.control then R2.IdealCommutingSwitch2.Ron else 1.0);
//   R2.IdealCommutingSwitch2.n2.i = (-R2.IdealCommutingSwitch2.s2) * (if R2.IdealCommutingSwitch2.control then 1.0 else R2.IdealCommutingSwitch2.Goff);
//   R2.IdealCommutingSwitch2.LossPower = R2.IdealCommutingSwitch2.p.i * R2.IdealCommutingSwitch2.p.v + (R2.IdealCommutingSwitch2.n1.i * R2.IdealCommutingSwitch2.n1.v + R2.IdealCommutingSwitch2.n2.i * R2.IdealCommutingSwitch2.n2.v);
//   R2.IdealCommutingSwitch2.T_heatPort = R2.IdealCommutingSwitch2.T;
//   R2.Ground1.p.v = 0.0;
//   R2.Ground2.p.v = 0.0;
//   when sample(R3.BooleanPulse1.startTime,R3.BooleanPulse1.period) then
//   R3.BooleanPulse1.pulsStart = time;
//   end when;
//   R3.BooleanPulse1.y = time >= R3.BooleanPulse1.pulsStart AND time < R3.BooleanPulse1.pulsStart + R3.BooleanPulse1.Twidth;
//   R3.Capacitor1.i = R3.Capacitor1.C * der(R3.Capacitor1.v);
//   R3.Capacitor1.v = R3.Capacitor1.p.v - R3.Capacitor1.n.v;
//   0.0 = R3.Capacitor1.p.i + R3.Capacitor1.n.i;
//   R3.Capacitor1.i = R3.Capacitor1.p.i;
//   0.0 = R3.IdealCommutingSwitch1.p.i + (R3.IdealCommutingSwitch1.n2.i + R3.IdealCommutingSwitch1.n1.i);
//   R3.IdealCommutingSwitch1.p.v - R3.IdealCommutingSwitch1.n1.v = R3.IdealCommutingSwitch1.s1 * (if R3.IdealCommutingSwitch1.control then 1.0 else R3.IdealCommutingSwitch1.Ron);
//   R3.IdealCommutingSwitch1.n1.i = (-R3.IdealCommutingSwitch1.s1) * (if R3.IdealCommutingSwitch1.control then R3.IdealCommutingSwitch1.Goff else 1.0);
//   R3.IdealCommutingSwitch1.p.v - R3.IdealCommutingSwitch1.n2.v = R3.IdealCommutingSwitch1.s2 * (if R3.IdealCommutingSwitch1.control then R3.IdealCommutingSwitch1.Ron else 1.0);
//   R3.IdealCommutingSwitch1.n2.i = (-R3.IdealCommutingSwitch1.s2) * (if R3.IdealCommutingSwitch1.control then 1.0 else R3.IdealCommutingSwitch1.Goff);
//   R3.IdealCommutingSwitch1.LossPower = R3.IdealCommutingSwitch1.p.i * R3.IdealCommutingSwitch1.p.v + (R3.IdealCommutingSwitch1.n1.i * R3.IdealCommutingSwitch1.n1.v + R3.IdealCommutingSwitch1.n2.i * R3.IdealCommutingSwitch1.n2.v);
//   R3.IdealCommutingSwitch1.T_heatPort = R3.IdealCommutingSwitch1.T;
//   0.0 = R3.IdealCommutingSwitch2.p.i + (R3.IdealCommutingSwitch2.n2.i + R3.IdealCommutingSwitch2.n1.i);
//   R3.IdealCommutingSwitch2.p.v - R3.IdealCommutingSwitch2.n1.v = R3.IdealCommutingSwitch2.s1 * (if R3.IdealCommutingSwitch2.control then 1.0 else R3.IdealCommutingSwitch2.Ron);
//   R3.IdealCommutingSwitch2.n1.i = (-R3.IdealCommutingSwitch2.s1) * (if R3.IdealCommutingSwitch2.control then R3.IdealCommutingSwitch2.Goff else 1.0);
//   R3.IdealCommutingSwitch2.p.v - R3.IdealCommutingSwitch2.n2.v = R3.IdealCommutingSwitch2.s2 * (if R3.IdealCommutingSwitch2.control then R3.IdealCommutingSwitch2.Ron else 1.0);
//   R3.IdealCommutingSwitch2.n2.i = (-R3.IdealCommutingSwitch2.s2) * (if R3.IdealCommutingSwitch2.control then 1.0 else R3.IdealCommutingSwitch2.Goff);
//   R3.IdealCommutingSwitch2.LossPower = R3.IdealCommutingSwitch2.p.i * R3.IdealCommutingSwitch2.p.v + (R3.IdealCommutingSwitch2.n1.i * R3.IdealCommutingSwitch2.n1.v + R3.IdealCommutingSwitch2.n2.i * R3.IdealCommutingSwitch2.n2.v);
//   R3.IdealCommutingSwitch2.T_heatPort = R3.IdealCommutingSwitch2.T;
//   R3.Ground1.p.v = 0.0;
//   R3.Ground2.p.v = 0.0;
//   when sample(Rp1.BooleanPulse1.startTime,Rp1.BooleanPulse1.period) then
//   Rp1.BooleanPulse1.pulsStart = time;
//   end when;
//   Rp1.BooleanPulse1.y = time >= Rp1.BooleanPulse1.pulsStart AND time < Rp1.BooleanPulse1.pulsStart + Rp1.BooleanPulse1.Twidth;
//   Rp1.Capacitor1.i = Rp1.Capacitor1.C * der(Rp1.Capacitor1.v);
//   Rp1.Capacitor1.v = Rp1.Capacitor1.p.v - Rp1.Capacitor1.n.v;
//   0.0 = Rp1.Capacitor1.p.i + Rp1.Capacitor1.n.i;
//   Rp1.Capacitor1.i = Rp1.Capacitor1.p.i;
//   0.0 = Rp1.IdealCommutingSwitch1.p.i + (Rp1.IdealCommutingSwitch1.n2.i + Rp1.IdealCommutingSwitch1.n1.i);
//   Rp1.IdealCommutingSwitch1.p.v - Rp1.IdealCommutingSwitch1.n1.v = Rp1.IdealCommutingSwitch1.s1 * (if Rp1.IdealCommutingSwitch1.control then 1.0 else Rp1.IdealCommutingSwitch1.Ron);
//   Rp1.IdealCommutingSwitch1.n1.i = (-Rp1.IdealCommutingSwitch1.s1) * (if Rp1.IdealCommutingSwitch1.control then Rp1.IdealCommutingSwitch1.Goff else 1.0);
//   Rp1.IdealCommutingSwitch1.p.v - Rp1.IdealCommutingSwitch1.n2.v = Rp1.IdealCommutingSwitch1.s2 * (if Rp1.IdealCommutingSwitch1.control then Rp1.IdealCommutingSwitch1.Ron else 1.0);
//   Rp1.IdealCommutingSwitch1.n2.i = (-Rp1.IdealCommutingSwitch1.s2) * (if Rp1.IdealCommutingSwitch1.control then 1.0 else Rp1.IdealCommutingSwitch1.Goff);
//   Rp1.IdealCommutingSwitch1.LossPower = Rp1.IdealCommutingSwitch1.p.i * Rp1.IdealCommutingSwitch1.p.v + (Rp1.IdealCommutingSwitch1.n1.i * Rp1.IdealCommutingSwitch1.n1.v + Rp1.IdealCommutingSwitch1.n2.i * Rp1.IdealCommutingSwitch1.n2.v);
//   Rp1.IdealCommutingSwitch1.T_heatPort = Rp1.IdealCommutingSwitch1.T;
//   0.0 = Rp1.IdealCommutingSwitch2.p.i + (Rp1.IdealCommutingSwitch2.n2.i + Rp1.IdealCommutingSwitch2.n1.i);
//   Rp1.IdealCommutingSwitch2.p.v - Rp1.IdealCommutingSwitch2.n1.v = Rp1.IdealCommutingSwitch2.s1 * (if Rp1.IdealCommutingSwitch2.control then 1.0 else Rp1.IdealCommutingSwitch2.Ron);
//   Rp1.IdealCommutingSwitch2.n1.i = (-Rp1.IdealCommutingSwitch2.s1) * (if Rp1.IdealCommutingSwitch2.control then Rp1.IdealCommutingSwitch2.Goff else 1.0);
//   Rp1.IdealCommutingSwitch2.p.v - Rp1.IdealCommutingSwitch2.n2.v = Rp1.IdealCommutingSwitch2.s2 * (if Rp1.IdealCommutingSwitch2.control then Rp1.IdealCommutingSwitch2.Ron else 1.0);
//   Rp1.IdealCommutingSwitch2.n2.i = (-Rp1.IdealCommutingSwitch2.s2) * (if Rp1.IdealCommutingSwitch2.control then 1.0 else Rp1.IdealCommutingSwitch2.Goff);
//   Rp1.IdealCommutingSwitch2.LossPower = Rp1.IdealCommutingSwitch2.p.i * Rp1.IdealCommutingSwitch2.p.v + (Rp1.IdealCommutingSwitch2.n1.i * Rp1.IdealCommutingSwitch2.n1.v + Rp1.IdealCommutingSwitch2.n2.i * Rp1.IdealCommutingSwitch2.n2.v);
//   Rp1.IdealCommutingSwitch2.T_heatPort = Rp1.IdealCommutingSwitch2.T;
//   Rp1.Ground1.p.v = 0.0;
//   Rp1.Ground2.p.v = 0.0;
//   when sample(R7.BooleanPulse1.startTime,R7.BooleanPulse1.period) then
//   R7.BooleanPulse1.pulsStart = time;
//   end when;
//   R7.BooleanPulse1.y = time >= R7.BooleanPulse1.pulsStart AND time < R7.BooleanPulse1.pulsStart + R7.BooleanPulse1.Twidth;
//   R7.Capacitor1.i = R7.Capacitor1.C * der(R7.Capacitor1.v);
//   R7.Capacitor1.v = R7.Capacitor1.p.v - R7.Capacitor1.n.v;
//   0.0 = R7.Capacitor1.p.i + R7.Capacitor1.n.i;
//   R7.Capacitor1.i = R7.Capacitor1.p.i;
//   0.0 = R7.IdealCommutingSwitch1.p.i + (R7.IdealCommutingSwitch1.n2.i + R7.IdealCommutingSwitch1.n1.i);
//   R7.IdealCommutingSwitch1.p.v - R7.IdealCommutingSwitch1.n1.v = R7.IdealCommutingSwitch1.s1 * (if R7.IdealCommutingSwitch1.control then 1.0 else R7.IdealCommutingSwitch1.Ron);
//   R7.IdealCommutingSwitch1.n1.i = (-R7.IdealCommutingSwitch1.s1) * (if R7.IdealCommutingSwitch1.control then R7.IdealCommutingSwitch1.Goff else 1.0);
//   R7.IdealCommutingSwitch1.p.v - R7.IdealCommutingSwitch1.n2.v = R7.IdealCommutingSwitch1.s2 * (if R7.IdealCommutingSwitch1.control then R7.IdealCommutingSwitch1.Ron else 1.0);
//   R7.IdealCommutingSwitch1.n2.i = (-R7.IdealCommutingSwitch1.s2) * (if R7.IdealCommutingSwitch1.control then 1.0 else R7.IdealCommutingSwitch1.Goff);
//   R7.IdealCommutingSwitch1.LossPower = R7.IdealCommutingSwitch1.p.i * R7.IdealCommutingSwitch1.p.v + (R7.IdealCommutingSwitch1.n1.i * R7.IdealCommutingSwitch1.n1.v + R7.IdealCommutingSwitch1.n2.i * R7.IdealCommutingSwitch1.n2.v);
//   R7.IdealCommutingSwitch1.T_heatPort = R7.IdealCommutingSwitch1.T;
//   0.0 = R7.IdealCommutingSwitch2.p.i + (R7.IdealCommutingSwitch2.n2.i + R7.IdealCommutingSwitch2.n1.i);
//   R7.IdealCommutingSwitch2.p.v - R7.IdealCommutingSwitch2.n1.v = R7.IdealCommutingSwitch2.s1 * (if R7.IdealCommutingSwitch2.control then 1.0 else R7.IdealCommutingSwitch2.Ron);
//   R7.IdealCommutingSwitch2.n1.i = (-R7.IdealCommutingSwitch2.s1) * (if R7.IdealCommutingSwitch2.control then R7.IdealCommutingSwitch2.Goff else 1.0);
//   R7.IdealCommutingSwitch2.p.v - R7.IdealCommutingSwitch2.n2.v = R7.IdealCommutingSwitch2.s2 * (if R7.IdealCommutingSwitch2.control then R7.IdealCommutingSwitch2.Ron else 1.0);
//   R7.IdealCommutingSwitch2.n2.i = (-R7.IdealCommutingSwitch2.s2) * (if R7.IdealCommutingSwitch2.control then 1.0 else R7.IdealCommutingSwitch2.Goff);
//   R7.IdealCommutingSwitch2.LossPower = R7.IdealCommutingSwitch2.p.i * R7.IdealCommutingSwitch2.p.v + (R7.IdealCommutingSwitch2.n1.i * R7.IdealCommutingSwitch2.n1.v + R7.IdealCommutingSwitch2.n2.i * R7.IdealCommutingSwitch2.n2.v);
//   R7.IdealCommutingSwitch2.T_heatPort = R7.IdealCommutingSwitch2.T;
//   R7.Ground1.p.v = 0.0;
//   R7.Ground2.p.v = 0.0;
//   when sample(R10.BooleanPulse1.startTime,R10.BooleanPulse1.period) then
//   R10.BooleanPulse1.pulsStart = time;
//   end when;
//   R10.BooleanPulse1.y = time >= R10.BooleanPulse1.pulsStart AND time < R10.BooleanPulse1.pulsStart + R10.BooleanPulse1.Twidth;
//   R10.Capacitor1.i = R10.Capacitor1.C * der(R10.Capacitor1.v);
//   R10.Capacitor1.v = R10.Capacitor1.p.v - R10.Capacitor1.n.v;
//   0.0 = R10.Capacitor1.p.i + R10.Capacitor1.n.i;
//   R10.Capacitor1.i = R10.Capacitor1.p.i;
//   0.0 = R10.IdealCommutingSwitch1.p.i + (R10.IdealCommutingSwitch1.n2.i + R10.IdealCommutingSwitch1.n1.i);
//   R10.IdealCommutingSwitch1.p.v - R10.IdealCommutingSwitch1.n1.v = R10.IdealCommutingSwitch1.s1 * (if R10.IdealCommutingSwitch1.control then 1.0 else R10.IdealCommutingSwitch1.Ron);
//   R10.IdealCommutingSwitch1.n1.i = (-R10.IdealCommutingSwitch1.s1) * (if R10.IdealCommutingSwitch1.control then R10.IdealCommutingSwitch1.Goff else 1.0);
//   R10.IdealCommutingSwitch1.p.v - R10.IdealCommutingSwitch1.n2.v = R10.IdealCommutingSwitch1.s2 * (if R10.IdealCommutingSwitch1.control then R10.IdealCommutingSwitch1.Ron else 1.0);
//   R10.IdealCommutingSwitch1.n2.i = (-R10.IdealCommutingSwitch1.s2) * (if R10.IdealCommutingSwitch1.control then 1.0 else R10.IdealCommutingSwitch1.Goff);
//   R10.IdealCommutingSwitch1.LossPower = R10.IdealCommutingSwitch1.p.i * R10.IdealCommutingSwitch1.p.v + (R10.IdealCommutingSwitch1.n1.i * R10.IdealCommutingSwitch1.n1.v + R10.IdealCommutingSwitch1.n2.i * R10.IdealCommutingSwitch1.n2.v);
//   R10.IdealCommutingSwitch1.T_heatPort = R10.IdealCommutingSwitch1.T;
//   0.0 = R10.IdealCommutingSwitch2.p.i + (R10.IdealCommutingSwitch2.n2.i + R10.IdealCommutingSwitch2.n1.i);
//   R10.IdealCommutingSwitch2.p.v - R10.IdealCommutingSwitch2.n1.v = R10.IdealCommutingSwitch2.s1 * (if R10.IdealCommutingSwitch2.control then 1.0 else R10.IdealCommutingSwitch2.Ron);
//   R10.IdealCommutingSwitch2.n1.i = (-R10.IdealCommutingSwitch2.s1) * (if R10.IdealCommutingSwitch2.control then R10.IdealCommutingSwitch2.Goff else 1.0);
//   R10.IdealCommutingSwitch2.p.v - R10.IdealCommutingSwitch2.n2.v = R10.IdealCommutingSwitch2.s2 * (if R10.IdealCommutingSwitch2.control then R10.IdealCommutingSwitch2.Ron else 1.0);
//   R10.IdealCommutingSwitch2.n2.i = (-R10.IdealCommutingSwitch2.s2) * (if R10.IdealCommutingSwitch2.control then 1.0 else R10.IdealCommutingSwitch2.Goff);
//   R10.IdealCommutingSwitch2.LossPower = R10.IdealCommutingSwitch2.p.i * R10.IdealCommutingSwitch2.p.v + (R10.IdealCommutingSwitch2.n1.i * R10.IdealCommutingSwitch2.n1.v + R10.IdealCommutingSwitch2.n2.i * R10.IdealCommutingSwitch2.n2.v);
//   R10.IdealCommutingSwitch2.T_heatPort = R10.IdealCommutingSwitch2.T;
//   R10.Ground1.p.v = 0.0;
//   R10.Ground2.p.v = 0.0;
//   when sample(R11.BooleanPulse1.startTime,R11.BooleanPulse1.period) then
//   R11.BooleanPulse1.pulsStart = time;
//   end when;
//   R11.BooleanPulse1.y = time >= R11.BooleanPulse1.pulsStart AND time < R11.BooleanPulse1.pulsStart + R11.BooleanPulse1.Twidth;
//   R11.Capacitor1.i = R11.Capacitor1.C * der(R11.Capacitor1.v);
//   R11.Capacitor1.v = R11.Capacitor1.p.v - R11.Capacitor1.n.v;
//   0.0 = R11.Capacitor1.p.i + R11.Capacitor1.n.i;
//   R11.Capacitor1.i = R11.Capacitor1.p.i;
//   0.0 = R11.IdealCommutingSwitch1.p.i + (R11.IdealCommutingSwitch1.n2.i + R11.IdealCommutingSwitch1.n1.i);
//   R11.IdealCommutingSwitch1.p.v - R11.IdealCommutingSwitch1.n1.v = R11.IdealCommutingSwitch1.s1 * (if R11.IdealCommutingSwitch1.control then 1.0 else R11.IdealCommutingSwitch1.Ron);
//   R11.IdealCommutingSwitch1.n1.i = (-R11.IdealCommutingSwitch1.s1) * (if R11.IdealCommutingSwitch1.control then R11.IdealCommutingSwitch1.Goff else 1.0);
//   R11.IdealCommutingSwitch1.p.v - R11.IdealCommutingSwitch1.n2.v = R11.IdealCommutingSwitch1.s2 * (if R11.IdealCommutingSwitch1.control then R11.IdealCommutingSwitch1.Ron else 1.0);
//   R11.IdealCommutingSwitch1.n2.i = (-R11.IdealCommutingSwitch1.s2) * (if R11.IdealCommutingSwitch1.control then 1.0 else R11.IdealCommutingSwitch1.Goff);
//   R11.IdealCommutingSwitch1.LossPower = R11.IdealCommutingSwitch1.p.i * R11.IdealCommutingSwitch1.p.v + (R11.IdealCommutingSwitch1.n1.i * R11.IdealCommutingSwitch1.n1.v + R11.IdealCommutingSwitch1.n2.i * R11.IdealCommutingSwitch1.n2.v);
//   R11.IdealCommutingSwitch1.T_heatPort = R11.IdealCommutingSwitch1.T;
//   0.0 = R11.IdealCommutingSwitch2.p.i + (R11.IdealCommutingSwitch2.n2.i + R11.IdealCommutingSwitch2.n1.i);
//   R11.IdealCommutingSwitch2.p.v - R11.IdealCommutingSwitch2.n1.v = R11.IdealCommutingSwitch2.s1 * (if R11.IdealCommutingSwitch2.control then 1.0 else R11.IdealCommutingSwitch2.Ron);
//   R11.IdealCommutingSwitch2.n1.i = (-R11.IdealCommutingSwitch2.s1) * (if R11.IdealCommutingSwitch2.control then R11.IdealCommutingSwitch2.Goff else 1.0);
//   R11.IdealCommutingSwitch2.p.v - R11.IdealCommutingSwitch2.n2.v = R11.IdealCommutingSwitch2.s2 * (if R11.IdealCommutingSwitch2.control then R11.IdealCommutingSwitch2.Ron else 1.0);
//   R11.IdealCommutingSwitch2.n2.i = (-R11.IdealCommutingSwitch2.s2) * (if R11.IdealCommutingSwitch2.control then 1.0 else R11.IdealCommutingSwitch2.Goff);
//   R11.IdealCommutingSwitch2.LossPower = R11.IdealCommutingSwitch2.p.i * R11.IdealCommutingSwitch2.p.v + (R11.IdealCommutingSwitch2.n1.i * R11.IdealCommutingSwitch2.n1.v + R11.IdealCommutingSwitch2.n2.i * R11.IdealCommutingSwitch2.n2.v);
//   R11.IdealCommutingSwitch2.T_heatPort = R11.IdealCommutingSwitch2.T;
//   R11.Ground1.p.v = 0.0;
//   R11.Ground2.p.v = 0.0;
//   R11.n1.i + (R10.n2.i + (C8.n.i + (Op5.in_n.i + (C9.p.i + ((-p4.i) + (-n14.i)))))) = 0.0;
//   C8.n.v = C9.p.v;
//   C8.n.v = Op5.in_n.v;
//   C8.n.v = R10.n2.v;
//   C8.n.v = R11.n1.v;
//   C8.n.v = n14.v;
//   C8.n.v = p4.v;
//   R11.n2.i + (C4.p.i + ((-p3.i) + ((-n12.i) + (C9.n.i + ((-n13.i) + (Op5.out.i + R8.n1.i)))))) = 0.0;
//   C4.p.v = C9.n.v;
//   C4.p.v = Op5.out.v;
//   C4.p.v = R11.n2.v;
//   C4.p.v = R8.n1.v;
//   C4.p.v = n12.v;
//   C4.p.v = n13.v;
//   C4.p.v = p3.v;
//   R10.n1.i + (Rp1.n1.i + (C7.n.i + ((-n11.i) + Op4.out.i))) = 0.0;
//   C7.n.v = Op4.out.v;
//   C7.n.v = R10.n1.v;
//   C7.n.v = Rp1.n1.v;
//   C7.n.v = n11.v;
//   R7.n2.i + (Rp1.n2.i + (C4.n.i + (C5.n.i + ((-n7.i) + (Op3.in_n.i + ((-n8.i) + (C6.p.i + (-p2.i)))))))) = 0.0;
//   C4.n.v = C5.n.v;
//   C4.n.v = C6.p.v;
//   C4.n.v = Op3.in_n.v;
//   C4.n.v = R7.n2.v;
//   C4.n.v = Rp1.n2.v;
//   C4.n.v = n7.v;
//   C4.n.v = n8.v;
//   C4.n.v = p2.v;
//   R2.n1.i + (C3.n.i + ((-n6.i) + (Op2.out.i + R7.n1.i))) = 0.0;
//   C3.n.v = Op2.out.v;
//   C3.n.v = R2.n1.v;
//   C3.n.v = R7.n1.v;
//   C3.n.v = n6.v;
//   R3.n2.i + (C5.p.i + (C1.n.i + ((-n4.i) + (Op1.out.i + R4.n1.i)))) = 0.0;
//   C1.n.v = C5.p.v;
//   C1.n.v = Op1.out.v;
//   C1.n.v = R3.n2.v;
//   C1.n.v = R4.n1.v;
//   C1.n.v = n4.v;
//   R3.n1.i + (R2.n2.i + (R1.n2.i + (C2.n.i + ((-n1.i) + (Op1.in_n.i + ((-n2.i) + ((-n3.i) + C1.p.i))))))) = 0.0;
//   C1.p.v = C2.n.v;
//   C1.p.v = Op1.in_n.v;
//   C1.p.v = R1.n2.v;
//   C1.p.v = R2.n2.v;
//   C1.p.v = R3.n1.v;
//   C1.p.v = n1.v;
//   C1.p.v = n2.v;
//   C1.p.v = n3.v;
//   R1.n1.i + V.n.i = 0.0;
//   R1.n1.v = V.n.v;
//   R9.n2.i + (R8.n2.i + ((-n9.i) + ((-n10.i) + (Op4.in_n.i + C7.p.i)))) = 0.0;
//   C7.p.v = Op4.in_n.v;
//   C7.p.v = R8.n2.v;
//   C7.p.v = R9.n2.v;
//   C7.p.v = n10.v;
//   C7.p.v = n9.v;
//   R5.n1.i + (C2.p.i + ((-p1.i) + (C6.n.i + (Op3.out.i + ((-out1.i) + (C8.p.i + R9.n1.i)))))) = 0.0;
//   C2.p.v = C6.n.v;
//   C2.p.v = C8.p.v;
//   C2.p.v = Op3.out.v;
//   C2.p.v = R5.n1.v;
//   C2.p.v = R9.n1.v;
//   C2.p.v = out1.v;
//   C2.p.v = p1.v;
//   R5.n2.i + (R4.n2.i + (C3.p.i + ((-n5.i) + Op2.in_n.i))) = 0.0;
//   C3.p.v = Op2.in_n.v;
//   C3.p.v = R4.n2.v;
//   C3.p.v = R5.n2.v;
//   C3.p.v = n5.v;
//   V.p.i + Ground1.p.i = 0.0;
//   Ground1.p.v = V.p.v;
//   Op5.in_p.i + G4.p.i = 0.0;
//   G4.p.v = Op5.in_p.v;
//   Op4.in_p.i + G3.p.i = 0.0;
//   G3.p.v = Op4.in_p.v;
//   G2.p.i + Op3.in_p.i = 0.0;
//   G2.p.v = Op3.in_p.v;
//   G1.p.i + Op2.in_p.i = 0.0;
//   G1.p.v = Op2.in_p.v;
//   Op1.in_p.i + G.p.i = 0.0;
//   G.p.v = Op1.in_p.v;
//   R11.IdealCommutingSwitch2.n1.i + (-R11.n2.i) = 0.0;
//   R11.IdealCommutingSwitch2.n1.v = R11.n2.v;
//   R11.IdealCommutingSwitch1.n1.i + (-R11.n1.i) = 0.0;
//   R11.IdealCommutingSwitch1.n1.v = R11.n1.v;
//   R11.Ground2.p.i + R11.IdealCommutingSwitch2.n2.i = 0.0;
//   R11.Ground2.p.v = R11.IdealCommutingSwitch2.n2.v;
//   R11.Ground1.p.i + R11.IdealCommutingSwitch1.n2.i = 0.0;
//   R11.Ground1.p.v = R11.IdealCommutingSwitch1.n2.v;
//   R11.BooleanPulse1.y = R11.IdealCommutingSwitch1.control;
//   R11.BooleanPulse1.y = R11.IdealCommutingSwitch2.control;
//   R11.Capacitor1.n.i + R11.IdealCommutingSwitch2.p.i = 0.0;
//   R11.Capacitor1.n.v = R11.IdealCommutingSwitch2.p.v;
//   R11.IdealCommutingSwitch1.p.i + R11.Capacitor1.p.i = 0.0;
//   R11.Capacitor1.p.v = R11.IdealCommutingSwitch1.p.v;
//   R10.IdealCommutingSwitch2.n1.i + (-R10.n2.i) = 0.0;
//   R10.IdealCommutingSwitch2.n1.v = R10.n2.v;
//   R10.IdealCommutingSwitch1.n1.i + (-R10.n1.i) = 0.0;
//   R10.IdealCommutingSwitch1.n1.v = R10.n1.v;
//   R10.Ground2.p.i + R10.IdealCommutingSwitch2.n2.i = 0.0;
//   R10.Ground2.p.v = R10.IdealCommutingSwitch2.n2.v;
//   R10.Ground1.p.i + R10.IdealCommutingSwitch1.n2.i = 0.0;
//   R10.Ground1.p.v = R10.IdealCommutingSwitch1.n2.v;
//   R10.BooleanPulse1.y = R10.IdealCommutingSwitch1.control;
//   R10.BooleanPulse1.y = R10.IdealCommutingSwitch2.control;
//   R10.Capacitor1.n.i + R10.IdealCommutingSwitch2.p.i = 0.0;
//   R10.Capacitor1.n.v = R10.IdealCommutingSwitch2.p.v;
//   R10.IdealCommutingSwitch1.p.i + R10.Capacitor1.p.i = 0.0;
//   R10.Capacitor1.p.v = R10.IdealCommutingSwitch1.p.v;
//   R7.IdealCommutingSwitch2.n1.i + (-R7.n2.i) = 0.0;
//   R7.IdealCommutingSwitch2.n1.v = R7.n2.v;
//   R7.IdealCommutingSwitch1.n1.i + (-R7.n1.i) = 0.0;
//   R7.IdealCommutingSwitch1.n1.v = R7.n1.v;
//   R7.Ground2.p.i + R7.IdealCommutingSwitch2.n2.i = 0.0;
//   R7.Ground2.p.v = R7.IdealCommutingSwitch2.n2.v;
//   R7.Ground1.p.i + R7.IdealCommutingSwitch1.n2.i = 0.0;
//   R7.Ground1.p.v = R7.IdealCommutingSwitch1.n2.v;
//   R7.BooleanPulse1.y = R7.IdealCommutingSwitch1.control;
//   R7.BooleanPulse1.y = R7.IdealCommutingSwitch2.control;
//   R7.Capacitor1.n.i + R7.IdealCommutingSwitch2.p.i = 0.0;
//   R7.Capacitor1.n.v = R7.IdealCommutingSwitch2.p.v;
//   R7.IdealCommutingSwitch1.p.i + R7.Capacitor1.p.i = 0.0;
//   R7.Capacitor1.p.v = R7.IdealCommutingSwitch1.p.v;
//   Rp1.IdealCommutingSwitch2.n1.i + (-Rp1.n2.i) = 0.0;
//   Rp1.IdealCommutingSwitch2.n1.v = Rp1.n2.v;
//   Rp1.IdealCommutingSwitch1.n1.i + (-Rp1.n1.i) = 0.0;
//   Rp1.IdealCommutingSwitch1.n1.v = Rp1.n1.v;
//   Rp1.Ground2.p.i + Rp1.IdealCommutingSwitch2.n2.i = 0.0;
//   Rp1.Ground2.p.v = Rp1.IdealCommutingSwitch2.n2.v;
//   Rp1.Ground1.p.i + Rp1.IdealCommutingSwitch1.n2.i = 0.0;
//   Rp1.Ground1.p.v = Rp1.IdealCommutingSwitch1.n2.v;
//   Rp1.BooleanPulse1.y = Rp1.IdealCommutingSwitch1.control;
//   Rp1.BooleanPulse1.y = Rp1.IdealCommutingSwitch2.control;
//   Rp1.Capacitor1.n.i + Rp1.IdealCommutingSwitch2.p.i = 0.0;
//   Rp1.Capacitor1.n.v = Rp1.IdealCommutingSwitch2.p.v;
//   Rp1.IdealCommutingSwitch1.p.i + Rp1.Capacitor1.p.i = 0.0;
//   Rp1.Capacitor1.p.v = Rp1.IdealCommutingSwitch1.p.v;
//   R3.IdealCommutingSwitch2.n1.i + (-R3.n2.i) = 0.0;
//   R3.IdealCommutingSwitch2.n1.v = R3.n2.v;
//   R3.IdealCommutingSwitch1.n1.i + (-R3.n1.i) = 0.0;
//   R3.IdealCommutingSwitch1.n1.v = R3.n1.v;
//   R3.Ground2.p.i + R3.IdealCommutingSwitch2.n2.i = 0.0;
//   R3.Ground2.p.v = R3.IdealCommutingSwitch2.n2.v;
//   R3.Ground1.p.i + R3.IdealCommutingSwitch1.n2.i = 0.0;
//   R3.Ground1.p.v = R3.IdealCommutingSwitch1.n2.v;
//   R3.BooleanPulse1.y = R3.IdealCommutingSwitch1.control;
//   R3.BooleanPulse1.y = R3.IdealCommutingSwitch2.control;
//   R3.Capacitor1.n.i + R3.IdealCommutingSwitch2.p.i = 0.0;
//   R3.Capacitor1.n.v = R3.IdealCommutingSwitch2.p.v;
//   R3.IdealCommutingSwitch1.p.i + R3.Capacitor1.p.i = 0.0;
//   R3.Capacitor1.p.v = R3.IdealCommutingSwitch1.p.v;
//   R2.IdealCommutingSwitch2.n1.i + (-R2.n2.i) = 0.0;
//   R2.IdealCommutingSwitch2.n1.v = R2.n2.v;
//   R2.IdealCommutingSwitch1.n1.i + (-R2.n1.i) = 0.0;
//   R2.IdealCommutingSwitch1.n1.v = R2.n1.v;
//   R2.Ground2.p.i + R2.IdealCommutingSwitch2.n2.i = 0.0;
//   R2.Ground2.p.v = R2.IdealCommutingSwitch2.n2.v;
//   R2.Ground1.p.i + R2.IdealCommutingSwitch1.n2.i = 0.0;
//   R2.Ground1.p.v = R2.IdealCommutingSwitch1.n2.v;
//   R2.BooleanPulse1.y = R2.IdealCommutingSwitch1.control;
//   R2.BooleanPulse1.y = R2.IdealCommutingSwitch2.control;
//   R2.Capacitor1.n.i + R2.IdealCommutingSwitch2.p.i = 0.0;
//   R2.Capacitor1.n.v = R2.IdealCommutingSwitch2.p.v;
//   R2.IdealCommutingSwitch1.p.i + R2.Capacitor1.p.i = 0.0;
//   R2.Capacitor1.p.v = R2.IdealCommutingSwitch1.p.v;
//   R1.IdealCommutingSwitch2.n1.i + (-R1.n2.i) = 0.0;
//   R1.IdealCommutingSwitch2.n1.v = R1.n2.v;
//   R1.IdealCommutingSwitch1.n1.i + (-R1.n1.i) = 0.0;
//   R1.IdealCommutingSwitch1.n1.v = R1.n1.v;
//   R1.Ground2.p.i + R1.IdealCommutingSwitch2.n2.i = 0.0;
//   R1.Ground2.p.v = R1.IdealCommutingSwitch2.n2.v;
//   R1.Ground1.p.i + R1.IdealCommutingSwitch1.n2.i = 0.0;
//   R1.Ground1.p.v = R1.IdealCommutingSwitch1.n2.v;
//   R1.BooleanPulse1.y = R1.IdealCommutingSwitch1.control;
//   R1.BooleanPulse1.y = R1.IdealCommutingSwitch2.control;
//   R1.Capacitor1.n.i + R1.IdealCommutingSwitch2.p.i = 0.0;
//   R1.Capacitor1.n.v = R1.IdealCommutingSwitch2.p.v;
//   R1.IdealCommutingSwitch1.p.i + R1.Capacitor1.p.i = 0.0;
//   R1.Capacitor1.p.v = R1.IdealCommutingSwitch1.p.v;
//   R9.Ground1.p.i + R9.IdealCommutingSwitch1.n1.i = 0.0;
//   R9.Ground1.p.v = R9.IdealCommutingSwitch1.n1.v;
//   (-R9.n1.i) + R9.IdealCommutingSwitch1.n2.i = 0.0;
//   R9.IdealCommutingSwitch1.n2.v = R9.n1.v;
//   R9.IdealCommutingSwitch2.n1.i + (-R9.n2.i) = 0.0;
//   R9.IdealCommutingSwitch2.n1.v = R9.n2.v;
//   R9.Ground2.p.i + R9.IdealCommutingSwitch2.n2.i = 0.0;
//   R9.Ground2.p.v = R9.IdealCommutingSwitch2.n2.v;
//   R9.BooleanPulse1.y = R9.IdealCommutingSwitch1.control;
//   R9.BooleanPulse1.y = R9.IdealCommutingSwitch2.control;
//   R9.Capacitor1.n.i + R9.IdealCommutingSwitch2.p.i = 0.0;
//   R9.Capacitor1.n.v = R9.IdealCommutingSwitch2.p.v;
//   R9.IdealCommutingSwitch1.p.i + R9.Capacitor1.p.i = 0.0;
//   R9.Capacitor1.p.v = R9.IdealCommutingSwitch1.p.v;
//   R8.Ground1.p.i + R8.IdealCommutingSwitch1.n1.i = 0.0;
//   R8.Ground1.p.v = R8.IdealCommutingSwitch1.n1.v;
//   (-R8.n1.i) + R8.IdealCommutingSwitch1.n2.i = 0.0;
//   R8.IdealCommutingSwitch1.n2.v = R8.n1.v;
//   R8.IdealCommutingSwitch2.n1.i + (-R8.n2.i) = 0.0;
//   R8.IdealCommutingSwitch2.n1.v = R8.n2.v;
//   R8.Ground2.p.i + R8.IdealCommutingSwitch2.n2.i = 0.0;
//   R8.Ground2.p.v = R8.IdealCommutingSwitch2.n2.v;
//   R8.BooleanPulse1.y = R8.IdealCommutingSwitch1.control;
//   R8.BooleanPulse1.y = R8.IdealCommutingSwitch2.control;
//   R8.Capacitor1.n.i + R8.IdealCommutingSwitch2.p.i = 0.0;
//   R8.Capacitor1.n.v = R8.IdealCommutingSwitch2.p.v;
//   R8.IdealCommutingSwitch1.p.i + R8.Capacitor1.p.i = 0.0;
//   R8.Capacitor1.p.v = R8.IdealCommutingSwitch1.p.v;
//   R5.Ground1.p.i + R5.IdealCommutingSwitch1.n1.i = 0.0;
//   R5.Ground1.p.v = R5.IdealCommutingSwitch1.n1.v;
//   (-R5.n1.i) + R5.IdealCommutingSwitch1.n2.i = 0.0;
//   R5.IdealCommutingSwitch1.n2.v = R5.n1.v;
//   R5.IdealCommutingSwitch2.n1.i + (-R5.n2.i) = 0.0;
//   R5.IdealCommutingSwitch2.n1.v = R5.n2.v;
//   R5.Ground2.p.i + R5.IdealCommutingSwitch2.n2.i = 0.0;
//   R5.Ground2.p.v = R5.IdealCommutingSwitch2.n2.v;
//   R5.BooleanPulse1.y = R5.IdealCommutingSwitch1.control;
//   R5.BooleanPulse1.y = R5.IdealCommutingSwitch2.control;
//   R5.Capacitor1.n.i + R5.IdealCommutingSwitch2.p.i = 0.0;
//   R5.Capacitor1.n.v = R5.IdealCommutingSwitch2.p.v;
//   R5.IdealCommutingSwitch1.p.i + R5.Capacitor1.p.i = 0.0;
//   R5.Capacitor1.p.v = R5.IdealCommutingSwitch1.p.v;
//   R4.Ground1.p.i + R4.IdealCommutingSwitch1.n1.i = 0.0;
//   R4.Ground1.p.v = R4.IdealCommutingSwitch1.n1.v;
//   (-R4.n1.i) + R4.IdealCommutingSwitch1.n2.i = 0.0;
//   R4.IdealCommutingSwitch1.n2.v = R4.n1.v;
//   R4.IdealCommutingSwitch2.n1.i + (-R4.n2.i) = 0.0;
//   R4.IdealCommutingSwitch2.n1.v = R4.n2.v;
//   R4.Ground2.p.i + R4.IdealCommutingSwitch2.n2.i = 0.0;
//   R4.Ground2.p.v = R4.IdealCommutingSwitch2.n2.v;
//   R4.BooleanPulse1.y = R4.IdealCommutingSwitch1.control;
//   R4.BooleanPulse1.y = R4.IdealCommutingSwitch2.control;
//   R4.Capacitor1.n.i + R4.IdealCommutingSwitch2.p.i = 0.0;
//   R4.Capacitor1.n.v = R4.IdealCommutingSwitch2.p.v;
//   R4.IdealCommutingSwitch1.p.i + R4.Capacitor1.p.i = 0.0;
//   R4.Capacitor1.p.v = R4.IdealCommutingSwitch1.p.v;
//   n14.i = 0.0;
//   p4.i = 0.0;
//   n13.i = 0.0;
//   n12.i = 0.0;
//   n11.i = 0.0;
//   n10.i = 0.0;
//   n9.i = 0.0;
//   p3.i = 0.0;
//   out1.i = 0.0;
//   p2.i = 0.0;
//   n8.i = 0.0;
//   n7.i = 0.0;
//   n6.i = 0.0;
//   p1.i = 0.0;
//   n5.i = 0.0;
//   n4.i = 0.0;
//   n3.i = 0.0;
//   n2.i = 0.0;
//   n1.i = 0.0;
// end Modelica.Electrical.Analog.Examples.CauerLowPassSC;
// "
// ""
// "Check of Modelica.Electrical.Analog.Examples.CauerLowPassSC completed successfully.
// 
// 
// Class Modelica.Electrical.Analog.Examples.CauerLowPassSC has 559 equation(s) and 559 variable(s).
// 353 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.CauerLowPassSC_res.mat",
//     messages = ""
// end SimulationResult;
// "Error: Variable V.V not found in scope <global scope>
// "
// "class Modelica.Electrical.Analog.Examples.CauerLowPassSC.Rn
//   parameter Real clock(quantity = "Time", unit = "s") = 1.0 "clock";
//   parameter Real R(quantity = "Resistance", unit = "Ohm", min = 1e-15) = 1.0 "Resistance";
//   output Boolean BooleanPulse1.y "Connector of Boolean output signal";
//   parameter Real BooleanPulse1.width(min = 1e-60, max = 100.0) = 50.0 "Width of pulse in % of period";
//   parameter Real BooleanPulse1.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = clock "Time for one period";
//   parameter Real BooleanPulse1.startTime(quantity = "Time", unit = "s") = 0.0 "Time instant of first pulse";
//   protected parameter Real BooleanPulse1.Twidth(quantity = "Time", unit = "s") = BooleanPulse1.period * BooleanPulse1.width / 100.0 "width of one pulse";
//   protected discrete Real BooleanPulse1.pulsStart(quantity = "Time", unit = "s") "Start time of pulse";
//   Real Capacitor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Capacitor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Capacitor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Capacitor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Capacitor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Capacitor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real Capacitor1.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = clock / R "Capacitance";
//   parameter Boolean IdealCommutingSwitch1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real IdealCommutingSwitch1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real IdealCommutingSwitch1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real IdealCommutingSwitch1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real IdealCommutingSwitch1.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real IdealCommutingSwitch1.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real IdealCommutingSwitch1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealCommutingSwitch1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real IdealCommutingSwitch1.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealCommutingSwitch1.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real IdealCommutingSwitch1.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealCommutingSwitch1.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean IdealCommutingSwitch1.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real IdealCommutingSwitch1.s1(unit = "1");
//   protected Real IdealCommutingSwitch1.s2(unit = "1") "Auxiliary variables";
//   protected constant Real IdealCommutingSwitch1.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real IdealCommutingSwitch1.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   parameter Boolean IdealCommutingSwitch2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real IdealCommutingSwitch2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real IdealCommutingSwitch2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real IdealCommutingSwitch2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real IdealCommutingSwitch2.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real IdealCommutingSwitch2.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real IdealCommutingSwitch2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealCommutingSwitch2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real IdealCommutingSwitch2.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealCommutingSwitch2.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real IdealCommutingSwitch2.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealCommutingSwitch2.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean IdealCommutingSwitch2.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real IdealCommutingSwitch2.s1(unit = "1");
//   protected Real IdealCommutingSwitch2.s2(unit = "1") "Auxiliary variables";
//   protected constant Real IdealCommutingSwitch2.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real IdealCommutingSwitch2.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real Ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Ground2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Ground2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
// initial equation
//   BooleanPulse1.pulsStart = BooleanPulse1.startTime;
// equation
//   when sample(BooleanPulse1.startTime,BooleanPulse1.period) then
//   BooleanPulse1.pulsStart = time;
//   end when;
//   BooleanPulse1.y = time >= BooleanPulse1.pulsStart AND time < BooleanPulse1.pulsStart + BooleanPulse1.Twidth;
//   Capacitor1.i = Capacitor1.C * der(Capacitor1.v);
//   Capacitor1.v = Capacitor1.p.v - Capacitor1.n.v;
//   0.0 = Capacitor1.p.i + Capacitor1.n.i;
//   Capacitor1.i = Capacitor1.p.i;
//   0.0 = IdealCommutingSwitch1.p.i + (IdealCommutingSwitch1.n2.i + IdealCommutingSwitch1.n1.i);
//   IdealCommutingSwitch1.p.v - IdealCommutingSwitch1.n1.v = IdealCommutingSwitch1.s1 * (if IdealCommutingSwitch1.control then 1.0 else IdealCommutingSwitch1.Ron);
//   IdealCommutingSwitch1.n1.i = (-IdealCommutingSwitch1.s1) * (if IdealCommutingSwitch1.control then IdealCommutingSwitch1.Goff else 1.0);
//   IdealCommutingSwitch1.p.v - IdealCommutingSwitch1.n2.v = IdealCommutingSwitch1.s2 * (if IdealCommutingSwitch1.control then IdealCommutingSwitch1.Ron else 1.0);
//   IdealCommutingSwitch1.n2.i = (-IdealCommutingSwitch1.s2) * (if IdealCommutingSwitch1.control then 1.0 else IdealCommutingSwitch1.Goff);
//   IdealCommutingSwitch1.LossPower = IdealCommutingSwitch1.p.i * IdealCommutingSwitch1.p.v + (IdealCommutingSwitch1.n1.i * IdealCommutingSwitch1.n1.v + IdealCommutingSwitch1.n2.i * IdealCommutingSwitch1.n2.v);
//   IdealCommutingSwitch1.T_heatPort = IdealCommutingSwitch1.T;
//   0.0 = IdealCommutingSwitch2.p.i + (IdealCommutingSwitch2.n2.i + IdealCommutingSwitch2.n1.i);
//   IdealCommutingSwitch2.p.v - IdealCommutingSwitch2.n1.v = IdealCommutingSwitch2.s1 * (if IdealCommutingSwitch2.control then 1.0 else IdealCommutingSwitch2.Ron);
//   IdealCommutingSwitch2.n1.i = (-IdealCommutingSwitch2.s1) * (if IdealCommutingSwitch2.control then IdealCommutingSwitch2.Goff else 1.0);
//   IdealCommutingSwitch2.p.v - IdealCommutingSwitch2.n2.v = IdealCommutingSwitch2.s2 * (if IdealCommutingSwitch2.control then IdealCommutingSwitch2.Ron else 1.0);
//   IdealCommutingSwitch2.n2.i = (-IdealCommutingSwitch2.s2) * (if IdealCommutingSwitch2.control then 1.0 else IdealCommutingSwitch2.Goff);
//   IdealCommutingSwitch2.LossPower = IdealCommutingSwitch2.p.i * IdealCommutingSwitch2.p.v + (IdealCommutingSwitch2.n1.i * IdealCommutingSwitch2.n1.v + IdealCommutingSwitch2.n2.i * IdealCommutingSwitch2.n2.v);
//   IdealCommutingSwitch2.T_heatPort = IdealCommutingSwitch2.T;
//   Ground1.p.v = 0.0;
//   Ground2.p.v = 0.0;
//   Ground1.p.i + IdealCommutingSwitch1.n1.i = 0.0;
//   Ground1.p.v = IdealCommutingSwitch1.n1.v;
//   (-n1.i) + IdealCommutingSwitch1.n2.i = 0.0;
//   IdealCommutingSwitch1.n2.v = n1.v;
//   IdealCommutingSwitch2.n1.i + (-n2.i) = 0.0;
//   IdealCommutingSwitch2.n1.v = n2.v;
//   Ground2.p.i + IdealCommutingSwitch2.n2.i = 0.0;
//   Ground2.p.v = IdealCommutingSwitch2.n2.v;
//   BooleanPulse1.y = IdealCommutingSwitch1.control;
//   BooleanPulse1.y = IdealCommutingSwitch2.control;
//   Capacitor1.n.i + IdealCommutingSwitch2.p.i = 0.0;
//   Capacitor1.n.v = IdealCommutingSwitch2.p.v;
//   IdealCommutingSwitch1.p.i + Capacitor1.p.i = 0.0;
//   Capacitor1.p.v = IdealCommutingSwitch1.p.v;
//   n2.i = 0.0;
//   n1.i = 0.0;
// end Modelica.Electrical.Analog.Examples.CauerLowPassSC.Rn;
// "
// ""
// "Check of Modelica.Electrical.Analog.Examples.CauerLowPassSC.Rn completed successfully.
// 
// 
// Class Modelica.Electrical.Analog.Examples.CauerLowPassSC.Rn has 38 equation(s) and 38 variable(s).
// 22 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.CauerLowPassSC.Rn_res.mat",
//     messages = ""
// end SimulationResult;
// ""
// "class Modelica.Electrical.Analog.Examples.CauerLowPassSC.Rp
//   parameter Real clock(quantity = "Time", unit = "s") = 1.0 "clock";
//   parameter Real R(quantity = "Resistance", unit = "Ohm", min = 1e-15) = 1.0 "Resistance";
//   output Boolean BooleanPulse1.y "Connector of Boolean output signal";
//   parameter Real BooleanPulse1.width(min = 1e-60, max = 100.0) = 50.0 "Width of pulse in % of period";
//   parameter Real BooleanPulse1.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = clock "Time for one period";
//   parameter Real BooleanPulse1.startTime(quantity = "Time", unit = "s") = 0.0 "Time instant of first pulse";
//   protected parameter Real BooleanPulse1.Twidth(quantity = "Time", unit = "s") = BooleanPulse1.period * BooleanPulse1.width / 100.0 "width of one pulse";
//   protected discrete Real BooleanPulse1.pulsStart(quantity = "Time", unit = "s") "Start time of pulse";
//   Real Capacitor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Capacitor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Capacitor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Capacitor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Capacitor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Capacitor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real Capacitor1.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = clock / R "Capacitance";
//   parameter Boolean IdealCommutingSwitch1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real IdealCommutingSwitch1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real IdealCommutingSwitch1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real IdealCommutingSwitch1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real IdealCommutingSwitch1.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real IdealCommutingSwitch1.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real IdealCommutingSwitch1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealCommutingSwitch1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real IdealCommutingSwitch1.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealCommutingSwitch1.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real IdealCommutingSwitch1.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealCommutingSwitch1.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean IdealCommutingSwitch1.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real IdealCommutingSwitch1.s1(unit = "1");
//   protected Real IdealCommutingSwitch1.s2(unit = "1") "Auxiliary variables";
//   protected constant Real IdealCommutingSwitch1.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real IdealCommutingSwitch1.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   parameter Boolean IdealCommutingSwitch2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real IdealCommutingSwitch2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real IdealCommutingSwitch2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real IdealCommutingSwitch2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real IdealCommutingSwitch2.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real IdealCommutingSwitch2.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real IdealCommutingSwitch2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealCommutingSwitch2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real IdealCommutingSwitch2.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealCommutingSwitch2.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real IdealCommutingSwitch2.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealCommutingSwitch2.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   input Boolean IdealCommutingSwitch2.control "true => p--n2 connected, false => p--n1 connected";
//   protected Real IdealCommutingSwitch2.s1(unit = "1");
//   protected Real IdealCommutingSwitch2.s2(unit = "1") "Auxiliary variables";
//   protected constant Real IdealCommutingSwitch2.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real IdealCommutingSwitch2.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real Ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Ground2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Ground2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
// initial equation
//   BooleanPulse1.pulsStart = BooleanPulse1.startTime;
// equation
//   when sample(BooleanPulse1.startTime,BooleanPulse1.period) then
//   BooleanPulse1.pulsStart = time;
//   end when;
//   BooleanPulse1.y = time >= BooleanPulse1.pulsStart AND time < BooleanPulse1.pulsStart + BooleanPulse1.Twidth;
//   Capacitor1.i = Capacitor1.C * der(Capacitor1.v);
//   Capacitor1.v = Capacitor1.p.v - Capacitor1.n.v;
//   0.0 = Capacitor1.p.i + Capacitor1.n.i;
//   Capacitor1.i = Capacitor1.p.i;
//   0.0 = IdealCommutingSwitch1.p.i + (IdealCommutingSwitch1.n2.i + IdealCommutingSwitch1.n1.i);
//   IdealCommutingSwitch1.p.v - IdealCommutingSwitch1.n1.v = IdealCommutingSwitch1.s1 * (if IdealCommutingSwitch1.control then 1.0 else IdealCommutingSwitch1.Ron);
//   IdealCommutingSwitch1.n1.i = (-IdealCommutingSwitch1.s1) * (if IdealCommutingSwitch1.control then IdealCommutingSwitch1.Goff else 1.0);
//   IdealCommutingSwitch1.p.v - IdealCommutingSwitch1.n2.v = IdealCommutingSwitch1.s2 * (if IdealCommutingSwitch1.control then IdealCommutingSwitch1.Ron else 1.0);
//   IdealCommutingSwitch1.n2.i = (-IdealCommutingSwitch1.s2) * (if IdealCommutingSwitch1.control then 1.0 else IdealCommutingSwitch1.Goff);
//   IdealCommutingSwitch1.LossPower = IdealCommutingSwitch1.p.i * IdealCommutingSwitch1.p.v + (IdealCommutingSwitch1.n1.i * IdealCommutingSwitch1.n1.v + IdealCommutingSwitch1.n2.i * IdealCommutingSwitch1.n2.v);
//   IdealCommutingSwitch1.T_heatPort = IdealCommutingSwitch1.T;
//   0.0 = IdealCommutingSwitch2.p.i + (IdealCommutingSwitch2.n2.i + IdealCommutingSwitch2.n1.i);
//   IdealCommutingSwitch2.p.v - IdealCommutingSwitch2.n1.v = IdealCommutingSwitch2.s1 * (if IdealCommutingSwitch2.control then 1.0 else IdealCommutingSwitch2.Ron);
//   IdealCommutingSwitch2.n1.i = (-IdealCommutingSwitch2.s1) * (if IdealCommutingSwitch2.control then IdealCommutingSwitch2.Goff else 1.0);
//   IdealCommutingSwitch2.p.v - IdealCommutingSwitch2.n2.v = IdealCommutingSwitch2.s2 * (if IdealCommutingSwitch2.control then IdealCommutingSwitch2.Ron else 1.0);
//   IdealCommutingSwitch2.n2.i = (-IdealCommutingSwitch2.s2) * (if IdealCommutingSwitch2.control then 1.0 else IdealCommutingSwitch2.Goff);
//   IdealCommutingSwitch2.LossPower = IdealCommutingSwitch2.p.i * IdealCommutingSwitch2.p.v + (IdealCommutingSwitch2.n1.i * IdealCommutingSwitch2.n1.v + IdealCommutingSwitch2.n2.i * IdealCommutingSwitch2.n2.v);
//   IdealCommutingSwitch2.T_heatPort = IdealCommutingSwitch2.T;
//   Ground1.p.v = 0.0;
//   Ground2.p.v = 0.0;
//   IdealCommutingSwitch2.n1.i + (-n2.i) = 0.0;
//   IdealCommutingSwitch2.n1.v = n2.v;
//   IdealCommutingSwitch1.n1.i + (-n1.i) = 0.0;
//   IdealCommutingSwitch1.n1.v = n1.v;
//   Ground2.p.i + IdealCommutingSwitch2.n2.i = 0.0;
//   Ground2.p.v = IdealCommutingSwitch2.n2.v;
//   Ground1.p.i + IdealCommutingSwitch1.n2.i = 0.0;
//   Ground1.p.v = IdealCommutingSwitch1.n2.v;
//   BooleanPulse1.y = IdealCommutingSwitch1.control;
//   BooleanPulse1.y = IdealCommutingSwitch2.control;
//   Capacitor1.n.i + IdealCommutingSwitch2.p.i = 0.0;
//   Capacitor1.n.v = IdealCommutingSwitch2.p.v;
//   IdealCommutingSwitch1.p.i + Capacitor1.p.i = 0.0;
//   Capacitor1.p.v = IdealCommutingSwitch1.p.v;
//   n2.i = 0.0;
//   n1.i = 0.0;
// end Modelica.Electrical.Analog.Examples.CauerLowPassSC.Rp;
// "
// ""
// "Check of Modelica.Electrical.Analog.Examples.CauerLowPassSC.Rp completed successfully.
// 
// 
// Class Modelica.Electrical.Analog.Examples.CauerLowPassSC.Rp has 38 equation(s) and 38 variable(s).
// 22 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.CauerLowPassSC.Rp_res.mat",
//     messages = ""
// end SimulationResult;
// ""
// "function Modelica.Math.asin
//   input Real u;
//   output Real y(quantity = "Angle", unit = "rad", displayUnit = "deg");
// 
// external "C";
// end Modelica.Math.asin;
// 
// function Modelica.Math.sin
//   input Real u(quantity = "Angle", unit = "rad", displayUnit = "deg");
//   output Real y;
// 
// external "C";
// end Modelica.Math.sin;
// 
// class Modelica.Electrical.Analog.Examples.CharacteristicIdealDiodes
//   Real Ideal.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Ideal.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Ideal.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Ideal.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Ideal.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Ideal.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean Ideal.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real Ideal.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real Ideal.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real Ideal.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real Ideal.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 0.0 "Forward state-on differential resistance (closed diode resistance)";
//   parameter Real Ideal.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 0.0 "Backward state-off conductance (opened diode conductance)";
//   parameter Real Ideal.Vknee(quantity = "ElectricPotential", unit = "V", min = 0.0, start = 0.0) "Forward threshold voltage";
//   Boolean Ideal.off(start = true) "Switching state";
//   protected Real Ideal.s(unit = "1") "Auxiliary variable: if on then current, if opened then voltage";
//   protected constant Real Ideal.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real Ideal.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real With_Ron_Goff.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real With_Ron_Goff.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real With_Ron_Goff.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real With_Ron_Goff.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real With_Ron_Goff.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real With_Ron_Goff.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean With_Ron_Goff.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real With_Ron_Goff.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real With_Ron_Goff.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real With_Ron_Goff.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real With_Ron_Goff.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 0.1 "Forward state-on differential resistance (closed diode resistance)";
//   parameter Real With_Ron_Goff.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 0.1 "Backward state-off conductance (opened diode conductance)";
//   parameter Real With_Ron_Goff.Vknee(quantity = "ElectricPotential", unit = "V", min = 0.0, start = 0.0) "Forward threshold voltage";
//   Boolean With_Ron_Goff.off(start = true) "Switching state";
//   protected Real With_Ron_Goff.s(unit = "1") "Auxiliary variable: if on then current, if opened then voltage";
//   protected constant Real With_Ron_Goff.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real With_Ron_Goff.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real With_Ron_Goff_Vknee.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real With_Ron_Goff_Vknee.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real With_Ron_Goff_Vknee.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real With_Ron_Goff_Vknee.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real With_Ron_Goff_Vknee.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real With_Ron_Goff_Vknee.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean With_Ron_Goff_Vknee.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real With_Ron_Goff_Vknee.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real With_Ron_Goff_Vknee.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real With_Ron_Goff_Vknee.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real With_Ron_Goff_Vknee.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 0.2 "Forward state-on differential resistance (closed diode resistance)";
//   parameter Real With_Ron_Goff_Vknee.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 0.2 "Backward state-off conductance (opened diode conductance)";
//   parameter Real With_Ron_Goff_Vknee.Vknee(quantity = "ElectricPotential", unit = "V", min = 0.0, start = 0.0) = 5.0 "Forward threshold voltage";
//   Boolean With_Ron_Goff_Vknee.off(start = true) "Switching state";
//   protected Real With_Ron_Goff_Vknee.s(unit = "1") "Auxiliary variable: if on then current, if opened then voltage";
//   protected constant Real With_Ron_Goff_Vknee.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real With_Ron_Goff_Vknee.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real SineVoltage1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real SineVoltage1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real SineVoltage1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SineVoltage1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real SineVoltage1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SineVoltage1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real SineVoltage1.offset(quantity = "ElectricPotential", unit = "V") = -9.0 "Voltage offset";
//   parameter Real SineVoltage1.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real SineVoltage1.signalSource.y "Connector of Real output signal";
//   parameter Real SineVoltage1.signalSource.amplitude = SineVoltage1.V "Amplitude of sine wave";
//   parameter Real SineVoltage1.signalSource.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = SineVoltage1.freqHz "Frequency of sine wave";
//   parameter Real SineVoltage1.signalSource.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = SineVoltage1.phase "Phase of sine wave";
//   parameter Real SineVoltage1.signalSource.offset = SineVoltage1.offset "Offset of output signal";
//   parameter Real SineVoltage1.signalSource.startTime(quantity = "Time", unit = "s") = SineVoltage1.startTime "Output = offset for time < startTime";
//   protected constant Real SineVoltage1.signalSource.pi = 3.14159265358979;
//   parameter Real SineVoltage1.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 10.0 "Amplitude of sine wave";
//   parameter Real SineVoltage1.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = 0.0 "Phase of sine wave";
//   parameter Real SineVoltage1.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) "Frequency of sine wave";
//   Real Ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R1.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R1.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 0.001 "Resistance at temperature T_ref";
//   parameter Real R1.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R1.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R1.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R2.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R2.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 0.001 "Resistance at temperature T_ref";
//   parameter Real R2.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R2.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R2.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R3.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R3.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R3.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R3.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R3.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R3.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R3.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R3.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R3.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R3.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R3.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R3.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 0.001 "Resistance at temperature T_ref";
//   parameter Real R3.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R3.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R3.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real SineVoltage2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real SineVoltage2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real SineVoltage2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SineVoltage2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real SineVoltage2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SineVoltage2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real SineVoltage2.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real SineVoltage2.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real SineVoltage2.signalSource.y "Connector of Real output signal";
//   parameter Real SineVoltage2.signalSource.amplitude = SineVoltage2.V "Amplitude of sine wave";
//   parameter Real SineVoltage2.signalSource.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = SineVoltage2.freqHz "Frequency of sine wave";
//   parameter Real SineVoltage2.signalSource.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = SineVoltage2.phase "Phase of sine wave";
//   parameter Real SineVoltage2.signalSource.offset = SineVoltage2.offset "Offset of output signal";
//   parameter Real SineVoltage2.signalSource.startTime(quantity = "Time", unit = "s") = SineVoltage2.startTime "Output = offset for time < startTime";
//   protected constant Real SineVoltage2.signalSource.pi = 3.14159265358979;
//   parameter Real SineVoltage2.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 10.0 "Amplitude of sine wave";
//   parameter Real SineVoltage2.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = 0.0 "Phase of sine wave";
//   parameter Real SineVoltage2.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) "Frequency of sine wave";
//   Real SineVoltage3.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real SineVoltage3.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real SineVoltage3.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SineVoltage3.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real SineVoltage3.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SineVoltage3.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real SineVoltage3.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real SineVoltage3.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real SineVoltage3.signalSource.y "Connector of Real output signal";
//   parameter Real SineVoltage3.signalSource.amplitude = SineVoltage3.V "Amplitude of sine wave";
//   parameter Real SineVoltage3.signalSource.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = SineVoltage3.freqHz "Frequency of sine wave";
//   parameter Real SineVoltage3.signalSource.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = SineVoltage3.phase "Phase of sine wave";
//   parameter Real SineVoltage3.signalSource.offset = SineVoltage3.offset "Offset of output signal";
//   parameter Real SineVoltage3.signalSource.startTime(quantity = "Time", unit = "s") = SineVoltage3.startTime "Output = offset for time < startTime";
//   protected constant Real SineVoltage3.signalSource.pi = 3.14159265358979;
//   parameter Real SineVoltage3.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 10.0 "Amplitude of sine wave";
//   parameter Real SineVoltage3.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = 0.0 "Phase of sine wave";
//   parameter Real SineVoltage3.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) "Frequency of sine wave";
// equation
//   Ideal.off = Ideal.s < 0.0;
//   Ideal.v = Ideal.s * (if Ideal.off then 1.0 else Ideal.Ron) + Ideal.Vknee;
//   Ideal.i = Ideal.s * (if Ideal.off then Ideal.Goff else 1.0) + Ideal.Goff * Ideal.Vknee;
//   Ideal.LossPower = Ideal.v * Ideal.i;
//   Ideal.i = Ideal.p.i;
//   0.0 = Ideal.p.i + Ideal.n.i;
//   Ideal.v = Ideal.p.v - Ideal.n.v;
//   Ideal.T_heatPort = Ideal.T;
//   With_Ron_Goff.off = With_Ron_Goff.s < 0.0;
//   With_Ron_Goff.v = With_Ron_Goff.s * (if With_Ron_Goff.off then 1.0 else With_Ron_Goff.Ron) + With_Ron_Goff.Vknee;
//   With_Ron_Goff.i = With_Ron_Goff.s * (if With_Ron_Goff.off then With_Ron_Goff.Goff else 1.0) + With_Ron_Goff.Goff * With_Ron_Goff.Vknee;
//   With_Ron_Goff.LossPower = With_Ron_Goff.v * With_Ron_Goff.i;
//   With_Ron_Goff.i = With_Ron_Goff.p.i;
//   0.0 = With_Ron_Goff.p.i + With_Ron_Goff.n.i;
//   With_Ron_Goff.v = With_Ron_Goff.p.v - With_Ron_Goff.n.v;
//   With_Ron_Goff.T_heatPort = With_Ron_Goff.T;
//   With_Ron_Goff_Vknee.off = With_Ron_Goff_Vknee.s < 0.0;
//   With_Ron_Goff_Vknee.v = With_Ron_Goff_Vknee.s * (if With_Ron_Goff_Vknee.off then 1.0 else With_Ron_Goff_Vknee.Ron) + With_Ron_Goff_Vknee.Vknee;
//   With_Ron_Goff_Vknee.i = With_Ron_Goff_Vknee.s * (if With_Ron_Goff_Vknee.off then With_Ron_Goff_Vknee.Goff else 1.0) + With_Ron_Goff_Vknee.Goff * With_Ron_Goff_Vknee.Vknee;
//   With_Ron_Goff_Vknee.LossPower = With_Ron_Goff_Vknee.v * With_Ron_Goff_Vknee.i;
//   With_Ron_Goff_Vknee.i = With_Ron_Goff_Vknee.p.i;
//   0.0 = With_Ron_Goff_Vknee.p.i + With_Ron_Goff_Vknee.n.i;
//   With_Ron_Goff_Vknee.v = With_Ron_Goff_Vknee.p.v - With_Ron_Goff_Vknee.n.v;
//   With_Ron_Goff_Vknee.T_heatPort = With_Ron_Goff_Vknee.T;
//   SineVoltage1.signalSource.y = SineVoltage1.signalSource.offset + (if time < SineVoltage1.signalSource.startTime then 0.0 else SineVoltage1.signalSource.amplitude * Modelica.Math.sin(6.28318530717959 * (SineVoltage1.signalSource.freqHz * (time - SineVoltage1.signalSource.startTime)) + SineVoltage1.signalSource.phase));
//   SineVoltage1.v = SineVoltage1.signalSource.y;
//   SineVoltage1.v = SineVoltage1.p.v - SineVoltage1.n.v;
//   0.0 = SineVoltage1.p.i + SineVoltage1.n.i;
//   SineVoltage1.i = SineVoltage1.p.i;
//   Ground1.p.v = 0.0;
//   assert(1.0 + R1.alpha * (R1.T_heatPort - R1.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R1.R_actual = R1.R * (1.0 + R1.alpha * (R1.T_heatPort - R1.T_ref));
//   R1.v = R1.R_actual * R1.i;
//   R1.LossPower = R1.v * R1.i;
//   R1.i = R1.p.i;
//   0.0 = R1.p.i + R1.n.i;
//   R1.v = R1.p.v - R1.n.v;
//   R1.T_heatPort = R1.T;
//   assert(1.0 + R2.alpha * (R2.T_heatPort - R2.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R2.R_actual = R2.R * (1.0 + R2.alpha * (R2.T_heatPort - R2.T_ref));
//   R2.v = R2.R_actual * R2.i;
//   R2.LossPower = R2.v * R2.i;
//   R2.i = R2.p.i;
//   0.0 = R2.p.i + R2.n.i;
//   R2.v = R2.p.v - R2.n.v;
//   R2.T_heatPort = R2.T;
//   assert(1.0 + R3.alpha * (R3.T_heatPort - R3.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R3.R_actual = R3.R * (1.0 + R3.alpha * (R3.T_heatPort - R3.T_ref));
//   R3.v = R3.R_actual * R3.i;
//   R3.LossPower = R3.v * R3.i;
//   R3.i = R3.p.i;
//   0.0 = R3.p.i + R3.n.i;
//   R3.v = R3.p.v - R3.n.v;
//   R3.T_heatPort = R3.T;
//   SineVoltage2.signalSource.y = SineVoltage2.signalSource.offset + (if time < SineVoltage2.signalSource.startTime then 0.0 else SineVoltage2.signalSource.amplitude * Modelica.Math.sin(6.28318530717959 * (SineVoltage2.signalSource.freqHz * (time - SineVoltage2.signalSource.startTime)) + SineVoltage2.signalSource.phase));
//   SineVoltage2.v = SineVoltage2.signalSource.y;
//   SineVoltage2.v = SineVoltage2.p.v - SineVoltage2.n.v;
//   0.0 = SineVoltage2.p.i + SineVoltage2.n.i;
//   SineVoltage2.i = SineVoltage2.p.i;
//   SineVoltage3.signalSource.y = SineVoltage3.signalSource.offset + (if time < SineVoltage3.signalSource.startTime then 0.0 else SineVoltage3.signalSource.amplitude * Modelica.Math.sin(6.28318530717959 * (SineVoltage3.signalSource.freqHz * (time - SineVoltage3.signalSource.startTime)) + SineVoltage3.signalSource.phase));
//   SineVoltage3.v = SineVoltage3.signalSource.y;
//   SineVoltage3.v = SineVoltage3.p.v - SineVoltage3.n.v;
//   0.0 = SineVoltage3.p.i + SineVoltage3.n.i;
//   SineVoltage3.i = SineVoltage3.p.i;
//   SineVoltage3.n.i + (SineVoltage2.n.i + (R1.n.i + (R2.n.i + (R3.n.i + (Ground1.p.i + SineVoltage1.n.i))))) = 0.0;
//   Ground1.p.v = R1.n.v;
//   Ground1.p.v = R2.n.v;
//   Ground1.p.v = R3.n.v;
//   Ground1.p.v = SineVoltage1.n.v;
//   Ground1.p.v = SineVoltage2.n.v;
//   Ground1.p.v = SineVoltage3.n.v;
//   With_Ron_Goff_Vknee.p.i + SineVoltage3.p.i = 0.0;
//   SineVoltage3.p.v = With_Ron_Goff_Vknee.p.v;
//   SineVoltage1.p.i + With_Ron_Goff.p.i = 0.0;
//   SineVoltage1.p.v = With_Ron_Goff.p.v;
//   SineVoltage2.p.i + Ideal.p.i = 0.0;
//   Ideal.p.v = SineVoltage2.p.v;
//   With_Ron_Goff_Vknee.n.i + R3.p.i = 0.0;
//   R3.p.v = With_Ron_Goff_Vknee.n.v;
//   With_Ron_Goff.n.i + R2.p.i = 0.0;
//   R2.p.v = With_Ron_Goff.n.v;
//   Ideal.n.i + R1.p.i = 0.0;
//   Ideal.n.v = R1.p.v;
// end Modelica.Electrical.Analog.Examples.CharacteristicIdealDiodes;
// "
// ""
// "Check of Modelica.Electrical.Analog.Examples.CharacteristicIdealDiodes completed successfully.
// 
// 
// Class Modelica.Electrical.Analog.Examples.CharacteristicIdealDiodes has 80 equation(s) and 80 variable(s).
// 46 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.CharacteristicIdealDiodes_res.mat",
//     messages = ""
// end SimulationResult;
// "Error: Variable SineVoltage3.freqHz not found in scope <global scope>
// Error: Variable SineVoltage2.freqHz not found in scope <global scope>
// Error: Variable SineVoltage1.freqHz not found in scope <global scope>
// "
// "function Modelica.Math.asin
//   input Real u;
//   output Real y(quantity = "Angle", unit = "rad", displayUnit = "deg");
// 
// external "C";
// end Modelica.Math.asin;
// 
// function Modelica.Math.sin
//   input Real u(quantity = "Angle", unit = "rad", displayUnit = "deg");
//   output Real y;
// 
// external "C";
// end Modelica.Math.sin;
// 
// class Modelica.Electrical.Analog.Examples.CharacteristicThyristors
//   Real IdealThyristor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real IdealThyristor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real IdealThyristor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealThyristor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real IdealThyristor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealThyristor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean IdealThyristor1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real IdealThyristor1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real IdealThyristor1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real IdealThyristor1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real IdealThyristor1.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed thyristor resistance";
//   parameter Real IdealThyristor1.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened thyristor conductance";
//   parameter Real IdealThyristor1.Vknee(quantity = "ElectricPotential", unit = "V", min = 0.0, start = 0.0) = 5.0 "Forward threshold voltage";
//   Boolean IdealThyristor1.off(start = true) "Switching state";
//   input Boolean IdealThyristor1.fire;
//   protected Real IdealThyristor1.s(unit = "1") "Auxiliary variable: if on then current, if opened then voltage";
//   protected constant Real IdealThyristor1.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real IdealThyristor1.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real SineVoltage1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real SineVoltage1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real SineVoltage1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SineVoltage1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real SineVoltage1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SineVoltage1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real SineVoltage1.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real SineVoltage1.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real SineVoltage1.signalSource.y "Connector of Real output signal";
//   parameter Real SineVoltage1.signalSource.amplitude = SineVoltage1.V "Amplitude of sine wave";
//   parameter Real SineVoltage1.signalSource.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = SineVoltage1.freqHz "Frequency of sine wave";
//   parameter Real SineVoltage1.signalSource.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = SineVoltage1.phase "Phase of sine wave";
//   parameter Real SineVoltage1.signalSource.offset = SineVoltage1.offset "Offset of output signal";
//   parameter Real SineVoltage1.signalSource.startTime(quantity = "Time", unit = "s") = SineVoltage1.startTime "Output = offset for time < startTime";
//   protected constant Real SineVoltage1.signalSource.pi = 3.14159265358979;
//   parameter Real SineVoltage1.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 10.0 "Amplitude of sine wave";
//   parameter Real SineVoltage1.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = 0.0 "Phase of sine wave";
//   parameter Real SineVoltage1.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) "Frequency of sine wave";
//   Real Ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R3.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R3.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R3.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R3.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R3.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R3.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R3.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R3.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R3.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R3.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R3.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R3.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 0.001 "Resistance at temperature T_ref";
//   parameter Real R3.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R3.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R3.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   output Boolean BooleanStep1.y "Connector of Boolean output signal";
//   parameter Real BooleanStep1.startTime(quantity = "Time", unit = "s") = 1.25 "Time instant of step start";
//   parameter Boolean BooleanStep1.startValue = false "Output before startTime";
//   Real IdealGTOThyristor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real IdealGTOThyristor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real IdealGTOThyristor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealGTOThyristor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real IdealGTOThyristor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealGTOThyristor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean IdealGTOThyristor1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real IdealGTOThyristor1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real IdealGTOThyristor1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real IdealGTOThyristor1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real IdealGTOThyristor1.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed thyristor resistance";
//   parameter Real IdealGTOThyristor1.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened thyristor conductance";
//   parameter Real IdealGTOThyristor1.Vknee(quantity = "ElectricPotential", unit = "V", min = 0.0, start = 0.0) = 0.0 "Forward threshold voltage";
//   Boolean IdealGTOThyristor1.off(start = true) "Switching state";
//   input Boolean IdealGTOThyristor1.fire;
//   protected Real IdealGTOThyristor1.s(unit = "1") "Auxiliary variable: if on then current, if opened then voltage";
//   protected constant Real IdealGTOThyristor1.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real IdealGTOThyristor1.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real R1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R1.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R1.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 0.001 "Resistance at temperature T_ref";
//   parameter Real R1.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R1.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R1.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
// equation
//   IdealThyristor1.off = IdealThyristor1.s < 0.0 OR pre(IdealThyristor1.off) AND  NOT IdealThyristor1.fire;
//   IdealThyristor1.v = IdealThyristor1.s * (if IdealThyristor1.off then 1.0 else IdealThyristor1.Ron) + IdealThyristor1.Vknee;
//   IdealThyristor1.i = IdealThyristor1.s * (if IdealThyristor1.off then IdealThyristor1.Goff else 1.0) + IdealThyristor1.Goff * IdealThyristor1.Vknee;
//   IdealThyristor1.LossPower = IdealThyristor1.v * IdealThyristor1.i;
//   IdealThyristor1.i = IdealThyristor1.p.i;
//   0.0 = IdealThyristor1.p.i + IdealThyristor1.n.i;
//   IdealThyristor1.v = IdealThyristor1.p.v - IdealThyristor1.n.v;
//   IdealThyristor1.T_heatPort = IdealThyristor1.T;
//   SineVoltage1.signalSource.y = SineVoltage1.signalSource.offset + (if time < SineVoltage1.signalSource.startTime then 0.0 else SineVoltage1.signalSource.amplitude * Modelica.Math.sin(6.28318530717959 * (SineVoltage1.signalSource.freqHz * (time - SineVoltage1.signalSource.startTime)) + SineVoltage1.signalSource.phase));
//   SineVoltage1.v = SineVoltage1.signalSource.y;
//   SineVoltage1.v = SineVoltage1.p.v - SineVoltage1.n.v;
//   0.0 = SineVoltage1.p.i + SineVoltage1.n.i;
//   SineVoltage1.i = SineVoltage1.p.i;
//   Ground1.p.v = 0.0;
//   assert(1.0 + R3.alpha * (R3.T_heatPort - R3.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R3.R_actual = R3.R * (1.0 + R3.alpha * (R3.T_heatPort - R3.T_ref));
//   R3.v = R3.R_actual * R3.i;
//   R3.LossPower = R3.v * R3.i;
//   R3.i = R3.p.i;
//   0.0 = R3.p.i + R3.n.i;
//   R3.v = R3.p.v - R3.n.v;
//   R3.T_heatPort = R3.T;
//   BooleanStep1.y = if time >= BooleanStep1.startTime then  NOT BooleanStep1.startValue else BooleanStep1.startValue;
//   IdealGTOThyristor1.off = IdealGTOThyristor1.s < 0.0 OR  NOT IdealGTOThyristor1.fire;
//   IdealGTOThyristor1.v = IdealGTOThyristor1.s * (if IdealGTOThyristor1.off then 1.0 else IdealGTOThyristor1.Ron) + IdealGTOThyristor1.Vknee;
//   IdealGTOThyristor1.i = IdealGTOThyristor1.s * (if IdealGTOThyristor1.off then IdealGTOThyristor1.Goff else 1.0) + IdealGTOThyristor1.Goff * IdealGTOThyristor1.Vknee;
//   IdealGTOThyristor1.LossPower = IdealGTOThyristor1.v * IdealGTOThyristor1.i;
//   IdealGTOThyristor1.i = IdealGTOThyristor1.p.i;
//   0.0 = IdealGTOThyristor1.p.i + IdealGTOThyristor1.n.i;
//   IdealGTOThyristor1.v = IdealGTOThyristor1.p.v - IdealGTOThyristor1.n.v;
//   IdealGTOThyristor1.T_heatPort = IdealGTOThyristor1.T;
//   assert(1.0 + R1.alpha * (R1.T_heatPort - R1.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R1.R_actual = R1.R * (1.0 + R1.alpha * (R1.T_heatPort - R1.T_ref));
//   R1.v = R1.R_actual * R1.i;
//   R1.LossPower = R1.v * R1.i;
//   R1.i = R1.p.i;
//   0.0 = R1.p.i + R1.n.i;
//   R1.v = R1.p.v - R1.n.v;
//   R1.T_heatPort = R1.T;
//   BooleanStep1.y = IdealGTOThyristor1.fire;
//   BooleanStep1.y = IdealThyristor1.fire;
//   IdealGTOThyristor1.p.i + (SineVoltage1.p.i + IdealThyristor1.p.i) = 0.0;
//   IdealGTOThyristor1.p.v = IdealThyristor1.p.v;
//   IdealGTOThyristor1.p.v = SineVoltage1.p.v;
//   R3.n.i + (R1.n.i + (Ground1.p.i + SineVoltage1.n.i)) = 0.0;
//   Ground1.p.v = R1.n.v;
//   Ground1.p.v = R3.n.v;
//   Ground1.p.v = SineVoltage1.n.v;
//   IdealGTOThyristor1.n.i + R1.p.i = 0.0;
//   IdealGTOThyristor1.n.v = R1.p.v;
//   IdealThyristor1.n.i + R3.p.i = 0.0;
//   IdealThyristor1.n.v = R3.p.v;
// end Modelica.Electrical.Analog.Examples.CharacteristicThyristors;
// "
// ""
// "Check of Modelica.Electrical.Analog.Examples.CharacteristicThyristors completed successfully.
// 
// 
// Class Modelica.Electrical.Analog.Examples.CharacteristicThyristors has 50 equation(s) and 50 variable(s).
// 27 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.CharacteristicThyristors_res.mat",
//     messages = ""
// end SimulationResult;
// "Error: Variable SineVoltage1.freqHz not found in scope <global scope>
// "
// "class Modelica.Electrical.Analog.Examples.ChuaCircuit
//   Real L.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real L.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real L.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real L.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real L.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real L.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real L.L(quantity = "Inductance", unit = "H", start = 1.0) = 18.0 "Inductance";
//   Real Ro.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Ro.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Ro.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Ro.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Ro.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Ro.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean Ro.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real Ro.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = Ro.T_ref "Fixed device temperature if useHeatPort = false";
//   Real Ro.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real Ro.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real Ro.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 0.0125 "Resistance at temperature T_ref";
//   parameter Real Ro.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real Ro.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real Ro.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real G.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real G.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real G.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real G.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real G.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real G.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean G.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real G.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = G.T_ref "Fixed device temperature if useHeatPort = false";
//   Real G.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real G.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real G.G(quantity = "Conductance", unit = "S", start = 1.0) = 0.565 "Conductance at temperature T_ref";
//   parameter Real G.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real G.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of conductance (G_actual = G/(1 + alpha*(T_heatPort - T_ref))";
//   Real G.G_actual(quantity = "Conductance", unit = "S") "Actual conductance = G/(1 + alpha*(T_heatPort - T_ref))";
//   Real C1.v(quantity = "ElectricPotential", unit = "V", start = 4.0) "Voltage drop between the two pins (= p.v - n.v)";
//   Real C1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C1.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = 10.0 "Capacitance";
//   Real C2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C2.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = 100.0 "Capacitance";
//   Real Nr.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Nr.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Nr.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nr.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nr.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nr.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real Nr.Ga(quantity = "Conductance", unit = "S", min = -1.0) = -0.757576 "conductance in inner voltage range";
//   parameter Real Nr.Gb(quantity = "Conductance", unit = "S", min = -1.0) = -0.409091 "conductance in outer voltage range";
//   parameter Real Nr.Ve(quantity = "ElectricPotential", unit = "V") = 1.0 "inner voltage range limit";
//   Real Gnd.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Gnd.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
// equation
//   L.L * der(L.i) = L.v;
//   L.v = L.p.v - L.n.v;
//   0.0 = L.p.i + L.n.i;
//   L.i = L.p.i;
//   assert(1.0 + Ro.alpha * (Ro.T_heatPort - Ro.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   Ro.R_actual = Ro.R * (1.0 + Ro.alpha * (Ro.T_heatPort - Ro.T_ref));
//   Ro.v = Ro.R_actual * Ro.i;
//   Ro.LossPower = Ro.v * Ro.i;
//   Ro.i = Ro.p.i;
//   0.0 = Ro.p.i + Ro.n.i;
//   Ro.v = Ro.p.v - Ro.n.v;
//   Ro.T_heatPort = Ro.T;
//   assert(1.0 + G.alpha * (G.T_heatPort - G.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   G.G_actual = G.G / (1.0 + G.alpha * (G.T_heatPort - G.T_ref));
//   G.i = G.G_actual * G.v;
//   G.LossPower = G.v * G.i;
//   G.i = G.p.i;
//   0.0 = G.p.i + G.n.i;
//   G.v = G.p.v - G.n.v;
//   G.T_heatPort = G.T;
//   C1.i = C1.C * der(C1.v);
//   C1.v = C1.p.v - C1.n.v;
//   0.0 = C1.p.i + C1.n.i;
//   C1.i = C1.p.i;
//   C2.i = C2.C * der(C2.v);
//   C2.v = C2.p.v - C2.n.v;
//   0.0 = C2.p.i + C2.n.i;
//   C2.i = C2.p.i;
//   Nr.i = if Nr.v < -Nr.Ve then Nr.Gb * (Nr.v + Nr.Ve) - Nr.Ga * Nr.Ve else if Nr.v > Nr.Ve then Nr.Gb * (Nr.v - Nr.Ve) + Nr.Ga * Nr.Ve else Nr.Ga * Nr.v;
//   Nr.v = Nr.p.v - Nr.n.v;
//   0.0 = Nr.p.i + Nr.n.i;
//   Nr.i = Nr.p.i;
//   Gnd.p.v = 0.0;
//   Ro.n.i + (C2.n.i + (C1.n.i + (Nr.n.i + Gnd.p.i))) = 0.0;
//   C1.n.v = C2.n.v;
//   C1.n.v = Gnd.p.v;
//   C1.n.v = Nr.n.v;
//   C1.n.v = Ro.n.v;
//   L.p.i + (G.p.i + C2.p.i) = 0.0;
//   C2.p.v = G.p.v;
//   C2.p.v = L.p.v;
//   L.n.i + Ro.p.i = 0.0;
//   L.n.v = Ro.p.v;
//   C1.p.i + (G.n.i + Nr.p.i) = 0.0;
//   C1.p.v = G.n.v;
//   C1.p.v = Nr.p.v;
// end Modelica.Electrical.Analog.Examples.ChuaCircuit;
// "
// ""
// "Check of Modelica.Electrical.Analog.Examples.ChuaCircuit completed successfully.
// 
// 
// Class Modelica.Electrical.Analog.Examples.ChuaCircuit has 44 equation(s) and 44 variable(s).
// 25 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.ChuaCircuit_res.mat",
//     messages = ""
// end SimulationResult;
// ""
// "function Modelica.Math.asin
//   input Real u;
//   output Real y(quantity = "Angle", unit = "rad", displayUnit = "deg");
// 
// external "C";
// end Modelica.Math.asin;
// 
// function Modelica.Math.sin
//   input Real u(quantity = "Angle", unit = "rad", displayUnit = "deg");
//   output Real y;
// 
// external "C";
// end Modelica.Math.sin;
// 
// class Modelica.Electrical.Analog.Examples.CompareTransformers
//   constant Real pi(quantity = "Angle", unit = "rad", displayUnit = "deg") = 3.14159265358979;
//   parameter Real Vdc(quantity = "ElectricPotential", unit = "V") = 0.1 "DC offset of voltage source";
//   parameter Real Vpeak(quantity = "ElectricPotential", unit = "V") = 0.1 "peak voltage of voltage source";
//   parameter Real f(quantity = "Frequency", unit = "Hz") = 10.0 "frequency of voltage source";
//   parameter Real phi0(quantity = "Angle", unit = "rad", displayUnit = "deg") = 1.5707963267949 "phase of voltage source";
//   parameter Real n = 2.0 "turns ratio primary:secondary voltage";
//   parameter Real R1(quantity = "Resistance", unit = "Ohm") = 0.01 "primary resistance w.r.t. primary side";
//   parameter Real L1sigma(quantity = "Inductance", unit = "H") = 0.05 * 1.0 / f / 6.28318530717959 "primary leakage inductance w.r.t. primary side";
//   parameter Real Lm1(quantity = "Inductance", unit = "H") = 10.0 * 1.0 / f / 6.28318530717959 "magnetizing inductance w.r.t. primary side";
//   parameter Real L2sigma(quantity = "Inductance", unit = "H") = 0.05 * n ^ -2.0 / f / 6.28318530717959 "secondary leakage inductance w.r.t. secondary side";
//   parameter Real R2(quantity = "Resistance", unit = "Ohm") = 0.01 * n ^ -2.0 "secondary resistance w.r.t. secondary side";
//   parameter Real RL(quantity = "Resistance", unit = "Ohm") = n ^ -2.0 "load resistance";
//   parameter Real L1(quantity = "Inductance", unit = "H") = L1sigma + M * n "primary no-load inductance";
//   parameter Real L2(quantity = "Inductance", unit = "H") = L2sigma + M / n "secondary no-load inductance";
//   parameter Real M(quantity = "Inductance", unit = "H") = Lm1 / n "mutual inductance";
//   output Real v1B(quantity = "ElectricPotential", unit = "V") = resistor11.n.v "primary voltage, basic transformer";
//   output Real i1B(quantity = "ElectricCurrent", unit = "A") = resistor11.i "primary current, basic transformer";
//   output Real v2B(quantity = "ElectricPotential", unit = "V") = resistor12.p.v "secondary voltage, basic transformer";
//   output Real i2B(quantity = "ElectricCurrent", unit = "A") = resistor12.i "secondary current, basic transformer";
//   output Real v1I(quantity = "ElectricPotential", unit = "V") = resistor21.n.v "primary voltage, basic transformer";
//   output Real i1I(quantity = "ElectricCurrent", unit = "A") = resistor21.i "primary current, basic transformer";
//   output Real v2I(quantity = "ElectricPotential", unit = "V") = resistor22.p.v "secondary voltage, basic transformer";
//   output Real i2I(quantity = "ElectricCurrent", unit = "A") = resistor22.i "secondary current, basic transformer";
//   Real sineVoltage1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real sineVoltage1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real sineVoltage1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real sineVoltage1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real sineVoltage1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real sineVoltage1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real sineVoltage1.offset(quantity = "ElectricPotential", unit = "V") = Vdc "Voltage offset";
//   parameter Real sineVoltage1.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real sineVoltage1.signalSource.y "Connector of Real output signal";
//   parameter Real sineVoltage1.signalSource.amplitude = sineVoltage1.V "Amplitude of sine wave";
//   parameter Real sineVoltage1.signalSource.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = sineVoltage1.freqHz "Frequency of sine wave";
//   parameter Real sineVoltage1.signalSource.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = sineVoltage1.phase "Phase of sine wave";
//   parameter Real sineVoltage1.signalSource.offset = sineVoltage1.offset "Offset of output signal";
//   parameter Real sineVoltage1.signalSource.startTime(quantity = "Time", unit = "s") = sineVoltage1.startTime "Output = offset for time < startTime";
//   protected constant Real sineVoltage1.signalSource.pi = 3.14159265358979;
//   parameter Real sineVoltage1.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = Vpeak "Amplitude of sine wave";
//   parameter Real sineVoltage1.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = phi0 "Phase of sine wave";
//   parameter Real sineVoltage1.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = f "Frequency of sine wave";
//   Real ground11.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real ground11.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real resistor11.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real resistor11.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real resistor11.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor11.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real resistor11.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor11.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean resistor11.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real resistor11.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = resistor11.T_ref "Fixed device temperature if useHeatPort = false";
//   Real resistor11.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real resistor11.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real resistor11.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = R1 "Resistance at temperature T_ref";
//   parameter Real resistor11.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real resistor11.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real resistor11.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real resistor12.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real resistor12.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real resistor12.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor12.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real resistor12.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor12.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean resistor12.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real resistor12.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = resistor12.T_ref "Fixed device temperature if useHeatPort = false";
//   Real resistor12.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real resistor12.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real resistor12.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = R2 "Resistance at temperature T_ref";
//   parameter Real resistor12.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real resistor12.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real resistor12.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real load1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real load1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real load1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real load1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real load1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real load1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean load1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real load1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = load1.T_ref "Fixed device temperature if useHeatPort = false";
//   Real load1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real load1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real load1.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = RL "Resistance at temperature T_ref";
//   parameter Real load1.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real load1.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real load1.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real ground12.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real ground12.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real sineVoltage2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real sineVoltage2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real sineVoltage2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real sineVoltage2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real sineVoltage2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real sineVoltage2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real sineVoltage2.offset(quantity = "ElectricPotential", unit = "V") = Vdc "Voltage offset";
//   parameter Real sineVoltage2.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real sineVoltage2.signalSource.y "Connector of Real output signal";
//   parameter Real sineVoltage2.signalSource.amplitude = sineVoltage2.V "Amplitude of sine wave";
//   parameter Real sineVoltage2.signalSource.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = sineVoltage2.freqHz "Frequency of sine wave";
//   parameter Real sineVoltage2.signalSource.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = sineVoltage2.phase "Phase of sine wave";
//   parameter Real sineVoltage2.signalSource.offset = sineVoltage2.offset "Offset of output signal";
//   parameter Real sineVoltage2.signalSource.startTime(quantity = "Time", unit = "s") = sineVoltage2.startTime "Output = offset for time < startTime";
//   protected constant Real sineVoltage2.signalSource.pi = 3.14159265358979;
//   parameter Real sineVoltage2.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = Vpeak "Amplitude of sine wave";
//   parameter Real sineVoltage2.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = phi0 "Phase of sine wave";
//   parameter Real sineVoltage2.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = f "Frequency of sine wave";
//   Real ground21.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real ground21.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real resistor21.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real resistor21.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real resistor21.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor21.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real resistor21.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor21.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean resistor21.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real resistor21.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = resistor21.T_ref "Fixed device temperature if useHeatPort = false";
//   Real resistor21.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real resistor21.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real resistor21.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = R1 "Resistance at temperature T_ref";
//   parameter Real resistor21.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real resistor21.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real resistor21.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real inductor21.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real inductor21.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real inductor21.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real inductor21.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real inductor21.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real inductor21.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real inductor21.L(quantity = "Inductance", unit = "H", start = 1.0) = L1sigma "Inductance";
//   Real inductor22.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real inductor22.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real inductor22.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real inductor22.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real inductor22.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real inductor22.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real inductor22.L(quantity = "Inductance", unit = "H", start = 1.0) = L2sigma "Inductance";
//   Real resistor22.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real resistor22.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real resistor22.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor22.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real resistor22.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor22.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean resistor22.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real resistor22.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = resistor22.T_ref "Fixed device temperature if useHeatPort = false";
//   Real resistor22.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real resistor22.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real resistor22.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = R2 "Resistance at temperature T_ref";
//   parameter Real resistor22.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real resistor22.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real resistor22.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real load2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real load2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real load2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real load2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real load2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real load2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean load2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real load2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = load2.T_ref "Fixed device temperature if useHeatPort = false";
//   Real load2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real load2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real load2.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = RL "Resistance at temperature T_ref";
//   parameter Real load2.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real load2.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real load2.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real ground22.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real ground22.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real basicTransformer.v1(quantity = "ElectricPotential", unit = "V") "Voltage drop over the left port";
//   Real basicTransformer.v2(quantity = "ElectricPotential", unit = "V") "Voltage drop over the right port";
//   Real basicTransformer.i1(quantity = "ElectricCurrent", unit = "A") "Current flowing from pos. to neg. pin of the left port";
//   Real basicTransformer.i2(quantity = "ElectricCurrent", unit = "A") "Current flowing from pos. to neg. pin of the right port";
//   Real basicTransformer.p1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real basicTransformer.p1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real basicTransformer.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real basicTransformer.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real basicTransformer.p2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real basicTransformer.p2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real basicTransformer.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real basicTransformer.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real basicTransformer.L1(quantity = "Inductance", unit = "H", start = 1.0) = L1 "Primary inductance";
//   parameter Real basicTransformer.L2(quantity = "Inductance", unit = "H", start = 1.0) = L2 "Secondary inductance";
//   parameter Real basicTransformer.M(quantity = "Inductance", unit = "H", start = 1.0) = M "Coupling inductance";
//   Real idealTransformer.v1(quantity = "ElectricPotential", unit = "V") "Voltage drop over the left port";
//   Real idealTransformer.v2(quantity = "ElectricPotential", unit = "V") "Voltage drop over the right port";
//   Real idealTransformer.i1(quantity = "ElectricCurrent", unit = "A") "Current flowing from pos. to neg. pin of the left port";
//   Real idealTransformer.i2(quantity = "ElectricCurrent", unit = "A") "Current flowing from pos. to neg. pin of the right port";
//   Real idealTransformer.p1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real idealTransformer.p1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real idealTransformer.n1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real idealTransformer.n1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real idealTransformer.p2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real idealTransformer.p2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real idealTransformer.n2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real idealTransformer.n2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real idealTransformer.n(start = 1.0) = n "Turns ratio primary:secondary voltage";
//   parameter Boolean idealTransformer.considerMagnetization = false;
//   parameter Real idealTransformer.Lm1(quantity = "Inductance", unit = "H", start = 1.0) = Lm1 "Magnetization inductance w.r.t. primary side";
//   protected Real idealTransformer.im1(quantity = "ElectricCurrent", unit = "A") "Magnetization current w.r.t. primary side";
//   protected Real idealTransformer.psim1(quantity = "MagneticFlux", unit = "Wb") "Magnetic flux w.r.t primary side";
// equation
//   sineVoltage1.signalSource.y = sineVoltage1.signalSource.offset + (if time < sineVoltage1.signalSource.startTime then 0.0 else sineVoltage1.signalSource.amplitude * Modelica.Math.sin(6.28318530717959 * (sineVoltage1.signalSource.freqHz * (time - sineVoltage1.signalSource.startTime)) + sineVoltage1.signalSource.phase));
//   sineVoltage1.v = sineVoltage1.signalSource.y;
//   sineVoltage1.v = sineVoltage1.p.v - sineVoltage1.n.v;
//   0.0 = sineVoltage1.p.i + sineVoltage1.n.i;
//   sineVoltage1.i = sineVoltage1.p.i;
//   ground11.p.v = 0.0;
//   assert(1.0 + resistor11.alpha * (resistor11.T_heatPort - resistor11.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   resistor11.R_actual = resistor11.R * (1.0 + resistor11.alpha * (resistor11.T_heatPort - resistor11.T_ref));
//   resistor11.v = resistor11.R_actual * resistor11.i;
//   resistor11.LossPower = resistor11.v * resistor11.i;
//   resistor11.i = resistor11.p.i;
//   0.0 = resistor11.p.i + resistor11.n.i;
//   resistor11.v = resistor11.p.v - resistor11.n.v;
//   resistor11.T_heatPort = resistor11.T;
//   assert(1.0 + resistor12.alpha * (resistor12.T_heatPort - resistor12.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   resistor12.R_actual = resistor12.R * (1.0 + resistor12.alpha * (resistor12.T_heatPort - resistor12.T_ref));
//   resistor12.v = resistor12.R_actual * resistor12.i;
//   resistor12.LossPower = resistor12.v * resistor12.i;
//   resistor12.i = resistor12.p.i;
//   0.0 = resistor12.p.i + resistor12.n.i;
//   resistor12.v = resistor12.p.v - resistor12.n.v;
//   resistor12.T_heatPort = resistor12.T;
//   assert(1.0 + load1.alpha * (load1.T_heatPort - load1.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   load1.R_actual = load1.R * (1.0 + load1.alpha * (load1.T_heatPort - load1.T_ref));
//   load1.v = load1.R_actual * load1.i;
//   load1.LossPower = load1.v * load1.i;
//   load1.i = load1.p.i;
//   0.0 = load1.p.i + load1.n.i;
//   load1.v = load1.p.v - load1.n.v;
//   load1.T_heatPort = load1.T;
//   ground12.p.v = 0.0;
//   sineVoltage2.signalSource.y = sineVoltage2.signalSource.offset + (if time < sineVoltage2.signalSource.startTime then 0.0 else sineVoltage2.signalSource.amplitude * Modelica.Math.sin(6.28318530717959 * (sineVoltage2.signalSource.freqHz * (time - sineVoltage2.signalSource.startTime)) + sineVoltage2.signalSource.phase));
//   sineVoltage2.v = sineVoltage2.signalSource.y;
//   sineVoltage2.v = sineVoltage2.p.v - sineVoltage2.n.v;
//   0.0 = sineVoltage2.p.i + sineVoltage2.n.i;
//   sineVoltage2.i = sineVoltage2.p.i;
//   ground21.p.v = 0.0;
//   assert(1.0 + resistor21.alpha * (resistor21.T_heatPort - resistor21.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   resistor21.R_actual = resistor21.R * (1.0 + resistor21.alpha * (resistor21.T_heatPort - resistor21.T_ref));
//   resistor21.v = resistor21.R_actual * resistor21.i;
//   resistor21.LossPower = resistor21.v * resistor21.i;
//   resistor21.i = resistor21.p.i;
//   0.0 = resistor21.p.i + resistor21.n.i;
//   resistor21.v = resistor21.p.v - resistor21.n.v;
//   resistor21.T_heatPort = resistor21.T;
//   inductor21.L * der(inductor21.i) = inductor21.v;
//   inductor21.v = inductor21.p.v - inductor21.n.v;
//   0.0 = inductor21.p.i + inductor21.n.i;
//   inductor21.i = inductor21.p.i;
//   inductor22.L * der(inductor22.i) = inductor22.v;
//   inductor22.v = inductor22.p.v - inductor22.n.v;
//   0.0 = inductor22.p.i + inductor22.n.i;
//   inductor22.i = inductor22.p.i;
//   assert(1.0 + resistor22.alpha * (resistor22.T_heatPort - resistor22.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   resistor22.R_actual = resistor22.R * (1.0 + resistor22.alpha * (resistor22.T_heatPort - resistor22.T_ref));
//   resistor22.v = resistor22.R_actual * resistor22.i;
//   resistor22.LossPower = resistor22.v * resistor22.i;
//   resistor22.i = resistor22.p.i;
//   0.0 = resistor22.p.i + resistor22.n.i;
//   resistor22.v = resistor22.p.v - resistor22.n.v;
//   resistor22.T_heatPort = resistor22.T;
//   assert(1.0 + load2.alpha * (load2.T_heatPort - load2.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   load2.R_actual = load2.R * (1.0 + load2.alpha * (load2.T_heatPort - load2.T_ref));
//   load2.v = load2.R_actual * load2.i;
//   load2.LossPower = load2.v * load2.i;
//   load2.i = load2.p.i;
//   0.0 = load2.p.i + load2.n.i;
//   load2.v = load2.p.v - load2.n.v;
//   load2.T_heatPort = load2.T;
//   ground22.p.v = 0.0;
//   basicTransformer.v1 = basicTransformer.L1 * der(basicTransformer.i1) + basicTransformer.M * der(basicTransformer.i2);
//   basicTransformer.v2 = basicTransformer.M * der(basicTransformer.i1) + basicTransformer.L2 * der(basicTransformer.i2);
//   basicTransformer.v1 = basicTransformer.p1.v - basicTransformer.n1.v;
//   basicTransformer.v2 = basicTransformer.p2.v - basicTransformer.n2.v;
//   0.0 = basicTransformer.p1.i + basicTransformer.n1.i;
//   0.0 = basicTransformer.p2.i + basicTransformer.n2.i;
//   basicTransformer.i1 = basicTransformer.p1.i;
//   basicTransformer.i2 = basicTransformer.p2.i;
//   idealTransformer.im1 = idealTransformer.i1 + idealTransformer.i2 / idealTransformer.n;
//   idealTransformer.psim1 = 0.0;
//   idealTransformer.im1 = 0.0;
//   idealTransformer.v1 = idealTransformer.n * idealTransformer.v2;
//   idealTransformer.v1 = idealTransformer.p1.v - idealTransformer.n1.v;
//   idealTransformer.v2 = idealTransformer.p2.v - idealTransformer.n2.v;
//   0.0 = idealTransformer.p1.i + idealTransformer.n1.i;
//   0.0 = idealTransformer.p2.i + idealTransformer.n2.i;
//   idealTransformer.i1 = idealTransformer.p1.i;
//   idealTransformer.i2 = idealTransformer.p2.i;
//   idealTransformer.p2.i + inductor22.p.i = 0.0;
//   idealTransformer.p2.v = inductor22.p.v;
//   idealTransformer.p1.i + inductor21.n.i = 0.0;
//   idealTransformer.p1.v = inductor21.n.v;
//   load2.n.i + (ground22.p.i + idealTransformer.n2.i) = 0.0;
//   ground22.p.v = idealTransformer.n2.v;
//   ground22.p.v = load2.n.v;
//   sineVoltage2.n.i + (ground21.p.i + idealTransformer.n1.i) = 0.0;
//   ground21.p.v = idealTransformer.n1.v;
//   ground21.p.v = sineVoltage2.n.v;
//   basicTransformer.p2.i + resistor12.p.i = 0.0;
//   basicTransformer.p2.v = resistor12.p.v;
//   basicTransformer.p1.i + resistor11.n.i = 0.0;
//   basicTransformer.p1.v = resistor11.n.v;
//   basicTransformer.n2.i + (load1.n.i + ground12.p.i) = 0.0;
//   basicTransformer.n2.v = ground12.p.v;
//   basicTransformer.n2.v = load1.n.v;
//   sineVoltage1.n.i + (ground11.p.i + basicTransformer.n1.i) = 0.0;
//   basicTransformer.n1.v = ground11.p.v;
//   basicTransformer.n1.v = sineVoltage1.n.v;
//   resistor22.n.i + load2.p.i = 0.0;
//   load2.p.v = resistor22.n.v;
//   inductor22.n.i + resistor22.p.i = 0.0;
//   inductor22.n.v = resistor22.p.v;
//   resistor21.n.i + inductor21.p.i = 0.0;
//   inductor21.p.v = resistor21.n.v;
//   sineVoltage2.p.i + resistor21.p.i = 0.0;
//   resistor21.p.v = sineVoltage2.p.v;
//   resistor12.n.i + load1.p.i = 0.0;
//   load1.p.v = resistor12.n.v;
//   sineVoltage1.p.i + resistor11.p.i = 0.0;
//   resistor11.p.v = sineVoltage1.p.v;
// end Modelica.Electrical.Analog.Examples.CompareTransformers;
// "
// ""
// "Check of Modelica.Electrical.Analog.Examples.CompareTransformers completed successfully.
// 
// 
// Class Modelica.Electrical.Analog.Examples.CompareTransformers has 122 equation(s) and 122 variable(s).
// 78 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.CompareTransformers_res.mat",
//     messages = ""
// end SimulationResult;
// ""
// "function Modelica.Math.asin
//   input Real u;
//   output Real y(quantity = "Angle", unit = "rad", displayUnit = "deg");
// 
// external "C";
// end Modelica.Math.asin;
// 
// function Modelica.Math.sin
//   input Real u(quantity = "Angle", unit = "rad", displayUnit = "deg");
//   output Real y;
// 
// external "C";
// end Modelica.Math.sin;
// 
// class Modelica.Electrical.Analog.Examples.ControlledSwitchWithArc
//   Real ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real constantVoltage1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real constantVoltage1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real constantVoltage1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real constantVoltage1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real constantVoltage1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real constantVoltage1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real constantVoltage1.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 50.0 "Value of constant voltage";
//   Real inductor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real inductor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real inductor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real inductor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real inductor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real inductor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real inductor1.L(quantity = "Inductance", unit = "H", start = 1.0) = 0.1 "Inductance";
//   Real resistor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real resistor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real resistor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real resistor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean resistor1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real resistor1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = resistor1.T_ref "Fixed device temperature if useHeatPort = false";
//   Real resistor1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real resistor1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real resistor1.R(quantity = "Resistance", unit = "Ohm", start = 1.0) "Resistance at temperature T_ref";
//   parameter Real resistor1.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real resistor1.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real resistor1.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   parameter Boolean switch1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real switch1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real switch1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real switch1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real switch1.level(quantity = "ElectricPotential", unit = "V") = 0.5 "Switch level";
//   parameter Real switch1.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real switch1.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   Real switch1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real switch1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real switch1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real switch1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real switch1.control.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real switch1.control.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   protected Real switch1.s(unit = "1") "Auxiliary variable";
//   protected constant Real switch1.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real switch1.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real ground2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real ground2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real constantVoltage2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real constantVoltage2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real constantVoltage2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real constantVoltage2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real constantVoltage2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real constantVoltage2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real constantVoltage2.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 50.0 "Value of constant voltage";
//   Real inductor2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real inductor2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real inductor2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real inductor2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real inductor2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real inductor2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real inductor2.L(quantity = "Inductance", unit = "H", start = 1.0) = 0.1 "Inductance";
//   Real resistor2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real resistor2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real resistor2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real resistor2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean resistor2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real resistor2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = resistor2.T_ref "Fixed device temperature if useHeatPort = false";
//   Real resistor2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real resistor2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real resistor2.R(quantity = "Resistance", unit = "Ohm", start = 1.0) "Resistance at temperature T_ref";
//   parameter Real resistor2.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real resistor2.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real resistor2.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   parameter Boolean switch2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real switch2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real switch2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real switch2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real switch2.level(quantity = "ElectricPotential", unit = "V") = 0.5 "Switch level";
//   parameter Real switch2.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real switch2.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   parameter Real switch2.V0(quantity = "ElectricPotential", unit = "V") = 30.0 "Initial arc voltage";
//   parameter Real switch2.dVdt(quantity = "VoltageSlope", unit = "V/s") = 10000.0 "Arc voltage slope";
//   parameter Real switch2.Vmax(quantity = "ElectricPotential", unit = "V") = 60.0 "Max. arc voltage";
//   Real switch2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real switch2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real switch2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real switch2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real switch2.control.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real switch2.control.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real switch2.i(quantity = "ElectricCurrent", unit = "A");
//   Real switch2.v(quantity = "ElectricPotential", unit = "V");
//   protected constant Real switch2.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real switch2.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   protected Boolean switch2.off = switch2.control.v < switch2.level;
//   protected Boolean switch2.on =  NOT switch2.off;
//   protected discrete Real switch2.tSwitch(quantity = "Time", unit = "s");
//   protected Boolean switch2.quenched;
//   Real sineVoltage.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real sineVoltage.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real sineVoltage.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real sineVoltage.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real sineVoltage.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real sineVoltage.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real sineVoltage.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real sineVoltage.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real sineVoltage.signalSource.y "Connector of Real output signal";
//   parameter Real sineVoltage.signalSource.amplitude = sineVoltage.V "Amplitude of sine wave";
//   parameter Real sineVoltage.signalSource.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = sineVoltage.freqHz "Frequency of sine wave";
//   parameter Real sineVoltage.signalSource.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = sineVoltage.phase "Phase of sine wave";
//   parameter Real sineVoltage.signalSource.offset = sineVoltage.offset "Offset of output signal";
//   parameter Real sineVoltage.signalSource.startTime(quantity = "Time", unit = "s") = sineVoltage.startTime "Output = offset for time < startTime";
//   protected constant Real sineVoltage.signalSource.pi = 3.14159265358979;
//   parameter Real sineVoltage.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 1.0 "Amplitude of sine wave";
//   parameter Real sineVoltage.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = 0.0 "Phase of sine wave";
//   parameter Real sineVoltage.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = 1.0 "Frequency of sine wave";
//   Real ground.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real ground.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
// equation
//   ground1.p.v = 0.0;
//   constantVoltage1.v = constantVoltage1.V;
//   constantVoltage1.v = constantVoltage1.p.v - constantVoltage1.n.v;
//   0.0 = constantVoltage1.p.i + constantVoltage1.n.i;
//   constantVoltage1.i = constantVoltage1.p.i;
//   inductor1.L * der(inductor1.i) = inductor1.v;
//   inductor1.v = inductor1.p.v - inductor1.n.v;
//   0.0 = inductor1.p.i + inductor1.n.i;
//   inductor1.i = inductor1.p.i;
//   assert(1.0 + resistor1.alpha * (resistor1.T_heatPort - resistor1.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   resistor1.R_actual = resistor1.R * (1.0 + resistor1.alpha * (resistor1.T_heatPort - resistor1.T_ref));
//   resistor1.v = resistor1.R_actual * resistor1.i;
//   resistor1.LossPower = resistor1.v * resistor1.i;
//   resistor1.i = resistor1.p.i;
//   0.0 = resistor1.p.i + resistor1.n.i;
//   resistor1.v = resistor1.p.v - resistor1.n.v;
//   resistor1.T_heatPort = resistor1.T;
//   switch1.control.i = 0.0;
//   0.0 = switch1.p.i + switch1.n.i;
//   switch1.p.v - switch1.n.v = switch1.s * (if switch1.control.v > switch1.level then switch1.Ron else 1.0);
//   switch1.p.i = switch1.s * (if switch1.control.v > switch1.level then 1.0 else switch1.Goff);
//   switch1.LossPower = (switch1.p.v - switch1.n.v) * switch1.p.i;
//   switch1.T_heatPort = switch1.T;
//   ground2.p.v = 0.0;
//   constantVoltage2.v = constantVoltage2.V;
//   constantVoltage2.v = constantVoltage2.p.v - constantVoltage2.n.v;
//   0.0 = constantVoltage2.p.i + constantVoltage2.n.i;
//   constantVoltage2.i = constantVoltage2.p.i;
//   inductor2.L * der(inductor2.i) = inductor2.v;
//   inductor2.v = inductor2.p.v - inductor2.n.v;
//   0.0 = inductor2.p.i + inductor2.n.i;
//   inductor2.i = inductor2.p.i;
//   assert(1.0 + resistor2.alpha * (resistor2.T_heatPort - resistor2.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   resistor2.R_actual = resistor2.R * (1.0 + resistor2.alpha * (resistor2.T_heatPort - resistor2.T_ref));
//   resistor2.v = resistor2.R_actual * resistor2.i;
//   resistor2.LossPower = resistor2.v * resistor2.i;
//   resistor2.i = resistor2.p.i;
//   0.0 = resistor2.p.i + resistor2.n.i;
//   resistor2.v = resistor2.p.v - resistor2.n.v;
//   resistor2.T_heatPort = resistor2.T;
//   switch2.control.i = 0.0;
//   0.0 = switch2.p.i + switch2.n.i;
//   switch2.i = switch2.p.i;
//   switch2.p.v - switch2.n.v = switch2.v;
//   when edge(switch2.off) then
//   switch2.tSwitch = time;
//   end when;
//   switch2.quenched = switch2.off AND (abs(switch2.i) <= abs(switch2.v) * switch2.Goff OR pre(switch2.quenched));
//   if switch2.on then
//   switch2.v = switch2.Ron * switch2.i;
//   else
//   if switch2.quenched then
//   switch2.i = switch2.Goff * switch2.v;
//   else
//   switch2.v = min(switch2.Vmax,switch2.V0 + switch2.dVdt * (time - switch2.tSwitch)) * sign(switch2.i);
//   end if;
//   end if;
//   switch2.LossPower = switch2.v * switch2.i;
//   switch2.T_heatPort = switch2.T;
//   sineVoltage.signalSource.y = sineVoltage.signalSource.offset + (if time < sineVoltage.signalSource.startTime then 0.0 else sineVoltage.signalSource.amplitude * Modelica.Math.sin(6.28318530717959 * (sineVoltage.signalSource.freqHz * (time - sineVoltage.signalSource.startTime)) + sineVoltage.signalSource.phase));
//   sineVoltage.v = sineVoltage.signalSource.y;
//   sineVoltage.v = sineVoltage.p.v - sineVoltage.n.v;
//   0.0 = sineVoltage.p.i + sineVoltage.n.i;
//   sineVoltage.i = sineVoltage.p.i;
//   ground.p.v = 0.0;
//   sineVoltage.n.i + ground.p.i = 0.0;
//   ground.p.v = sineVoltage.n.v;
//   sineVoltage.p.i + (switch1.control.i + switch2.control.i) = 0.0;
//   sineVoltage.p.v = switch1.control.v;
//   sineVoltage.p.v = switch2.control.v;
//   constantVoltage2.p.i + switch2.p.i = 0.0;
//   constantVoltage2.p.v = switch2.p.v;
//   switch2.n.i + inductor2.p.i = 0.0;
//   inductor2.p.v = switch2.n.v;
//   constantVoltage2.n.i + (resistor2.n.i + ground2.p.i) = 0.0;
//   constantVoltage2.n.v = ground2.p.v;
//   constantVoltage2.n.v = resistor2.n.v;
//   inductor2.n.i + resistor2.p.i = 0.0;
//   inductor2.n.v = resistor2.p.v;
//   constantVoltage1.p.i + switch1.p.i = 0.0;
//   constantVoltage1.p.v = switch1.p.v;
//   switch1.n.i + inductor1.p.i = 0.0;
//   inductor1.p.v = switch1.n.v;
//   constantVoltage1.n.i + (resistor1.n.i + ground1.p.i) = 0.0;
//   constantVoltage1.n.v = ground1.p.v;
//   constantVoltage1.n.v = resistor1.n.v;
//   inductor1.n.i + resistor1.p.i = 0.0;
//   inductor1.n.v = resistor1.p.v;
// end Modelica.Electrical.Analog.Examples.ControlledSwitchWithArc;
// "
// ""
// "Check of Modelica.Electrical.Analog.Examples.ControlledSwitchWithArc completed successfully.
// 
// 
// Class Modelica.Electrical.Analog.Examples.ControlledSwitchWithArc has 78 equation(s) and 78 variable(s).
// 49 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "",
//     messages = "Simulation failed for model: Modelica.Electrical.Analog.Examples.ControlledSwitchWithArc
// "
// end SimulationResult;
// ""
// "function Modelica.Electrical.Analog.Semiconductors.NPN.pow
//   input Real x;
//   input Real y;
//   output Real z;
// algorithm
//   z := x ^ y;
// end Modelica.Electrical.Analog.Semiconductors.NPN.pow;
// 
// function Modelica.Math.asin
//   input Real u;
//   output Real y(quantity = "Angle", unit = "rad", displayUnit = "deg");
// 
// external "C";
// end Modelica.Math.asin;
// 
// function Modelica.Math.exp
//   input Real u;
//   output Real y;
// 
// external "C";
// end Modelica.Math.exp;
// 
// function Modelica.Math.sin
//   input Real u(quantity = "Angle", unit = "rad", displayUnit = "deg");
//   output Real y;
// 
// external "C";
// end Modelica.Math.sin;
// 
// class Modelica.Electrical.Analog.Examples.DifferenceAmplifier
//   Real V1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real V1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real V1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real V1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real V1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real V1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real V1.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real V1.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real V1.signalSource.y "Connector of Real output signal";
//   parameter Real V1.signalSource.amplitude = V1.V "Amplitude of sine wave";
//   parameter Real V1.signalSource.freqHz(quantity = "Frequency", unit = "Hz", start = 2.0) = V1.freqHz "Frequency of sine wave";
//   parameter Real V1.signalSource.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = V1.phase "Phase of sine wave";
//   parameter Real V1.signalSource.damping(quantity = "DampingCoefficient", unit = "s-1", start = 1.0) = V1.damping "Damping coefficient of sine wave";
//   parameter Real V1.signalSource.offset = V1.offset "Offset of output signal";
//   parameter Real V1.signalSource.startTime(quantity = "Time", unit = "s") = V1.startTime "Output = offset for time < startTime";
//   protected constant Real V1.signalSource.pi = 3.14159265358979;
//   parameter Real V1.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 0.2 "Amplitude of sine wave";
//   parameter Real V1.freqHz(quantity = "Frequency", unit = "Hz", start = 2.0) = 200000000.0 "Frequency of sine wave";
//   parameter Real V1.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = 0.0 "Phase of sine wave";
//   parameter Real V1.damping(quantity = "DampingCoefficient", unit = "s-1", start = 1.0) = 10000000.0 "Damping coefficient of sine wave";
//   Real V2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real V2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real V2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real V2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real V2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real V2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real V2.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real V2.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real V2.signalSource.y "Connector of Real output signal";
//   parameter Real V2.signalSource.height = V2.V "Height of ramps";
//   parameter Real V2.signalSource.duration(quantity = "Time", unit = "s", min = 1e-60, start = 2.0) = V2.duration "Durations of ramp";
//   parameter Real V2.signalSource.offset = V2.offset "Offset of output signal";
//   parameter Real V2.signalSource.startTime(quantity = "Time", unit = "s") = V2.startTime "Output = offset for time < startTime";
//   parameter Real V2.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 15.0 "Height of ramp";
//   parameter Real V2.duration(quantity = "Time", unit = "s", min = 1e-60, start = 2.0) = 1e-09 "Duration of ramp";
//   Real I1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real I1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real I1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real I1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real I1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real I1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real I1.offset(quantity = "ElectricCurrent", unit = "A") = 0.0 "Current offset";
//   parameter Real I1.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real I1.signalSource.y "Connector of Real output signal";
//   parameter Real I1.signalSource.height = I1.I "Height of ramps";
//   parameter Real I1.signalSource.duration(quantity = "Time", unit = "s", min = 1e-60, start = 2.0) = I1.duration "Durations of ramp";
//   parameter Real I1.signalSource.offset = I1.offset "Offset of output signal";
//   parameter Real I1.signalSource.startTime(quantity = "Time", unit = "s") = I1.startTime "Output = offset for time < startTime";
//   parameter Real I1.I(quantity = "ElectricCurrent", unit = "A", start = 1.0) = 0.16 "Height of ramp";
//   parameter Real I1.duration(quantity = "Time", unit = "s", min = 1e-60, start = 2.0) = 1e-09 "Duration of ramp";
//   Real R1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R1.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R1.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 0.0001 "Resistance at temperature T_ref";
//   parameter Real R1.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R1.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R1.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R2.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R2.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 100.0 "Resistance at temperature T_ref";
//   parameter Real R2.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R2.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R2.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R3.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R3.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R3.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R3.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R3.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R3.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R3.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R3.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R3.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R3.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R3.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R3.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 0.0001 "Resistance at temperature T_ref";
//   parameter Real R3.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R3.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R3.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R4.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R4.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R4.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R4.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R4.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R4.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R4.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R4.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R4.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R4.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R4.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R4.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 100.0 "Resistance at temperature T_ref";
//   parameter Real R4.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R4.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R4.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real C1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C1.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = 1e-10 "Capacitance";
//   Real C4.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C4.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C4.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C4.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C4.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C4.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C4.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = 1e-10 "Capacitance";
//   Real C5.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C5.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C5.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C5.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C5.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C5.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C5.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = 1e-10 "Capacitance";
//   Real C2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C2.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = 1e-10 "Capacitance";
//   Real C3.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C3.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C3.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C3.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C3.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C3.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C3.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = 1e-10 "Capacitance";
//   Real Gnd1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Gnd1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Gnd9.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Gnd9.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Gnd3.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Gnd3.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Gnd2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Gnd2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Gnd6.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Gnd6.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Gnd7.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Gnd7.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Gnd8.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Gnd8.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Gnd5.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Gnd5.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Gnd4.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Gnd4.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Transistor1.rtb.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Transistor1.rtb.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Transistor1.rtb.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor1.rtb.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Transistor1.rtb.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor1.rtb.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean Transistor1.rtb.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real Transistor1.rtb.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = Transistor1.rtb.T_ref "Fixed device temperature if useHeatPort = false";
//   Real Transistor1.rtb.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real Transistor1.rtb.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real Transistor1.rtb.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 0.05 "Resistance at temperature T_ref";
//   parameter Real Transistor1.rtb.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real Transistor1.rtb.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real Transistor1.rtb.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real Transistor1.rtc.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Transistor1.rtc.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Transistor1.rtc.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor1.rtc.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Transistor1.rtc.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor1.rtc.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean Transistor1.rtc.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real Transistor1.rtc.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = Transistor1.rtc.T_ref "Fixed device temperature if useHeatPort = false";
//   Real Transistor1.rtc.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real Transistor1.rtc.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real Transistor1.rtc.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 0.1 "Resistance at temperature T_ref";
//   parameter Real Transistor1.rtc.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real Transistor1.rtc.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real Transistor1.rtc.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real Transistor1.ct.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Transistor1.ct.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Transistor1.ct.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor1.ct.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Transistor1.ct.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor1.ct.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real Transistor1.ct.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = 1e-10 "Capacitance";
//   parameter Boolean Transistor1.Tr.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real Transistor1.Tr.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real Transistor1.Tr.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real Transistor1.Tr.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real Transistor1.Tr.Bf = 50.0 "Forward beta";
//   parameter Real Transistor1.Tr.Br = 0.1 "Reverse beta";
//   parameter Real Transistor1.Tr.Is(quantity = "ElectricCurrent", unit = "A") = 1e-16 "Transport saturation current";
//   parameter Real Transistor1.Tr.Vak(quantity = "InversePotential", unit = "1/V") = 0.02 "Early voltage (inverse), 1/Volt";
//   parameter Real Transistor1.Tr.Tauf(quantity = "Time", unit = "s") = 1.2e-10 "Ideal forward transit time";
//   parameter Real Transistor1.Tr.Taur(quantity = "Time", unit = "s") = 5e-09 "Ideal reverse transit time";
//   parameter Real Transistor1.Tr.Ccs(quantity = "Capacitance", unit = "F", min = 0.0) = 1e-12 "Collector-substrat(ground) cap.";
//   parameter Real Transistor1.Tr.Cje(quantity = "Capacitance", unit = "F", min = 0.0) = 4e-13 "Base-emitter zero bias depletion cap.";
//   parameter Real Transistor1.Tr.Cjc(quantity = "Capacitance", unit = "F", min = 0.0) = 5e-13 "Base-coll. zero bias depletion cap.";
//   parameter Real Transistor1.Tr.Phie(quantity = "ElectricPotential", unit = "V") = 0.8 "Base-emitter diffusion voltage";
//   parameter Real Transistor1.Tr.Me = 0.4 "Base-emitter gradation exponent";
//   parameter Real Transistor1.Tr.Phic(quantity = "ElectricPotential", unit = "V") = 0.8 "Base-collector diffusion voltage";
//   parameter Real Transistor1.Tr.Mc = 0.333 "Base-collector gradation exponent";
//   parameter Real Transistor1.Tr.Gbc(quantity = "Conductance", unit = "S") = 1e-15 "Base-collector conductance";
//   parameter Real Transistor1.Tr.Gbe(quantity = "Conductance", unit = "S") = 1e-15 "Base-emitter conductance";
//   parameter Real Transistor1.Tr.Vt(quantity = "ElectricPotential", unit = "V") = 0.02585 "Voltage equivalent of temperature";
//   parameter Real Transistor1.Tr.EMin = -100.0 "if x < EMin, the exp(x) function is linearized";
//   parameter Real Transistor1.Tr.EMax = 40.0 "if x > EMax, the exp(x) function is linearized";
//   protected Real Transistor1.Tr.vbc;
//   protected Real Transistor1.Tr.vbe;
//   protected Real Transistor1.Tr.qbk;
//   protected Real Transistor1.Tr.ibc;
//   protected Real Transistor1.Tr.ibe;
//   protected Real Transistor1.Tr.cbc;
//   protected Real Transistor1.Tr.cbe;
//   protected Real Transistor1.Tr.ExMin;
//   protected Real Transistor1.Tr.ExMax;
//   protected Real Transistor1.Tr.Capcje;
//   protected Real Transistor1.Tr.Capcjc;
//   Real Transistor1.Tr.C.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor1.Tr.C.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Transistor1.Tr.B.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor1.Tr.B.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Transistor1.Tr.E.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor1.Tr.E.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Transistor1.Ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor1.Ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Transistor1.c.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor1.c.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Transistor1.b.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor1.b.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Transistor1.e.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor1.e.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Transistor2.rtb.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Transistor2.rtb.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Transistor2.rtb.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor2.rtb.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Transistor2.rtb.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor2.rtb.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean Transistor2.rtb.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real Transistor2.rtb.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = Transistor2.rtb.T_ref "Fixed device temperature if useHeatPort = false";
//   Real Transistor2.rtb.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real Transistor2.rtb.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real Transistor2.rtb.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 0.05 "Resistance at temperature T_ref";
//   parameter Real Transistor2.rtb.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real Transistor2.rtb.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real Transistor2.rtb.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real Transistor2.rtc.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Transistor2.rtc.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Transistor2.rtc.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor2.rtc.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Transistor2.rtc.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor2.rtc.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean Transistor2.rtc.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real Transistor2.rtc.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = Transistor2.rtc.T_ref "Fixed device temperature if useHeatPort = false";
//   Real Transistor2.rtc.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real Transistor2.rtc.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real Transistor2.rtc.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 0.1 "Resistance at temperature T_ref";
//   parameter Real Transistor2.rtc.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real Transistor2.rtc.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real Transistor2.rtc.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real Transistor2.ct.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Transistor2.ct.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Transistor2.ct.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor2.ct.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Transistor2.ct.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor2.ct.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real Transistor2.ct.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = 1e-10 "Capacitance";
//   parameter Boolean Transistor2.Tr.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real Transistor2.Tr.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real Transistor2.Tr.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real Transistor2.Tr.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real Transistor2.Tr.Bf = 50.0 "Forward beta";
//   parameter Real Transistor2.Tr.Br = 0.1 "Reverse beta";
//   parameter Real Transistor2.Tr.Is(quantity = "ElectricCurrent", unit = "A") = 1e-16 "Transport saturation current";
//   parameter Real Transistor2.Tr.Vak(quantity = "InversePotential", unit = "1/V") = 0.02 "Early voltage (inverse), 1/Volt";
//   parameter Real Transistor2.Tr.Tauf(quantity = "Time", unit = "s") = 1.2e-10 "Ideal forward transit time";
//   parameter Real Transistor2.Tr.Taur(quantity = "Time", unit = "s") = 5e-09 "Ideal reverse transit time";
//   parameter Real Transistor2.Tr.Ccs(quantity = "Capacitance", unit = "F", min = 0.0) = 1e-12 "Collector-substrat(ground) cap.";
//   parameter Real Transistor2.Tr.Cje(quantity = "Capacitance", unit = "F", min = 0.0) = 4e-13 "Base-emitter zero bias depletion cap.";
//   parameter Real Transistor2.Tr.Cjc(quantity = "Capacitance", unit = "F", min = 0.0) = 5e-13 "Base-coll. zero bias depletion cap.";
//   parameter Real Transistor2.Tr.Phie(quantity = "ElectricPotential", unit = "V") = 0.8 "Base-emitter diffusion voltage";
//   parameter Real Transistor2.Tr.Me = 0.4 "Base-emitter gradation exponent";
//   parameter Real Transistor2.Tr.Phic(quantity = "ElectricPotential", unit = "V") = 0.8 "Base-collector diffusion voltage";
//   parameter Real Transistor2.Tr.Mc = 0.333 "Base-collector gradation exponent";
//   parameter Real Transistor2.Tr.Gbc(quantity = "Conductance", unit = "S") = 1e-15 "Base-collector conductance";
//   parameter Real Transistor2.Tr.Gbe(quantity = "Conductance", unit = "S") = 1e-15 "Base-emitter conductance";
//   parameter Real Transistor2.Tr.Vt(quantity = "ElectricPotential", unit = "V") = 0.02585 "Voltage equivalent of temperature";
//   parameter Real Transistor2.Tr.EMin = -100.0 "if x < EMin, the exp(x) function is linearized";
//   parameter Real Transistor2.Tr.EMax = 40.0 "if x > EMax, the exp(x) function is linearized";
//   protected Real Transistor2.Tr.vbc;
//   protected Real Transistor2.Tr.vbe;
//   protected Real Transistor2.Tr.qbk;
//   protected Real Transistor2.Tr.ibc;
//   protected Real Transistor2.Tr.ibe;
//   protected Real Transistor2.Tr.cbc;
//   protected Real Transistor2.Tr.cbe;
//   protected Real Transistor2.Tr.ExMin;
//   protected Real Transistor2.Tr.ExMax;
//   protected Real Transistor2.Tr.Capcje;
//   protected Real Transistor2.Tr.Capcjc;
//   Real Transistor2.Tr.C.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor2.Tr.C.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Transistor2.Tr.B.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor2.Tr.B.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Transistor2.Tr.E.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor2.Tr.E.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Transistor2.Ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor2.Ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Transistor2.c.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor2.c.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Transistor2.b.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor2.b.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Transistor2.e.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Transistor2.e.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
// equation
//   V1.signalSource.y = V1.signalSource.offset + (if time < V1.signalSource.startTime then 0.0 else V1.signalSource.amplitude * (Modelica.Math.exp((V1.signalSource.startTime - time) * V1.signalSource.damping) * Modelica.Math.sin(6.28318530717959 * (V1.signalSource.freqHz * (time - V1.signalSource.startTime)) + V1.signalSource.phase)));
//   V1.v = V1.signalSource.y;
//   V1.v = V1.p.v - V1.n.v;
//   0.0 = V1.p.i + V1.n.i;
//   V1.i = V1.p.i;
//   V2.signalSource.y = V2.signalSource.offset + (if time < V2.signalSource.startTime then 0.0 else if time < V2.signalSource.startTime + V2.signalSource.duration then ((time - V2.signalSource.startTime) * V2.signalSource.height) / V2.signalSource.duration else V2.signalSource.height);
//   V2.v = V2.signalSource.y;
//   V2.v = V2.p.v - V2.n.v;
//   0.0 = V2.p.i + V2.n.i;
//   V2.i = V2.p.i;
//   I1.signalSource.y = I1.signalSource.offset + (if time < I1.signalSource.startTime then 0.0 else if time < I1.signalSource.startTime + I1.signalSource.duration then ((time - I1.signalSource.startTime) * I1.signalSource.height) / I1.signalSource.duration else I1.signalSource.height);
//   I1.i = I1.signalSource.y;
//   I1.v = I1.p.v - I1.n.v;
//   0.0 = I1.p.i + I1.n.i;
//   I1.i = I1.p.i;
//   assert(1.0 + R1.alpha * (R1.T_heatPort - R1.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R1.R_actual = R1.R * (1.0 + R1.alpha * (R1.T_heatPort - R1.T_ref));
//   R1.v = R1.R_actual * R1.i;
//   R1.LossPower = R1.v * R1.i;
//   R1.i = R1.p.i;
//   0.0 = R1.p.i + R1.n.i;
//   R1.v = R1.p.v - R1.n.v;
//   R1.T_heatPort = R1.T;
//   assert(1.0 + R2.alpha * (R2.T_heatPort - R2.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R2.R_actual = R2.R * (1.0 + R2.alpha * (R2.T_heatPort - R2.T_ref));
//   R2.v = R2.R_actual * R2.i;
//   R2.LossPower = R2.v * R2.i;
//   R2.i = R2.p.i;
//   0.0 = R2.p.i + R2.n.i;
//   R2.v = R2.p.v - R2.n.v;
//   R2.T_heatPort = R2.T;
//   assert(1.0 + R3.alpha * (R3.T_heatPort - R3.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R3.R_actual = R3.R * (1.0 + R3.alpha * (R3.T_heatPort - R3.T_ref));
//   R3.v = R3.R_actual * R3.i;
//   R3.LossPower = R3.v * R3.i;
//   R3.i = R3.p.i;
//   0.0 = R3.p.i + R3.n.i;
//   R3.v = R3.p.v - R3.n.v;
//   R3.T_heatPort = R3.T;
//   assert(1.0 + R4.alpha * (R4.T_heatPort - R4.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R4.R_actual = R4.R * (1.0 + R4.alpha * (R4.T_heatPort - R4.T_ref));
//   R4.v = R4.R_actual * R4.i;
//   R4.LossPower = R4.v * R4.i;
//   R4.i = R4.p.i;
//   0.0 = R4.p.i + R4.n.i;
//   R4.v = R4.p.v - R4.n.v;
//   R4.T_heatPort = R4.T;
//   C1.i = C1.C * der(C1.v);
//   C1.v = C1.p.v - C1.n.v;
//   0.0 = C1.p.i + C1.n.i;
//   C1.i = C1.p.i;
//   C4.i = C4.C * der(C4.v);
//   C4.v = C4.p.v - C4.n.v;
//   0.0 = C4.p.i + C4.n.i;
//   C4.i = C4.p.i;
//   C5.i = C5.C * der(C5.v);
//   C5.v = C5.p.v - C5.n.v;
//   0.0 = C5.p.i + C5.n.i;
//   C5.i = C5.p.i;
//   C2.i = C2.C * der(C2.v);
//   C2.v = C2.p.v - C2.n.v;
//   0.0 = C2.p.i + C2.n.i;
//   C2.i = C2.p.i;
//   C3.i = C3.C * der(C3.v);
//   C3.v = C3.p.v - C3.n.v;
//   0.0 = C3.p.i + C3.n.i;
//   C3.i = C3.p.i;
//   Gnd1.p.v = 0.0;
//   Gnd9.p.v = 0.0;
//   Gnd3.p.v = 0.0;
//   Gnd2.p.v = 0.0;
//   Gnd6.p.v = 0.0;
//   Gnd7.p.v = 0.0;
//   Gnd8.p.v = 0.0;
//   Gnd5.p.v = 0.0;
//   Gnd4.p.v = 0.0;
//   assert(1.0 + Transistor1.rtb.alpha * (Transistor1.rtb.T_heatPort - Transistor1.rtb.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   Transistor1.rtb.R_actual = Transistor1.rtb.R * (1.0 + Transistor1.rtb.alpha * (Transistor1.rtb.T_heatPort - Transistor1.rtb.T_ref));
//   Transistor1.rtb.v = Transistor1.rtb.R_actual * Transistor1.rtb.i;
//   Transistor1.rtb.LossPower = Transistor1.rtb.v * Transistor1.rtb.i;
//   Transistor1.rtb.i = Transistor1.rtb.p.i;
//   0.0 = Transistor1.rtb.p.i + Transistor1.rtb.n.i;
//   Transistor1.rtb.v = Transistor1.rtb.p.v - Transistor1.rtb.n.v;
//   Transistor1.rtb.T_heatPort = Transistor1.rtb.T;
//   assert(1.0 + Transistor1.rtc.alpha * (Transistor1.rtc.T_heatPort - Transistor1.rtc.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   Transistor1.rtc.R_actual = Transistor1.rtc.R * (1.0 + Transistor1.rtc.alpha * (Transistor1.rtc.T_heatPort - Transistor1.rtc.T_ref));
//   Transistor1.rtc.v = Transistor1.rtc.R_actual * Transistor1.rtc.i;
//   Transistor1.rtc.LossPower = Transistor1.rtc.v * Transistor1.rtc.i;
//   Transistor1.rtc.i = Transistor1.rtc.p.i;
//   0.0 = Transistor1.rtc.p.i + Transistor1.rtc.n.i;
//   Transistor1.rtc.v = Transistor1.rtc.p.v - Transistor1.rtc.n.v;
//   Transistor1.rtc.T_heatPort = Transistor1.rtc.T;
//   Transistor1.ct.i = Transistor1.ct.C * der(Transistor1.ct.v);
//   Transistor1.ct.v = Transistor1.ct.p.v - Transistor1.ct.n.v;
//   0.0 = Transistor1.ct.p.i + Transistor1.ct.n.i;
//   Transistor1.ct.i = Transistor1.ct.p.i;
//   Transistor1.Tr.ExMin = exp(Transistor1.Tr.EMin);
//   Transistor1.Tr.ExMax = exp(Transistor1.Tr.EMax);
//   Transistor1.Tr.vbc = Transistor1.Tr.B.v - Transistor1.Tr.C.v;
//   Transistor1.Tr.vbe = Transistor1.Tr.B.v - Transistor1.Tr.E.v;
//   Transistor1.Tr.qbk = 1.0 - Transistor1.Tr.vbc * Transistor1.Tr.Vak;
//   Transistor1.Tr.ibc = smooth(1,if Transistor1.Tr.vbc / Transistor1.Tr.Vt < Transistor1.Tr.EMin then Transistor1.Tr.Is * (Transistor1.Tr.ExMin * (1.0 + (Transistor1.Tr.vbc / Transistor1.Tr.Vt - Transistor1.Tr.EMin)) - 1.0) + Transistor1.Tr.vbc * Transistor1.Tr.Gbc else if Transistor1.Tr.vbc / Transistor1.Tr.Vt > Transistor1.Tr.EMax then Transistor1.Tr.Is * (Transistor1.Tr.ExMax * (1.0 + (Transistor1.Tr.vbc / Transistor1.Tr.Vt - Transistor1.Tr.EMax)) - 1.0) + Transistor1.Tr.vbc * Transistor1.Tr.Gbc else Transistor1.Tr.Is * (exp(Transistor1.Tr.vbc / Transistor1.Tr.Vt) - 1.0) + Transistor1.Tr.vbc * Transistor1.Tr.Gbc);
//   Transistor1.Tr.ibe = smooth(1,if Transistor1.Tr.vbe / Transistor1.Tr.Vt < Transistor1.Tr.EMin then Transistor1.Tr.Is * (Transistor1.Tr.ExMin * (1.0 + (Transistor1.Tr.vbe / Transistor1.Tr.Vt - Transistor1.Tr.EMin)) - 1.0) + Transistor1.Tr.vbe * Transistor1.Tr.Gbe else if Transistor1.Tr.vbe / Transistor1.Tr.Vt > Transistor1.Tr.EMax then Transistor1.Tr.Is * (Transistor1.Tr.ExMax * (1.0 + (Transistor1.Tr.vbe / Transistor1.Tr.Vt - Transistor1.Tr.EMax)) - 1.0) + Transistor1.Tr.vbe * Transistor1.Tr.Gbe else Transistor1.Tr.Is * (exp(Transistor1.Tr.vbe / Transistor1.Tr.Vt) - 1.0) + Transistor1.Tr.vbe * Transistor1.Tr.Gbe);
//   Transistor1.Tr.Capcjc = smooth(1,if Transistor1.Tr.vbc / Transistor1.Tr.Phic > 0.0 then Transistor1.Tr.Cjc * (1.0 + (Transistor1.Tr.Mc * Transistor1.Tr.vbc) / Transistor1.Tr.Phic) else Transistor1.Tr.Cjc * Modelica.Electrical.Analog.Semiconductors.NPN.pow(1.0 - Transistor1.Tr.vbc / Transistor1.Tr.Phic,-Transistor1.Tr.Mc));
//   Transistor1.Tr.Capcje = smooth(1,if Transistor1.Tr.vbe / Transistor1.Tr.Phie > 0.0 then Transistor1.Tr.Cje * (1.0 + (Transistor1.Tr.Me * Transistor1.Tr.vbe) / Transistor1.Tr.Phie) else Transistor1.Tr.Cje * Modelica.Electrical.Analog.Semiconductors.NPN.pow(1.0 - Transistor1.Tr.vbe / Transistor1.Tr.Phie,-Transistor1.Tr.Me));
//   Transistor1.Tr.cbc = smooth(1,if Transistor1.Tr.vbc / Transistor1.Tr.Vt < Transistor1.Tr.EMin then (Transistor1.Tr.Taur * (Transistor1.Tr.Is * (Transistor1.Tr.ExMin * (1.0 + (Transistor1.Tr.vbc / Transistor1.Tr.Vt - Transistor1.Tr.EMin))))) / Transistor1.Tr.Vt + Transistor1.Tr.Capcjc else if Transistor1.Tr.vbc / Transistor1.Tr.Vt > Transistor1.Tr.EMax then (Transistor1.Tr.Taur * (Transistor1.Tr.Is * (Transistor1.Tr.ExMax * (1.0 + (Transistor1.Tr.vbc / Transistor1.Tr.Vt - Transistor1.Tr.EMax))))) / Transistor1.Tr.Vt + Transistor1.Tr.Capcjc else (Transistor1.Tr.Taur * (Transistor1.Tr.Is * exp(Transistor1.Tr.vbc / Transistor1.Tr.Vt))) / Transistor1.Tr.Vt + Transistor1.Tr.Capcjc);
//   Transistor1.Tr.cbe = smooth(1,if Transistor1.Tr.vbe / Transistor1.Tr.Vt < Transistor1.Tr.EMin then (Transistor1.Tr.Tauf * (Transistor1.Tr.Is * (Transistor1.Tr.ExMin * (1.0 + (Transistor1.Tr.vbe / Transistor1.Tr.Vt - Transistor1.Tr.EMin))))) / Transistor1.Tr.Vt + Transistor1.Tr.Capcje else if Transistor1.Tr.vbe / Transistor1.Tr.Vt > Transistor1.Tr.EMax then (Transistor1.Tr.Tauf * (Transistor1.Tr.Is * (Transistor1.Tr.ExMax * (1.0 + (Transistor1.Tr.vbe / Transistor1.Tr.Vt - Transistor1.Tr.EMax))))) / Transistor1.Tr.Vt + Transistor1.Tr.Capcje else (Transistor1.Tr.Tauf * (Transistor1.Tr.Is * exp(Transistor1.Tr.vbe / Transistor1.Tr.Vt))) / Transistor1.Tr.Vt + Transistor1.Tr.Capcje);
//   Transistor1.Tr.C.i = (Transistor1.Tr.ibe - Transistor1.Tr.ibc) * Transistor1.Tr.qbk + ((-Transistor1.Tr.ibc / Transistor1.Tr.Br) + ((-Transistor1.Tr.cbc * der(Transistor1.Tr.vbc)) + Transistor1.Tr.Ccs * der(Transistor1.Tr.C.v)));
//   Transistor1.Tr.B.i = Transistor1.Tr.ibe / Transistor1.Tr.Bf + (Transistor1.Tr.ibc / Transistor1.Tr.Br + (Transistor1.Tr.cbc * der(Transistor1.Tr.vbc) + Transistor1.Tr.cbe * der(Transistor1.Tr.vbe)));
//   Transistor1.Tr.E.i = (-Transistor1.Tr.B.i) + ((-Transistor1.Tr.C.i) + Transistor1.Tr.Ccs * der(Transistor1.Tr.C.v));
//   Transistor1.Tr.LossPower = (Transistor1.Tr.C.v - Transistor1.Tr.E.v) * ((Transistor1.Tr.ibe - Transistor1.Tr.ibc) * Transistor1.Tr.qbk) + (Transistor1.Tr.vbc * Transistor1.Tr.ibc / Transistor1.Tr.Br + Transistor1.Tr.vbe * Transistor1.Tr.ibe / Transistor1.Tr.Bf);
//   Transistor1.Tr.T_heatPort = Transistor1.Tr.T;
//   Transistor1.Ground1.p.v = 0.0;
//   assert(1.0 + Transistor2.rtb.alpha * (Transistor2.rtb.T_heatPort - Transistor2.rtb.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   Transistor2.rtb.R_actual = Transistor2.rtb.R * (1.0 + Transistor2.rtb.alpha * (Transistor2.rtb.T_heatPort - Transistor2.rtb.T_ref));
//   Transistor2.rtb.v = Transistor2.rtb.R_actual * Transistor2.rtb.i;
//   Transistor2.rtb.LossPower = Transistor2.rtb.v * Transistor2.rtb.i;
//   Transistor2.rtb.i = Transistor2.rtb.p.i;
//   0.0 = Transistor2.rtb.p.i + Transistor2.rtb.n.i;
//   Transistor2.rtb.v = Transistor2.rtb.p.v - Transistor2.rtb.n.v;
//   Transistor2.rtb.T_heatPort = Transistor2.rtb.T;
//   assert(1.0 + Transistor2.rtc.alpha * (Transistor2.rtc.T_heatPort - Transistor2.rtc.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   Transistor2.rtc.R_actual = Transistor2.rtc.R * (1.0 + Transistor2.rtc.alpha * (Transistor2.rtc.T_heatPort - Transistor2.rtc.T_ref));
//   Transistor2.rtc.v = Transistor2.rtc.R_actual * Transistor2.rtc.i;
//   Transistor2.rtc.LossPower = Transistor2.rtc.v * Transistor2.rtc.i;
//   Transistor2.rtc.i = Transistor2.rtc.p.i;
//   0.0 = Transistor2.rtc.p.i + Transistor2.rtc.n.i;
//   Transistor2.rtc.v = Transistor2.rtc.p.v - Transistor2.rtc.n.v;
//   Transistor2.rtc.T_heatPort = Transistor2.rtc.T;
//   Transistor2.ct.i = Transistor2.ct.C * der(Transistor2.ct.v);
//   Transistor2.ct.v = Transistor2.ct.p.v - Transistor2.ct.n.v;
//   0.0 = Transistor2.ct.p.i + Transistor2.ct.n.i;
//   Transistor2.ct.i = Transistor2.ct.p.i;
//   Transistor2.Tr.ExMin = exp(Transistor2.Tr.EMin);
//   Transistor2.Tr.ExMax = exp(Transistor2.Tr.EMax);
//   Transistor2.Tr.vbc = Transistor2.Tr.B.v - Transistor2.Tr.C.v;
//   Transistor2.Tr.vbe = Transistor2.Tr.B.v - Transistor2.Tr.E.v;
//   Transistor2.Tr.qbk = 1.0 - Transistor2.Tr.vbc * Transistor2.Tr.Vak;
//   Transistor2.Tr.ibc = smooth(1,if Transistor2.Tr.vbc / Transistor2.Tr.Vt < Transistor2.Tr.EMin then Transistor2.Tr.Is * (Transistor2.Tr.ExMin * (1.0 + (Transistor2.Tr.vbc / Transistor2.Tr.Vt - Transistor2.Tr.EMin)) - 1.0) + Transistor2.Tr.vbc * Transistor2.Tr.Gbc else if Transistor2.Tr.vbc / Transistor2.Tr.Vt > Transistor2.Tr.EMax then Transistor2.Tr.Is * (Transistor2.Tr.ExMax * (1.0 + (Transistor2.Tr.vbc / Transistor2.Tr.Vt - Transistor2.Tr.EMax)) - 1.0) + Transistor2.Tr.vbc * Transistor2.Tr.Gbc else Transistor2.Tr.Is * (exp(Transistor2.Tr.vbc / Transistor2.Tr.Vt) - 1.0) + Transistor2.Tr.vbc * Transistor2.Tr.Gbc);
//   Transistor2.Tr.ibe = smooth(1,if Transistor2.Tr.vbe / Transistor2.Tr.Vt < Transistor2.Tr.EMin then Transistor2.Tr.Is * (Transistor2.Tr.ExMin * (1.0 + (Transistor2.Tr.vbe / Transistor2.Tr.Vt - Transistor2.Tr.EMin)) - 1.0) + Transistor2.Tr.vbe * Transistor2.Tr.Gbe else if Transistor2.Tr.vbe / Transistor2.Tr.Vt > Transistor2.Tr.EMax then Transistor2.Tr.Is * (Transistor2.Tr.ExMax * (1.0 + (Transistor2.Tr.vbe / Transistor2.Tr.Vt - Transistor2.Tr.EMax)) - 1.0) + Transistor2.Tr.vbe * Transistor2.Tr.Gbe else Transistor2.Tr.Is * (exp(Transistor2.Tr.vbe / Transistor2.Tr.Vt) - 1.0) + Transistor2.Tr.vbe * Transistor2.Tr.Gbe);
//   Transistor2.Tr.Capcjc = smooth(1,if Transistor2.Tr.vbc / Transistor2.Tr.Phic > 0.0 then Transistor2.Tr.Cjc * (1.0 + (Transistor2.Tr.Mc * Transistor2.Tr.vbc) / Transistor2.Tr.Phic) else Transistor2.Tr.Cjc * Modelica.Electrical.Analog.Semiconductors.NPN.pow(1.0 - Transistor2.Tr.vbc / Transistor2.Tr.Phic,-Transistor2.Tr.Mc));
//   Transistor2.Tr.Capcje = smooth(1,if Transistor2.Tr.vbe / Transistor2.Tr.Phie > 0.0 then Transistor2.Tr.Cje * (1.0 + (Transistor2.Tr.Me * Transistor2.Tr.vbe) / Transistor2.Tr.Phie) else Transistor2.Tr.Cje * Modelica.Electrical.Analog.Semiconductors.NPN.pow(1.0 - Transistor2.Tr.vbe / Transistor2.Tr.Phie,-Transistor2.Tr.Me));
//   Transistor2.Tr.cbc = smooth(1,if Transistor2.Tr.vbc / Transistor2.Tr.Vt < Transistor2.Tr.EMin then (Transistor2.Tr.Taur * (Transistor2.Tr.Is * (Transistor2.Tr.ExMin * (1.0 + (Transistor2.Tr.vbc / Transistor2.Tr.Vt - Transistor2.Tr.EMin))))) / Transistor2.Tr.Vt + Transistor2.Tr.Capcjc else if Transistor2.Tr.vbc / Transistor2.Tr.Vt > Transistor2.Tr.EMax then (Transistor2.Tr.Taur * (Transistor2.Tr.Is * (Transistor2.Tr.ExMax * (1.0 + (Transistor2.Tr.vbc / Transistor2.Tr.Vt - Transistor2.Tr.EMax))))) / Transistor2.Tr.Vt + Transistor2.Tr.Capcjc else (Transistor2.Tr.Taur * (Transistor2.Tr.Is * exp(Transistor2.Tr.vbc / Transistor2.Tr.Vt))) / Transistor2.Tr.Vt + Transistor2.Tr.Capcjc);
//   Transistor2.Tr.cbe = smooth(1,if Transistor2.Tr.vbe / Transistor2.Tr.Vt < Transistor2.Tr.EMin then (Transistor2.Tr.Tauf * (Transistor2.Tr.Is * (Transistor2.Tr.ExMin * (1.0 + (Transistor2.Tr.vbe / Transistor2.Tr.Vt - Transistor2.Tr.EMin))))) / Transistor2.Tr.Vt + Transistor2.Tr.Capcje else if Transistor2.Tr.vbe / Transistor2.Tr.Vt > Transistor2.Tr.EMax then (Transistor2.Tr.Tauf * (Transistor2.Tr.Is * (Transistor2.Tr.ExMax * (1.0 + (Transistor2.Tr.vbe / Transistor2.Tr.Vt - Transistor2.Tr.EMax))))) / Transistor2.Tr.Vt + Transistor2.Tr.Capcje else (Transistor2.Tr.Tauf * (Transistor2.Tr.Is * exp(Transistor2.Tr.vbe / Transistor2.Tr.Vt))) / Transistor2.Tr.Vt + Transistor2.Tr.Capcje);
//   Transistor2.Tr.C.i = (Transistor2.Tr.ibe - Transistor2.Tr.ibc) * Transistor2.Tr.qbk + ((-Transistor2.Tr.ibc / Transistor2.Tr.Br) + ((-Transistor2.Tr.cbc * der(Transistor2.Tr.vbc)) + Transistor2.Tr.Ccs * der(Transistor2.Tr.C.v)));
//   Transistor2.Tr.B.i = Transistor2.Tr.ibe / Transistor2.Tr.Bf + (Transistor2.Tr.ibc / Transistor2.Tr.Br + (Transistor2.Tr.cbc * der(Transistor2.Tr.vbc) + Transistor2.Tr.cbe * der(Transistor2.Tr.vbe)));
//   Transistor2.Tr.E.i = (-Transistor2.Tr.B.i) + ((-Transistor2.Tr.C.i) + Transistor2.Tr.Ccs * der(Transistor2.Tr.C.v));
//   Transistor2.Tr.LossPower = (Transistor2.Tr.C.v - Transistor2.Tr.E.v) * ((Transistor2.Tr.ibe - Transistor2.Tr.ibc) * Transistor2.Tr.qbk) + (Transistor2.Tr.vbc * Transistor2.Tr.ibc / Transistor2.Tr.Br + Transistor2.Tr.vbe * Transistor2.Tr.ibe / Transistor2.Tr.Bf);
//   Transistor2.Tr.T_heatPort = Transistor2.Tr.T;
//   Transistor2.Ground1.p.v = 0.0;
//   Transistor1.e.i + (I1.p.i + (C5.p.i + Transistor2.e.i)) = 0.0;
//   C5.p.v = I1.p.v;
//   C5.p.v = Transistor1.e.v;
//   C5.p.v = Transistor2.e.v;
//   R4.n.i + (C4.n.i + Transistor2.c.i) = 0.0;
//   C4.n.v = R4.n.v;
//   C4.n.v = Transistor2.c.v;
//   Transistor2.b.i + (R3.p.i + C3.p.i) = 0.0;
//   C3.p.v = R3.p.v;
//   C3.p.v = Transistor2.b.v;
//   R2.n.i + (Transistor1.c.i + C2.p.i) = 0.0;
//   C2.p.v = R2.n.v;
//   C2.p.v = Transistor1.c.v;
//   R1.n.i + (Transistor1.b.i + C1.p.i) = 0.0;
//   C1.p.v = R1.n.v;
//   C1.p.v = Transistor1.b.v;
//   V2.n.i + Gnd9.p.i = 0.0;
//   Gnd9.p.v = V2.n.v;
//   R4.p.i + (R2.p.i + V2.p.i) = 0.0;
//   R2.p.v = R4.p.v;
//   R2.p.v = V2.p.v;
//   R1.p.i + V1.p.i = 0.0;
//   R1.p.v = V1.p.v;
//   C4.p.i + Gnd6.p.i = 0.0;
//   C4.p.v = Gnd6.p.v;
//   C2.n.i + Gnd3.p.i = 0.0;
//   C2.n.v = Gnd3.p.v;
//   R3.n.i + Gnd4.p.i = 0.0;
//   Gnd4.p.v = R3.n.v;
//   C3.n.i + Gnd5.p.i = 0.0;
//   C3.n.v = Gnd5.p.v;
//   C5.n.i + Gnd8.p.i = 0.0;
//   C5.n.v = Gnd8.p.v;
//   I1.n.i + Gnd7.p.i = 0.0;
//   Gnd7.p.v = I1.n.v;
//   C1.n.i + Gnd2.p.i = 0.0;
//   C1.n.v = Gnd2.p.v;
//   V1.n.i + Gnd1.p.i = 0.0;
//   Gnd1.p.v = V1.n.v;
//   Transistor2.Tr.E.i + (-Transistor2.e.i) = 0.0;
//   Transistor2.Tr.E.v = Transistor2.e.v;
//   (-Transistor2.b.i) + Transistor2.rtb.p.i = 0.0;
//   Transistor2.b.v = Transistor2.rtb.p.v;
//   Transistor2.rtc.n.i + (-Transistor2.c.i) = 0.0;
//   Transistor2.c.v = Transistor2.rtc.n.v;
//   Transistor2.Tr.C.i + Transistor2.rtc.p.i = 0.0;
//   Transistor2.Tr.C.v = Transistor2.rtc.p.v;
//   Transistor2.ct.n.i + Transistor2.Ground1.p.i = 0.0;
//   Transistor2.Ground1.p.v = Transistor2.ct.n.v;
//   Transistor2.rtb.n.i + (Transistor2.Tr.B.i + Transistor2.ct.p.i) = 0.0;
//   Transistor2.Tr.B.v = Transistor2.ct.p.v;
//   Transistor2.Tr.B.v = Transistor2.rtb.n.v;
//   Transistor1.Tr.E.i + (-Transistor1.e.i) = 0.0;
//   Transistor1.Tr.E.v = Transistor1.e.v;
//   (-Transistor1.b.i) + Transistor1.rtb.p.i = 0.0;
//   Transistor1.b.v = Transistor1.rtb.p.v;
//   Transistor1.rtc.n.i + (-Transistor1.c.i) = 0.0;
//   Transistor1.c.v = Transistor1.rtc.n.v;
//   Transistor1.Tr.C.i + Transistor1.rtc.p.i = 0.0;
//   Transistor1.Tr.C.v = Transistor1.rtc.p.v;
//   Transistor1.ct.n.i + Transistor1.Ground1.p.i = 0.0;
//   Transistor1.Ground1.p.v = Transistor1.ct.n.v;
//   Transistor1.rtb.n.i + (Transistor1.Tr.B.i + Transistor1.ct.p.i) = 0.0;
//   Transistor1.Tr.B.v = Transistor1.ct.p.v;
//   Transistor1.Tr.B.v = Transistor1.rtb.n.v;
// end Modelica.Electrical.Analog.Examples.DifferenceAmplifier;
// "
// ""
// "Check of Modelica.Electrical.Analog.Examples.DifferenceAmplifier completed successfully.
// 
// 
// Class Modelica.Electrical.Analog.Examples.DifferenceAmplifier has 207 equation(s) and 207 variable(s).
// 117 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.DifferenceAmplifier_res.mat",
//     messages = ""
// end SimulationResult;
// ""
// "function Modelica.Electrical.Analog.Semiconductors.pow
//   input Real x;
//   input Real y;
//   output Real z;
// algorithm
//   z := x ^ y;
// end Modelica.Electrical.Analog.Semiconductors.pow;
// 
// function Modelica.Math.asin
//   input Real u;
//   output Real y(quantity = "Angle", unit = "rad", displayUnit = "deg");
// 
// external "C";
// end Modelica.Math.asin;
// 
// function Modelica.Math.sin
//   input Real u(quantity = "Angle", unit = "rad", displayUnit = "deg");
//   output Real y;
// 
// external "C";
// end Modelica.Math.sin;
// 
// class Modelica.Electrical.Analog.Examples.HeatingMOSInverter
//   Real G.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real G.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Sin.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Sin.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Sin.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Sin.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Sin.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Sin.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real Sin.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real Sin.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real Sin.signalSource.y "Connector of Real output signal";
//   parameter Real Sin.signalSource.amplitude = Sin.V "Amplitude of sine wave";
//   parameter Real Sin.signalSource.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = Sin.freqHz "Frequency of sine wave";
//   parameter Real Sin.signalSource.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = Sin.phase "Phase of sine wave";
//   parameter Real Sin.signalSource.offset = Sin.offset "Offset of output signal";
//   parameter Real Sin.signalSource.startTime(quantity = "Time", unit = "s") = Sin.startTime "Output = offset for time < startTime";
//   protected constant Real Sin.signalSource.pi = 3.14159265358979;
//   parameter Real Sin.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 5.0 "Amplitude of sine wave";
//   parameter Real Sin.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = 0.0 "Phase of sine wave";
//   parameter Real Sin.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) "Frequency of sine wave";
//   Real Capacitor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Capacitor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Capacitor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Capacitor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Capacitor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Capacitor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real Capacitor1.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = 1e-05 "Capacitance";
//   parameter Real HeatCapacitor1.C(quantity = "HeatCapacity", unit = "J/K") = 0.01 "Heat capacity of element (= cp*m)";
//   Real HeatCapacitor1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0, start = 293.15) "Temperature of element";
//   Real HeatCapacitor1.der_T(quantity = "TemperatureSlope", unit = "K/s", start = 0.0) "Time derivative of temperature (= der(T))";
//   Real HeatCapacitor1.port.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Port temperature";
//   Real HeatCapacitor1.port.Q_flow(quantity = "Power", unit = "W") "Heat flow rate (positive if flowing from outside into the component)";
//   Real TC1.Q_flow(quantity = "Power", unit = "W") "Heat flow rate from port_a -> port_b";
//   Real TC1.dT(quantity = "ThermodynamicTemperature", unit = "K") "port_a.T - port_b.T";
//   Real TC1.port_a.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Port temperature";
//   Real TC1.port_a.Q_flow(quantity = "Power", unit = "W") "Heat flow rate (positive if flowing from outside into the component)";
//   Real TC1.port_b.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Port temperature";
//   Real TC1.port_b.Q_flow(quantity = "Power", unit = "W") "Heat flow rate (positive if flowing from outside into the component)";
//   parameter Real TC1.G(quantity = "ThermalConductance", unit = "W/K") = 0.01 "Constant thermal conductance of material";
//   parameter Boolean H_PMOS.useHeatPort = true "=true, if HeatPort is enabled";
//   parameter Real H_PMOS.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real H_PMOS.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real H_PMOS.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   Real H_PMOS.D.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real H_PMOS.D.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real H_PMOS.G.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real H_PMOS.G.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real H_PMOS.S.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real H_PMOS.S.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real H_PMOS.B.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real H_PMOS.B.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real H_PMOS.W(quantity = "Length", unit = "m") = 2e-05 "Width";
//   parameter Real H_PMOS.L(quantity = "Length", unit = "m") = 6e-06 "Length";
//   parameter Real H_PMOS.Beta(quantity = "Transconductance", unit = "A/V2") = 1.05e-05 "Transconductance parameter";
//   parameter Real H_PMOS.Vt(quantity = "ElectricPotential", unit = "V") = -1.0 "Zero bias threshold voltage";
//   parameter Real H_PMOS.K2 = 0.41 "Bulk threshold parameter";
//   parameter Real H_PMOS.K5 = 0.839 "Reduction of pinch-off region";
//   parameter Real H_PMOS.dW(quantity = "Length", unit = "m") = -2.5e-06 "Narrowing of channel";
//   parameter Real H_PMOS.dL(quantity = "Length", unit = "m") = -2.1e-06 "Shortening of channel";
//   parameter Real H_PMOS.RDS(quantity = "Resistance", unit = "Ohm") = 10000000.0 "Drain-Source-Resistance";
//   parameter Real H_PMOS.Tnom(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Parameter measurement temperature";
//   parameter Real H_PMOS.kvt = -0.0029 "fitting parameter for Vt";
//   parameter Real H_PMOS.kk2 = 0.00062 "fitting parameter for Kk2";
//   protected Real H_PMOS.v;
//   protected Real H_PMOS.uds;
//   protected Real H_PMOS.ubs;
//   protected Real H_PMOS.ugst;
//   protected Real H_PMOS.ud;
//   protected Real H_PMOS.us;
//   protected Real H_PMOS.id;
//   protected Real H_PMOS.gds;
//   protected Real H_PMOS.beta_t;
//   protected Real H_PMOS.vt_t;
//   protected Real H_PMOS.k2_t;
//   Real H_PMOS.heatPort.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0, start = H_PMOS.T) = H_PMOS.T_heatPort "Port temperature";
//   Real H_PMOS.heatPort.Q_flow(quantity = "Power", unit = "W") = -H_PMOS.LossPower "Heat flow rate (positive if flowing from outside into the component)";
//   parameter Boolean H_NMOS.useHeatPort = true "=true, if HeatPort is enabled";
//   parameter Real H_NMOS.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real H_NMOS.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real H_NMOS.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   Real H_NMOS.D.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real H_NMOS.D.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real H_NMOS.G.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real H_NMOS.G.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real H_NMOS.S.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real H_NMOS.S.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real H_NMOS.B.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real H_NMOS.B.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real H_NMOS.W(quantity = "Length", unit = "m") = 2e-05 "Width";
//   parameter Real H_NMOS.L(quantity = "Length", unit = "m") = 6e-06 "Length";
//   parameter Real H_NMOS.Beta(quantity = "Transconductance", unit = "A/V2") = 4.1e-05 "Transconductance parameter";
//   parameter Real H_NMOS.Vt(quantity = "ElectricPotential", unit = "V") = 0.8 "Zero bias threshold voltage";
//   parameter Real H_NMOS.K2 = 1.144 "Bulk threshold parameter";
//   parameter Real H_NMOS.K5 = 0.7311 "Reduction of pinch-off region";
//   parameter Real H_NMOS.dW(quantity = "Length", unit = "m") = -2.5e-06 "narrowing of channel";
//   parameter Real H_NMOS.dL(quantity = "Length", unit = "m") = -1.5e-06 "shortening of channel";
//   parameter Real H_NMOS.RDS(quantity = "Resistance", unit = "Ohm") = 10000000.0 "Drain-Source-Resistance";
//   parameter Real H_NMOS.Tnom(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Parameter measurement temperature";
//   parameter Real H_NMOS.kvt = -0.00696 "fitting parameter for Vt";
//   parameter Real H_NMOS.kk2 = 0.0006 "fitting parameter for K22";
//   protected Real H_NMOS.v;
//   protected Real H_NMOS.uds;
//   protected Real H_NMOS.ubs;
//   protected Real H_NMOS.ugst;
//   protected Real H_NMOS.ud;
//   protected Real H_NMOS.us;
//   protected Real H_NMOS.id;
//   protected Real H_NMOS.gds;
//   protected Real H_NMOS.beta_t;
//   protected Real H_NMOS.vt_t;
//   protected Real H_NMOS.k2_t;
//   Real H_NMOS.heatPort.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0, start = H_NMOS.T) = H_NMOS.T_heatPort "Port temperature";
//   Real H_NMOS.heatPort.Q_flow(quantity = "Power", unit = "W") = -H_NMOS.LossPower "Heat flow rate (positive if flowing from outside into the component)";
//   Real V.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real V.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real V.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real V.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real V.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real V.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real V.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real V.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real V.signalSource.y "Connector of Real output signal";
//   parameter Real V.signalSource.height = V.V "Height of ramps";
//   parameter Real V.signalSource.duration(quantity = "Time", unit = "s", min = 1e-60, start = 2.0) = V.duration "Durations of ramp";
//   parameter Real V.signalSource.offset = V.offset "Offset of output signal";
//   parameter Real V.signalSource.startTime(quantity = "Time", unit = "s") = V.startTime "Output = offset for time < startTime";
//   parameter Real V.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 5.0 "Height of ramp";
//   parameter Real V.duration(quantity = "Time", unit = "s", min = 1e-60, start = 2.0) = 0.01 "Duration of ramp";
//   Real TC2.Q_flow(quantity = "Power", unit = "W") "Heat flow rate from port_a -> port_b";
//   Real TC2.dT(quantity = "ThermodynamicTemperature", unit = "K") "port_a.T - port_b.T";
//   Real TC2.port_a.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Port temperature";
//   Real TC2.port_a.Q_flow(quantity = "Power", unit = "W") "Heat flow rate (positive if flowing from outside into the component)";
//   Real TC2.port_b.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Port temperature";
//   Real TC2.port_b.Q_flow(quantity = "Power", unit = "W") "Heat flow rate (positive if flowing from outside into the component)";
//   parameter Real TC2.G(quantity = "ThermalConductance", unit = "W/K") = 0.01 "Constant thermal conductance of material";
//   parameter Real FixedTemperature1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.0 "Fixed temperature at port";
//   Real FixedTemperature1.port.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Port temperature";
//   Real FixedTemperature1.port.Q_flow(quantity = "Power", unit = "W") "Heat flow rate (positive if flowing from outside into the component)";
//   Real TC3.Q_flow(quantity = "Power", unit = "W") "Heat flow rate from port_a -> port_b";
//   Real TC3.dT(quantity = "ThermodynamicTemperature", unit = "K") "port_a.T - port_b.T";
//   Real TC3.port_a.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Port temperature";
//   Real TC3.port_a.Q_flow(quantity = "Power", unit = "W") "Heat flow rate (positive if flowing from outside into the component)";
//   Real TC3.port_b.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Port temperature";
//   Real TC3.port_b.Q_flow(quantity = "Power", unit = "W") "Heat flow rate (positive if flowing from outside into the component)";
//   parameter Real TC3.G(quantity = "ThermalConductance", unit = "W/K") = 0.01 "Constant thermal conductance of material";
// equation
//   G.p.v = 0.0;
//   Sin.signalSource.y = Sin.signalSource.offset + (if time < Sin.signalSource.startTime then 0.0 else Sin.signalSource.amplitude * Modelica.Math.sin(6.28318530717959 * (Sin.signalSource.freqHz * (time - Sin.signalSource.startTime)) + Sin.signalSource.phase));
//   Sin.v = Sin.signalSource.y;
//   Sin.v = Sin.p.v - Sin.n.v;
//   0.0 = Sin.p.i + Sin.n.i;
//   Sin.i = Sin.p.i;
//   Capacitor1.i = Capacitor1.C * der(Capacitor1.v);
//   Capacitor1.v = Capacitor1.p.v - Capacitor1.n.v;
//   0.0 = Capacitor1.p.i + Capacitor1.n.i;
//   Capacitor1.i = Capacitor1.p.i;
//   HeatCapacitor1.T = HeatCapacitor1.port.T;
//   HeatCapacitor1.der_T = der(HeatCapacitor1.T);
//   HeatCapacitor1.C * der(HeatCapacitor1.T) = HeatCapacitor1.port.Q_flow;
//   TC1.Q_flow = TC1.G * TC1.dT;
//   TC1.dT = TC1.port_a.T - TC1.port_b.T;
//   TC1.port_a.Q_flow = TC1.Q_flow;
//   TC1.port_b.Q_flow = -TC1.Q_flow;
//   assert(H_PMOS.L + H_PMOS.dL > 0.0,"Effective length must be positive");
//   assert(H_PMOS.W + H_PMOS.dW > 0.0,"Effective width  must be positive");
//   assert(H_PMOS.T_heatPort > 0.0,"temperature must be positive");
//   H_PMOS.gds = if H_PMOS.RDS < 1e-20 AND H_PMOS.RDS > -1e-20 then 1e+20 else 1.0 / H_PMOS.RDS;
//   H_PMOS.v = H_PMOS.beta_t * (H_PMOS.W + H_PMOS.dW) / (H_PMOS.L + H_PMOS.dL);
//   H_PMOS.ud = if H_PMOS.D.v > H_PMOS.S.v then H_PMOS.S.v else H_PMOS.D.v;
//   H_PMOS.us = if H_PMOS.D.v > H_PMOS.S.v then H_PMOS.D.v else H_PMOS.S.v;
//   H_PMOS.uds = H_PMOS.ud - H_PMOS.us;
//   H_PMOS.ubs = if H_PMOS.B.v < H_PMOS.us then 0.0 else H_PMOS.B.v - H_PMOS.us;
//   H_PMOS.ugst = (H_PMOS.G.v + (H_PMOS.k2_t * H_PMOS.ubs + ((-H_PMOS.vt_t) + (-H_PMOS.us)))) * H_PMOS.K5;
//   H_PMOS.id = if H_PMOS.ugst >= 0.0 then H_PMOS.uds * H_PMOS.gds else if H_PMOS.ugst < H_PMOS.uds then (-H_PMOS.v) * (H_PMOS.uds * (H_PMOS.ugst - H_PMOS.uds / 2.0)) + H_PMOS.uds * H_PMOS.gds else 0.5 * ((-H_PMOS.v) * H_PMOS.ugst ^ 2.0) + H_PMOS.uds * H_PMOS.gds;
//   H_PMOS.beta_t = H_PMOS.Beta * Modelica.Electrical.Analog.Semiconductors.pow(H_PMOS.T_heatPort / H_PMOS.Tnom,-1.5);
//   H_PMOS.vt_t = H_PMOS.Vt * (1.0 + (H_PMOS.T_heatPort - H_PMOS.Tnom) * H_PMOS.kvt);
//   H_PMOS.k2_t = H_PMOS.K2 * (1.0 + (H_PMOS.T_heatPort - H_PMOS.Tnom) * H_PMOS.kk2);
//   H_PMOS.G.i = 0.0;
//   H_PMOS.D.i = if H_PMOS.D.v > H_PMOS.S.v then -H_PMOS.id else H_PMOS.id;
//   H_PMOS.S.i = if H_PMOS.D.v > H_PMOS.S.v then H_PMOS.id else -H_PMOS.id;
//   H_PMOS.B.i = 0.0;
//   H_PMOS.LossPower = H_PMOS.D.i * (H_PMOS.D.v - H_PMOS.S.v);
//   assert(H_NMOS.L + H_NMOS.dL > 0.0,"Effective length must be positive");
//   assert(H_NMOS.W + H_NMOS.dW > 0.0,"Effective width  must be positive");
//   assert(H_NMOS.T_heatPort > 0.0,"temperature must be positive");
//   H_NMOS.gds = if H_NMOS.RDS < 1e-20 AND H_NMOS.RDS > -1e-20 then 1e+20 else 1.0 / H_NMOS.RDS;
//   H_NMOS.v = H_NMOS.beta_t * (H_NMOS.W + H_NMOS.dW) / (H_NMOS.L + H_NMOS.dL);
//   H_NMOS.ud = if H_NMOS.D.v < H_NMOS.S.v then H_NMOS.S.v else H_NMOS.D.v;
//   H_NMOS.us = if H_NMOS.D.v < H_NMOS.S.v then H_NMOS.D.v else H_NMOS.S.v;
//   H_NMOS.uds = H_NMOS.ud - H_NMOS.us;
//   H_NMOS.ubs = if H_NMOS.B.v > H_NMOS.us then 0.0 else H_NMOS.B.v - H_NMOS.us;
//   H_NMOS.ugst = (H_NMOS.G.v + (H_NMOS.k2_t * H_NMOS.ubs + ((-H_NMOS.vt_t) + (-H_NMOS.us)))) * H_NMOS.K5;
//   H_NMOS.id = if H_NMOS.ugst <= 0.0 then H_NMOS.uds * H_NMOS.gds else if H_NMOS.ugst > H_NMOS.uds then H_NMOS.v * (H_NMOS.uds * (H_NMOS.ugst - H_NMOS.uds / 2.0)) + H_NMOS.uds * H_NMOS.gds else 0.5 * (H_NMOS.v * H_NMOS.ugst ^ 2.0) + H_NMOS.uds * H_NMOS.gds;
//   H_NMOS.beta_t = H_NMOS.Beta * Modelica.Electrical.Analog.Semiconductors.pow(H_NMOS.T_heatPort / H_NMOS.Tnom,-1.5);
//   H_NMOS.vt_t = H_NMOS.Vt * (1.0 + (H_NMOS.T_heatPort - H_NMOS.Tnom) * H_NMOS.kvt);
//   H_NMOS.k2_t = H_NMOS.K2 * (1.0 + (H_NMOS.T_heatPort - H_NMOS.Tnom) * H_NMOS.kk2);
//   H_NMOS.G.i = 0.0;
//   H_NMOS.D.i = if H_NMOS.D.v < H_NMOS.S.v then -H_NMOS.id else H_NMOS.id;
//   H_NMOS.S.i = if H_NMOS.D.v < H_NMOS.S.v then H_NMOS.id else -H_NMOS.id;
//   H_NMOS.B.i = 0.0;
//   H_NMOS.LossPower = H_NMOS.D.i * (H_NMOS.D.v - H_NMOS.S.v);
//   V.signalSource.y = V.signalSource.offset + (if time < V.signalSource.startTime then 0.0 else if time < V.signalSource.startTime + V.signalSource.duration then ((time - V.signalSource.startTime) * V.signalSource.height) / V.signalSource.duration else V.signalSource.height);
//   V.v = V.signalSource.y;
//   V.v = V.p.v - V.n.v;
//   0.0 = V.p.i + V.n.i;
//   V.i = V.p.i;
//   TC2.Q_flow = TC2.G * TC2.dT;
//   TC2.dT = TC2.port_a.T - TC2.port_b.T;
//   TC2.port_a.Q_flow = TC2.Q_flow;
//   TC2.port_b.Q_flow = -TC2.Q_flow;
//   FixedTemperature1.port.T = FixedTemperature1.T;
//   TC3.Q_flow = TC3.G * TC3.dT;
//   TC3.dT = TC3.port_a.T - TC3.port_b.T;
//   TC3.port_a.Q_flow = TC3.Q_flow;
//   TC3.port_b.Q_flow = -TC3.Q_flow;
//   TC3.port_a.Q_flow + (TC2.port_b.Q_flow + (TC1.port_b.Q_flow + HeatCapacitor1.port.Q_flow)) = 0.0;
//   HeatCapacitor1.port.T = TC1.port_b.T;
//   HeatCapacitor1.port.T = TC2.port_b.T;
//   HeatCapacitor1.port.T = TC3.port_a.T;
//   TC3.port_b.Q_flow + FixedTemperature1.port.Q_flow = 0.0;
//   FixedTemperature1.port.T = TC3.port_b.T;
//   TC2.port_a.Q_flow + H_NMOS.heatPort.Q_flow = 0.0;
//   H_NMOS.heatPort.T = TC2.port_a.T;
//   TC1.port_a.Q_flow + H_PMOS.heatPort.Q_flow = 0.0;
//   H_PMOS.heatPort.T = TC1.port_a.T;
//   V.n.i + (H_NMOS.B.i + (H_NMOS.S.i + (Capacitor1.n.i + (Sin.n.i + G.p.i)))) = 0.0;
//   Capacitor1.n.v = G.p.v;
//   Capacitor1.n.v = H_NMOS.B.v;
//   Capacitor1.n.v = H_NMOS.S.v;
//   Capacitor1.n.v = Sin.n.v;
//   Capacitor1.n.v = V.n.v;
//   V.p.i + (H_PMOS.B.i + H_PMOS.D.i) = 0.0;
//   H_PMOS.B.v = H_PMOS.D.v;
//   H_PMOS.B.v = V.p.v;
//   H_PMOS.S.i + (H_NMOS.D.i + Capacitor1.p.i) = 0.0;
//   Capacitor1.p.v = H_NMOS.D.v;
//   Capacitor1.p.v = H_PMOS.S.v;
//   H_NMOS.G.i + (H_PMOS.G.i + Sin.p.i) = 0.0;
//   H_NMOS.G.v = H_PMOS.G.v;
//   H_NMOS.G.v = Sin.p.v;
// end Modelica.Electrical.Analog.Examples.HeatingMOSInverter;
// "
// ""
// "Check of Modelica.Electrical.Analog.Examples.HeatingMOSInverter completed successfully.
// 
// 
// Class Modelica.Electrical.Analog.Examples.HeatingMOSInverter has 92 equation(s) and 92 variable(s).
// 45 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.HeatingMOSInverter_res.mat",
//     messages = ""
// end SimulationResult;
// "Error: Variable Sin.freqHz not found in scope <global scope>
// "
// "function Modelica.Electrical.Analog.Semiconductors.pow
//   input Real x;
//   input Real y;
//   output Real z;
// algorithm
//   z := x ^ y;
// end Modelica.Electrical.Analog.Semiconductors.pow;
// 
// class Modelica.Electrical.Analog.Examples.HeatingNPN_OrGate
//   constant Real CapVal(quantity = "Capacitance", unit = "F", min = 0.0) = 0.0;
//   constant Real tauVal(quantity = "Time", unit = "s") = 0.0;
//   parameter Real HeatCapacitor1.C(quantity = "HeatCapacity", unit = "J/K") = 0.1 "Heat capacity of element (= cp*m)";
//   Real HeatCapacitor1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0, start = 293.15) "Temperature of element";
//   Real HeatCapacitor1.der_T(quantity = "TemperatureSlope", unit = "K/s", start = 0.0) "Time derivative of temperature (= der(T))";
//   Real HeatCapacitor1.port.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Port temperature";
//   Real HeatCapacitor1.port.Q_flow(quantity = "Power", unit = "W") "Heat flow rate (positive if flowing from outside into the component)";
//   Real TC1.Q_flow(quantity = "Power", unit = "W") "Heat flow rate from port_a -> port_b";
//   Real TC1.dT(quantity = "ThermodynamicTemperature", unit = "K") "port_a.T - port_b.T";
//   Real TC1.port_a.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Port temperature";
//   Real TC1.port_a.Q_flow(quantity = "Power", unit = "W") "Heat flow rate (positive if flowing from outside into the component)";
//   Real TC1.port_b.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Port temperature";
//   Real TC1.port_b.Q_flow(quantity = "Power", unit = "W") "Heat flow rate (positive if flowing from outside into the component)";
//   parameter Real TC1.G(quantity = "ThermalConductance", unit = "W/K") = 0.01 "Constant thermal conductance of material";
//   Real TC2.Q_flow(quantity = "Power", unit = "W") "Heat flow rate from port_a -> port_b";
//   Real TC2.dT(quantity = "ThermodynamicTemperature", unit = "K") "port_a.T - port_b.T";
//   Real TC2.port_a.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Port temperature";
//   Real TC2.port_a.Q_flow(quantity = "Power", unit = "W") "Heat flow rate (positive if flowing from outside into the component)";
//   Real TC2.port_b.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Port temperature";
//   Real TC2.port_b.Q_flow(quantity = "Power", unit = "W") "Heat flow rate (positive if flowing from outside into the component)";
//   parameter Real TC2.G(quantity = "ThermalConductance", unit = "W/K") = 0.01 "Constant thermal conductance of material";
//   Real V.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real V.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real V.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real V.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real V.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real V.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real V.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real V.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real V.signalSource.y "Connector of Real output signal";
//   parameter Real V.signalSource.height = V.V "Height of ramps";
//   parameter Real V.signalSource.duration(quantity = "Time", unit = "s", min = 1e-60, start = 2.0) = V.duration "Durations of ramp";
//   parameter Real V.signalSource.offset = V.offset "Offset of output signal";
//   parameter Real V.signalSource.startTime(quantity = "Time", unit = "s") = V.startTime "Output = offset for time < startTime";
//   parameter Real V.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 6.0 "Height of ramp";
//   parameter Real V.duration(quantity = "Time", unit = "s", min = 1e-60, start = 2.0) = 5.0 "Duration of ramp";
//   Real V1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real V1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real V1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real V1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real V1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real V1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real V1.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real V1.startTime(quantity = "Time", unit = "s") = 55.0 "Time offset";
//   output Real V1.signalSource.y "Connector of Real output signal";
//   parameter Real V1.signalSource.amplitude = V1.V "Amplitude of trapezoid";
//   parameter Real V1.signalSource.rising(quantity = "Time", unit = "s", min = 0.0) = V1.rising "Rising duration of trapezoid";
//   parameter Real V1.signalSource.width(quantity = "Time", unit = "s", min = 0.0) = V1.width "Width duration of trapezoid";
//   parameter Real V1.signalSource.falling(quantity = "Time", unit = "s", min = 0.0) = V1.falling "Falling duration of trapezoid";
//   parameter Real V1.signalSource.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = V1.period "Time for one period";
//   parameter Integer V1.signalSource.nperiod = V1.nperiod "Number of periods (< 0 means infinite number of periods)";
//   parameter Real V1.signalSource.offset = V1.offset "Offset of output signal";
//   parameter Real V1.signalSource.startTime(quantity = "Time", unit = "s") = V1.startTime "Output = offset for time < startTime";
//   protected parameter Real V1.signalSource.T_rising(quantity = "Time", unit = "s") = V1.signalSource.rising "End time of rising phase within one period";
//   protected parameter Real V1.signalSource.T_width(quantity = "Time", unit = "s") = V1.signalSource.T_rising + V1.signalSource.width "End time of width phase within one period";
//   protected parameter Real V1.signalSource.T_falling(quantity = "Time", unit = "s") = V1.signalSource.T_width + V1.signalSource.falling "End time of falling phase within one period";
//   protected Real V1.signalSource.T0(quantity = "Time", unit = "s", start = V1.signalSource.startTime) "Start time of current period";
//   protected Integer V1.signalSource.counter(start = V1.signalSource.nperiod) "Period counter";
//   protected Integer V1.signalSource.counter2(start = V1.signalSource.nperiod);
//   parameter Real V1.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 6.0 "Amplitude of trapezoid";
//   parameter Real V1.rising(quantity = "Time", unit = "s", min = 0.0, start = 0.0) = 5.0 "Rising duration of trapezoid";
//   parameter Real V1.width(quantity = "Time", unit = "s", min = 0.0, start = 0.5) = 15.0 "Width duration of trapezoid";
//   parameter Real V1.falling(quantity = "Time", unit = "s", min = 0.0, start = 0.0) = 5.0 "Falling duration of trapezoid";
//   parameter Real V1.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = 50.0 "Time for one period";
//   parameter Integer V1.nperiod(start = -1) = 10 "Number of periods (< 0 means infinite number of periods)";
//   Real V2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real V2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real V2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real V2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real V2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real V2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real V2.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real V2.startTime(quantity = "Time", unit = "s") = 65.0 "Time offset";
//   output Real V2.signalSource.y "Connector of Real output signal";
//   parameter Real V2.signalSource.amplitude = V2.V "Amplitude of trapezoid";
//   parameter Real V2.signalSource.rising(quantity = "Time", unit = "s", min = 0.0) = V2.rising "Rising duration of trapezoid";
//   parameter Real V2.signalSource.width(quantity = "Time", unit = "s", min = 0.0) = V2.width "Width duration of trapezoid";
//   parameter Real V2.signalSource.falling(quantity = "Time", unit = "s", min = 0.0) = V2.falling "Falling duration of trapezoid";
//   parameter Real V2.signalSource.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = V2.period "Time for one period";
//   parameter Integer V2.signalSource.nperiod = V2.nperiod "Number of periods (< 0 means infinite number of periods)";
//   parameter Real V2.signalSource.offset = V2.offset "Offset of output signal";
//   parameter Real V2.signalSource.startTime(quantity = "Time", unit = "s") = V2.startTime "Output = offset for time < startTime";
//   protected parameter Real V2.signalSource.T_rising(quantity = "Time", unit = "s") = V2.signalSource.rising "End time of rising phase within one period";
//   protected parameter Real V2.signalSource.T_width(quantity = "Time", unit = "s") = V2.signalSource.T_rising + V2.signalSource.width "End time of width phase within one period";
//   protected parameter Real V2.signalSource.T_falling(quantity = "Time", unit = "s") = V2.signalSource.T_width + V2.signalSource.falling "End time of falling phase within one period";
//   protected Real V2.signalSource.T0(quantity = "Time", unit = "s", start = V2.signalSource.startTime) "Start time of current period";
//   protected Integer V2.signalSource.counter(start = V2.signalSource.nperiod) "Period counter";
//   protected Integer V2.signalSource.counter2(start = V2.signalSource.nperiod);
//   parameter Real V2.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 6.0 "Amplitude of trapezoid";
//   parameter Real V2.rising(quantity = "Time", unit = "s", min = 0.0, start = 0.0) = 5.0 "Rising duration of trapezoid";
//   parameter Real V2.width(quantity = "Time", unit = "s", min = 0.0, start = 0.5) = 15.0 "Width duration of trapezoid";
//   parameter Real V2.falling(quantity = "Time", unit = "s", min = 0.0, start = 0.0) = 5.0 "Falling duration of trapezoid";
//   parameter Real V2.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = 50.0 "Time for one period";
//   parameter Integer V2.nperiod(start = -1) = 10 "Number of periods (< 0 means infinite number of periods)";
//   Real R1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R1.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R1.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 1800.0 "Resistance at temperature T_ref";
//   parameter Real R1.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R1.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R1.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R2.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R2.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 1800.0 "Resistance at temperature T_ref";
//   parameter Real R2.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R2.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R2.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real RI.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real RI.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real RI.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real RI.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real RI.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real RI.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean RI.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real RI.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = RI.T_ref "Fixed device temperature if useHeatPort = false";
//   Real RI.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real RI.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real RI.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 40.0 "Resistance at temperature T_ref";
//   parameter Real RI.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real RI.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real RI.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real Gnd.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Gnd.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Gnd1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Gnd1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Gnd2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Gnd2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Gnd3.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Gnd3.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Gnd4.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Gnd4.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C1.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = 0.0 "Capacitance";
//   Real C2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C2.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = 0.0 "Capacitance";
//   Real C3.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real C3.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real C3.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C3.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real C3.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real C3.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real C3.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = 0.0 "Capacitance";
//   Real Gnd5.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Gnd5.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Gnd6.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Gnd6.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Gnd7.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Gnd7.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean T1.useHeatPort = true "=true, if HeatPort is enabled";
//   parameter Real T1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real T1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real T1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real T1.Bf = 100.0 "Forward beta";
//   parameter Real T1.Br = 1.0 "Reverse beta";
//   parameter Real T1.Is(quantity = "ElectricCurrent", unit = "A") = 1e-14 "Transport saturation current";
//   parameter Real T1.Vak(quantity = "InversePotential", unit = "1/V") = 0.0 "Early voltage (inverse), 1/Volt";
//   parameter Real T1.Tauf(quantity = "Time", unit = "s") = 0.0 "Ideal forward transit time";
//   parameter Real T1.Taur(quantity = "Time", unit = "s") = 0.0 "Ideal reverse transit time";
//   parameter Real T1.Ccs(quantity = "Capacitance", unit = "F", min = 0.0) = 0.0 "Collector-substrat(ground) cap.";
//   parameter Real T1.Cje(quantity = "Capacitance", unit = "F", min = 0.0) = 0.0 "Base-emitter zero bias depletion cap.";
//   parameter Real T1.Cjc(quantity = "Capacitance", unit = "F", min = 0.0) = 0.0 "Base-coll. zero bias depletion cap.";
//   parameter Real T1.Phie(quantity = "ElectricPotential", unit = "V") = 1.0 "Base-emitter diffusion voltage";
//   parameter Real T1.Me = 0.5 "Base-emitter gradation exponent";
//   parameter Real T1.Phic(quantity = "ElectricPotential", unit = "V") = 1.0 "Base-collector diffusion voltage";
//   parameter Real T1.Mc = 0.5 "Base-collector gradation exponent";
//   parameter Real T1.Gbc(quantity = "Conductance", unit = "S") = 1e-12 "Base-collector conductance";
//   parameter Real T1.Gbe(quantity = "Conductance", unit = "S") = 1e-12 "Base-emitter conductance";
//   parameter Real T1.EMin = -100.0 "if x < EMin, the exp(x) function is linearized";
//   parameter Real T1.EMax = 40.0 "if x > EMax, the exp(x) function is linearized";
//   parameter Real T1.Tnom(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Parameter measurement temperature";
//   parameter Real T1.XTI = 3.0 "Temperature exponent for effect on Is";
//   parameter Real T1.XTB = 0.0 "Forward and reverse beta temperature exponent";
//   parameter Real T1.EG = 1.11 "Energy gap for temperature effect on Is";
//   parameter Real T1.NF = 1.0 "Forward current emission coefficient";
//   parameter Real T1.NR = 1.0 "Reverse current emission coefficient";
//   parameter Real T1.K = 1.3806226e-23 "Boltzmann's constant";
//   parameter Real T1.q = 1.6021918e-19 "Elementary electronic charge";
//   Real T1.vbc;
//   Real T1.vbe;
//   Real T1.qbk;
//   Real T1.ibc;
//   Real T1.ibe;
//   Real T1.cbc;
//   Real T1.cbe;
//   Real T1.ExMin;
//   Real T1.ExMax;
//   Real T1.Capcje;
//   Real T1.Capcjc;
//   Real T1.is_t;
//   Real T1.br_t;
//   Real T1.bf_t;
//   Real T1.vt_t(start = 0.01, fixed = false);
//   Real T1.hexp;
//   Real T1.htempexp;
//   Real T1.C.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real T1.C.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real T1.B.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real T1.B.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real T1.E.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real T1.E.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real T1.heatPort.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0, start = T1.T) = T1.T_heatPort "Port temperature";
//   Real T1.heatPort.Q_flow(quantity = "Power", unit = "W") = -T1.LossPower "Heat flow rate (positive if flowing from outside into the component)";
//   parameter Boolean T2.useHeatPort = true "=true, if HeatPort is enabled";
//   parameter Real T2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real T2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real T2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real T2.Bf = 100.0 "Forward beta";
//   parameter Real T2.Br = 1.0 "Reverse beta";
//   parameter Real T2.Is(quantity = "ElectricCurrent", unit = "A") = 1e-14 "Transport saturation current";
//   parameter Real T2.Vak(quantity = "InversePotential", unit = "1/V") = 0.0 "Early voltage (inverse), 1/Volt";
//   parameter Real T2.Tauf(quantity = "Time", unit = "s") = 0.0 "Ideal forward transit time";
//   parameter Real T2.Taur(quantity = "Time", unit = "s") = 0.0 "Ideal reverse transit time";
//   parameter Real T2.Ccs(quantity = "Capacitance", unit = "F", min = 0.0) = 0.0 "Collector-substrat(ground) cap.";
//   parameter Real T2.Cje(quantity = "Capacitance", unit = "F", min = 0.0) = 0.0 "Base-emitter zero bias depletion cap.";
//   parameter Real T2.Cjc(quantity = "Capacitance", unit = "F", min = 0.0) = 0.0 "Base-coll. zero bias depletion cap.";
//   parameter Real T2.Phie(quantity = "ElectricPotential", unit = "V") = 1.0 "Base-emitter diffusion voltage";
//   parameter Real T2.Me = 0.5 "Base-emitter gradation exponent";
//   parameter Real T2.Phic(quantity = "ElectricPotential", unit = "V") = 1.0 "Base-collector diffusion voltage";
//   parameter Real T2.Mc = 0.5 "Base-collector gradation exponent";
//   parameter Real T2.Gbc(quantity = "Conductance", unit = "S") = 1e-12 "Base-collector conductance";
//   parameter Real T2.Gbe(quantity = "Conductance", unit = "S") = 1e-12 "Base-emitter conductance";
//   parameter Real T2.EMin = -100.0 "if x < EMin, the exp(x) function is linearized";
//   parameter Real T2.EMax = 40.0 "if x > EMax, the exp(x) function is linearized";
//   parameter Real T2.Tnom(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Parameter measurement temperature";
//   parameter Real T2.XTI = 3.0 "Temperature exponent for effect on Is";
//   parameter Real T2.XTB = 0.0 "Forward and reverse beta temperature exponent";
//   parameter Real T2.EG = 1.11 "Energy gap for temperature effect on Is";
//   parameter Real T2.NF = 1.0 "Forward current emission coefficient";
//   parameter Real T2.NR = 1.0 "Reverse current emission coefficient";
//   parameter Real T2.K = 1.3806226e-23 "Boltzmann's constant";
//   parameter Real T2.q = 1.6021918e-19 "Elementary electronic charge";
//   Real T2.vbc;
//   Real T2.vbe;
//   Real T2.qbk;
//   Real T2.ibc;
//   Real T2.ibe;
//   Real T2.cbc;
//   Real T2.cbe;
//   Real T2.ExMin;
//   Real T2.ExMax;
//   Real T2.Capcje;
//   Real T2.Capcjc;
//   Real T2.is_t;
//   Real T2.br_t;
//   Real T2.bf_t;
//   Real T2.vt_t(start = 0.01, fixed = false);
//   Real T2.hexp;
//   Real T2.htempexp;
//   Real T2.C.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real T2.C.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real T2.B.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real T2.B.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real T2.E.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real T2.E.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real T2.heatPort.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0, start = T2.T) = T2.T_heatPort "Port temperature";
//   Real T2.heatPort.Q_flow(quantity = "Power", unit = "W") = -T2.LossPower "Heat flow rate (positive if flowing from outside into the component)";
// equation
//   HeatCapacitor1.T = HeatCapacitor1.port.T;
//   HeatCapacitor1.der_T = der(HeatCapacitor1.T);
//   HeatCapacitor1.C * der(HeatCapacitor1.T) = HeatCapacitor1.port.Q_flow;
//   TC1.Q_flow = TC1.G * TC1.dT;
//   TC1.dT = TC1.port_a.T - TC1.port_b.T;
//   TC1.port_a.Q_flow = TC1.Q_flow;
//   TC1.port_b.Q_flow = -TC1.Q_flow;
//   TC2.Q_flow = TC2.G * TC2.dT;
//   TC2.dT = TC2.port_a.T - TC2.port_b.T;
//   TC2.port_a.Q_flow = TC2.Q_flow;
//   TC2.port_b.Q_flow = -TC2.Q_flow;
//   V.signalSource.y = V.signalSource.offset + (if time < V.signalSource.startTime then 0.0 else if time < V.signalSource.startTime + V.signalSource.duration then ((time - V.signalSource.startTime) * V.signalSource.height) / V.signalSource.duration else V.signalSource.height);
//   V.v = V.signalSource.y;
//   V.v = V.p.v - V.n.v;
//   0.0 = V.p.i + V.n.i;
//   V.i = V.p.i;
//   when pre(V1.signalSource.counter2) <> 0 AND sample(V1.signalSource.startTime,V1.signalSource.period) then
//   V1.signalSource.T0 = time;
//   V1.signalSource.counter2 = pre(V1.signalSource.counter);
//   V1.signalSource.counter = pre(V1.signalSource.counter) - (if pre(V1.signalSource.counter) > 0 then 1 else 0);
//   end when;
//   V1.signalSource.y = V1.signalSource.offset + (if time < V1.signalSource.startTime OR V1.signalSource.counter2 == 0 OR time >= V1.signalSource.T0 + V1.signalSource.T_falling then 0.0 else if time < V1.signalSource.T0 + V1.signalSource.T_rising then ((time - V1.signalSource.T0) * V1.signalSource.amplitude) / V1.signalSource.T_rising else if time < V1.signalSource.T0 + V1.signalSource.T_width then V1.signalSource.amplitude else ((V1.signalSource.T0 + V1.signalSource.T_falling - time) * V1.signalSource.amplitude) / (V1.signalSource.T_falling - V1.signalSource.T_width));
//   V1.v = V1.signalSource.y;
//   V1.v = V1.p.v - V1.n.v;
//   0.0 = V1.p.i + V1.n.i;
//   V1.i = V1.p.i;
//   when pre(V2.signalSource.counter2) <> 0 AND sample(V2.signalSource.startTime,V2.signalSource.period) then
//   V2.signalSource.T0 = time;
//   V2.signalSource.counter2 = pre(V2.signalSource.counter);
//   V2.signalSource.counter = pre(V2.signalSource.counter) - (if pre(V2.signalSource.counter) > 0 then 1 else 0);
//   end when;
//   V2.signalSource.y = V2.signalSource.offset + (if time < V2.signalSource.startTime OR V2.signalSource.counter2 == 0 OR time >= V2.signalSource.T0 + V2.signalSource.T_falling then 0.0 else if time < V2.signalSource.T0 + V2.signalSource.T_rising then ((time - V2.signalSource.T0) * V2.signalSource.amplitude) / V2.signalSource.T_rising else if time < V2.signalSource.T0 + V2.signalSource.T_width then V2.signalSource.amplitude else ((V2.signalSource.T0 + V2.signalSource.T_falling - time) * V2.signalSource.amplitude) / (V2.signalSource.T_falling - V2.signalSource.T_width));
//   V2.v = V2.signalSource.y;
//   V2.v = V2.p.v - V2.n.v;
//   0.0 = V2.p.i + V2.n.i;
//   V2.i = V2.p.i;
//   assert(1.0 + R1.alpha * (R1.T_heatPort - R1.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R1.R_actual = R1.R * (1.0 + R1.alpha * (R1.T_heatPort - R1.T_ref));
//   R1.v = R1.R_actual * R1.i;
//   R1.LossPower = R1.v * R1.i;
//   R1.i = R1.p.i;
//   0.0 = R1.p.i + R1.n.i;
//   R1.v = R1.p.v - R1.n.v;
//   R1.T_heatPort = R1.T;
//   assert(1.0 + R2.alpha * (R2.T_heatPort - R2.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R2.R_actual = R2.R * (1.0 + R2.alpha * (R2.T_heatPort - R2.T_ref));
//   R2.v = R2.R_actual * R2.i;
//   R2.LossPower = R2.v * R2.i;
//   R2.i = R2.p.i;
//   0.0 = R2.p.i + R2.n.i;
//   R2.v = R2.p.v - R2.n.v;
//   R2.T_heatPort = R2.T;
//   assert(1.0 + RI.alpha * (RI.T_heatPort - RI.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   RI.R_actual = RI.R * (1.0 + RI.alpha * (RI.T_heatPort - RI.T_ref));
//   RI.v = RI.R_actual * RI.i;
//   RI.LossPower = RI.v * RI.i;
//   RI.i = RI.p.i;
//   0.0 = RI.p.i + RI.n.i;
//   RI.v = RI.p.v - RI.n.v;
//   RI.T_heatPort = RI.T;
//   Gnd.p.v = 0.0;
//   Gnd1.p.v = 0.0;
//   Gnd2.p.v = 0.0;
//   Gnd3.p.v = 0.0;
//   Gnd4.p.v = 0.0;
//   C1.i = C1.C * der(C1.v);
//   C1.v = C1.p.v - C1.n.v;
//   0.0 = C1.p.i + C1.n.i;
//   C1.i = C1.p.i;
//   C2.i = C2.C * der(C2.v);
//   C2.v = C2.p.v - C2.n.v;
//   0.0 = C2.p.i + C2.n.i;
//   C2.i = C2.p.i;
//   C3.i = C3.C * der(C3.v);
//   C3.v = C3.p.v - C3.n.v;
//   0.0 = C3.p.i + C3.n.i;
//   C3.i = C3.p.i;
//   Gnd5.p.v = 0.0;
//   Gnd6.p.v = 0.0;
//   Gnd7.p.v = 0.0;
//   assert(T1.T_heatPort > 0.0,"temperature must be positive");
//   T1.ExMin = exp(T1.EMin);
//   T1.ExMax = exp(T1.EMax);
//   T1.vbc = T1.B.v - T1.C.v;
//   T1.vbe = T1.B.v - T1.E.v;
//   T1.qbk = 1.0 - T1.vbc * T1.Vak;
//   T1.hexp = (T1.T_heatPort / T1.Tnom - 1.0) * T1.EG / T1.vt_t;
//   T1.htempexp = smooth(1,if T1.hexp < T1.EMin then T1.ExMin * (1.0 + (T1.hexp - T1.EMin)) else if T1.hexp > T1.EMax then T1.ExMax * (1.0 + (T1.hexp - T1.EMax)) else exp(T1.hexp));
//   T1.is_t = T1.Is * (Modelica.Electrical.Analog.Semiconductors.pow(T1.T_heatPort / T1.Tnom,T1.XTI) * T1.htempexp);
//   T1.br_t = T1.Br * Modelica.Electrical.Analog.Semiconductors.pow(T1.T_heatPort / T1.Tnom,T1.XTB);
//   T1.bf_t = T1.Bf * Modelica.Electrical.Analog.Semiconductors.pow(T1.T_heatPort / T1.Tnom,T1.XTB);
//   T1.vt_t = T1.K * T1.T_heatPort / T1.q;
//   T1.ibc = smooth(1,if T1.vbc / (T1.vt_t * T1.NR) < T1.EMin then T1.is_t * (T1.ExMin * (1.0 + (T1.vbc / (T1.NR * T1.vt_t) - T1.EMin)) - 1.0) + T1.vbc * T1.Gbc else if T1.vbc / (T1.vt_t * T1.NR) > T1.EMax then T1.is_t * (T1.ExMax * (1.0 + (T1.vbc / (T1.NR * T1.vt_t) - T1.EMax)) - 1.0) + T1.vbc * T1.Gbc else T1.is_t * (exp(T1.vbc / (T1.vt_t * T1.NR)) - 1.0) + T1.vbc * T1.Gbc);
//   T1.ibe = smooth(1,if T1.vbe / (T1.vt_t * T1.NF) < T1.EMin then T1.is_t * (T1.ExMin * (1.0 + (T1.vbe / (T1.NF * T1.vt_t) - T1.EMin)) - 1.0) + T1.vbe * T1.Gbe else if T1.vbe / (T1.vt_t * T1.NF) > T1.EMax then T1.is_t * (T1.ExMax * (1.0 + (T1.vbe / (T1.NF * T1.vt_t) - T1.EMax)) - 1.0) + T1.vbe * T1.Gbe else T1.is_t * (exp(T1.vbe / (T1.vt_t * T1.NF)) - 1.0) + T1.vbe * T1.Gbe);
//   T1.Capcjc = smooth(1,if T1.vbc / T1.Phic > 0.0 then T1.Cjc * (1.0 + (T1.Mc * T1.vbc) / T1.Phic) else T1.Cjc * Modelica.Electrical.Analog.Semiconductors.pow(1.0 - T1.vbc / T1.Phic,-T1.Mc));
//   T1.Capcje = smooth(1,if T1.vbe / T1.Phie > 0.0 then T1.Cje * (1.0 + (T1.Me * T1.vbe) / T1.Phie) else T1.Cje * Modelica.Electrical.Analog.Semiconductors.pow(1.0 - T1.vbe / T1.Phie,-T1.Me));
//   T1.cbc = smooth(1,if T1.vbc / (T1.vt_t * T1.NR) < T1.EMin then (T1.Taur * (T1.is_t * (T1.ExMin * (1.0 + (T1.vbc / (T1.vt_t * T1.NR) - T1.EMin))))) / (T1.vt_t * T1.NR) + T1.Capcjc else if T1.vbc / (T1.vt_t * T1.NR) > T1.EMax then (T1.Taur * (T1.is_t * (T1.ExMax * (1.0 + (T1.vbc / (T1.vt_t * T1.NR) - T1.EMax))))) / (T1.vt_t * T1.NR) + T1.Capcjc else (T1.Taur * (T1.is_t * exp(T1.vbc / (T1.vt_t * T1.NR)))) / (T1.NR * T1.vt_t) + T1.Capcjc);
//   T1.cbe = smooth(1,if T1.vbe / (T1.vt_t * T1.NF) < T1.EMin then (T1.Tauf * (T1.is_t * (T1.ExMin * (1.0 + (T1.vbe / (T1.vt_t * T1.NF) - T1.EMin))))) / (T1.vt_t * T1.NF) + T1.Capcje else if T1.vbe / (T1.vt_t * T1.NF) > T1.EMax then (T1.Tauf * (T1.is_t * (T1.ExMax * (1.0 + (T1.vbe / (T1.vt_t * T1.NF) - T1.EMax))))) / (T1.vt_t * T1.NF) + T1.Capcje else (T1.Tauf * (T1.is_t * exp(T1.vbe / (T1.vt_t * T1.NF)))) / (T1.NF * T1.vt_t) + T1.Capcje);
//   T1.C.i = (T1.ibe - T1.ibc) * T1.qbk + ((-T1.ibc / T1.br_t) + ((-T1.cbc * der(T1.vbc)) + T1.Ccs * der(T1.C.v)));
//   T1.B.i = T1.ibe / T1.bf_t + (T1.ibc / T1.br_t + (T1.cbc * der(T1.vbc) + T1.cbe * der(T1.vbe)));
//   T1.E.i = (-T1.B.i) + ((-T1.C.i) + T1.Ccs * der(T1.C.v));
//   T1.LossPower = T1.vbc * T1.ibc / T1.br_t + (T1.vbe * T1.ibe / T1.bf_t + (T1.ibe - T1.ibc) * (T1.qbk * (T1.C.v - T1.E.v)));
//   assert(T2.T_heatPort > 0.0,"temperature must be positive");
//   T2.ExMin = exp(T2.EMin);
//   T2.ExMax = exp(T2.EMax);
//   T2.vbc = T2.B.v - T2.C.v;
//   T2.vbe = T2.B.v - T2.E.v;
//   T2.qbk = 1.0 - T2.vbc * T2.Vak;
//   T2.hexp = (T2.T_heatPort / T2.Tnom - 1.0) * T2.EG / T2.vt_t;
//   T2.htempexp = smooth(1,if T2.hexp < T2.EMin then T2.ExMin * (1.0 + (T2.hexp - T2.EMin)) else if T2.hexp > T2.EMax then T2.ExMax * (1.0 + (T2.hexp - T2.EMax)) else exp(T2.hexp));
//   T2.is_t = T2.Is * (Modelica.Electrical.Analog.Semiconductors.pow(T2.T_heatPort / T2.Tnom,T2.XTI) * T2.htempexp);
//   T2.br_t = T2.Br * Modelica.Electrical.Analog.Semiconductors.pow(T2.T_heatPort / T2.Tnom,T2.XTB);
//   T2.bf_t = T2.Bf * Modelica.Electrical.Analog.Semiconductors.pow(T2.T_heatPort / T2.Tnom,T2.XTB);
//   T2.vt_t = T2.K * T2.T_heatPort / T2.q;
//   T2.ibc = smooth(1,if T2.vbc / (T2.vt_t * T2.NR) < T2.EMin then T2.is_t * (T2.ExMin * (1.0 + (T2.vbc / (T2.NR * T2.vt_t) - T2.EMin)) - 1.0) + T2.vbc * T2.Gbc else if T2.vbc / (T2.vt_t * T2.NR) > T2.EMax then T2.is_t * (T2.ExMax * (1.0 + (T2.vbc / (T2.NR * T2.vt_t) - T2.EMax)) - 1.0) + T2.vbc * T2.Gbc else T2.is_t * (exp(T2.vbc / (T2.vt_t * T2.NR)) - 1.0) + T2.vbc * T2.Gbc);
//   T2.ibe = smooth(1,if T2.vbe / (T2.vt_t * T2.NF) < T2.EMin then T2.is_t * (T2.ExMin * (1.0 + (T2.vbe / (T2.NF * T2.vt_t) - T2.EMin)) - 1.0) + T2.vbe * T2.Gbe else if T2.vbe / (T2.vt_t * T2.NF) > T2.EMax then T2.is_t * (T2.ExMax * (1.0 + (T2.vbe / (T2.NF * T2.vt_t) - T2.EMax)) - 1.0) + T2.vbe * T2.Gbe else T2.is_t * (exp(T2.vbe / (T2.vt_t * T2.NF)) - 1.0) + T2.vbe * T2.Gbe);
//   T2.Capcjc = smooth(1,if T2.vbc / T2.Phic > 0.0 then T2.Cjc * (1.0 + (T2.Mc * T2.vbc) / T2.Phic) else T2.Cjc * Modelica.Electrical.Analog.Semiconductors.pow(1.0 - T2.vbc / T2.Phic,-T2.Mc));
//   T2.Capcje = smooth(1,if T2.vbe / T2.Phie > 0.0 then T2.Cje * (1.0 + (T2.Me * T2.vbe) / T2.Phie) else T2.Cje * Modelica.Electrical.Analog.Semiconductors.pow(1.0 - T2.vbe / T2.Phie,-T2.Me));
//   T2.cbc = smooth(1,if T2.vbc / (T2.vt_t * T2.NR) < T2.EMin then (T2.Taur * (T2.is_t * (T2.ExMin * (1.0 + (T2.vbc / (T2.vt_t * T2.NR) - T2.EMin))))) / (T2.vt_t * T2.NR) + T2.Capcjc else if T2.vbc / (T2.vt_t * T2.NR) > T2.EMax then (T2.Taur * (T2.is_t * (T2.ExMax * (1.0 + (T2.vbc / (T2.vt_t * T2.NR) - T2.EMax))))) / (T2.vt_t * T2.NR) + T2.Capcjc else (T2.Taur * (T2.is_t * exp(T2.vbc / (T2.vt_t * T2.NR)))) / (T2.NR * T2.vt_t) + T2.Capcjc);
//   T2.cbe = smooth(1,if T2.vbe / (T2.vt_t * T2.NF) < T2.EMin then (T2.Tauf * (T2.is_t * (T2.ExMin * (1.0 + (T2.vbe / (T2.vt_t * T2.NF) - T2.EMin))))) / (T2.vt_t * T2.NF) + T2.Capcje else if T2.vbe / (T2.vt_t * T2.NF) > T2.EMax then (T2.Tauf * (T2.is_t * (T2.ExMax * (1.0 + (T2.vbe / (T2.vt_t * T2.NF) - T2.EMax))))) / (T2.vt_t * T2.NF) + T2.Capcje else (T2.Tauf * (T2.is_t * exp(T2.vbe / (T2.vt_t * T2.NF)))) / (T2.NF * T2.vt_t) + T2.Capcje);
//   T2.C.i = (T2.ibe - T2.ibc) * T2.qbk + ((-T2.ibc / T2.br_t) + ((-T2.cbc * der(T2.vbc)) + T2.Ccs * der(T2.C.v)));
//   T2.B.i = T2.ibe / T2.bf_t + (T2.ibc / T2.br_t + (T2.cbc * der(T2.vbc) + T2.cbe * der(T2.vbe)));
//   T2.E.i = (-T2.B.i) + ((-T2.C.i) + T2.Ccs * der(T2.C.v));
//   T2.LossPower = T2.vbc * T2.ibc / T2.br_t + (T2.vbe * T2.ibe / T2.bf_t + (T2.ibe - T2.ibc) * (T2.qbk * (T2.C.v - T2.E.v)));
//   TC1.port_a.Q_flow + T1.heatPort.Q_flow = 0.0;
//   T1.heatPort.T = TC1.port_a.T;
//   TC2.port_a.Q_flow + T2.heatPort.Q_flow = 0.0;
//   T2.heatPort.T = TC2.port_a.T;
//   TC2.port_b.Q_flow + (TC1.port_b.Q_flow + HeatCapacitor1.port.Q_flow) = 0.0;
//   HeatCapacitor1.port.T = TC1.port_b.T;
//   HeatCapacitor1.port.T = TC2.port_b.T;
//   T2.C.i + (C2.p.i + (RI.p.i + T1.C.i)) = 0.0;
//   C2.p.v = RI.p.v;
//   C2.p.v = T1.C.v;
//   C2.p.v = T2.C.v;
//   T2.E.i + Gnd4.p.i = 0.0;
//   Gnd4.p.v = T2.E.v;
//   T2.B.i + (C3.p.i + R2.n.i) = 0.0;
//   C3.p.v = R2.n.v;
//   C3.p.v = T2.B.v;
//   T1.E.i + Gnd3.p.i = 0.0;
//   Gnd3.p.v = T1.E.v;
//   T1.B.i + (C1.p.i + R1.n.i) = 0.0;
//   C1.p.v = R1.n.v;
//   C1.p.v = T1.B.v;
//   Gnd5.p.i + C3.n.i = 0.0;
//   C3.n.v = Gnd5.p.v;
//   Gnd6.p.i + C2.n.i = 0.0;
//   C2.n.v = Gnd6.p.v;
//   Gnd7.p.i + C1.n.i = 0.0;
//   C1.n.v = Gnd7.p.v;
//   Gnd2.p.i + V2.n.i = 0.0;
//   Gnd2.p.v = V2.n.v;
//   V2.p.i + R2.p.i = 0.0;
//   R2.p.v = V2.p.v;
//   Gnd.p.i + V.n.i = 0.0;
//   Gnd.p.v = V.n.v;
//   RI.n.i + V.p.i = 0.0;
//   RI.n.v = V.p.v;
//   V1.p.i + R1.p.i = 0.0;
//   R1.p.v = V1.p.v;
//   Gnd1.p.i + V1.n.i = 0.0;
//   Gnd1.p.v = V1.n.v;
// end Modelica.Electrical.Analog.Examples.HeatingNPN_OrGate;
// "
// ""
// "Check of Modelica.Electrical.Analog.Examples.HeatingNPN_OrGate completed successfully.
// 
// 
// Class Modelica.Electrical.Analog.Examples.HeatingNPN_OrGate has 158 equation(s) and 158 variable(s).
// 76 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.HeatingNPN_OrGate_res.mat",
//     messages = "Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 155) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000001, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000001, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000001, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000001, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000001, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000001, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000001, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000002, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000002, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000002, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000002, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000002, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000002, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000002, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000004, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000004, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000004, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000004, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000004, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000004, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000004, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000008, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000008, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000008, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000008, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000008, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000008, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000008, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000015, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000015, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000015, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000015, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000015, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000015, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000015, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000031, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000031, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000031, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000031, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000031, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000031, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000031, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000061, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000061, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000061, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000061, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000061, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000061, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000061, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000122, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000122, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000122, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000122, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000122, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000122, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000122, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000244, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000244, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000244, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000244, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000244, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000244, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000244, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000488, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000488, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000488, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000488, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000488, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000488, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000488, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000977, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000977, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000977, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000977, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000977, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000977, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.000977, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.001953, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.001953, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.001953, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.001953, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.001953, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.001000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.001000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.001000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.001953, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.001953, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.003906, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.003906, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.003906, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.003906, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.003906, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.002000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.002000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.002000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.003000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.003000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.003000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.003906, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.003906, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.007812, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.007812, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.007812, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.007812, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.007812, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.004000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.004000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.004000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.005000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.005000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.005000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.006000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.006000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.006000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.007000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.007000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.007000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.007812, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.007812, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.015625, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.015625, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.015625, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.015625, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.015625, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.008000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.008000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.008000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.009000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.009000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.009000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.010000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.010000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.010000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.011000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.011000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.011000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.012000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.012000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.012000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.013000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.013000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.013000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.014000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.014000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.014000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.015000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.015000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.015000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.015625, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.015625, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.031250, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.031250, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.031250, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.031250, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.031250, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.016000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.016000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.016000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.017000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.017000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.017000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.018000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.018000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.018000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.019000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.019000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.019000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.020000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.020000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.020000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.021000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.021000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.021000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.022000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.022000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.022000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.023000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.023000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.023000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.024000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.024000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.024000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.025000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.025000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.025000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.026000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.026000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.026000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.027000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.027000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.027000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.028000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.028000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.028000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.029000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.029000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.029000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.030000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.030000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.030000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.031000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.031000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.031000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.031250, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.031250, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.062500, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.062500, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.062500, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.062500, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.062500, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.032000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.032000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.032000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.033000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.033000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.033000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.034000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.034000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.034000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.035000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.035000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.035000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.036000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.036000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.036000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.037000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.037000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.037000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.038000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.038000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.038000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.039000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.039000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.039000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.040000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.040000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.040000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.041000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.041000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.041000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.042000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.042000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.042000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.043000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.043000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.043000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.044000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.044000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.044000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.045000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.045000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.045000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.046000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.046000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.046000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.047000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.047000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.047000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.048000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.048000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.048000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.049000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.049000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.049000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.050000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.050000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.050000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.051000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.051000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.051000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.052000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.052000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.052000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.053000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.053000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.053000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.054000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.054000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.054000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.055000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.055000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.055000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.056000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.056000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.056000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.057000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.057000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.057000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.058000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.058000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.058000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.059000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.059000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.059000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.060000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.060000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.060000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.061000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.061000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.061000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.062000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.062000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.062000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.062500, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.062500, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.125000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.125000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.125000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.125000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.125000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.063000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.063000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.063000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.064000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.064000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.064000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.065000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.065000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.065000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.066000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.066000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.066000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.067000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.067000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.067000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.068000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.068000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.068000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.069000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.069000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.069000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.070000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.070000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.070000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.071000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.071000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.071000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.072000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.072000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.072000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.073000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.073000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.073000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.074000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.074000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.074000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.075000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.075000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.075000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.076000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.076000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.076000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.077000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.077000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.077000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.078000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.078000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.078000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.079000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.079000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.079000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.080000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.080000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.080000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.081000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.081000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.081000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.082000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.082000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.082000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.083000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.083000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.083000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.084000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.084000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.084000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.085000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.085000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.085000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.086000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.086000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.086000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.087000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.087000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.087000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.088000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.088000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.088000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.089000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.089000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.089000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.090000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.090000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.090000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.091000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.091000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.091000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.092000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.092000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.092000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.093000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.093000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.093000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.094000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.094000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.094000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.095000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.095000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.095000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.096000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.096000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.096000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.097000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.097000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.097000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.098000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.098000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.098000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.099000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.099000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.099000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.100000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.100000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.100000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.101000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.101000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.101000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.102000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.102000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.102000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.103000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.103000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.103000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.104000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.104000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.104000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.105000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.105000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.105000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.106000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.106000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.106000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.107000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.107000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.107000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.108000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.108000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.108000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.109000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.109000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.109000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.110000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.110000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.110000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.111000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.111000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.111000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.112000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.112000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.112000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.113000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.113000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.113000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.114000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.114000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.114000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.115000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.115000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.115000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.116000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.116000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.116000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.117000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.117000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.117000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.118000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.118000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.118000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.119000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.119000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.119000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.120000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.120000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.120000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.121000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.121000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.121000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.122000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.122000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.122000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.123000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.123000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.123000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.124000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.124000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.124000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.125000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.125000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.250000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.250000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.250000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.250000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.250000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.125000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.125000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.125000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.126000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.126000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.126000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.127000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.127000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.127000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.128000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.128000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.128000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.129000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.129000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.129000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.130000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.130000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.130000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.131000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.131000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.131000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.132000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.132000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.132000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.133000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.133000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.133000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.134000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.134000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.134000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.135000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.135000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.135000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.136000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.136000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.136000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.137000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.137000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.137000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.138000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.138000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.138000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.139000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.139000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.139000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.140000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.140000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.140000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.141000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.141000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.141000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.142000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.142000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.142000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.143000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.143000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.143000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.144000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.144000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.144000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.145000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.145000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.145000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.146000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.146000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.146000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.147000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.147000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.147000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.148000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.148000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.148000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.149000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.149000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.149000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.150000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.150000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.150000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.151000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.151000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.151000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.152000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.152000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.152000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.153000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.153000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.153000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.154000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.154000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.154000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.155000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.155000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.155000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.156000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.156000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.156000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.157000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.157000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.157000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.158000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.158000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.158000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.159000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.159000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.159000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.160000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.160000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.160000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.161000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.161000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.161000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.162000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.162000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.162000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.163000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.163000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.163000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.164000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.164000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.164000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.165000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.165000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.165000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.166000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.166000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.166000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.167000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.167000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.167000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.168000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.168000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.168000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.169000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.169000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.169000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.170000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.170000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.170000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.171000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.171000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.171000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.172000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.172000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.172000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.173000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.173000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.173000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.174000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.174000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.174000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.175000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.175000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.175000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.176000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.176000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.176000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.177000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.177000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.177000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.178000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.178000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.178000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.179000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.179000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.179000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.180000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.180000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.180000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.181000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.181000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.181000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.182000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.182000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.182000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.183000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.183000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.183000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.184000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.184000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.184000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.185000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.185000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.185000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.186000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.186000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.186000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.187000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.187000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.187000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.188000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.188000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.188000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.189000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.189000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.189000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.190000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.190000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.190000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.191000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.191000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.191000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.192000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.192000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.192000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.193000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.193000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.193000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.194000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.194000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.194000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.195000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.195000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.195000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.196000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.196000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.196000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.197000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.197000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.197000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.198000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.198000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.198000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.199000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.199000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.199000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.200000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.200000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.200000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.201000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.201000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.201000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.202000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.202000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.202000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.203000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.203000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.203000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.204000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.204000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.204000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.205000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.205000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.205000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.206000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.206000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.206000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.207000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.207000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.207000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.208000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.208000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.208000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.209000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.209000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.209000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.210000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.210000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.210000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.211000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.211000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.211000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.212000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.212000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.212000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.213000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.213000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.213000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.214000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.214000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.214000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.215000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.215000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.215000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.216000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.216000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.216000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.217000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.217000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.217000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.218000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.218000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.218000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.219000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.219000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.219000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.220000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.220000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.220000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.221000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.221000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.221000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.222000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.222000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.222000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.223000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.223000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.223000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.224000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.224000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.224000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.225000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.225000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.225000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.226000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.226000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.226000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.227000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.227000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.227000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.228000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.228000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.228000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.229000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.229000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.229000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.230000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.230000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.230000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.231000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.231000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.231000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.232000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.232000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.232000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.233000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.233000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.233000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.234000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.234000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.234000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.235000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.235000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.235000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.236000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.236000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.236000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.237000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.237000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.237000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.238000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.238000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.238000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.239000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.239000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.239000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.240000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.240000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.240000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.241000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.241000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.241000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.242000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.242000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.242000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.243000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.243000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.243000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.244000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.244000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.244000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.245000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.245000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.245000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.246000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.246000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.246000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.247000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.247000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.247000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.248000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.248000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.248000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.249000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.249000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.249000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.250000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.250000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.500000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.500000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.500000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.500000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.500000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.250000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.250000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.250000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.251000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.251000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.251000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.252000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.252000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.252000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.253000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.253000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.253000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.254000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.254000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.254000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.255000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.255000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.255000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.256000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.256000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.256000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.257000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.257000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.257000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.258000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.258000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.258000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.259000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.259000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.259000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.260000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.260000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.260000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.261000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.261000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.261000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.262000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.262000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.262000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.263000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.263000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.263000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.264000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.264000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.264000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.265000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.265000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.265000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.266000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.266000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.266000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.267000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.267000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.267000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.268000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.268000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.268000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.269000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.269000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.269000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.270000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.270000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.270000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.271000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.271000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.271000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.272000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.272000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.272000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.273000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.273000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.273000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.274000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.274000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.274000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.275000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.275000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.275000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.276000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.276000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.276000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.277000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.277000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.277000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.278000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.278000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.278000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.279000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.279000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.279000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.280000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.280000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.280000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.281000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.281000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.281000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.282000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.282000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.282000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.283000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.283000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.283000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.284000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.284000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.284000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.285000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.285000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.285000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.286000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.286000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.286000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.287000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.287000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.287000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.288000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.288000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.288000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.289000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.289000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.289000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.290000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.290000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.290000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.291000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.291000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.291000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.292000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.292000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.292000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.293000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.293000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.293000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.294000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.294000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.294000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.295000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.295000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.295000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.296000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.296000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.296000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.297000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.297000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.297000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.298000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.298000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.298000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.299000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.299000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.299000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.300000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.300000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.300000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.301000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.301000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.301000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.302000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.302000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.302000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.303000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.303000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.303000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.304000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.304000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.304000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.305000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.305000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.305000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.306000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.306000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.306000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.307000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.307000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.307000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.308000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.308000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.308000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.309000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.309000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.309000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.310000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.310000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.310000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.311000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.311000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.311000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.312000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.312000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.312000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.313000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.313000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.313000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.314000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.314000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.314000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.315000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.315000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.315000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.316000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.316000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.316000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.317000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.317000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.317000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.318000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.318000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.318000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.319000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.319000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.319000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.320000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.320000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.320000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.321000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.321000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.321000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.322000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.322000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.322000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.323000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.323000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.323000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.324000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.324000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.324000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.325000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.325000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.325000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.326000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.326000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.326000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.327000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.327000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.327000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.328000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.328000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.328000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.329000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.329000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.329000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.330000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.330000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.330000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.331000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.331000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.331000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.332000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.332000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.332000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.333000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.333000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.333000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.334000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.334000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.334000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.335000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.335000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.335000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.336000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.336000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.336000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.337000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.337000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.337000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.338000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.338000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.338000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.339000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.339000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.339000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.340000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.340000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.340000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.341000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.341000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.341000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.342000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.342000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.342000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.343000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.343000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.343000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.344000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.344000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.344000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.345000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.345000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.345000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.346000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.346000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.346000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.347000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.347000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.347000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.348000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.348000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.348000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.349000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.349000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.349000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.350000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.350000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.350000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.351000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.351000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.351000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.352000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.352000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.352000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.353000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.353000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.353000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.354000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.354000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.354000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.355000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.355000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.355000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.356000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.356000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.356000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.357000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.357000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.357000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.358000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.358000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.358000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.359000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.359000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.359000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.360000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.360000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.360000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.361000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.361000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.361000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.362000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.362000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.362000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.363000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.363000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.363000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.364000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.364000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.364000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.365000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.365000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.365000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.366000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.366000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.366000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.367000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.367000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.367000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.368000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.368000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.368000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.369000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.369000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.369000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.370000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.370000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.370000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.371000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.371000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.371000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.372000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.372000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.372000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.373000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.373000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.373000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.374000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.374000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.374000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.375000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.375000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.375000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.376000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.376000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.376000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.377000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.377000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.377000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.378000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.378000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.378000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.379000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.379000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.379000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.380000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.380000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.380000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.381000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.381000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.381000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.382000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.382000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.382000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.383000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.383000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.383000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.384000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.384000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.384000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.385000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.385000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.385000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.386000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.386000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.386000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.387000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.387000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.387000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.388000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.388000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.388000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.389000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.389000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.389000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.390000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.390000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.390000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.391000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.391000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.391000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.392000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.392000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.392000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.393000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.393000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.393000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.394000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.394000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.394000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.395000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.395000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.395000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.396000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.396000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.396000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.397000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.397000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.397000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.398000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.398000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.398000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.399000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.399000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.399000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.400000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.400000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.400000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.401000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.401000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.401000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.402000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.402000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.402000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.403000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.403000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.403000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.404000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.404000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.404000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.405000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.405000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.405000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.406000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.406000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.406000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.407000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.407000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.407000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.408000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.408000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.408000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.409000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.409000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.409000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.410000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.410000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.410000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.411000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.411000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.411000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.412000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.412000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.412000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.413000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.413000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.413000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.414000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.414000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.414000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.415000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.415000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.415000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.416000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.416000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.416000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.417000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.417000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.417000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.418000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.418000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.418000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.419000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.419000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.419000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.420000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.420000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.420000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.421000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.421000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.421000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.422000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.422000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.422000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.423000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.423000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.423000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.424000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.424000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.424000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.425000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.425000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.425000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.426000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.426000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.426000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.427000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.427000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.427000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.428000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.428000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.428000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.429000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.429000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.429000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.430000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.430000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.430000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.431000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.431000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.431000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.432000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.432000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.432000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.433000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.433000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.433000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.434000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.434000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.434000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.435000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.435000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.435000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.436000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.436000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.436000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.437000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.437000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.437000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.438000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.438000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.438000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.439000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.439000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.439000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.440000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.440000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.440000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.441000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.441000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.441000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.442000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.442000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.442000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.443000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.443000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.443000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.444000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.444000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.444000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.445000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.445000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.445000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.446000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.446000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.446000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.447000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.447000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.447000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.448000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.448000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.448000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.449000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.449000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.449000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.450000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.450000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.450000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.451000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.451000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.451000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.452000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.452000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.452000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.453000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.453000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.453000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.454000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.454000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.454000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.455000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.455000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.455000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.456000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.456000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.456000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.457000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.457000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.457000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.458000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.458000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.458000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.459000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.459000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.459000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.460000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.460000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.460000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.461000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.461000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.461000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.462000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.462000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.462000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.463000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.463000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.463000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.464000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.464000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.464000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.465000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.465000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.465000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.466000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.466000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.466000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.467000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.467000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.467000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.468000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.468000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.468000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.469000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.469000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.469000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.470000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.470000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.470000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.471000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.471000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.471000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.472000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.472000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.472000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.473000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.473000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.473000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.474000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.474000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.474000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.475000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.475000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.475000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.476000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.476000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.476000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.477000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.477000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.477000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.478000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.478000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.478000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.479000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.479000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.479000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.480000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.480000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.480000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.481000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.481000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.481000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.482000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.482000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.482000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.483000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.483000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.483000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.484000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.484000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.484000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.485000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.485000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.485000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.486000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.486000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.486000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.487000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.487000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.487000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.488000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.488000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.488000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.489000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.489000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.489000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.490000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.490000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.490000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.491000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.491000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.491000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.492000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.492000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.492000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.493000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.493000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.493000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.494000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.494000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.494000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.495000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.495000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.495000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.496000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.496000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.496000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.497000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.497000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.497000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.498000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.498000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.498000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.499000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.499000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.499000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.500000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.500000, system is singular.

// Error sovling linear system of equations (no. 276) at time 1.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 1.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 1.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 1.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 1.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.500000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.500000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.500000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.501000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.501000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.501000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.502000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.502000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.502000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.503000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.503000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.503000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.504000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.504000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.504000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.505000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.505000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.505000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.506000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.506000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.506000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.507000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.507000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.507000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.508000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.508000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.508000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.509000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.509000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.509000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.510000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.510000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.510000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.511000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.511000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.511000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.512000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.512000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.512000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.513000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.513000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.513000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.514000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.514000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.514000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.515000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.515000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.515000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.516000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.516000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.516000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.517000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.517000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.517000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.518000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.518000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.518000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.519000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.519000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.519000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.520000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.520000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.520000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.521000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.521000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.521000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.522000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.522000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.522000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.523000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.523000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.523000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.524000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.524000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.524000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.525000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.525000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.525000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.526000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.526000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.526000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.527000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.527000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.527000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.528000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.528000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.528000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.529000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.529000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.529000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.530000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.530000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.530000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.531000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.531000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.531000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.532000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.532000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.532000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.533000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.533000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.533000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.534000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.534000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.534000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.535000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.535000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.535000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.536000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.536000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.536000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.537000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.537000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.537000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.538000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.538000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.538000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.539000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.539000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.539000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.540000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.540000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.540000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.541000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.541000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.541000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.542000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.542000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.542000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.543000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.543000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.543000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.544000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.544000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.544000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.545000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.545000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.545000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.546000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.546000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.546000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.547000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.547000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.547000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.548000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.548000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.548000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.549000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.549000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.549000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.550000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.550000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.550000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.551000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.551000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.551000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.552000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.552000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.552000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.553000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.553000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.553000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.554000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.554000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.554000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.555000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.555000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.555000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.556000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.556000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.556000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.557000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.557000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.557000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.558000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.558000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.558000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.559000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.559000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.559000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.560000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.560000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.560000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.561000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.561000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.561000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.562000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.562000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.562000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.563000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.563000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.563000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.564000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.564000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.564000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.565000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.565000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.565000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.566000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.566000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.566000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.567000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.567000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.567000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.568000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.568000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.568000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.569000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.569000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.569000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.570000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.570000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.570000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.571000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.571000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.571000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.572000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.572000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.572000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.573000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.573000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.573000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.574000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.574000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.574000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.575000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.575000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.575000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.576000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.576000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.576000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.577000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.577000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.577000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.578000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.578000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.578000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.579000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.579000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.579000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.580000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.580000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.580000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.581000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.581000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.581000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.582000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.582000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.582000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.583000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.583000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.583000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.584000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.584000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.584000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.585000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.585000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.585000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.586000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.586000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.586000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.587000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.587000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.587000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.588000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.588000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.588000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.589000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.589000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.589000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.590000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.590000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.590000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.591000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.591000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.591000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.592000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.592000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.592000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.593000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.593000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.593000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.594000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.594000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.594000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.595000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.595000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.595000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.596000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.596000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.596000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.597000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.597000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.597000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.598000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.598000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.598000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.599000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.599000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.599000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.600000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.600000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.600000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.601000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.601000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.601000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.602000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.602000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.602000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.603000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.603000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.603000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.604000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.604000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.604000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.605000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.605000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.605000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.606000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.606000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.606000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.607000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.607000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.607000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.608000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.608000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.608000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.609000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.609000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.609000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.610000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.610000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.610000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.611000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.611000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.611000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.612000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.612000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.612000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.613000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.613000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.613000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.614000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.614000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.614000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.615000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.615000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.615000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.616000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.616000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.616000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.617000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.617000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.617000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.618000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.618000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.618000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.619000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.619000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.619000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.620000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.620000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.620000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.621000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.621000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.621000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.622000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.622000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.622000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.623000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.623000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.623000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.624000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.624000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.624000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.625000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.625000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.625000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.626000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.626000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.626000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.627000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.627000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.627000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.628000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.628000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.628000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.629000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.629000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.629000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.630000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.630000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.630000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.631000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.631000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.631000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.632000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.632000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.632000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.633000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.633000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.633000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.634000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.634000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.634000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.635000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.635000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.635000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.636000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.636000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.636000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.637000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.637000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.637000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.638000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.638000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.638000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.639000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.639000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.639000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.640000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.640000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.640000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.641000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.641000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.641000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.642000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.642000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.642000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.643000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.643000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.643000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.644000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.644000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.644000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.645000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.645000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.645000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.646000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.646000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.646000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.647000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.647000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.647000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.648000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.648000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.648000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.649000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.649000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.649000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.650000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.650000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.650000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.651000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.651000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.651000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.652000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.652000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.652000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.653000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.653000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.653000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.654000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.654000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.654000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.655000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.655000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.655000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.656000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.656000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.656000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.657000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.657000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.657000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.658000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.658000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.658000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.659000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.659000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.659000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.660000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.660000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.660000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.661000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.661000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.661000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.662000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.662000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.662000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.663000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.663000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.663000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.664000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.664000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.664000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.665000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.665000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.665000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.666000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.666000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.666000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.667000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.667000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.667000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.668000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.668000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.668000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.669000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.669000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.669000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.670000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.670000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.670000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.671000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.671000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.671000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.672000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.672000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.672000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.673000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.673000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.673000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.674000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.674000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.674000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.675000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.675000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.675000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.676000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.676000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.676000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.677000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.677000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.677000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.678000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.678000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.678000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.679000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.679000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.679000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.680000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.680000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.680000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.681000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.681000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.681000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.682000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.682000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.682000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.683000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.683000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.683000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.684000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.684000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.684000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.685000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.685000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.685000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.686000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.686000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.686000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.687000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.687000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.687000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.688000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.688000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.688000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.689000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.689000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.689000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.690000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.690000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.690000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.691000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.691000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.691000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.692000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.692000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.692000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.693000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.693000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.693000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.694000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.694000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.694000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.695000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.695000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.695000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.696000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.696000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.696000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.697000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.697000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.697000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.698000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.698000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.698000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.699000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.699000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.699000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.700000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.700000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.700000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.701000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.701000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.701000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.702000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.702000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.702000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.703000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.703000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.703000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.704000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.704000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.704000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.705000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.705000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.705000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.706000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.706000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.706000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.707000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.707000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.707000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.708000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.708000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.708000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.709000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.709000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.709000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.710000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.710000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.710000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.711000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.711000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.711000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.712000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.712000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.712000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.713000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.713000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.713000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.714000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.714000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.714000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.715000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.715000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.715000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.716000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.716000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.716000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.717000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.717000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.717000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.718000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.718000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.718000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.719000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.719000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.719000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.720000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.720000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.720000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.721000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.721000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.721000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.722000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.722000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.722000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.723000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.723000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.723000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.724000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.724000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.724000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.725000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.725000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.725000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.726000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.726000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.726000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.727000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.727000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.727000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.728000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.728000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.728000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.729000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.729000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.729000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.730000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.730000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.730000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.731000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.731000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.731000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.732000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.732000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.732000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.733000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.733000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.733000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.734000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.734000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.734000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.735000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.735000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.735000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.736000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.736000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.736000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.737000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.737000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.737000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.738000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.738000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.738000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.739000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.739000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.739000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.740000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.740000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.740000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.741000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.741000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.741000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.742000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.742000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.742000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.743000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.743000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.743000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.744000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.744000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.744000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.745000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.745000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.745000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.746000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.746000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.746000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.747000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.747000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.747000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.748000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.748000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.748000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.749000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.749000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.749000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.750000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.750000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.750000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.751000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.751000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.751000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.752000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.752000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.752000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.753000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.753000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.753000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.754000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.754000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.754000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.755000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.755000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.755000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.756000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.756000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.756000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.757000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.757000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.757000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.758000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.758000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.758000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.759000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.759000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.759000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.760000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.760000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.760000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.761000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.761000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.761000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.762000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.762000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.762000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.763000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.763000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.763000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.764000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.764000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.764000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.765000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.765000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.765000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.766000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.766000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.766000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.767000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.767000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.767000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.768000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.768000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.768000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.769000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.769000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.769000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.770000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.770000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.770000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.771000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.771000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.771000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.772000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.772000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.772000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.773000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.773000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.773000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.774000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.774000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.774000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.775000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.775000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.775000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.776000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.776000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.776000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.777000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.777000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.777000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.778000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.778000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.778000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.779000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.779000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.779000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.780000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.780000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.780000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.781000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.781000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.781000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.782000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.782000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.782000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.783000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.783000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.783000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.784000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.784000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.784000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.785000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.785000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.785000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.786000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.786000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.786000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.787000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.787000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.787000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.788000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.788000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.788000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.789000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.789000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.789000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.790000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.790000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.790000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.791000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.791000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.791000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.792000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.792000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.792000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.793000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.793000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.793000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.794000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.794000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.794000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.795000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.795000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.795000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.796000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.796000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.796000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.797000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.797000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.797000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.798000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.798000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.798000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.799000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.799000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.799000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.800000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.800000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.800000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.801000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.801000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.801000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.802000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.802000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.802000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.803000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.803000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.803000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.804000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.804000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.804000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.805000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.805000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.805000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.806000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.806000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.806000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.807000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.807000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.807000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.808000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.808000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.808000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.809000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.809000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.809000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.810000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.810000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.810000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.811000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.811000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.811000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.812000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.812000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.812000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.813000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.813000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.813000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.814000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.814000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.814000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.815000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.815000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.815000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.816000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.816000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.816000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.817000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.817000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.817000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.818000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.818000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.818000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.819000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.819000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.819000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.820000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.820000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.820000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.821000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.821000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.821000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.822000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.822000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.822000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.823000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.823000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.823000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.824000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.824000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.824000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.825000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.825000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.825000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.826000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.826000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.826000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.827000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.827000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.827000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.828000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.828000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.828000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.829000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.829000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.829000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.830000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.830000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.830000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.831000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.831000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.831000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.832000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.832000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.832000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.833000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.833000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.833000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.834000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.834000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.834000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.835000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.835000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.835000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.836000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.836000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.836000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.837000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.837000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.837000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.838000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.838000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.838000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.839000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.839000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.839000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.840000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.840000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.840000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.841000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.841000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.841000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.842000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.842000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.842000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.843000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.843000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.843000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.844000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.844000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.844000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.845000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.845000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.845000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.846000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.846000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.846000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.847000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.847000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.847000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.848000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.848000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.848000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.849000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.849000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.849000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.850000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.850000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.850000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.851000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.851000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.851000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.852000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.852000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.852000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.853000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.853000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.853000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.854000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.854000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.854000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.855000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.855000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.855000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.856000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.856000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.856000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.857000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.857000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.857000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.858000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.858000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.858000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.859000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.859000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.859000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.860000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.860000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.860000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.861000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.861000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.861000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.862000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.862000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.862000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.863000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.863000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.863000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.864000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.864000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.864000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.865000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.865000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.865000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.866000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.866000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.866000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.867000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.867000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.867000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.868000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.868000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.868000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.869000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.869000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.869000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.870000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.870000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.870000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.871000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.871000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.871000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.872000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.872000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.872000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.873000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.873000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.873000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.874000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.874000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.874000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.875000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.875000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.875000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.876000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.876000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.876000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.877000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.877000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.877000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.878000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.878000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.878000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.879000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.879000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.879000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.880000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.880000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.880000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.881000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.881000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.881000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.882000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.882000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.882000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.883000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.883000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.883000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.884000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.884000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.884000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.885000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.885000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.885000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.886000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.886000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.886000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.887000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.887000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.887000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.888000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.888000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.888000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.889000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.889000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.889000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.890000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.890000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.890000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.891000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.891000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.891000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.892000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.892000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.892000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.893000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.893000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.893000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.894000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.894000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.894000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.895000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.895000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.895000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.896000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.896000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.896000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.897000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.897000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.897000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.898000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.898000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.898000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.899000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.899000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.899000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.900000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.900000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.900000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.901000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.901000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.901000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.902000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.902000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.902000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.903000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.903000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.903000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.904000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.904000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.904000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.905000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.905000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.905000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.906000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.906000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.906000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.907000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.907000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.907000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.908000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.908000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.908000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.909000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.909000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.909000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.910000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.910000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.910000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.911000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.911000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.911000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.912000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.912000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.912000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.913000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.913000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.913000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.914000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.914000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.914000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.915000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.915000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.915000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.916000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.916000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.916000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.917000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.917000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.917000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.918000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.918000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.918000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.919000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.919000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.919000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.920000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.920000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.920000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.921000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.921000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.921000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.922000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.922000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.922000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.923000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.923000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.923000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.924000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.924000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.924000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.925000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.925000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.925000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.926000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.926000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.926000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.927000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.927000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.927000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.928000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.928000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.928000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.929000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.929000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.929000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.930000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.930000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.930000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.931000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.931000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.931000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.932000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.932000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.932000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.933000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.933000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.933000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.934000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.934000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.934000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.935000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.935000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.935000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.936000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.936000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.936000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.937000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.937000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.937000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.938000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.938000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.938000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.939000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.939000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.939000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.940000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.940000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.940000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.941000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.941000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.941000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.942000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.942000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.942000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.943000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.943000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.943000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.944000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.944000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.944000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.945000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.945000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.945000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.946000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.946000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.946000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.947000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.947000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.947000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.948000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.948000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.948000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.949000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.949000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.949000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.950000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.950000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.950000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.951000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.951000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.951000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.952000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.952000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.952000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.953000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.953000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.953000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.954000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.954000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.954000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.955000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.955000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.955000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.956000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.956000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.956000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.957000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.957000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.957000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.958000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.958000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.958000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.959000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.959000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.959000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.960000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.960000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.960000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.961000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.961000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.961000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.962000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.962000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.962000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.963000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.963000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.963000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.964000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.964000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.964000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.965000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.965000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.965000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.966000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.966000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.966000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.967000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.967000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.967000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.968000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.968000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.968000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.969000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.969000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.969000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.970000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.970000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.970000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.971000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.971000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.971000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.972000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.972000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.972000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.973000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.973000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.973000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.974000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.974000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.974000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.975000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.975000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.975000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.976000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.976000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.976000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.977000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.977000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.977000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.978000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.978000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.978000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.979000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.979000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.979000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.980000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.980000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.980000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.981000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.981000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.981000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.982000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.982000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.982000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.983000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.983000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.983000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.984000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.984000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.984000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.985000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.985000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.985000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.986000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.986000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.986000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.987000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.987000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.987000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.988000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.988000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.988000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.989000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.989000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.989000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.990000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.990000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.990000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.991000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.991000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.991000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.992000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.992000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.992000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.993000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.993000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.993000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.994000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.994000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.994000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.995000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.995000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.995000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.996000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.996000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.996000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.997000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.997000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.997000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.998000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.998000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.998000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.999000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.999000, system is singular.

// Error sovling linear system of equations (no. 276) at time 0.999000, system is singular.

// Error sovling linear system of equations (no. 276) at time 1.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 1.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 2.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 2.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 2.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 2.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 2.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 1.000000, system is singular.

// Error sovling linear system of equations (no. 276) at time 1.000000, system is singular.

// ERROR: Division by zero in partial equation: T2.ibe / T2.bf_t because T2.bf_t == 0.

// "
// end SimulationResult;
// ""
// "function Modelica.Electrical.Analog.Semiconductors.exlin
//   input Real x;
//   input Real Maxexp;
//   output Real z;
// algorithm
//   z := if x > Maxexp then exp(Maxexp) * (1.0 + x - Maxexp) else exp(x);
// end Modelica.Electrical.Analog.Semiconductors.exlin;
// 
// function Modelica.Electrical.Analog.Semiconductors.pow
//   input Real x;
//   input Real y;
//   output Real z;
// algorithm
//   z := x ^ y;
// end Modelica.Electrical.Analog.Semiconductors.pow;
// 
// function Modelica.Math.asin
//   input Real u;
//   output Real y(quantity = "Angle", unit = "rad", displayUnit = "deg");
// 
// external "C";
// end Modelica.Math.asin;
// 
// function Modelica.Math.sin
//   input Real u(quantity = "Angle", unit = "rad", displayUnit = "deg");
//   output Real y;
// 
// external "C";
// end Modelica.Math.sin;
// 
// class Modelica.Electrical.Analog.Examples.HeatingRectifier
//   Real HeatingDiode1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real HeatingDiode1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real HeatingDiode1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real HeatingDiode1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real HeatingDiode1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real HeatingDiode1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean HeatingDiode1.useHeatPort = true "=true, if HeatPort is enabled";
//   parameter Real HeatingDiode1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real HeatingDiode1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real HeatingDiode1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real HeatingDiode1.Ids(quantity = "ElectricCurrent", unit = "A") = 1e-06 "Saturation current";
//   parameter Real HeatingDiode1.Maxexp(min = 1e-60) = 15.0 "Max. exponent for linear continuation";
//   parameter Real HeatingDiode1.R(quantity = "Resistance", unit = "Ohm") = 100000000.0 "Parallel ohmic resistance";
//   parameter Real HeatingDiode1.EG = 1.11 "activation energy";
//   parameter Real HeatingDiode1.N = 1.0 "Emission coefficient";
//   parameter Real HeatingDiode1.TNOM(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Parameter measurement temperature";
//   parameter Real HeatingDiode1.XTI = 3.0 "Temperature exponent of saturation current";
//   Real HeatingDiode1.vt_t(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature voltage";
//   Real HeatingDiode1.id(quantity = "ElectricCurrent", unit = "A") "diode current";
//   protected Real HeatingDiode1.k = 1.380662e-23 "Boltzmann's constant, J/K";
//   protected Real HeatingDiode1.q = 1.6021892e-19 "Electron charge, As";
//   protected Real HeatingDiode1.htemp(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "auxiliary temperature";
//   protected Real HeatingDiode1.aux;
//   protected Real HeatingDiode1.auxp;
//   protected Real HeatingDiode1.maxexp = exp(HeatingDiode1.Maxexp);
//   Real HeatingDiode1.heatPort.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0, start = HeatingDiode1.T) = HeatingDiode1.T_heatPort "Port temperature";
//   Real HeatingDiode1.heatPort.Q_flow(quantity = "Power", unit = "W") = -HeatingDiode1.LossPower "Heat flow rate (positive if flowing from outside into the component)";
//   Real G.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real G.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real SineVoltage1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real SineVoltage1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real SineVoltage1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SineVoltage1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real SineVoltage1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SineVoltage1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real SineVoltage1.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real SineVoltage1.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real SineVoltage1.signalSource.y "Connector of Real output signal";
//   parameter Real SineVoltage1.signalSource.amplitude = SineVoltage1.V "Amplitude of sine wave";
//   parameter Real SineVoltage1.signalSource.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = SineVoltage1.freqHz "Frequency of sine wave";
//   parameter Real SineVoltage1.signalSource.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = SineVoltage1.phase "Phase of sine wave";
//   parameter Real SineVoltage1.signalSource.offset = SineVoltage1.offset "Offset of output signal";
//   parameter Real SineVoltage1.signalSource.startTime(quantity = "Time", unit = "s") = SineVoltage1.startTime "Output = offset for time < startTime";
//   protected constant Real SineVoltage1.signalSource.pi = 3.14159265358979;
//   parameter Real SineVoltage1.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 1.0 "Amplitude of sine wave";
//   parameter Real SineVoltage1.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = 0.0 "Phase of sine wave";
//   parameter Real SineVoltage1.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = 1.0 "Frequency of sine wave";
//   Real Capacitor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Capacitor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Capacitor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Capacitor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Capacitor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Capacitor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real Capacitor1.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = 1.0 "Capacitance";
//   parameter Real HeatCapacitor1.C(quantity = "HeatCapacity", unit = "J/K") = 1.0 "Heat capacity of element (= cp*m)";
//   Real HeatCapacitor1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0, start = 293.15) "Temperature of element";
//   Real HeatCapacitor1.der_T(quantity = "TemperatureSlope", unit = "K/s", start = 0.0) "Time derivative of temperature (= der(T))";
//   Real HeatCapacitor1.port.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Port temperature";
//   Real HeatCapacitor1.port.Q_flow(quantity = "Power", unit = "W") "Heat flow rate (positive if flowing from outside into the component)";
//   Real ThermalConductor1.Q_flow(quantity = "Power", unit = "W") "Heat flow rate from port_a -> port_b";
//   Real ThermalConductor1.dT(quantity = "ThermodynamicTemperature", unit = "K") "port_a.T - port_b.T";
//   Real ThermalConductor1.port_a.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Port temperature";
//   Real ThermalConductor1.port_a.Q_flow(quantity = "Power", unit = "W") "Heat flow rate (positive if flowing from outside into the component)";
//   Real ThermalConductor1.port_b.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Port temperature";
//   Real ThermalConductor1.port_b.Q_flow(quantity = "Power", unit = "W") "Heat flow rate (positive if flowing from outside into the component)";
//   parameter Real ThermalConductor1.G(quantity = "ThermalConductance", unit = "W/K") = 10.0 "Constant thermal conductance of material";
//   Real R.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 1.0 "Resistance at temperature T_ref";
//   parameter Real R.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
// equation
//   assert(HeatingDiode1.T_heatPort > 0.0,"temperature must be positive");
//   HeatingDiode1.htemp = HeatingDiode1.T_heatPort;
//   HeatingDiode1.vt_t = HeatingDiode1.k * HeatingDiode1.htemp / HeatingDiode1.q;
//   HeatingDiode1.id = Modelica.Electrical.Analog.Semiconductors.exlin(HeatingDiode1.v / (HeatingDiode1.vt_t * HeatingDiode1.N),HeatingDiode1.Maxexp) - 1.0;
//   HeatingDiode1.aux = (HeatingDiode1.htemp / HeatingDiode1.TNOM - 1.0) * (HeatingDiode1.EG * 1.0 / HeatingDiode1.vt_t / HeatingDiode1.N);
//   HeatingDiode1.auxp = exp(HeatingDiode1.aux);
//   HeatingDiode1.i = HeatingDiode1.Ids * (HeatingDiode1.id * (Modelica.Electrical.Analog.Semiconductors.pow(HeatingDiode1.htemp / HeatingDiode1.TNOM,HeatingDiode1.XTI / HeatingDiode1.N) * HeatingDiode1.auxp)) + HeatingDiode1.v / HeatingDiode1.R;
//   HeatingDiode1.LossPower = HeatingDiode1.i * HeatingDiode1.v;
//   HeatingDiode1.i = HeatingDiode1.p.i;
//   0.0 = HeatingDiode1.p.i + HeatingDiode1.n.i;
//   HeatingDiode1.v = HeatingDiode1.p.v - HeatingDiode1.n.v;
//   G.p.v = 0.0;
//   SineVoltage1.signalSource.y = SineVoltage1.signalSource.offset + (if time < SineVoltage1.signalSource.startTime then 0.0 else SineVoltage1.signalSource.amplitude * Modelica.Math.sin(6.28318530717959 * (SineVoltage1.signalSource.freqHz * (time - SineVoltage1.signalSource.startTime)) + SineVoltage1.signalSource.phase));
//   SineVoltage1.v = SineVoltage1.signalSource.y;
//   SineVoltage1.v = SineVoltage1.p.v - SineVoltage1.n.v;
//   0.0 = SineVoltage1.p.i + SineVoltage1.n.i;
//   SineVoltage1.i = SineVoltage1.p.i;
//   Capacitor1.i = Capacitor1.C * der(Capacitor1.v);
//   Capacitor1.v = Capacitor1.p.v - Capacitor1.n.v;
//   0.0 = Capacitor1.p.i + Capacitor1.n.i;
//   Capacitor1.i = Capacitor1.p.i;
//   HeatCapacitor1.T = HeatCapacitor1.port.T;
//   HeatCapacitor1.der_T = der(HeatCapacitor1.T);
//   HeatCapacitor1.C * der(HeatCapacitor1.T) = HeatCapacitor1.port.Q_flow;
//   ThermalConductor1.Q_flow = ThermalConductor1.G * ThermalConductor1.dT;
//   ThermalConductor1.dT = ThermalConductor1.port_a.T - ThermalConductor1.port_b.T;
//   ThermalConductor1.port_a.Q_flow = ThermalConductor1.Q_flow;
//   ThermalConductor1.port_b.Q_flow = -ThermalConductor1.Q_flow;
//   assert(1.0 + R.alpha * (R.T_heatPort - R.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R.R_actual = R.R * (1.0 + R.alpha * (R.T_heatPort - R.T_ref));
//   R.v = R.R_actual * R.i;
//   R.LossPower = R.v * R.i;
//   R.i = R.p.i;
//   0.0 = R.p.i + R.n.i;
//   R.v = R.p.v - R.n.v;
//   R.T_heatPort = R.T;
//   R.n.i + (Capacitor1.n.i + (SineVoltage1.n.i + G.p.i)) = 0.0;
//   Capacitor1.n.v = G.p.v;
//   Capacitor1.n.v = R.n.v;
//   Capacitor1.n.v = SineVoltage1.n.v;
//   R.p.i + (HeatingDiode1.n.i + Capacitor1.p.i) = 0.0;
//   Capacitor1.p.v = HeatingDiode1.n.v;
//   Capacitor1.p.v = R.p.v;
//   ThermalConductor1.port_b.Q_flow + HeatCapacitor1.port.Q_flow = 0.0;
//   HeatCapacitor1.port.T = ThermalConductor1.port_b.T;
//   HeatingDiode1.heatPort.Q_flow + ThermalConductor1.port_a.Q_flow = 0.0;
//   HeatingDiode1.heatPort.T = ThermalConductor1.port_a.T;
//   SineVoltage1.p.i + HeatingDiode1.p.i = 0.0;
//   HeatingDiode1.p.v = SineVoltage1.p.v;
// end Modelica.Electrical.Analog.Examples.HeatingRectifier;
// "
// ""
// "Check of Modelica.Electrical.Analog.Examples.HeatingRectifier completed successfully.
// 
// 
// Class Modelica.Electrical.Analog.Examples.HeatingRectifier has 52 equation(s) and 52 variable(s).
// 30 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.HeatingRectifier_res.mat",
//     messages = "ERROR: Division by zero in partial equation: HeatingDiode1.v / (HeatingDiode1.vt_t * HeatingDiode1.N) because HeatingDiode1.vt_t * HeatingDiode1.N == 0.

// "
// end SimulationResult;
// ""
// "function Modelica.Math.asin
//   input Real u;
//   output Real y(quantity = "Angle", unit = "rad", displayUnit = "deg");
// 
// external "C";
// end Modelica.Math.asin;
// 
// function Modelica.Math.sin
//   input Real u(quantity = "Angle", unit = "rad", displayUnit = "deg");
//   output Real y;
// 
// external "C";
// end Modelica.Math.sin;
// 
// function Modelica.SIunits.Conversions.from_degC
//   input Real Celsius(quantity = "ThermodynamicTemperature", unit = "degC") "Celsius value";
//   output Real Kelvin(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Kelvin value";
// algorithm
//   Kelvin := Celsius - -273.15;
// end Modelica.SIunits.Conversions.from_degC;
// 
// class Modelica.Electrical.Analog.Examples.HeatingResistor
//   Real heatingResistor.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real heatingResistor.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real heatingResistor.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real heatingResistor.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real heatingResistor.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real heatingResistor.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean heatingResistor.useHeatPort = true "=true, if HeatPort is enabled";
//   parameter Real heatingResistor.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = heatingResistor.T_ref "Fixed device temperature if useHeatPort = false";
//   Real heatingResistor.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real heatingResistor.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real heatingResistor.R_ref(quantity = "Resistance", unit = "Ohm", start = 1.0) = 100.0 "Resistance at temperature T_ref";
//   parameter Real heatingResistor.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Reference temperature";
//   parameter Real heatingResistor.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.001 "Temperature coefficient of resistance (R = R_ref*(1 + alpha*(T_heatPort - T_ref))";
//   Real heatingResistor.R(quantity = "Resistance", unit = "Ohm") "Resistance = R_ref*(1 + alpha*(T_heatPort - T_ref))";
//   Real heatingResistor.heatPort.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0, start = heatingResistor.T) = heatingResistor.T_heatPort "Port temperature";
//   Real heatingResistor.heatPort.Q_flow(quantity = "Power", unit = "W") = -heatingResistor.LossPower "Heat flow rate (positive if flowing from outside into the component)";
//   Real G.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real G.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real SineVoltage1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real SineVoltage1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real SineVoltage1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SineVoltage1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real SineVoltage1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SineVoltage1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real SineVoltage1.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real SineVoltage1.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real SineVoltage1.signalSource.y "Connector of Real output signal";
//   parameter Real SineVoltage1.signalSource.amplitude = SineVoltage1.V "Amplitude of sine wave";
//   parameter Real SineVoltage1.signalSource.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = SineVoltage1.freqHz "Frequency of sine wave";
//   parameter Real SineVoltage1.signalSource.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = SineVoltage1.phase "Phase of sine wave";
//   parameter Real SineVoltage1.signalSource.offset = SineVoltage1.offset "Offset of output signal";
//   parameter Real SineVoltage1.signalSource.startTime(quantity = "Time", unit = "s") = SineVoltage1.startTime "Output = offset for time < startTime";
//   protected constant Real SineVoltage1.signalSource.pi = 3.14159265358979;
//   parameter Real SineVoltage1.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 220.0 "Amplitude of sine wave";
//   parameter Real SineVoltage1.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = 0.0 "Phase of sine wave";
//   parameter Real SineVoltage1.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = 1.0 "Frequency of sine wave";
//   Real thermalConductor.Q_flow(quantity = "Power", unit = "W") "Heat flow rate from port_a -> port_b";
//   Real thermalConductor.dT(quantity = "ThermodynamicTemperature", unit = "K") "port_a.T - port_b.T";
//   Real thermalConductor.port_a.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Port temperature";
//   Real thermalConductor.port_a.Q_flow(quantity = "Power", unit = "W") "Heat flow rate (positive if flowing from outside into the component)";
//   Real thermalConductor.port_b.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Port temperature";
//   Real thermalConductor.port_b.Q_flow(quantity = "Power", unit = "W") "Heat flow rate (positive if flowing from outside into the component)";
//   parameter Real thermalConductor.G(quantity = "ThermalConductance", unit = "W/K") = 50.0 "Constant thermal conductance of material";
//   parameter Real fixedTemperature.T(quantity = "ThermodynamicTemperature", unit = "degC") = 20.0 "Fixed Temperature at the port";
//   Real fixedTemperature.port.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Port temperature";
//   Real fixedTemperature.port.Q_flow(quantity = "Power", unit = "W") "Heat flow rate (positive if flowing from outside into the component)";
// equation
//   assert(1.0 + heatingResistor.alpha * (heatingResistor.T_heatPort - heatingResistor.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   heatingResistor.R = heatingResistor.R_ref * (1.0 + heatingResistor.alpha * (heatingResistor.T_heatPort - heatingResistor.T_ref));
//   heatingResistor.v = heatingResistor.R * heatingResistor.i;
//   heatingResistor.LossPower = heatingResistor.v * heatingResistor.i;
//   heatingResistor.i = heatingResistor.p.i;
//   0.0 = heatingResistor.p.i + heatingResistor.n.i;
//   heatingResistor.v = heatingResistor.p.v - heatingResistor.n.v;
//   G.p.v = 0.0;
//   SineVoltage1.signalSource.y = SineVoltage1.signalSource.offset + (if time < SineVoltage1.signalSource.startTime then 0.0 else SineVoltage1.signalSource.amplitude * Modelica.Math.sin(6.28318530717959 * (SineVoltage1.signalSource.freqHz * (time - SineVoltage1.signalSource.startTime)) + SineVoltage1.signalSource.phase));
//   SineVoltage1.v = SineVoltage1.signalSource.y;
//   SineVoltage1.v = SineVoltage1.p.v - SineVoltage1.n.v;
//   0.0 = SineVoltage1.p.i + SineVoltage1.n.i;
//   SineVoltage1.i = SineVoltage1.p.i;
//   thermalConductor.Q_flow = thermalConductor.G * thermalConductor.dT;
//   thermalConductor.dT = thermalConductor.port_a.T - thermalConductor.port_b.T;
//   thermalConductor.port_a.Q_flow = thermalConductor.Q_flow;
//   thermalConductor.port_b.Q_flow = -thermalConductor.Q_flow;
//   fixedTemperature.port.T = Modelica.SIunits.Conversions.from_degC(fixedTemperature.T);
//   thermalConductor.port_b.Q_flow + fixedTemperature.port.Q_flow = 0.0;
//   fixedTemperature.port.T = thermalConductor.port_b.T;
//   SineVoltage1.n.i + (G.p.i + heatingResistor.n.i) = 0.0;
//   G.p.v = SineVoltage1.n.v;
//   G.p.v = heatingResistor.n.v;
//   SineVoltage1.p.i + heatingResistor.p.i = 0.0;
//   SineVoltage1.p.v = heatingResistor.p.v;
//   heatingResistor.heatPort.Q_flow + thermalConductor.port_a.Q_flow = 0.0;
//   heatingResistor.heatPort.T = thermalConductor.port_a.T;
// end Modelica.Electrical.Analog.Examples.HeatingResistor;
// "
// ""
// "Check of Modelica.Electrical.Analog.Examples.HeatingResistor completed successfully.
// 
// 
// Class Modelica.Electrical.Analog.Examples.HeatingResistor has 28 equation(s) and 28 variable(s).
// 18 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.HeatingResistor_res.mat",
//     messages = ""
// end SimulationResult;
// ""
// "class Modelica.Electrical.Analog.Examples.NandGate
//   Real VIN1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real VIN1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real VIN1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real VIN1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real VIN1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real VIN1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real VIN1.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real VIN1.startTime(quantity = "Time", unit = "s") = 2e-08 "Time offset";
//   output Real VIN1.signalSource.y "Connector of Real output signal";
//   parameter Real VIN1.signalSource.amplitude = VIN1.V "Amplitude of trapezoid";
//   parameter Real VIN1.signalSource.rising(quantity = "Time", unit = "s", min = 0.0) = VIN1.rising "Rising duration of trapezoid";
//   parameter Real VIN1.signalSource.width(quantity = "Time", unit = "s", min = 0.0) = VIN1.width "Width duration of trapezoid";
//   parameter Real VIN1.signalSource.falling(quantity = "Time", unit = "s", min = 0.0) = VIN1.falling "Falling duration of trapezoid";
//   parameter Real VIN1.signalSource.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = VIN1.period "Time for one period";
//   parameter Integer VIN1.signalSource.nperiod = VIN1.nperiod "Number of periods (< 0 means infinite number of periods)";
//   parameter Real VIN1.signalSource.offset = VIN1.offset "Offset of output signal";
//   parameter Real VIN1.signalSource.startTime(quantity = "Time", unit = "s") = VIN1.startTime "Output = offset for time < startTime";
//   protected parameter Real VIN1.signalSource.T_rising(quantity = "Time", unit = "s") = VIN1.signalSource.rising "End time of rising phase within one period";
//   protected parameter Real VIN1.signalSource.T_width(quantity = "Time", unit = "s") = VIN1.signalSource.T_rising + VIN1.signalSource.width "End time of width phase within one period";
//   protected parameter Real VIN1.signalSource.T_falling(quantity = "Time", unit = "s") = VIN1.signalSource.T_width + VIN1.signalSource.falling "End time of falling phase within one period";
//   protected Real VIN1.signalSource.T0(quantity = "Time", unit = "s", start = VIN1.signalSource.startTime) "Start time of current period";
//   protected Integer VIN1.signalSource.counter(start = VIN1.signalSource.nperiod) "Period counter";
//   protected Integer VIN1.signalSource.counter2(start = VIN1.signalSource.nperiod);
//   parameter Real VIN1.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 3.5 "Amplitude of trapezoid";
//   parameter Real VIN1.rising(quantity = "Time", unit = "s", min = 0.0, start = 0.0) = 1e-09 "Rising duration of trapezoid";
//   parameter Real VIN1.width(quantity = "Time", unit = "s", min = 0.0, start = 0.5) = 1.9e-08 "Width duration of trapezoid";
//   parameter Real VIN1.falling(quantity = "Time", unit = "s", min = 0.0, start = 0.0) = 1e-09 "Falling duration of trapezoid";
//   parameter Real VIN1.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = 4e-08 "Time for one period";
//   parameter Integer VIN1.nperiod(start = -1) "Number of periods (< 0 means infinite number of periods)";
//   Real VIN2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real VIN2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real VIN2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real VIN2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real VIN2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real VIN2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real VIN2.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real VIN2.startTime(quantity = "Time", unit = "s") = 1e-08 "Time offset";
//   output Real VIN2.signalSource.y "Connector of Real output signal";
//   parameter Real VIN2.signalSource.amplitude = VIN2.V "Amplitude of trapezoid";
//   parameter Real VIN2.signalSource.rising(quantity = "Time", unit = "s", min = 0.0) = VIN2.rising "Rising duration of trapezoid";
//   parameter Real VIN2.signalSource.width(quantity = "Time", unit = "s", min = 0.0) = VIN2.width "Width duration of trapezoid";
//   parameter Real VIN2.signalSource.falling(quantity = "Time", unit = "s", min = 0.0) = VIN2.falling "Falling duration of trapezoid";
//   parameter Real VIN2.signalSource.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = VIN2.period "Time for one period";
//   parameter Integer VIN2.signalSource.nperiod = VIN2.nperiod "Number of periods (< 0 means infinite number of periods)";
//   parameter Real VIN2.signalSource.offset = VIN2.offset "Offset of output signal";
//   parameter Real VIN2.signalSource.startTime(quantity = "Time", unit = "s") = VIN2.startTime "Output = offset for time < startTime";
//   protected parameter Real VIN2.signalSource.T_rising(quantity = "Time", unit = "s") = VIN2.signalSource.rising "End time of rising phase within one period";
//   protected parameter Real VIN2.signalSource.T_width(quantity = "Time", unit = "s") = VIN2.signalSource.T_rising + VIN2.signalSource.width "End time of width phase within one period";
//   protected parameter Real VIN2.signalSource.T_falling(quantity = "Time", unit = "s") = VIN2.signalSource.T_width + VIN2.signalSource.falling "End time of falling phase within one period";
//   protected Real VIN2.signalSource.T0(quantity = "Time", unit = "s", start = VIN2.signalSource.startTime) "Start time of current period";
//   protected Integer VIN2.signalSource.counter(start = VIN2.signalSource.nperiod) "Period counter";
//   protected Integer VIN2.signalSource.counter2(start = VIN2.signalSource.nperiod);
//   parameter Real VIN2.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 3.5 "Amplitude of trapezoid";
//   parameter Real VIN2.rising(quantity = "Time", unit = "s", min = 0.0, start = 0.0) = 1e-09 "Rising duration of trapezoid";
//   parameter Real VIN2.width(quantity = "Time", unit = "s", min = 0.0, start = 0.5) = 1.9e-08 "Width duration of trapezoid";
//   parameter Real VIN2.falling(quantity = "Time", unit = "s", min = 0.0, start = 0.0) = 1e-09 "Falling duration of trapezoid";
//   parameter Real VIN2.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = 4e-08 "Time for one period";
//   parameter Integer VIN2.nperiod(start = -1) "Number of periods (< 0 means infinite number of periods)";
//   Real VDD.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real VDD.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real VDD.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real VDD.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real VDD.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real VDD.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real VDD.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real VDD.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real VDD.signalSource.y "Connector of Real output signal";
//   parameter Real VDD.signalSource.height = VDD.V "Height of ramps";
//   parameter Real VDD.signalSource.duration(quantity = "Time", unit = "s", min = 1e-60, start = 2.0) = VDD.duration "Durations of ramp";
//   parameter Real VDD.signalSource.offset = VDD.offset "Offset of output signal";
//   parameter Real VDD.signalSource.startTime(quantity = "Time", unit = "s") = VDD.startTime "Output = offset for time < startTime";
//   parameter Real VDD.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 5.0 "Height of ramp";
//   parameter Real VDD.duration(quantity = "Time", unit = "s", min = 1e-60, start = 2.0) = 1e-09 "Duration of ramp";
//   Real Gnd1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Gnd1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Gnd4.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Gnd4.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Gnd5.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Gnd5.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean Nand.TP1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real Nand.TP1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real Nand.TP1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real Nand.TP1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   Real Nand.TP1.D.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.TP1.D.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.TP1.G.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.TP1.G.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.TP1.S.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.TP1.S.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.TP1.B.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.TP1.B.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real Nand.TP1.W(quantity = "Length", unit = "m") = 6.5e-06 "Width";
//   parameter Real Nand.TP1.L(quantity = "Length", unit = "m") = 3.1e-06 "Length";
//   parameter Real Nand.TP1.Beta(quantity = "Transconductance", unit = "A/V2") = 1.05e-05 "Transconductance parameter";
//   parameter Real Nand.TP1.Vt(quantity = "ElectricPotential", unit = "V") = -1.0 "Zero bias threshold voltage";
//   parameter Real Nand.TP1.K2 = 0.41 "Bulk threshold parameter";
//   parameter Real Nand.TP1.K5 = 0.8385 "Reduction of pinch-off region";
//   parameter Real Nand.TP1.dW(quantity = "Length", unit = "m") = -2.5e-06 "Narrowing of channel";
//   parameter Real Nand.TP1.dL(quantity = "Length", unit = "m") = -2.1e-06 "Shortening of channel";
//   parameter Real Nand.TP1.RDS(quantity = "Resistance", unit = "Ohm") = 10000000.0 "Drain-Source-Resistance";
//   protected Real Nand.TP1.v;
//   protected Real Nand.TP1.uds;
//   protected Real Nand.TP1.ubs;
//   protected Real Nand.TP1.ugst;
//   protected Real Nand.TP1.ud;
//   protected Real Nand.TP1.us;
//   protected Real Nand.TP1.id;
//   protected Real Nand.TP1.gds;
//   parameter Boolean Nand.TP2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real Nand.TP2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real Nand.TP2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real Nand.TP2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   Real Nand.TP2.D.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.TP2.D.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.TP2.G.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.TP2.G.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.TP2.S.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.TP2.S.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.TP2.B.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.TP2.B.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real Nand.TP2.W(quantity = "Length", unit = "m") = 6.5e-06 "Width";
//   parameter Real Nand.TP2.L(quantity = "Length", unit = "m") = 3.1e-06 "Length";
//   parameter Real Nand.TP2.Beta(quantity = "Transconductance", unit = "A/V2") = 1.05e-05 "Transconductance parameter";
//   parameter Real Nand.TP2.Vt(quantity = "ElectricPotential", unit = "V") = -1.0 "Zero bias threshold voltage";
//   parameter Real Nand.TP2.K2 = 0.41 "Bulk threshold parameter";
//   parameter Real Nand.TP2.K5 = 0.8385 "Reduction of pinch-off region";
//   parameter Real Nand.TP2.dW(quantity = "Length", unit = "m") = -2.5e-06 "Narrowing of channel";
//   parameter Real Nand.TP2.dL(quantity = "Length", unit = "m") = -2.1e-06 "Shortening of channel";
//   parameter Real Nand.TP2.RDS(quantity = "Resistance", unit = "Ohm") = 10000000.0 "Drain-Source-Resistance";
//   protected Real Nand.TP2.v;
//   protected Real Nand.TP2.uds;
//   protected Real Nand.TP2.ubs;
//   protected Real Nand.TP2.ugst;
//   protected Real Nand.TP2.ud;
//   protected Real Nand.TP2.us;
//   protected Real Nand.TP2.id;
//   protected Real Nand.TP2.gds;
//   parameter Boolean Nand.TN1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real Nand.TN1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real Nand.TN1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real Nand.TN1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   Real Nand.TN1.D.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.TN1.D.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.TN1.G.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.TN1.G.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.TN1.S.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.TN1.S.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.TN1.B.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.TN1.B.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real Nand.TN1.W(quantity = "Length", unit = "m") = 6.5e-06 "Width";
//   parameter Real Nand.TN1.L(quantity = "Length", unit = "m") = 3.1e-06 "Length";
//   parameter Real Nand.TN1.Beta(quantity = "Transconductance", unit = "A/V2") = 4.1e-05 "Transconductance parameter";
//   parameter Real Nand.TN1.Vt(quantity = "ElectricPotential", unit = "V") = 0.8 "Zero bias threshold voltage";
//   parameter Real Nand.TN1.K2 = 1.144 "Bulk threshold parameter";
//   parameter Real Nand.TN1.K5 = 0.7311 "Reduction of pinch-off region";
//   parameter Real Nand.TN1.dW(quantity = "Length", unit = "m") = -2.5e-06 "narrowing of channel";
//   parameter Real Nand.TN1.dL(quantity = "Length", unit = "m") = -1.5e-06 "shortening of channel";
//   parameter Real Nand.TN1.RDS(quantity = "Resistance", unit = "Ohm") = 10000000.0 "Drain-Source-Resistance";
//   protected Real Nand.TN1.v;
//   protected Real Nand.TN1.uds;
//   protected Real Nand.TN1.ubs;
//   protected Real Nand.TN1.ugst;
//   protected Real Nand.TN1.ud;
//   protected Real Nand.TN1.us;
//   protected Real Nand.TN1.id;
//   protected Real Nand.TN1.gds;
//   parameter Boolean Nand.TN2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real Nand.TN2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real Nand.TN2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real Nand.TN2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   Real Nand.TN2.D.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.TN2.D.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.TN2.G.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.TN2.G.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.TN2.S.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.TN2.S.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.TN2.B.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.TN2.B.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real Nand.TN2.W(quantity = "Length", unit = "m") = 6.5e-06 "Width";
//   parameter Real Nand.TN2.L(quantity = "Length", unit = "m") = 3.1e-06 "Length";
//   parameter Real Nand.TN2.Beta(quantity = "Transconductance", unit = "A/V2") = 4.1e-05 "Transconductance parameter";
//   parameter Real Nand.TN2.Vt(quantity = "ElectricPotential", unit = "V") = 0.8 "Zero bias threshold voltage";
//   parameter Real Nand.TN2.K2 = 1.144 "Bulk threshold parameter";
//   parameter Real Nand.TN2.K5 = 0.7311 "Reduction of pinch-off region";
//   parameter Real Nand.TN2.dW(quantity = "Length", unit = "m") = -2.5e-06 "narrowing of channel";
//   parameter Real Nand.TN2.dL(quantity = "Length", unit = "m") = -1.5e-06 "shortening of channel";
//   parameter Real Nand.TN2.RDS(quantity = "Resistance", unit = "Ohm") = 10000000.0 "Drain-Source-Resistance";
//   protected Real Nand.TN2.v;
//   protected Real Nand.TN2.uds;
//   protected Real Nand.TN2.ubs;
//   protected Real Nand.TN2.ugst;
//   protected Real Nand.TN2.ud;
//   protected Real Nand.TN2.us;
//   protected Real Nand.TN2.id;
//   protected Real Nand.TN2.gds;
//   Real Nand.C4.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Nand.C4.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Nand.C4.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.C4.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.C4.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.C4.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real Nand.C4.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = 4e-14 "Capacitance";
//   Real Nand.C7.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Nand.C7.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Nand.C7.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.C7.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.C7.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.C7.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real Nand.C7.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = 4e-14 "Capacitance";
//   Real Nand.Gnd.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.Gnd.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.Gnd2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.Gnd2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.Gnd3.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.Gnd3.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.Gnd6.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.Gnd6.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.Gnd7.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.Gnd7.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.Gnd8.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.Gnd8.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.x1.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.x1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.x2.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.x2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.Vdd.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.Vdd.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Nand.y.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Nand.y.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
// equation
//   when pre(VIN1.signalSource.counter2) <> 0 AND sample(VIN1.signalSource.startTime,VIN1.signalSource.period) then
//   VIN1.signalSource.T0 = time;
//   VIN1.signalSource.counter2 = pre(VIN1.signalSource.counter);
//   VIN1.signalSource.counter = pre(VIN1.signalSource.counter) - (if pre(VIN1.signalSource.counter) > 0 then 1 else 0);
//   end when;
//   VIN1.signalSource.y = VIN1.signalSource.offset + (if time < VIN1.signalSource.startTime OR VIN1.signalSource.counter2 == 0 OR time >= VIN1.signalSource.T0 + VIN1.signalSource.T_falling then 0.0 else if time < VIN1.signalSource.T0 + VIN1.signalSource.T_rising then ((time - VIN1.signalSource.T0) * VIN1.signalSource.amplitude) / VIN1.signalSource.T_rising else if time < VIN1.signalSource.T0 + VIN1.signalSource.T_width then VIN1.signalSource.amplitude else ((VIN1.signalSource.T0 + VIN1.signalSource.T_falling - time) * VIN1.signalSource.amplitude) / (VIN1.signalSource.T_falling - VIN1.signalSource.T_width));
//   VIN1.v = VIN1.signalSource.y;
//   VIN1.v = VIN1.p.v - VIN1.n.v;
//   0.0 = VIN1.p.i + VIN1.n.i;
//   VIN1.i = VIN1.p.i;
//   when pre(VIN2.signalSource.counter2) <> 0 AND sample(VIN2.signalSource.startTime,VIN2.signalSource.period) then
//   VIN2.signalSource.T0 = time;
//   VIN2.signalSource.counter2 = pre(VIN2.signalSource.counter);
//   VIN2.signalSource.counter = pre(VIN2.signalSource.counter) - (if pre(VIN2.signalSource.counter) > 0 then 1 else 0);
//   end when;
//   VIN2.signalSource.y = VIN2.signalSource.offset + (if time < VIN2.signalSource.startTime OR VIN2.signalSource.counter2 == 0 OR time >= VIN2.signalSource.T0 + VIN2.signalSource.T_falling then 0.0 else if time < VIN2.signalSource.T0 + VIN2.signalSource.T_rising then ((time - VIN2.signalSource.T0) * VIN2.signalSource.amplitude) / VIN2.signalSource.T_rising else if time < VIN2.signalSource.T0 + VIN2.signalSource.T_width then VIN2.signalSource.amplitude else ((VIN2.signalSource.T0 + VIN2.signalSource.T_falling - time) * VIN2.signalSource.amplitude) / (VIN2.signalSource.T_falling - VIN2.signalSource.T_width));
//   VIN2.v = VIN2.signalSource.y;
//   VIN2.v = VIN2.p.v - VIN2.n.v;
//   0.0 = VIN2.p.i + VIN2.n.i;
//   VIN2.i = VIN2.p.i;
//   VDD.signalSource.y = VDD.signalSource.offset + (if time < VDD.signalSource.startTime then 0.0 else if time < VDD.signalSource.startTime + VDD.signalSource.duration then ((time - VDD.signalSource.startTime) * VDD.signalSource.height) / VDD.signalSource.duration else VDD.signalSource.height);
//   VDD.v = VDD.signalSource.y;
//   VDD.v = VDD.p.v - VDD.n.v;
//   0.0 = VDD.p.i + VDD.n.i;
//   VDD.i = VDD.p.i;
//   Gnd1.p.v = 0.0;
//   Gnd4.p.v = 0.0;
//   Gnd5.p.v = 0.0;
//   Nand.TP1.gds = if Nand.TP1.RDS < 1e-20 AND Nand.TP1.RDS > -1e-20 then 1e+20 else 1.0 / Nand.TP1.RDS;
//   Nand.TP1.v = Nand.TP1.Beta * (Nand.TP1.W + Nand.TP1.dW) / (Nand.TP1.L + Nand.TP1.dL);
//   Nand.TP1.ud = if Nand.TP1.D.v > Nand.TP1.S.v then Nand.TP1.S.v else Nand.TP1.D.v;
//   Nand.TP1.us = if Nand.TP1.D.v > Nand.TP1.S.v then Nand.TP1.D.v else Nand.TP1.S.v;
//   Nand.TP1.uds = Nand.TP1.ud - Nand.TP1.us;
//   Nand.TP1.ubs = if Nand.TP1.B.v < Nand.TP1.us then 0.0 else Nand.TP1.B.v - Nand.TP1.us;
//   Nand.TP1.ugst = (Nand.TP1.G.v + (Nand.TP1.K2 * Nand.TP1.ubs + ((-Nand.TP1.Vt) + (-Nand.TP1.us)))) * Nand.TP1.K5;
//   Nand.TP1.id = if Nand.TP1.ugst >= 0.0 then Nand.TP1.uds * Nand.TP1.gds else if Nand.TP1.ugst < Nand.TP1.uds then (-Nand.TP1.v) * (Nand.TP1.uds * (Nand.TP1.ugst - Nand.TP1.uds / 2.0)) + Nand.TP1.uds * Nand.TP1.gds else 0.5 * ((-Nand.TP1.v) * Nand.TP1.ugst ^ 2.0) + Nand.TP1.uds * Nand.TP1.gds;
//   Nand.TP1.G.i = 0.0;
//   Nand.TP1.D.i = if Nand.TP1.D.v > Nand.TP1.S.v then -Nand.TP1.id else Nand.TP1.id;
//   Nand.TP1.S.i = if Nand.TP1.D.v > Nand.TP1.S.v then Nand.TP1.id else -Nand.TP1.id;
//   Nand.TP1.B.i = 0.0;
//   Nand.TP1.LossPower = Nand.TP1.D.i * (Nand.TP1.D.v - Nand.TP1.S.v);
//   Nand.TP1.T_heatPort = Nand.TP1.T;
//   Nand.TP2.gds = if Nand.TP2.RDS < 1e-20 AND Nand.TP2.RDS > -1e-20 then 1e+20 else 1.0 / Nand.TP2.RDS;
//   Nand.TP2.v = Nand.TP2.Beta * (Nand.TP2.W + Nand.TP2.dW) / (Nand.TP2.L + Nand.TP2.dL);
//   Nand.TP2.ud = if Nand.TP2.D.v > Nand.TP2.S.v then Nand.TP2.S.v else Nand.TP2.D.v;
//   Nand.TP2.us = if Nand.TP2.D.v > Nand.TP2.S.v then Nand.TP2.D.v else Nand.TP2.S.v;
//   Nand.TP2.uds = Nand.TP2.ud - Nand.TP2.us;
//   Nand.TP2.ubs = if Nand.TP2.B.v < Nand.TP2.us then 0.0 else Nand.TP2.B.v - Nand.TP2.us;
//   Nand.TP2.ugst = (Nand.TP2.G.v + (Nand.TP2.K2 * Nand.TP2.ubs + ((-Nand.TP2.Vt) + (-Nand.TP2.us)))) * Nand.TP2.K5;
//   Nand.TP2.id = if Nand.TP2.ugst >= 0.0 then Nand.TP2.uds * Nand.TP2.gds else if Nand.TP2.ugst < Nand.TP2.uds then (-Nand.TP2.v) * (Nand.TP2.uds * (Nand.TP2.ugst - Nand.TP2.uds / 2.0)) + Nand.TP2.uds * Nand.TP2.gds else 0.5 * ((-Nand.TP2.v) * Nand.TP2.ugst ^ 2.0) + Nand.TP2.uds * Nand.TP2.gds;
//   Nand.TP2.G.i = 0.0;
//   Nand.TP2.D.i = if Nand.TP2.D.v > Nand.TP2.S.v then -Nand.TP2.id else Nand.TP2.id;
//   Nand.TP2.S.i = if Nand.TP2.D.v > Nand.TP2.S.v then Nand.TP2.id else -Nand.TP2.id;
//   Nand.TP2.B.i = 0.0;
//   Nand.TP2.LossPower = Nand.TP2.D.i * (Nand.TP2.D.v - Nand.TP2.S.v);
//   Nand.TP2.T_heatPort = Nand.TP2.T;
//   Nand.TN1.gds = if Nand.TN1.RDS < 1e-20 AND Nand.TN1.RDS > -1e-20 then 1e+20 else 1.0 / Nand.TN1.RDS;
//   Nand.TN1.v = Nand.TN1.Beta * (Nand.TN1.W + Nand.TN1.dW) / (Nand.TN1.L + Nand.TN1.dL);
//   Nand.TN1.ud = if Nand.TN1.D.v < Nand.TN1.S.v then Nand.TN1.S.v else Nand.TN1.D.v;
//   Nand.TN1.us = if Nand.TN1.D.v < Nand.TN1.S.v then Nand.TN1.D.v else Nand.TN1.S.v;
//   Nand.TN1.uds = Nand.TN1.ud - Nand.TN1.us;
//   Nand.TN1.ubs = if Nand.TN1.B.v > Nand.TN1.us then 0.0 else Nand.TN1.B.v - Nand.TN1.us;
//   Nand.TN1.ugst = (Nand.TN1.G.v + (Nand.TN1.K2 * Nand.TN1.ubs + ((-Nand.TN1.Vt) + (-Nand.TN1.us)))) * Nand.TN1.K5;
//   Nand.TN1.id = if Nand.TN1.ugst <= 0.0 then Nand.TN1.uds * Nand.TN1.gds else if Nand.TN1.ugst > Nand.TN1.uds then Nand.TN1.v * (Nand.TN1.uds * (Nand.TN1.ugst - Nand.TN1.uds / 2.0)) + Nand.TN1.uds * Nand.TN1.gds else 0.5 * (Nand.TN1.v * Nand.TN1.ugst ^ 2.0) + Nand.TN1.uds * Nand.TN1.gds;
//   Nand.TN1.G.i = 0.0;
//   Nand.TN1.D.i = if Nand.TN1.D.v < Nand.TN1.S.v then -Nand.TN1.id else Nand.TN1.id;
//   Nand.TN1.S.i = if Nand.TN1.D.v < Nand.TN1.S.v then Nand.TN1.id else -Nand.TN1.id;
//   Nand.TN1.B.i = 0.0;
//   Nand.TN1.LossPower = Nand.TN1.D.i * (Nand.TN1.D.v - Nand.TN1.S.v);
//   Nand.TN1.T_heatPort = Nand.TN1.T;
//   Nand.TN2.gds = if Nand.TN2.RDS < 1e-20 AND Nand.TN2.RDS > -1e-20 then 1e+20 else 1.0 / Nand.TN2.RDS;
//   Nand.TN2.v = Nand.TN2.Beta * (Nand.TN2.W + Nand.TN2.dW) / (Nand.TN2.L + Nand.TN2.dL);
//   Nand.TN2.ud = if Nand.TN2.D.v < Nand.TN2.S.v then Nand.TN2.S.v else Nand.TN2.D.v;
//   Nand.TN2.us = if Nand.TN2.D.v < Nand.TN2.S.v then Nand.TN2.D.v else Nand.TN2.S.v;
//   Nand.TN2.uds = Nand.TN2.ud - Nand.TN2.us;
//   Nand.TN2.ubs = if Nand.TN2.B.v > Nand.TN2.us then 0.0 else Nand.TN2.B.v - Nand.TN2.us;
//   Nand.TN2.ugst = (Nand.TN2.G.v + (Nand.TN2.K2 * Nand.TN2.ubs + ((-Nand.TN2.Vt) + (-Nand.TN2.us)))) * Nand.TN2.K5;
//   Nand.TN2.id = if Nand.TN2.ugst <= 0.0 then Nand.TN2.uds * Nand.TN2.gds else if Nand.TN2.ugst > Nand.TN2.uds then Nand.TN2.v * (Nand.TN2.uds * (Nand.TN2.ugst - Nand.TN2.uds / 2.0)) + Nand.TN2.uds * Nand.TN2.gds else 0.5 * (Nand.TN2.v * Nand.TN2.ugst ^ 2.0) + Nand.TN2.uds * Nand.TN2.gds;
//   Nand.TN2.G.i = 0.0;
//   Nand.TN2.D.i = if Nand.TN2.D.v < Nand.TN2.S.v then -Nand.TN2.id else Nand.TN2.id;
//   Nand.TN2.S.i = if Nand.TN2.D.v < Nand.TN2.S.v then Nand.TN2.id else -Nand.TN2.id;
//   Nand.TN2.B.i = 0.0;
//   Nand.TN2.LossPower = Nand.TN2.D.i * (Nand.TN2.D.v - Nand.TN2.S.v);
//   Nand.TN2.T_heatPort = Nand.TN2.T;
//   Nand.C4.i = Nand.C4.C * der(Nand.C4.v);
//   Nand.C4.v = Nand.C4.p.v - Nand.C4.n.v;
//   0.0 = Nand.C4.p.i + Nand.C4.n.i;
//   Nand.C4.i = Nand.C4.p.i;
//   Nand.C7.i = Nand.C7.C * der(Nand.C7.v);
//   Nand.C7.v = Nand.C7.p.v - Nand.C7.n.v;
//   0.0 = Nand.C7.p.i + Nand.C7.n.i;
//   Nand.C7.i = Nand.C7.p.i;
//   Nand.Gnd.p.v = 0.0;
//   Nand.Gnd2.p.v = 0.0;
//   Nand.Gnd3.p.v = 0.0;
//   Nand.Gnd6.p.v = 0.0;
//   Nand.Gnd7.p.v = 0.0;
//   Nand.Gnd8.p.v = 0.0;
//   VIN2.p.i + Nand.x2.i = 0.0;
//   Nand.x2.v = VIN2.p.v;
//   VIN1.p.i + Nand.x1.i = 0.0;
//   Nand.x1.v = VIN1.p.v;
//   Nand.Vdd.i + VDD.p.i = 0.0;
//   Nand.Vdd.v = VDD.p.v;
//   VIN2.n.i + Gnd5.p.i = 0.0;
//   Gnd5.p.v = VIN2.n.v;
//   VIN1.n.i + Gnd4.p.i = 0.0;
//   Gnd4.p.v = VIN1.n.v;
//   VDD.n.i + Gnd1.p.i = 0.0;
//   Gnd1.p.v = VDD.n.v;
//   Nand.TP2.S.i + (Nand.TP1.S.i + (Nand.TN1.D.i + (Nand.C4.p.i + (-Nand.y.i)))) = 0.0;
//   Nand.C4.p.v = Nand.TN1.D.v;
//   Nand.C4.p.v = Nand.TP1.S.v;
//   Nand.C4.p.v = Nand.TP2.S.v;
//   Nand.C4.p.v = Nand.y.v;
//   Nand.TP2.D.i + ((-Nand.Vdd.i) + Nand.TP1.D.i) = 0.0;
//   Nand.TP1.D.v = Nand.TP2.D.v;
//   Nand.TP1.D.v = Nand.Vdd.v;
//   Nand.TP1.G.i + (Nand.TN1.G.i + (-Nand.x2.i)) = 0.0;
//   Nand.TN1.G.v = Nand.TP1.G.v;
//   Nand.TN1.G.v = Nand.x2.v;
//   Nand.TP2.G.i + ((-Nand.x1.i) + Nand.TN2.G.i) = 0.0;
//   Nand.TN2.G.v = Nand.TP2.G.v;
//   Nand.TN2.G.v = Nand.x1.v;
//   Nand.TP1.B.i + Nand.Gnd8.p.i = 0.0;
//   Nand.Gnd8.p.v = Nand.TP1.B.v;
//   Nand.TN1.B.i + Nand.Gnd7.p.i = 0.0;
//   Nand.Gnd7.p.v = Nand.TN1.B.v;
//   Nand.TP2.B.i + Nand.Gnd6.p.i = 0.0;
//   Nand.Gnd6.p.v = Nand.TP2.B.v;
//   Nand.C7.n.i + Nand.Gnd3.p.i = 0.0;
//   Nand.C7.n.v = Nand.Gnd3.p.v;
//   Nand.C4.n.i + Nand.Gnd2.p.i = 0.0;
//   Nand.C4.n.v = Nand.Gnd2.p.v;
//   Nand.TN2.S.i + (Nand.TN2.B.i + Nand.Gnd.p.i) = 0.0;
//   Nand.Gnd.p.v = Nand.TN2.B.v;
//   Nand.Gnd.p.v = Nand.TN2.S.v;
//   Nand.TN1.S.i + (Nand.TN2.D.i + Nand.C7.p.i) = 0.0;
//   Nand.C7.p.v = Nand.TN1.S.v;
//   Nand.C7.p.v = Nand.TN2.D.v;
//   Nand.y.i = 0.0;
// end Modelica.Electrical.Analog.Examples.NandGate;
// "
// "[NandGate.mo:40:3-41:35:writable] Warning: Component Nand has the same name as its type Modelica.Electrical.Analog.Examples.NandGate.Utilities.Nand.
// 	This is forbidden by Modelica specification and may lead to lookup errors.
// "
// "Check of Modelica.Electrical.Analog.Examples.NandGate completed successfully.
// 
// [NandGate.mo:40:3-41:35:writable] Warning: Component Nand has the same name as its type Modelica.Electrical.Analog.Examples.NandGate.Utilities.Nand.
// 	This is forbidden by Modelica specification and may lead to lookup errors.
// 
// Class Modelica.Electrical.Analog.Examples.NandGate has 137 equation(s) and 137 variable(s).
// 71 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "",
//     messages = "Simulation failed for model: Modelica.Electrical.Analog.Examples.NandGate
// [NandGate.mo:40:3-41:35:writable] Warning: Component Nand has the same name as its type Modelica.Electrical.Analog.Examples.NandGate.Utilities.Nand.
// 	This is forbidden by Modelica specification and may lead to lookup errors.
// Error: Variable VIN2.nperiod not found in scope <global scope>
// Error: Variable VIN1.nperiod not found in scope <global scope>
// "
// end SimulationResult;
// ""
// "function Modelica.Math.asin
//   input Real u;
//   output Real y(quantity = "Angle", unit = "rad", displayUnit = "deg");
// 
// external "C";
// end Modelica.Math.asin;
// 
// function Modelica.Math.sin
//   input Real u(quantity = "Angle", unit = "rad", displayUnit = "deg");
//   output Real y;
// 
// external "C";
// end Modelica.Math.sin;
// 
// class Modelica.Electrical.Analog.Examples.OvervoltageProtection
//   Real sineVoltage.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real sineVoltage.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real sineVoltage.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real sineVoltage.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real sineVoltage.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real sineVoltage.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real sineVoltage.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real sineVoltage.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real sineVoltage.signalSource.y "Connector of Real output signal";
//   parameter Real sineVoltage.signalSource.amplitude = sineVoltage.V "Amplitude of sine wave";
//   parameter Real sineVoltage.signalSource.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = sineVoltage.freqHz "Frequency of sine wave";
//   parameter Real sineVoltage.signalSource.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = sineVoltage.phase "Phase of sine wave";
//   parameter Real sineVoltage.signalSource.offset = sineVoltage.offset "Offset of output signal";
//   parameter Real sineVoltage.signalSource.startTime(quantity = "Time", unit = "s") = sineVoltage.startTime "Output = offset for time < startTime";
//   protected constant Real sineVoltage.signalSource.pi = 3.14159265358979;
//   parameter Real sineVoltage.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 10.0 "Amplitude of sine wave";
//   parameter Real sineVoltage.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = 0.0 "Phase of sine wave";
//   parameter Real sineVoltage.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = 5.0 "Frequency of sine wave";
//   Real Rv.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Rv.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Rv.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Rv.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Rv.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Rv.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean Rv.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real Rv.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = Rv.T_ref "Fixed device temperature if useHeatPort = false";
//   Real Rv.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real Rv.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real Rv.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 20.0 "Resistance at temperature T_ref";
//   parameter Real Rv.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real Rv.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real Rv.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real RL.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real RL.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real RL.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real RL.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real RL.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real RL.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean RL.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real RL.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = RL.T_ref "Fixed device temperature if useHeatPort = false";
//   Real RL.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real RL.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real RL.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 2000.0 "Resistance at temperature T_ref";
//   parameter Real RL.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real RL.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real RL.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real zDiode_1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real zDiode_1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real zDiode_1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real zDiode_1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real zDiode_1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real zDiode_1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean zDiode_1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real zDiode_1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real zDiode_1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real zDiode_1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real zDiode_1.Ids(quantity = "ElectricCurrent", unit = "A") = 1e-06 "Saturation current";
//   parameter Real zDiode_1.Vt(quantity = "ElectricPotential", unit = "V") = 0.04 "Voltage equivalent of temperature (kT/qn)";
//   parameter Real zDiode_1.Maxexp(min = 1e-60) = 30.0 "Max. exponent for linear continuation";
//   parameter Real zDiode_1.R(quantity = "Resistance", unit = "Ohm") = 100000000.0 "Parallel ohmic resistance";
//   parameter Real zDiode_1.Bv(quantity = "ElectricPotential", unit = "V") = 5.1 "Breakthrough voltage = Zener- or Z-voltage";
//   parameter Real zDiode_1.Ibv(quantity = "ElectricCurrent", unit = "A") = 0.7 "Breakthrough knee current";
//   parameter Real zDiode_1.Nbv = 0.74 "Breakthrough emission coefficient";
//   Real zDiode_2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real zDiode_2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real zDiode_2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real zDiode_2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real zDiode_2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real zDiode_2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean zDiode_2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real zDiode_2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real zDiode_2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real zDiode_2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real zDiode_2.Ids(quantity = "ElectricCurrent", unit = "A") = 1e-06 "Saturation current";
//   parameter Real zDiode_2.Vt(quantity = "ElectricPotential", unit = "V") = 0.04 "Voltage equivalent of temperature (kT/qn)";
//   parameter Real zDiode_2.Maxexp(min = 1e-60) = 30.0 "Max. exponent for linear continuation";
//   parameter Real zDiode_2.R(quantity = "Resistance", unit = "Ohm") = 100000000.0 "Parallel ohmic resistance";
//   parameter Real zDiode_2.Bv(quantity = "ElectricPotential", unit = "V") = 5.1 "Breakthrough voltage = Zener- or Z-voltage";
//   parameter Real zDiode_2.Ibv(quantity = "ElectricCurrent", unit = "A") = 0.7 "Breakthrough knee current";
//   parameter Real zDiode_2.Nbv = 0.74 "Breakthrough emission coefficient";
//   Real ground.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real ground.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real CL.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real CL.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real CL.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real CL.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real CL.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real CL.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real CL.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = 1e-07 "Capacitance";
// equation
//   sineVoltage.signalSource.y = sineVoltage.signalSource.offset + (if time < sineVoltage.signalSource.startTime then 0.0 else sineVoltage.signalSource.amplitude * Modelica.Math.sin(6.28318530717959 * (sineVoltage.signalSource.freqHz * (time - sineVoltage.signalSource.startTime)) + sineVoltage.signalSource.phase));
//   sineVoltage.v = sineVoltage.signalSource.y;
//   sineVoltage.v = sineVoltage.p.v - sineVoltage.n.v;
//   0.0 = sineVoltage.p.i + sineVoltage.n.i;
//   sineVoltage.i = sineVoltage.p.i;
//   assert(1.0 + Rv.alpha * (Rv.T_heatPort - Rv.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   Rv.R_actual = Rv.R * (1.0 + Rv.alpha * (Rv.T_heatPort - Rv.T_ref));
//   Rv.v = Rv.R_actual * Rv.i;
//   Rv.LossPower = Rv.v * Rv.i;
//   Rv.i = Rv.p.i;
//   0.0 = Rv.p.i + Rv.n.i;
//   Rv.v = Rv.p.v - Rv.n.v;
//   Rv.T_heatPort = Rv.T;
//   assert(1.0 + RL.alpha * (RL.T_heatPort - RL.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   RL.R_actual = RL.R * (1.0 + RL.alpha * (RL.T_heatPort - RL.T_ref));
//   RL.v = RL.R_actual * RL.i;
//   RL.LossPower = RL.v * RL.i;
//   RL.i = RL.p.i;
//   0.0 = RL.p.i + RL.n.i;
//   RL.v = RL.p.v - RL.n.v;
//   RL.T_heatPort = RL.T;
//   zDiode_1.i = smooth(1,if zDiode_1.v > zDiode_1.Maxexp * zDiode_1.Vt then zDiode_1.Ids * (exp(zDiode_1.Maxexp) * (1.0 + zDiode_1.v / zDiode_1.Vt - zDiode_1.Maxexp) - 1.0) + zDiode_1.v / zDiode_1.R else if zDiode_1.v + zDiode_1.Bv < (-zDiode_1.Maxexp) * (zDiode_1.Nbv * zDiode_1.Vt) then (-zDiode_1.Ibv) * (exp(zDiode_1.Maxexp) * (1.0 - (zDiode_1.v + zDiode_1.Bv) / (zDiode_1.Nbv * zDiode_1.Vt) - zDiode_1.Maxexp)) + zDiode_1.v / zDiode_1.R - zDiode_1.Ids else zDiode_1.Ids * (exp(zDiode_1.v / zDiode_1.Vt) - 1.0) + ((-zDiode_1.Ibv) * exp(((-zDiode_1.v) - zDiode_1.Bv) / (zDiode_1.Nbv * zDiode_1.Vt)) + zDiode_1.v / zDiode_1.R));
//   zDiode_1.LossPower = zDiode_1.v * zDiode_1.i;
//   zDiode_1.i = zDiode_1.p.i;
//   0.0 = zDiode_1.p.i + zDiode_1.n.i;
//   zDiode_1.v = zDiode_1.p.v - zDiode_1.n.v;
//   zDiode_1.T_heatPort = zDiode_1.T;
//   zDiode_2.i = smooth(1,if zDiode_2.v > zDiode_2.Maxexp * zDiode_2.Vt then zDiode_2.Ids * (exp(zDiode_2.Maxexp) * (1.0 + zDiode_2.v / zDiode_2.Vt - zDiode_2.Maxexp) - 1.0) + zDiode_2.v / zDiode_2.R else if zDiode_2.v + zDiode_2.Bv < (-zDiode_2.Maxexp) * (zDiode_2.Nbv * zDiode_2.Vt) then (-zDiode_2.Ibv) * (exp(zDiode_2.Maxexp) * (1.0 - (zDiode_2.v + zDiode_2.Bv) / (zDiode_2.Nbv * zDiode_2.Vt) - zDiode_2.Maxexp)) + zDiode_2.v / zDiode_2.R - zDiode_2.Ids else zDiode_2.Ids * (exp(zDiode_2.v / zDiode_2.Vt) - 1.0) + ((-zDiode_2.Ibv) * exp(((-zDiode_2.v) - zDiode_2.Bv) / (zDiode_2.Nbv * zDiode_2.Vt)) + zDiode_2.v / zDiode_2.R));
//   zDiode_2.LossPower = zDiode_2.v * zDiode_2.i;
//   zDiode_2.i = zDiode_2.p.i;
//   0.0 = zDiode_2.p.i + zDiode_2.n.i;
//   zDiode_2.v = zDiode_2.p.v - zDiode_2.n.v;
//   zDiode_2.T_heatPort = zDiode_2.T;
//   ground.p.v = 0.0;
//   CL.i = CL.C * der(CL.v);
//   CL.v = CL.p.v - CL.n.v;
//   0.0 = CL.p.i + CL.n.i;
//   CL.i = CL.p.i;
//   ground.p.i + (sineVoltage.n.i + (RL.n.i + (zDiode_1.p.i + CL.n.i))) = 0.0;
//   CL.n.v = RL.n.v;
//   CL.n.v = ground.p.v;
//   CL.n.v = sineVoltage.n.v;
//   CL.n.v = zDiode_1.p.v;
//   RL.p.i + (Rv.n.i + (zDiode_2.p.i + CL.p.i)) = 0.0;
//   CL.p.v = RL.p.v;
//   CL.p.v = Rv.n.v;
//   CL.p.v = zDiode_2.p.v;
//   zDiode_1.n.i + zDiode_2.n.i = 0.0;
//   zDiode_1.n.v = zDiode_2.n.v;
//   sineVoltage.p.i + Rv.p.i = 0.0;
//   Rv.p.v = sineVoltage.p.v;
// end Modelica.Electrical.Analog.Examples.OvervoltageProtection;
// "
// ""
// "Check of Modelica.Electrical.Analog.Examples.OvervoltageProtection completed successfully.
// 
// 
// Class Modelica.Electrical.Analog.Examples.OvervoltageProtection has 49 equation(s) and 49 variable(s).
// 29 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.OvervoltageProtection_res.mat",
//     messages = ""
// end SimulationResult;
// ""
// "function Modelica.Math.asin
//   input Real u;
//   output Real y(quantity = "Angle", unit = "rad", displayUnit = "deg");
// 
// external "C";
// end Modelica.Math.asin;
// 
// function Modelica.Math.sin
//   input Real u(quantity = "Angle", unit = "rad", displayUnit = "deg");
//   output Real y;
// 
// external "C";
// end Modelica.Math.sin;
// 
// class Modelica.Electrical.Analog.Examples.Rectifier
//   parameter Real VAC(quantity = "ElectricPotential", unit = "V") = 400.0 "RMS line-to-line";
//   parameter Real f(quantity = "Frequency", unit = "Hz") = 50.0 "line frequency";
//   parameter Real LAC(quantity = "Inductance", unit = "H") = 6e-05 "line inductor";
//   parameter Real Ron(quantity = "Resistance", unit = "Ohm") = 0.001 "diode forward resistance";
//   parameter Real Goff(quantity = "Conductance", unit = "S") = 0.001 "diode backward conductance";
//   parameter Real Vknee(quantity = "ElectricPotential", unit = "V") = 2.0 "diode threshold voltage";
//   parameter Real CDC(quantity = "Capacitance", unit = "F", min = 0.0) = 0.015 "DC capacitance";
//   parameter Real IDC(quantity = "ElectricCurrent", unit = "A") = 500.0 "load current";
//   output Real uDC(quantity = "ElectricPotential", unit = "V");
//   output Real iAC[1](quantity = "ElectricCurrent", unit = "A");
//   output Real iAC[2](quantity = "ElectricCurrent", unit = "A");
//   output Real iAC[3](quantity = "ElectricCurrent", unit = "A");
//   output Real uAC[1](quantity = "ElectricPotential", unit = "V");
//   output Real uAC[2](quantity = "ElectricPotential", unit = "V");
//   output Real uAC[3](quantity = "ElectricPotential", unit = "V");
//   output Real Losses(quantity = "Power", unit = "W");
//   Real SineVoltage1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real SineVoltage1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real SineVoltage1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SineVoltage1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real SineVoltage1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SineVoltage1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real SineVoltage1.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real SineVoltage1.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real SineVoltage1.signalSource.y "Connector of Real output signal";
//   parameter Real SineVoltage1.signalSource.amplitude = SineVoltage1.V "Amplitude of sine wave";
//   parameter Real SineVoltage1.signalSource.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = SineVoltage1.freqHz "Frequency of sine wave";
//   parameter Real SineVoltage1.signalSource.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = SineVoltage1.phase "Phase of sine wave";
//   parameter Real SineVoltage1.signalSource.offset = SineVoltage1.offset "Offset of output signal";
//   parameter Real SineVoltage1.signalSource.startTime(quantity = "Time", unit = "s") = SineVoltage1.startTime "Output = offset for time < startTime";
//   protected constant Real SineVoltage1.signalSource.pi = 3.14159265358979;
//   parameter Real SineVoltage1.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 0.816496580927726 * VAC "Amplitude of sine wave";
//   parameter Real SineVoltage1.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = 0.0 "Phase of sine wave";
//   parameter Real SineVoltage1.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = f "Frequency of sine wave";
//   Real SineVoltage2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real SineVoltage2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real SineVoltage2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SineVoltage2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real SineVoltage2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SineVoltage2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real SineVoltage2.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real SineVoltage2.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real SineVoltage2.signalSource.y "Connector of Real output signal";
//   parameter Real SineVoltage2.signalSource.amplitude = SineVoltage2.V "Amplitude of sine wave";
//   parameter Real SineVoltage2.signalSource.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = SineVoltage2.freqHz "Frequency of sine wave";
//   parameter Real SineVoltage2.signalSource.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = SineVoltage2.phase "Phase of sine wave";
//   parameter Real SineVoltage2.signalSource.offset = SineVoltage2.offset "Offset of output signal";
//   parameter Real SineVoltage2.signalSource.startTime(quantity = "Time", unit = "s") = SineVoltage2.startTime "Output = offset for time < startTime";
//   protected constant Real SineVoltage2.signalSource.pi = 3.14159265358979;
//   parameter Real SineVoltage2.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 0.816496580927726 * VAC "Amplitude of sine wave";
//   parameter Real SineVoltage2.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = -2.0943951023932 "Phase of sine wave";
//   parameter Real SineVoltage2.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = f "Frequency of sine wave";
//   Real SineVoltage3.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real SineVoltage3.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real SineVoltage3.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SineVoltage3.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real SineVoltage3.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SineVoltage3.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real SineVoltage3.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real SineVoltage3.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real SineVoltage3.signalSource.y "Connector of Real output signal";
//   parameter Real SineVoltage3.signalSource.amplitude = SineVoltage3.V "Amplitude of sine wave";
//   parameter Real SineVoltage3.signalSource.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = SineVoltage3.freqHz "Frequency of sine wave";
//   parameter Real SineVoltage3.signalSource.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = SineVoltage3.phase "Phase of sine wave";
//   parameter Real SineVoltage3.signalSource.offset = SineVoltage3.offset "Offset of output signal";
//   parameter Real SineVoltage3.signalSource.startTime(quantity = "Time", unit = "s") = SineVoltage3.startTime "Output = offset for time < startTime";
//   protected constant Real SineVoltage3.signalSource.pi = 3.14159265358979;
//   parameter Real SineVoltage3.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 0.816496580927726 * VAC "Amplitude of sine wave";
//   parameter Real SineVoltage3.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = -4.18879020478639 "Phase of sine wave";
//   parameter Real SineVoltage3.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = f "Frequency of sine wave";
//   Real Inductor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Inductor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Inductor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Inductor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Inductor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Inductor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real Inductor1.L(quantity = "Inductance", unit = "H", start = 1.0) = LAC "Inductance";
//   Real Inductor2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Inductor2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Inductor2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Inductor2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Inductor2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Inductor2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real Inductor2.L(quantity = "Inductance", unit = "H", start = 1.0) = LAC "Inductance";
//   Real Inductor3.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Inductor3.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Inductor3.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Inductor3.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Inductor3.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Inductor3.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real Inductor3.L(quantity = "Inductance", unit = "H", start = 1.0) = LAC "Inductance";
//   Real IdealDiode1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real IdealDiode1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real IdealDiode1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealDiode1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real IdealDiode1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealDiode1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean IdealDiode1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real IdealDiode1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real IdealDiode1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real IdealDiode1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real IdealDiode1.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = Ron "Forward state-on differential resistance (closed diode resistance)";
//   parameter Real IdealDiode1.Goff(quantity = "Conductance", unit = "S", min = 0.0) = Goff "Backward state-off conductance (opened diode conductance)";
//   parameter Real IdealDiode1.Vknee(quantity = "ElectricPotential", unit = "V", min = 0.0, start = 0.0) = Vknee "Forward threshold voltage";
//   Boolean IdealDiode1.off(start = true) "Switching state";
//   protected Real IdealDiode1.s(unit = "1") "Auxiliary variable: if on then current, if opened then voltage";
//   protected constant Real IdealDiode1.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real IdealDiode1.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real IdealDiode2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real IdealDiode2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real IdealDiode2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealDiode2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real IdealDiode2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealDiode2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean IdealDiode2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real IdealDiode2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real IdealDiode2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real IdealDiode2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real IdealDiode2.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = Ron "Forward state-on differential resistance (closed diode resistance)";
//   parameter Real IdealDiode2.Goff(quantity = "Conductance", unit = "S", min = 0.0) = Goff "Backward state-off conductance (opened diode conductance)";
//   parameter Real IdealDiode2.Vknee(quantity = "ElectricPotential", unit = "V", min = 0.0, start = 0.0) = Vknee "Forward threshold voltage";
//   Boolean IdealDiode2.off(start = true) "Switching state";
//   protected Real IdealDiode2.s(unit = "1") "Auxiliary variable: if on then current, if opened then voltage";
//   protected constant Real IdealDiode2.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real IdealDiode2.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real IdealDiode3.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real IdealDiode3.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real IdealDiode3.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealDiode3.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real IdealDiode3.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealDiode3.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean IdealDiode3.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real IdealDiode3.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real IdealDiode3.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real IdealDiode3.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real IdealDiode3.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = Ron "Forward state-on differential resistance (closed diode resistance)";
//   parameter Real IdealDiode3.Goff(quantity = "Conductance", unit = "S", min = 0.0) = Goff "Backward state-off conductance (opened diode conductance)";
//   parameter Real IdealDiode3.Vknee(quantity = "ElectricPotential", unit = "V", min = 0.0, start = 0.0) = Vknee "Forward threshold voltage";
//   Boolean IdealDiode3.off(start = true) "Switching state";
//   protected Real IdealDiode3.s(unit = "1") "Auxiliary variable: if on then current, if opened then voltage";
//   protected constant Real IdealDiode3.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real IdealDiode3.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real IdealDiode4.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real IdealDiode4.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real IdealDiode4.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealDiode4.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real IdealDiode4.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealDiode4.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean IdealDiode4.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real IdealDiode4.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real IdealDiode4.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real IdealDiode4.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real IdealDiode4.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = Ron "Forward state-on differential resistance (closed diode resistance)";
//   parameter Real IdealDiode4.Goff(quantity = "Conductance", unit = "S", min = 0.0) = Goff "Backward state-off conductance (opened diode conductance)";
//   parameter Real IdealDiode4.Vknee(quantity = "ElectricPotential", unit = "V", min = 0.0, start = 0.0) = Vknee "Forward threshold voltage";
//   Boolean IdealDiode4.off(start = true) "Switching state";
//   protected Real IdealDiode4.s(unit = "1") "Auxiliary variable: if on then current, if opened then voltage";
//   protected constant Real IdealDiode4.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real IdealDiode4.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real IdealDiode5.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real IdealDiode5.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real IdealDiode5.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealDiode5.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real IdealDiode5.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealDiode5.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean IdealDiode5.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real IdealDiode5.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real IdealDiode5.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real IdealDiode5.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real IdealDiode5.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = Ron "Forward state-on differential resistance (closed diode resistance)";
//   parameter Real IdealDiode5.Goff(quantity = "Conductance", unit = "S", min = 0.0) = Goff "Backward state-off conductance (opened diode conductance)";
//   parameter Real IdealDiode5.Vknee(quantity = "ElectricPotential", unit = "V", min = 0.0, start = 0.0) = Vknee "Forward threshold voltage";
//   Boolean IdealDiode5.off(start = true) "Switching state";
//   protected Real IdealDiode5.s(unit = "1") "Auxiliary variable: if on then current, if opened then voltage";
//   protected constant Real IdealDiode5.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real IdealDiode5.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real IdealDiode6.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real IdealDiode6.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real IdealDiode6.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealDiode6.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real IdealDiode6.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real IdealDiode6.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean IdealDiode6.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real IdealDiode6.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real IdealDiode6.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real IdealDiode6.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real IdealDiode6.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = Ron "Forward state-on differential resistance (closed diode resistance)";
//   parameter Real IdealDiode6.Goff(quantity = "Conductance", unit = "S", min = 0.0) = Goff "Backward state-off conductance (opened diode conductance)";
//   parameter Real IdealDiode6.Vknee(quantity = "ElectricPotential", unit = "V", min = 0.0, start = 0.0) = Vknee "Forward threshold voltage";
//   Boolean IdealDiode6.off(start = true) "Switching state";
//   protected Real IdealDiode6.s(unit = "1") "Auxiliary variable: if on then current, if opened then voltage";
//   protected constant Real IdealDiode6.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real IdealDiode6.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real Capacitor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Capacitor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Capacitor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Capacitor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Capacitor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Capacitor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real Capacitor1.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = 2.0 * CDC "Capacitance";
//   Real Capacitor2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real Capacitor2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real Capacitor2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Capacitor2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Capacitor2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Capacitor2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real Capacitor2.C(quantity = "Capacitance", unit = "F", min = 0.0, start = 1.0) = 2.0 * CDC "Capacitance";
//   Real Ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real SignalCurrent1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SignalCurrent1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real SignalCurrent1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SignalCurrent1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real SignalCurrent1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   input Real SignalCurrent1.i "Current flowing from pin p to pin n as input signal";
//   output Real Constant1.y "Connector of Real output signal";
//   parameter Real Constant1.k(start = 1.0) = IDC "Constant output value";
// initial equation
//   Capacitor1.v = 0.707106781186548 * VAC;
//   Capacitor2.v = 0.707106781186548 * VAC;
// equation
//   SineVoltage1.signalSource.y = SineVoltage1.signalSource.offset + (if time < SineVoltage1.signalSource.startTime then 0.0 else SineVoltage1.signalSource.amplitude * Modelica.Math.sin(6.28318530717959 * (SineVoltage1.signalSource.freqHz * (time - SineVoltage1.signalSource.startTime)) + SineVoltage1.signalSource.phase));
//   SineVoltage1.v = SineVoltage1.signalSource.y;
//   SineVoltage1.v = SineVoltage1.p.v - SineVoltage1.n.v;
//   0.0 = SineVoltage1.p.i + SineVoltage1.n.i;
//   SineVoltage1.i = SineVoltage1.p.i;
//   SineVoltage2.signalSource.y = SineVoltage2.signalSource.offset + (if time < SineVoltage2.signalSource.startTime then 0.0 else SineVoltage2.signalSource.amplitude * Modelica.Math.sin(6.28318530717959 * (SineVoltage2.signalSource.freqHz * (time - SineVoltage2.signalSource.startTime)) + SineVoltage2.signalSource.phase));
//   SineVoltage2.v = SineVoltage2.signalSource.y;
//   SineVoltage2.v = SineVoltage2.p.v - SineVoltage2.n.v;
//   0.0 = SineVoltage2.p.i + SineVoltage2.n.i;
//   SineVoltage2.i = SineVoltage2.p.i;
//   SineVoltage3.signalSource.y = SineVoltage3.signalSource.offset + (if time < SineVoltage3.signalSource.startTime then 0.0 else SineVoltage3.signalSource.amplitude * Modelica.Math.sin(6.28318530717959 * (SineVoltage3.signalSource.freqHz * (time - SineVoltage3.signalSource.startTime)) + SineVoltage3.signalSource.phase));
//   SineVoltage3.v = SineVoltage3.signalSource.y;
//   SineVoltage3.v = SineVoltage3.p.v - SineVoltage3.n.v;
//   0.0 = SineVoltage3.p.i + SineVoltage3.n.i;
//   SineVoltage3.i = SineVoltage3.p.i;
//   Inductor1.L * der(Inductor1.i) = Inductor1.v;
//   Inductor1.v = Inductor1.p.v - Inductor1.n.v;
//   0.0 = Inductor1.p.i + Inductor1.n.i;
//   Inductor1.i = Inductor1.p.i;
//   Inductor2.L * der(Inductor2.i) = Inductor2.v;
//   Inductor2.v = Inductor2.p.v - Inductor2.n.v;
//   0.0 = Inductor2.p.i + Inductor2.n.i;
//   Inductor2.i = Inductor2.p.i;
//   Inductor3.L * der(Inductor3.i) = Inductor3.v;
//   Inductor3.v = Inductor3.p.v - Inductor3.n.v;
//   0.0 = Inductor3.p.i + Inductor3.n.i;
//   Inductor3.i = Inductor3.p.i;
//   IdealDiode1.off = IdealDiode1.s < 0.0;
//   IdealDiode1.v = IdealDiode1.s * (if IdealDiode1.off then 1.0 else IdealDiode1.Ron) + IdealDiode1.Vknee;
//   IdealDiode1.i = IdealDiode1.s * (if IdealDiode1.off then IdealDiode1.Goff else 1.0) + IdealDiode1.Goff * IdealDiode1.Vknee;
//   IdealDiode1.LossPower = IdealDiode1.v * IdealDiode1.i;
//   IdealDiode1.i = IdealDiode1.p.i;
//   0.0 = IdealDiode1.p.i + IdealDiode1.n.i;
//   IdealDiode1.v = IdealDiode1.p.v - IdealDiode1.n.v;
//   IdealDiode1.T_heatPort = IdealDiode1.T;
//   IdealDiode2.off = IdealDiode2.s < 0.0;
//   IdealDiode2.v = IdealDiode2.s * (if IdealDiode2.off then 1.0 else IdealDiode2.Ron) + IdealDiode2.Vknee;
//   IdealDiode2.i = IdealDiode2.s * (if IdealDiode2.off then IdealDiode2.Goff else 1.0) + IdealDiode2.Goff * IdealDiode2.Vknee;
//   IdealDiode2.LossPower = IdealDiode2.v * IdealDiode2.i;
//   IdealDiode2.i = IdealDiode2.p.i;
//   0.0 = IdealDiode2.p.i + IdealDiode2.n.i;
//   IdealDiode2.v = IdealDiode2.p.v - IdealDiode2.n.v;
//   IdealDiode2.T_heatPort = IdealDiode2.T;
//   IdealDiode3.off = IdealDiode3.s < 0.0;
//   IdealDiode3.v = IdealDiode3.s * (if IdealDiode3.off then 1.0 else IdealDiode3.Ron) + IdealDiode3.Vknee;
//   IdealDiode3.i = IdealDiode3.s * (if IdealDiode3.off then IdealDiode3.Goff else 1.0) + IdealDiode3.Goff * IdealDiode3.Vknee;
//   IdealDiode3.LossPower = IdealDiode3.v * IdealDiode3.i;
//   IdealDiode3.i = IdealDiode3.p.i;
//   0.0 = IdealDiode3.p.i + IdealDiode3.n.i;
//   IdealDiode3.v = IdealDiode3.p.v - IdealDiode3.n.v;
//   IdealDiode3.T_heatPort = IdealDiode3.T;
//   IdealDiode4.off = IdealDiode4.s < 0.0;
//   IdealDiode4.v = IdealDiode4.s * (if IdealDiode4.off then 1.0 else IdealDiode4.Ron) + IdealDiode4.Vknee;
//   IdealDiode4.i = IdealDiode4.s * (if IdealDiode4.off then IdealDiode4.Goff else 1.0) + IdealDiode4.Goff * IdealDiode4.Vknee;
//   IdealDiode4.LossPower = IdealDiode4.v * IdealDiode4.i;
//   IdealDiode4.i = IdealDiode4.p.i;
//   0.0 = IdealDiode4.p.i + IdealDiode4.n.i;
//   IdealDiode4.v = IdealDiode4.p.v - IdealDiode4.n.v;
//   IdealDiode4.T_heatPort = IdealDiode4.T;
//   IdealDiode5.off = IdealDiode5.s < 0.0;
//   IdealDiode5.v = IdealDiode5.s * (if IdealDiode5.off then 1.0 else IdealDiode5.Ron) + IdealDiode5.Vknee;
//   IdealDiode5.i = IdealDiode5.s * (if IdealDiode5.off then IdealDiode5.Goff else 1.0) + IdealDiode5.Goff * IdealDiode5.Vknee;
//   IdealDiode5.LossPower = IdealDiode5.v * IdealDiode5.i;
//   IdealDiode5.i = IdealDiode5.p.i;
//   0.0 = IdealDiode5.p.i + IdealDiode5.n.i;
//   IdealDiode5.v = IdealDiode5.p.v - IdealDiode5.n.v;
//   IdealDiode5.T_heatPort = IdealDiode5.T;
//   IdealDiode6.off = IdealDiode6.s < 0.0;
//   IdealDiode6.v = IdealDiode6.s * (if IdealDiode6.off then 1.0 else IdealDiode6.Ron) + IdealDiode6.Vknee;
//   IdealDiode6.i = IdealDiode6.s * (if IdealDiode6.off then IdealDiode6.Goff else 1.0) + IdealDiode6.Goff * IdealDiode6.Vknee;
//   IdealDiode6.LossPower = IdealDiode6.v * IdealDiode6.i;
//   IdealDiode6.i = IdealDiode6.p.i;
//   0.0 = IdealDiode6.p.i + IdealDiode6.n.i;
//   IdealDiode6.v = IdealDiode6.p.v - IdealDiode6.n.v;
//   IdealDiode6.T_heatPort = IdealDiode6.T;
//   Capacitor1.i = Capacitor1.C * der(Capacitor1.v);
//   Capacitor1.v = Capacitor1.p.v - Capacitor1.n.v;
//   0.0 = Capacitor1.p.i + Capacitor1.n.i;
//   Capacitor1.i = Capacitor1.p.i;
//   Capacitor2.i = Capacitor2.C * der(Capacitor2.v);
//   Capacitor2.v = Capacitor2.p.v - Capacitor2.n.v;
//   0.0 = Capacitor2.p.i + Capacitor2.n.i;
//   Capacitor2.i = Capacitor2.p.i;
//   Ground1.p.v = 0.0;
//   SignalCurrent1.v = SignalCurrent1.p.v - SignalCurrent1.n.v;
//   0.0 = SignalCurrent1.p.i + SignalCurrent1.n.i;
//   SignalCurrent1.i = SignalCurrent1.p.i;
//   Constant1.y = Constant1.k;
//   uDC = Capacitor1.v + Capacitor2.v;
//   iAC[1] = Inductor1.i;
//   iAC[2] = Inductor2.i;
//   iAC[3] = Inductor3.i;
//   uAC[1] = Inductor1.n.v - Inductor2.n.v;
//   uAC[2] = Inductor2.n.v - Inductor3.n.v;
//   uAC[3] = Inductor3.n.v - Inductor1.n.v;
//   Losses = IdealDiode1.v * IdealDiode1.i + (IdealDiode2.v * IdealDiode2.i + (IdealDiode3.v * IdealDiode3.i + (IdealDiode4.v * IdealDiode4.i + (IdealDiode5.v * IdealDiode5.i + IdealDiode6.v * IdealDiode6.i))));
//   Inductor3.n.i + (IdealDiode3.p.i + IdealDiode6.n.i) = 0.0;
//   IdealDiode3.p.v = IdealDiode6.n.v;
//   IdealDiode3.p.v = Inductor3.n.v;
//   Inductor2.n.i + (IdealDiode2.p.i + IdealDiode5.n.i) = 0.0;
//   IdealDiode2.p.v = IdealDiode5.n.v;
//   IdealDiode2.p.v = Inductor2.n.v;
//   Inductor1.n.i + (IdealDiode1.p.i + IdealDiode4.n.i) = 0.0;
//   IdealDiode1.p.v = IdealDiode4.n.v;
//   IdealDiode1.p.v = Inductor1.n.v;
//   Constant1.y = SignalCurrent1.i;
//   SignalCurrent1.n.i + (Capacitor2.n.i + (IdealDiode4.p.i + (IdealDiode5.p.i + IdealDiode6.p.i))) = 0.0;
//   Capacitor2.n.v = IdealDiode4.p.v;
//   Capacitor2.n.v = IdealDiode5.p.v;
//   Capacitor2.n.v = IdealDiode6.p.v;
//   Capacitor2.n.v = SignalCurrent1.n.v;
//   IdealDiode1.n.i + (IdealDiode2.n.i + (IdealDiode3.n.i + (Capacitor1.p.i + SignalCurrent1.p.i))) = 0.0;
//   Capacitor1.p.v = IdealDiode1.n.v;
//   Capacitor1.p.v = IdealDiode2.n.v;
//   Capacitor1.p.v = IdealDiode3.n.v;
//   Capacitor1.p.v = SignalCurrent1.p.v;
//   Capacitor1.n.i + (Capacitor2.p.i + Ground1.p.i) = 0.0;
//   Capacitor1.n.v = Capacitor2.p.v;
//   Capacitor1.n.v = Ground1.p.v;
//   SineVoltage3.p.i + Inductor3.p.i = 0.0;
//   Inductor3.p.v = SineVoltage3.p.v;
//   SineVoltage2.p.i + Inductor2.p.i = 0.0;
//   Inductor2.p.v = SineVoltage2.p.v;
//   SineVoltage1.p.i + Inductor1.p.i = 0.0;
//   Inductor1.p.v = SineVoltage1.p.v;
//   SineVoltage1.n.i + (SineVoltage2.n.i + SineVoltage3.n.i) = 0.0;
//   SineVoltage1.n.v = SineVoltage2.n.v;
//   SineVoltage1.n.v = SineVoltage3.n.v;
// end Modelica.Electrical.Analog.Examples.Rectifier;
// "
// ""
// "Check of Modelica.Electrical.Analog.Examples.Rectifier completed successfully.
// 
// 
// Class Modelica.Electrical.Analog.Examples.Rectifier has 128 equation(s) and 128 variable(s).
// 69 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "",
//     messages = "Simulation failed for model: Modelica.Electrical.Analog.Examples.Rectifier
// Warning: Using overdeterimed solver for initialization. Setting fixed=false to the following variables: Capacitor1.v
// Warning: Using overdeterimed solver for initialization. Setting fixed=false to the following variables: Capacitor2.v
// "
// end SimulationResult;
// ""
// "function Modelica.Math.asin
//   input Real u;
//   output Real y(quantity = "Angle", unit = "rad", displayUnit = "deg");
// 
// external "C";
// end Modelica.Math.asin;
// 
// function Modelica.Math.atan
//   input Real u;
//   output Real y(quantity = "Angle", unit = "rad", displayUnit = "deg");
// 
// external "C";
// end Modelica.Math.atan;
// 
// function Modelica.Math.sin
//   input Real u(quantity = "Angle", unit = "rad", displayUnit = "deg");
//   output Real y;
// 
// external "C";
// end Modelica.Math.sin;
// 
// class Modelica.Electrical.Analog.Examples.ShowSaturatingInductor
//   parameter Real Lzer(quantity = "Inductance", unit = "H") = 2.0 "Inductance near current=0";
//   parameter Real Lnom(quantity = "Inductance", unit = "H") = 1.0 "Nominal inductance at Nominal current";
//   parameter Real Inom(quantity = "ElectricCurrent", unit = "A") = 1.0 "Nominal current";
//   parameter Real Linf(quantity = "Inductance", unit = "H") = 0.5 "Inductance at large currents";
//   parameter Real U(quantity = "ElectricPotential", unit = "V") = 1.25 "source voltage (peak)";
//   parameter Real f(quantity = "Frequency", unit = "Hz") = 0.159154943091895 "source frequency";
//   parameter Real phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = 1.5707963267949 "source voltage phase shift";
//   output Real v(quantity = "ElectricPotential", unit = "V") "voltage drop over saturating inductor";
//   output Real i(quantity = "ElectricCurrent", unit = "A") "current across saturating inductor";
//   Real SineVoltage1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real SineVoltage1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real SineVoltage1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SineVoltage1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real SineVoltage1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SineVoltage1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real SineVoltage1.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real SineVoltage1.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real SineVoltage1.signalSource.y "Connector of Real output signal";
//   parameter Real SineVoltage1.signalSource.amplitude = SineVoltage1.V "Amplitude of sine wave";
//   parameter Real SineVoltage1.signalSource.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = SineVoltage1.freqHz "Frequency of sine wave";
//   parameter Real SineVoltage1.signalSource.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = SineVoltage1.phase "Phase of sine wave";
//   parameter Real SineVoltage1.signalSource.offset = SineVoltage1.offset "Offset of output signal";
//   parameter Real SineVoltage1.signalSource.startTime(quantity = "Time", unit = "s") = SineVoltage1.startTime "Output = offset for time < startTime";
//   protected constant Real SineVoltage1.signalSource.pi = 3.14159265358979;
//   parameter Real SineVoltage1.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = U "Amplitude of sine wave";
//   parameter Real SineVoltage1.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = phase "Phase of sine wave";
//   parameter Real SineVoltage1.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = f "Frequency of sine wave";
//   Real Ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real SaturatingInductance1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real SaturatingInductance1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real SaturatingInductance1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SaturatingInductance1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real SaturatingInductance1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SaturatingInductance1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real SaturatingInductance1.Inom(quantity = "ElectricCurrent", unit = "A", start = 1.0) = Inom "Nominal current";
//   parameter Real SaturatingInductance1.Lnom(quantity = "Inductance", unit = "H", start = 1.0) = Lnom "Nominal inductance at Nominal current";
//   parameter Real SaturatingInductance1.Lzer(quantity = "Inductance", unit = "H", start = 2.0 * SaturatingInductance1.Lnom) = Lzer "Inductance near current=0";
//   parameter Real SaturatingInductance1.Linf(quantity = "Inductance", unit = "H", start = SaturatingInductance1.Lnom / 2.0) = Linf "Inductance at large currents";
//   Real SaturatingInductance1.Lact(quantity = "Inductance", unit = "H", start = SaturatingInductance1.Lzer);
//   Real SaturatingInductance1.Psi(quantity = "MagneticFlux", unit = "Wb");
//   protected parameter Real SaturatingInductance1.Ipar(quantity = "ElectricCurrent", unit = "A", start = SaturatingInductance1.Inom / 10.0, fixed = false);
// initial equation
//   SaturatingInductance1.Lnom - SaturatingInductance1.Linf = (SaturatingInductance1.Lzer - SaturatingInductance1.Linf) * (SaturatingInductance1.Ipar * (1.5707963267949 - Modelica.Math.atan(SaturatingInductance1.Ipar / SaturatingInductance1.Inom)) / SaturatingInductance1.Inom);
// equation
//   SineVoltage1.signalSource.y = SineVoltage1.signalSource.offset + (if time < SineVoltage1.signalSource.startTime then 0.0 else SineVoltage1.signalSource.amplitude * Modelica.Math.sin(6.28318530717959 * (SineVoltage1.signalSource.freqHz * (time - SineVoltage1.signalSource.startTime)) + SineVoltage1.signalSource.phase));
//   SineVoltage1.v = SineVoltage1.signalSource.y;
//   SineVoltage1.v = SineVoltage1.p.v - SineVoltage1.n.v;
//   0.0 = SineVoltage1.p.i + SineVoltage1.n.i;
//   SineVoltage1.i = SineVoltage1.p.i;
//   Ground1.p.v = 0.0;
//   assert(SaturatingInductance1.Lzer > 1e-15 + SaturatingInductance1.Lnom,"Lzer (= " + String(SaturatingInductance1.Lzer,0,true,6) + ") has to be > Lnom (= " + String(SaturatingInductance1.Lnom,0,true,6) + ")");
//   assert(SaturatingInductance1.Linf < SaturatingInductance1.Lnom - 1e-15,"Linf (= " + String(SaturatingInductance1.Linf,0,true,6) + ") has to be < Lnom (= " + String(SaturatingInductance1.Lnom,0,true,6) + ")");
//   (SaturatingInductance1.Lact - SaturatingInductance1.Linf) * SaturatingInductance1.i / SaturatingInductance1.Ipar = (SaturatingInductance1.Lzer - SaturatingInductance1.Linf) * Modelica.Math.atan(SaturatingInductance1.i / SaturatingInductance1.Ipar);
//   SaturatingInductance1.Psi = SaturatingInductance1.Lact * SaturatingInductance1.i;
//   SaturatingInductance1.v = der(SaturatingInductance1.Psi);
//   SaturatingInductance1.v = SaturatingInductance1.p.v - SaturatingInductance1.n.v;
//   0.0 = SaturatingInductance1.p.i + SaturatingInductance1.n.i;
//   SaturatingInductance1.i = SaturatingInductance1.p.i;
//   v = SaturatingInductance1.v;
//   i = SaturatingInductance1.i;
//   SaturatingInductance1.p.i + SineVoltage1.p.i = 0.0;
//   SaturatingInductance1.p.v = SineVoltage1.p.v;
//   SineVoltage1.n.i + (Ground1.p.i + SaturatingInductance1.n.i) = 0.0;
//   Ground1.p.v = SaturatingInductance1.n.v;
//   Ground1.p.v = SineVoltage1.n.v;
// end Modelica.Electrical.Analog.Examples.ShowSaturatingInductor;
// "
// ""
// "Check of Modelica.Electrical.Analog.Examples.ShowSaturatingInductor completed successfully.
// 
// 
// Class Modelica.Electrical.Analog.Examples.ShowSaturatingInductor has 19 equation(s) and 19 variable(s).
// 12 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.ShowSaturatingInductor_res.mat",
//     messages = ""
// end SimulationResult;
// ""
// "function Modelica.Math.asin
//   input Real u;
//   output Real y(quantity = "Angle", unit = "rad", displayUnit = "deg");
// 
// external "C";
// end Modelica.Math.asin;
// 
// function Modelica.Math.sin
//   input Real u(quantity = "Angle", unit = "rad", displayUnit = "deg");
//   output Real y;
// 
// external "C";
// end Modelica.Math.sin;
// 
// class Modelica.Electrical.Analog.Examples.ShowVariableResistor
//   Real VariableResistor.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real VariableResistor.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real VariableResistor.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real VariableResistor.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real VariableResistor.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real VariableResistor.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean VariableResistor.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real VariableResistor.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = VariableResistor.T_ref "Fixed device temperature if useHeatPort = false";
//   Real VariableResistor.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real VariableResistor.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real VariableResistor.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real VariableResistor.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real VariableResistor.R_actual(quantity = "Resistance", unit = "Ohm") "Resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   input Real VariableResistor.R;
//   Real Ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real Ground2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real Ground2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R1.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R1.R(quantity = "Resistance", unit = "Ohm", start = 1.0) "Resistance at temperature T_ref";
//   parameter Real R1.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R1.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R1.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R2.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R2.R(quantity = "Resistance", unit = "Ohm", start = 1.0) "Resistance at temperature T_ref";
//   parameter Real R2.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R2.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R2.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R3.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R3.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R3.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R3.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R3.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R3.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R3.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R3.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R3.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R3.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R3.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R3.R(quantity = "Resistance", unit = "Ohm", start = 1.0) "Resistance at temperature T_ref";
//   parameter Real R3.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R3.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R3.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R4.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R4.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R4.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R4.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R4.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R4.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R4.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R4.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R4.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R4.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R4.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R4.R(quantity = "Resistance", unit = "Ohm", start = 1.0) "Resistance at temperature T_ref";
//   parameter Real R4.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R4.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R4.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R5.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real R5.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real R5.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R5.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real R5.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real R5.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean R5.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real R5.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = R5.T_ref "Fixed device temperature if useHeatPort = false";
//   Real R5.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real R5.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real R5.R(quantity = "Resistance", unit = "Ohm", start = 1.0) "Resistance at temperature T_ref";
//   parameter Real R5.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real R5.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real R5.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real SineVoltage1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real SineVoltage1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real SineVoltage1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SineVoltage1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real SineVoltage1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real SineVoltage1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real SineVoltage1.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real SineVoltage1.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real SineVoltage1.signalSource.y "Connector of Real output signal";
//   parameter Real SineVoltage1.signalSource.amplitude = SineVoltage1.V "Amplitude of sine wave";
//   parameter Real SineVoltage1.signalSource.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = SineVoltage1.freqHz "Frequency of sine wave";
//   parameter Real SineVoltage1.signalSource.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = SineVoltage1.phase "Phase of sine wave";
//   parameter Real SineVoltage1.signalSource.offset = SineVoltage1.offset "Offset of output signal";
//   parameter Real SineVoltage1.signalSource.startTime(quantity = "Time", unit = "s") = SineVoltage1.startTime "Output = offset for time < startTime";
//   protected constant Real SineVoltage1.signalSource.pi = 3.14159265358979;
//   parameter Real SineVoltage1.V(quantity = "ElectricPotential", unit = "V", start = 1.0) "Amplitude of sine wave";
//   parameter Real SineVoltage1.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = 0.0 "Phase of sine wave";
//   parameter Real SineVoltage1.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) "Frequency of sine wave";
//   output Real Ramp1.y "Connector of Real output signal";
//   parameter Real Ramp1.height = 5.0 "Height of ramps";
//   parameter Real Ramp1.duration(quantity = "Time", unit = "s", min = 1e-60, start = 2.0) "Durations of ramp";
//   parameter Real Ramp1.offset = 2.0 "Offset of output signal";
//   parameter Real Ramp1.startTime(quantity = "Time", unit = "s") = 0.0 "Output = offset for time < startTime";
// equation
//   assert(1.0 + VariableResistor.alpha * (VariableResistor.T_heatPort - VariableResistor.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   VariableResistor.R_actual = VariableResistor.R * (1.0 + VariableResistor.alpha * (VariableResistor.T_heatPort - VariableResistor.T_ref));
//   VariableResistor.v = VariableResistor.R_actual * VariableResistor.i;
//   VariableResistor.LossPower = VariableResistor.v * VariableResistor.i;
//   VariableResistor.i = VariableResistor.p.i;
//   0.0 = VariableResistor.p.i + VariableResistor.n.i;
//   VariableResistor.v = VariableResistor.p.v - VariableResistor.n.v;
//   VariableResistor.T_heatPort = VariableResistor.T;
//   Ground1.p.v = 0.0;
//   Ground2.p.v = 0.0;
//   assert(1.0 + R1.alpha * (R1.T_heatPort - R1.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R1.R_actual = R1.R * (1.0 + R1.alpha * (R1.T_heatPort - R1.T_ref));
//   R1.v = R1.R_actual * R1.i;
//   R1.LossPower = R1.v * R1.i;
//   R1.i = R1.p.i;
//   0.0 = R1.p.i + R1.n.i;
//   R1.v = R1.p.v - R1.n.v;
//   R1.T_heatPort = R1.T;
//   assert(1.0 + R2.alpha * (R2.T_heatPort - R2.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R2.R_actual = R2.R * (1.0 + R2.alpha * (R2.T_heatPort - R2.T_ref));
//   R2.v = R2.R_actual * R2.i;
//   R2.LossPower = R2.v * R2.i;
//   R2.i = R2.p.i;
//   0.0 = R2.p.i + R2.n.i;
//   R2.v = R2.p.v - R2.n.v;
//   R2.T_heatPort = R2.T;
//   assert(1.0 + R3.alpha * (R3.T_heatPort - R3.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R3.R_actual = R3.R * (1.0 + R3.alpha * (R3.T_heatPort - R3.T_ref));
//   R3.v = R3.R_actual * R3.i;
//   R3.LossPower = R3.v * R3.i;
//   R3.i = R3.p.i;
//   0.0 = R3.p.i + R3.n.i;
//   R3.v = R3.p.v - R3.n.v;
//   R3.T_heatPort = R3.T;
//   assert(1.0 + R4.alpha * (R4.T_heatPort - R4.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R4.R_actual = R4.R * (1.0 + R4.alpha * (R4.T_heatPort - R4.T_ref));
//   R4.v = R4.R_actual * R4.i;
//   R4.LossPower = R4.v * R4.i;
//   R4.i = R4.p.i;
//   0.0 = R4.p.i + R4.n.i;
//   R4.v = R4.p.v - R4.n.v;
//   R4.T_heatPort = R4.T;
//   assert(1.0 + R5.alpha * (R5.T_heatPort - R5.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   R5.R_actual = R5.R * (1.0 + R5.alpha * (R5.T_heatPort - R5.T_ref));
//   R5.v = R5.R_actual * R5.i;
//   R5.LossPower = R5.v * R5.i;
//   R5.i = R5.p.i;
//   0.0 = R5.p.i + R5.n.i;
//   R5.v = R5.p.v - R5.n.v;
//   R5.T_heatPort = R5.T;
//   SineVoltage1.signalSource.y = SineVoltage1.signalSource.offset + (if time < SineVoltage1.signalSource.startTime then 0.0 else SineVoltage1.signalSource.amplitude * Modelica.Math.sin(6.28318530717959 * (SineVoltage1.signalSource.freqHz * (time - SineVoltage1.signalSource.startTime)) + SineVoltage1.signalSource.phase));
//   SineVoltage1.v = SineVoltage1.signalSource.y;
//   SineVoltage1.v = SineVoltage1.p.v - SineVoltage1.n.v;
//   0.0 = SineVoltage1.p.i + SineVoltage1.n.i;
//   SineVoltage1.i = SineVoltage1.p.i;
//   Ramp1.y = Ramp1.offset + (if time < Ramp1.startTime then 0.0 else if time < Ramp1.startTime + Ramp1.duration then ((time - Ramp1.startTime) * Ramp1.height) / Ramp1.duration else Ramp1.height);
//   Ramp1.y = VariableResistor.R;
//   SineVoltage1.n.i + (R1.p.i + R4.p.i) = 0.0;
//   R1.p.v = R4.p.v;
//   R1.p.v = SineVoltage1.n.v;
//   SineVoltage1.p.i + Ground1.p.i = 0.0;
//   Ground1.p.v = SineVoltage1.p.v;
//   R3.n.i + (Ground2.p.i + R5.n.i) = 0.0;
//   Ground2.p.v = R3.n.v;
//   Ground2.p.v = R5.n.v;
//   VariableResistor.n.i + R5.p.i = 0.0;
//   R5.p.v = VariableResistor.n.v;
//   R4.n.i + VariableResistor.p.i = 0.0;
//   R4.n.v = VariableResistor.p.v;
//   R2.n.i + R3.p.i = 0.0;
//   R2.n.v = R3.p.v;
//   R1.n.i + R2.p.i = 0.0;
//   R1.n.v = R2.p.v;
// end Modelica.Electrical.Analog.Examples.ShowVariableResistor;
// "
// "[ShowVariableResistor.mo:5:3-7:24:writable] Warning: Component VariableResistor has the same name as its type Modelica.Electrical.Analog.Examples.ShowVariableResistor.Modelica.Electrical.Analog.Basic.VariableResistor.
// 	This is forbidden by Modelica specification and may lead to lookup errors.
// "
// "Check of Modelica.Electrical.Analog.Examples.ShowVariableResistor completed successfully.
// 
// [ShowVariableResistor.mo:5:3-7:24:writable] Warning: Component VariableResistor has the same name as its type Modelica.Electrical.Analog.Examples.ShowVariableResistor.Modelica.Electrical.Analog.Basic.VariableResistor.
// 	This is forbidden by Modelica specification and may lead to lookup errors.
// 
// Class Modelica.Electrical.Analog.Examples.ShowVariableResistor has 67 equation(s) and 67 variable(s).
// 38 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.ShowVariableResistor_res.mat",
//     messages = ""
// end SimulationResult;
// "[ShowVariableResistor.mo:5:3-7:24:writable] Warning: Component VariableResistor has the same name as its type Modelica.Electrical.Analog.Examples.ShowVariableResistor.Modelica.Electrical.Analog.Basic.VariableResistor.
// 	This is forbidden by Modelica specification and may lead to lookup errors.
// Error: Variable SineVoltage1.freqHz not found in scope <global scope>
// Error: Variable SineVoltage1.V not found in scope <global scope>
// "
// "class Modelica.Electrical.Analog.Examples.SwitchWithArc
//   output Boolean booleanPulse.y "Connector of Boolean output signal";
//   parameter Real booleanPulse.width(min = 1e-60, max = 100.0) = 50.0 "Width of pulse in % of period";
//   parameter Real booleanPulse.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) "Time for one period";
//   parameter Real booleanPulse.startTime(quantity = "Time", unit = "s") = 0.0 "Time instant of first pulse";
//   protected parameter Real booleanPulse.Twidth(quantity = "Time", unit = "s") = booleanPulse.period * booleanPulse.width / 100.0 "width of one pulse";
//   protected discrete Real booleanPulse.pulsStart(quantity = "Time", unit = "s") "Start time of pulse";
//   Real ground1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real ground1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real constantVoltage1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real constantVoltage1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real constantVoltage1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real constantVoltage1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real constantVoltage1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real constantVoltage1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real constantVoltage1.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 50.0 "Value of constant voltage";
//   Real inductor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real inductor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real inductor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real inductor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real inductor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real inductor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real inductor1.L(quantity = "Inductance", unit = "H", start = 1.0) = 0.1 "Inductance";
//   Real resistor1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real resistor1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real resistor1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real resistor1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean resistor1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real resistor1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = resistor1.T_ref "Fixed device temperature if useHeatPort = false";
//   Real resistor1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real resistor1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real resistor1.R(quantity = "Resistance", unit = "Ohm", start = 1.0) "Resistance at temperature T_ref";
//   parameter Real resistor1.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real resistor1.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real resistor1.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real switch1.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real switch1.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real switch1.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real switch1.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real switch1.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real switch1.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean switch1.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real switch1.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real switch1.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real switch1.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real switch1.Ron(quantity = "Resistance", unit = "Ohm", min = 0.0) = 1e-05 "Closed switch resistance";
//   parameter Real switch1.Goff(quantity = "Conductance", unit = "S", min = 0.0) = 1e-05 "Opened switch conductance";
//   input Boolean switch1.control "true => p--n connected, false => switch open";
//   protected Real switch1.s(unit = "1") "Auxiliary variable";
//   protected constant Real switch1.unitVoltage(quantity = "ElectricPotential", unit = "V") = 1.0;
//   protected constant Real switch1.unitCurrent(quantity = "ElectricCurrent", unit = "A") = 1.0;
//   Real ground2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real ground2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real constantVoltage2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real constantVoltage2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real constantVoltage2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real constantVoltage2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real constantVoltage2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real constantVoltage2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real constantVoltage2.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 50.0 "Value of constant voltage";
//   Real inductor2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real inductor2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real inductor2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real inductor2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real inductor2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real inductor2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real inductor2.L(quantity = "Inductance", unit = "H", start = 1.0) = 0.1 "Inductance";
//   Real resistor2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real resistor2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real resistor2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real resistor2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean resistor2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real resistor2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = resistor2.T_ref "Fixed device temperature if useHeatPort = false";
//   Real resistor2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real resistor2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real resistor2.R(quantity = "Resistance", unit = "Ohm", start = 1.0) "Resistance at temperature T_ref";
//   parameter Real resistor2.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real resistor2.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real resistor2.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real switch2.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real switch2.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real switch2.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real switch2.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real switch2.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real switch2.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean switch2.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real switch2.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 293.15 "Fixed device temperature if useHeatPort = false";
//   Real switch2.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real switch2.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real switch2.Ron(quantity = "Resistance", unit = "Ohm") = 1e-05 "Closed switch resistance";
//   parameter Real switch2.Goff(quantity = "Conductance", unit = "S") = 1e-05 "Opened switch conductance";
//   parameter Real switch2.V0(quantity = "ElectricPotential", unit = "V") = 30.0 "Initial arc voltage";
//   parameter Real switch2.dVdt(quantity = "VoltageSlope", unit = "V/s") = 10000.0 "Arc voltage slope";
//   parameter Real switch2.Vmax(quantity = "ElectricPotential", unit = "V") = 60.0 "Max. arc voltage";
//   input Boolean switch2.control "true => p--n connected, false => switch open";
//   protected Boolean switch2.on = switch2.control;
//   protected Boolean switch2.off =  NOT switch2.on;
//   protected discrete Real switch2.tSwitch(quantity = "Time", unit = "s");
//   protected Boolean switch2.quenched;
// initial equation
//   booleanPulse.pulsStart = booleanPulse.startTime;
// equation
//   when sample(booleanPulse.startTime,booleanPulse.period) then
//   booleanPulse.pulsStart = time;
//   end when;
//   booleanPulse.y = time >= booleanPulse.pulsStart AND time < booleanPulse.pulsStart + booleanPulse.Twidth;
//   ground1.p.v = 0.0;
//   constantVoltage1.v = constantVoltage1.V;
//   constantVoltage1.v = constantVoltage1.p.v - constantVoltage1.n.v;
//   0.0 = constantVoltage1.p.i + constantVoltage1.n.i;
//   constantVoltage1.i = constantVoltage1.p.i;
//   inductor1.L * der(inductor1.i) = inductor1.v;
//   inductor1.v = inductor1.p.v - inductor1.n.v;
//   0.0 = inductor1.p.i + inductor1.n.i;
//   inductor1.i = inductor1.p.i;
//   assert(1.0 + resistor1.alpha * (resistor1.T_heatPort - resistor1.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   resistor1.R_actual = resistor1.R * (1.0 + resistor1.alpha * (resistor1.T_heatPort - resistor1.T_ref));
//   resistor1.v = resistor1.R_actual * resistor1.i;
//   resistor1.LossPower = resistor1.v * resistor1.i;
//   resistor1.i = resistor1.p.i;
//   0.0 = resistor1.p.i + resistor1.n.i;
//   resistor1.v = resistor1.p.v - resistor1.n.v;
//   resistor1.T_heatPort = resistor1.T;
//   switch1.v = switch1.s * (if switch1.control then switch1.Ron else 1.0);
//   switch1.i = switch1.s * (if switch1.control then 1.0 else switch1.Goff);
//   switch1.LossPower = switch1.v * switch1.i;
//   switch1.i = switch1.p.i;
//   0.0 = switch1.p.i + switch1.n.i;
//   switch1.v = switch1.p.v - switch1.n.v;
//   switch1.T_heatPort = switch1.T;
//   ground2.p.v = 0.0;
//   constantVoltage2.v = constantVoltage2.V;
//   constantVoltage2.v = constantVoltage2.p.v - constantVoltage2.n.v;
//   0.0 = constantVoltage2.p.i + constantVoltage2.n.i;
//   constantVoltage2.i = constantVoltage2.p.i;
//   inductor2.L * der(inductor2.i) = inductor2.v;
//   inductor2.v = inductor2.p.v - inductor2.n.v;
//   0.0 = inductor2.p.i + inductor2.n.i;
//   inductor2.i = inductor2.p.i;
//   assert(1.0 + resistor2.alpha * (resistor2.T_heatPort - resistor2.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   resistor2.R_actual = resistor2.R * (1.0 + resistor2.alpha * (resistor2.T_heatPort - resistor2.T_ref));
//   resistor2.v = resistor2.R_actual * resistor2.i;
//   resistor2.LossPower = resistor2.v * resistor2.i;
//   resistor2.i = resistor2.p.i;
//   0.0 = resistor2.p.i + resistor2.n.i;
//   resistor2.v = resistor2.p.v - resistor2.n.v;
//   resistor2.T_heatPort = resistor2.T;
//   when edge(switch2.off) then
//   switch2.tSwitch = time;
//   end when;
//   switch2.quenched = switch2.off AND (abs(switch2.i) <= abs(switch2.v) * switch2.Goff OR pre(switch2.quenched));
//   if switch2.on then
//   switch2.v = switch2.Ron * switch2.i;
//   else
//   if switch2.quenched then
//   switch2.i = switch2.Goff * switch2.v;
//   else
//   switch2.v = min(switch2.Vmax,switch2.V0 + switch2.dVdt * (time - switch2.tSwitch)) * sign(switch2.i);
//   end if;
//   end if;
//   switch2.LossPower = switch2.v * switch2.i;
//   switch2.i = switch2.p.i;
//   0.0 = switch2.p.i + switch2.n.i;
//   switch2.v = switch2.p.v - switch2.n.v;
//   switch2.T_heatPort = switch2.T;
//   booleanPulse.y = switch1.control;
//   booleanPulse.y = switch2.control;
//   constantVoltage2.p.i + switch2.p.i = 0.0;
//   constantVoltage2.p.v = switch2.p.v;
//   switch2.n.i + inductor2.p.i = 0.0;
//   inductor2.p.v = switch2.n.v;
//   constantVoltage2.n.i + (resistor2.n.i + ground2.p.i) = 0.0;
//   constantVoltage2.n.v = ground2.p.v;
//   constantVoltage2.n.v = resistor2.n.v;
//   inductor2.n.i + resistor2.p.i = 0.0;
//   inductor2.n.v = resistor2.p.v;
//   constantVoltage1.p.i + switch1.p.i = 0.0;
//   constantVoltage1.p.v = switch1.p.v;
//   switch1.n.i + inductor1.p.i = 0.0;
//   inductor1.p.v = switch1.n.v;
//   constantVoltage1.n.i + (resistor1.n.i + ground1.p.i) = 0.0;
//   constantVoltage1.n.v = ground1.p.v;
//   constantVoltage1.n.v = resistor1.n.v;
//   inductor1.n.i + resistor1.p.i = 0.0;
//   inductor1.n.v = resistor1.p.v;
// end Modelica.Electrical.Analog.Examples.SwitchWithArc;
// "
// ""
// "Check of Modelica.Electrical.Analog.Examples.SwitchWithArc completed successfully.
// 
// 
// Class Modelica.Electrical.Analog.Examples.SwitchWithArc has 71 equation(s) and 71 variable(s).
// 43 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "",
//     messages = "Simulation failed for model: Modelica.Electrical.Analog.Examples.SwitchWithArc
// Error: Variable booleanPulse.period not found in scope <global scope>
// "
// end SimulationResult;
// ""
// "function Modelica.Math.asin
//   input Real u;
//   output Real y(quantity = "Angle", unit = "rad", displayUnit = "deg");
// 
// external "C";
// end Modelica.Math.asin;
// 
// function Modelica.Math.sin
//   input Real u(quantity = "Angle", unit = "rad", displayUnit = "deg");
//   output Real y;
// 
// external "C";
// end Modelica.Math.sin;
// 
// class Modelica.Electrical.Analog.Examples.ThyristorBehaviourTest
//   Real ground.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real ground.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real sineVoltage.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real sineVoltage.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real sineVoltage.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real sineVoltage.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real sineVoltage.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real sineVoltage.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real sineVoltage.offset(quantity = "ElectricPotential", unit = "V") = 0.0 "Voltage offset";
//   parameter Real sineVoltage.startTime(quantity = "Time", unit = "s") = 0.0 "Time offset";
//   output Real sineVoltage.signalSource.y "Connector of Real output signal";
//   parameter Real sineVoltage.signalSource.amplitude = sineVoltage.V "Amplitude of sine wave";
//   parameter Real sineVoltage.signalSource.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = sineVoltage.freqHz "Frequency of sine wave";
//   parameter Real sineVoltage.signalSource.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = sineVoltage.phase "Phase of sine wave";
//   parameter Real sineVoltage.signalSource.offset = sineVoltage.offset "Offset of output signal";
//   parameter Real sineVoltage.signalSource.startTime(quantity = "Time", unit = "s") = sineVoltage.startTime "Output = offset for time < startTime";
//   protected constant Real sineVoltage.signalSource.pi = 3.14159265358979;
//   parameter Real sineVoltage.V(quantity = "ElectricPotential", unit = "V", start = 1.0) = 30.0 "Amplitude of sine wave";
//   parameter Real sineVoltage.phase(quantity = "Angle", unit = "rad", displayUnit = "deg") = 0.0 "Phase of sine wave";
//   parameter Real sineVoltage.freqHz(quantity = "Frequency", unit = "Hz", start = 1.0) = 10000.0 "Frequency of sine wave";
//   Real resistor.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real resistor.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real resistor.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real resistor.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real resistor.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Boolean resistor.useHeatPort = false "=true, if HeatPort is enabled";
//   parameter Real resistor.T(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = resistor.T_ref "Fixed device temperature if useHeatPort = false";
//   Real resistor.LossPower(quantity = "Power", unit = "W") "Loss power leaving component via HeatPort";
//   Real resistor.T_heatPort(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) "Temperature of HeatPort";
//   parameter Real resistor.R(quantity = "Resistance", unit = "Ohm", start = 1.0) = 10.0 "Resistance at temperature T_ref";
//   parameter Real resistor.T_ref(quantity = "ThermodynamicTemperature", unit = "K", displayUnit = "degC", min = 0.0) = 300.15 "Reference temperature";
//   parameter Real resistor.alpha(quantity = "LinearTemperatureCoefficient", unit = "1/K") = 0.0 "Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real resistor.R_actual(quantity = "Resistance", unit = "Ohm") "Actual resistance = R*(1 + alpha*(T_heatPort - T_ref))";
//   Real pulseCurrent.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real pulseCurrent.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real pulseCurrent.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real pulseCurrent.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real pulseCurrent.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real pulseCurrent.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real pulseCurrent.offset(quantity = "ElectricCurrent", unit = "A") = 0.0 "Current offset";
//   parameter Real pulseCurrent.startTime(quantity = "Time", unit = "s") = 2e-05 "Time offset";
//   output Real pulseCurrent.signalSource.y "Connector of Real output signal";
//   parameter Real pulseCurrent.signalSource.amplitude = pulseCurrent.I "Amplitude of pulse";
//   parameter Real pulseCurrent.signalSource.width(min = 1e-60, max = 100.0) = pulseCurrent.width "Width of pulse in % of period";
//   parameter Real pulseCurrent.signalSource.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = pulseCurrent.period "Time for one period";
//   parameter Real pulseCurrent.signalSource.offset = pulseCurrent.offset "Offset of output signals";
//   parameter Real pulseCurrent.signalSource.startTime(quantity = "Time", unit = "s") = pulseCurrent.startTime "Output = offset for time < startTime";
//   protected Real pulseCurrent.signalSource.T0(quantity = "Time", unit = "s", start = pulseCurrent.signalSource.startTime) "Start time of current period";
//   protected Real pulseCurrent.signalSource.T_width(quantity = "Time", unit = "s") = pulseCurrent.signalSource.period * pulseCurrent.signalSource.width / 100.0;
//   parameter Real pulseCurrent.I(quantity = "ElectricCurrent", unit = "A", start = 1.0) = 0.005 "Amplitude of pulse";
//   parameter Real pulseCurrent.width(min = 1e-60, max = 100.0, start = 50.0) = 10.0 "Width of pulse in % of period";
//   parameter Real pulseCurrent.period(quantity = "Time", unit = "s", min = 1e-60, start = 1.0) = 0.0001 "Time for one period";
//   parameter Real thyristor_v4_1.VDRM(quantity = "ElectricPotential", unit = "V", min = 0.0) = 100.0 "Forward breakthrough voltage";
//   parameter Real thyristor_v4_1.VRRM(quantity = "ElectricPotential", unit = "V", min = 0.0) = 100.0 "Reverse breakthrough voltage";
//   parameter Real thyristor_v4_1.IDRM(quantity = "ElectricCurrent", unit = "A") = 0.1 "Saturation current";
//   parameter Real thyristor_v4_1.VTM(quantity = "ElectricPotential", unit = "V") = 1.7 "Conducting voltage";
//   parameter Real thyristor_v4_1.IH(quantity = "ElectricCurrent", unit = "A") = 0.006 "Holding current";
//   parameter Real thyristor_v4_1.ITM(quantity = "ElectricCurrent", unit = "A") = 25.0 "Conducting current";
//   parameter Real thyristor_v4_1.VGT(quantity = "ElectricPotential", unit = "V") = 0.7 "Gate trigger voltage";
//   parameter Real thyristor_v4_1.IGT(quantity = "ElectricCurrent", unit = "A") = 0.005 "Gate trigger current";
//   parameter Real thyristor_v4_1.TON(quantity = "Time", unit = "s") = 1e-06 "Switch on time";
//   parameter Real thyristor_v4_1.TOFF(quantity = "Time", unit = "s") = 1.5e-05 "Switch off time";
//   parameter Real thyristor_v4_1.Vt(quantity = "ElectricPotential", unit = "V") = 0.04 "Voltage equivalent of temperature (kT/qn)";
//   parameter Real thyristor_v4_1.Nbv = 0.74 "Reverse Breakthrough emission coefficient";
//   Real thyristor_v4_1.iGK "gate current";
//   Real thyristor_v4_1.vGK "voltage between gate and cathode";
//   Real thyristor_v4_1.vAK "voltage between anode and cathode";
//   Real thyristor_v4_1.vControl(start = 0.0);
//   Real thyristor_v4_1.vContot;
//   Real thyristor_v4_1.vConmain;
//   Real thyristor_v4_1.Anode.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real thyristor_v4_1.Anode.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real thyristor_v4_1.Cathode.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real thyristor_v4_1.Cathode.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real thyristor_v4_1.Gate.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real thyristor_v4_1.Gate.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   protected parameter Real thyristor_v4_1.Von(quantity = "ElectricPotential", unit = "V") = 5.0;
//   protected parameter Real thyristor_v4_1.Voff(quantity = "ElectricPotential", unit = "V") = 1.5;
//   protected parameter Real thyristor_v4_1.Ron(quantity = "Resistance", unit = "Ohm") = (thyristor_v4_1.VTM - 0.7) / thyristor_v4_1.ITM "Forward conducting mode resistance";
//   protected parameter Real thyristor_v4_1.Roff(quantity = "Resistance", unit = "Ohm") = thyristor_v4_1.VDRM ^ 2.0 * 1.0 / thyristor_v4_1.IH / thyristor_v4_1.VTM "Blocking mode resistance";
//   Real inductor.v(quantity = "ElectricPotential", unit = "V") "Voltage drop between the two pins (= p.v - n.v)";
//   Real inductor.i(quantity = "ElectricCurrent", unit = "A") "Current flowing from pin p to pin n";
//   Real inductor.p.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real inductor.p.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   Real inductor.n.v(quantity = "ElectricPotential", unit = "V") "Potential at the pin";
//   Real inductor.n.i(quantity = "ElectricCurrent", unit = "A") "Current flowing into the pin";
//   parameter Real inductor.L(quantity = "Inductance", unit = "H", start = 1.0) = 2e-06 "Inductance";
// equation
//   ground.p.v = 0.0;
//   sineVoltage.signalSource.y = sineVoltage.signalSource.offset + (if time < sineVoltage.signalSource.startTime then 0.0 else sineVoltage.signalSource.amplitude * Modelica.Math.sin(6.28318530717959 * (sineVoltage.signalSource.freqHz * (time - sineVoltage.signalSource.startTime)) + sineVoltage.signalSource.phase));
//   sineVoltage.v = sineVoltage.signalSource.y;
//   sineVoltage.v = sineVoltage.p.v - sineVoltage.n.v;
//   0.0 = sineVoltage.p.i + sineVoltage.n.i;
//   sineVoltage.i = sineVoltage.p.i;
//   assert(1.0 + resistor.alpha * (resistor.T_heatPort - resistor.T_ref) >= 1e-15,"Temperature outside scope of model!");
//   resistor.R_actual = resistor.R * (1.0 + resistor.alpha * (resistor.T_heatPort - resistor.T_ref));
//   resistor.v = resistor.R_actual * resistor.i;
//   resistor.LossPower = resistor.v * resistor.i;
//   resistor.i = resistor.p.i;
//   0.0 = resistor.p.i + resistor.n.i;
//   resistor.v = resistor.p.v - resistor.n.v;
//   resistor.T_heatPort = resistor.T;
//   when sample(pulseCurrent.signalSource.startTime,pulseCurrent.signalSource.period) then
//   pulseCurrent.signalSource.T0 = time;
//   end when;
//   pulseCurrent.signalSource.y = pulseCurrent.signalSource.offset + (if time < pulseCurrent.signalSource.startTime OR time >= pulseCurrent.signalSource.T0 + pulseCurrent.signalSource.T_width then 0.0 else pulseCurrent.signalSource.amplitude);
//   pulseCurrent.i = pulseCurrent.signalSource.y;
//   pulseCurrent.v = pulseCurrent.p.v - pulseCurrent.n.v;
//   0.0 = pulseCurrent.p.i + pulseCurrent.n.i;
//   pulseCurrent.i = pulseCurrent.p.i;
//   thyristor_v4_1.Anode.i + (thyristor_v4_1.Gate.i + thyristor_v4_1.Cathode.i) = 0.0;
//   thyristor_v4_1.vGK = thyristor_v4_1.Gate.v - thyristor_v4_1.Cathode.v;
//   thyristor_v4_1.vAK = thyristor_v4_1.Anode.v - thyristor_v4_1.Cathode.v;
//   thyristor_v4_1.iGK = thyristor_v4_1.Gate.i;
//   thyristor_v4_1.vGK = if thyristor_v4_1.vGK < 0.65 then (thyristor_v4_1.VGT * thyristor_v4_1.iGK) / thyristor_v4_1.IGT else 0.4225 / thyristor_v4_1.VGT + (thyristor_v4_1.iGK * (thyristor_v4_1.VGT - 0.65)) / thyristor_v4_1.IGT;
//   thyristor_v4_1.vContot = thyristor_v4_1.vConmain + (if thyristor_v4_1.iGK < 0.95 * thyristor_v4_1.IGT then 0.0 else if thyristor_v4_1.iGK < 0.001 + 0.95 * thyristor_v4_1.IGT then 10000.0 * ((thyristor_v4_1.iGK - 0.95 * thyristor_v4_1.IGT) * thyristor_v4_1.vAK) else 10.0 * thyristor_v4_1.vAK);
//   der(thyristor_v4_1.vControl) = (thyristor_v4_1.vContot - thyristor_v4_1.vControl) / (if thyristor_v4_1.vContot - thyristor_v4_1.vControl > 0.0 then 1.87 * thyristor_v4_1.TON else 0.638 * thyristor_v4_1.TOFF);
//   thyristor_v4_1.Anode.i = smooth(1,if thyristor_v4_1.vAK < -thyristor_v4_1.VRRM then ((-thyristor_v4_1.VRRM) * exp(((-thyristor_v4_1.vAK) - thyristor_v4_1.VRRM) / (thyristor_v4_1.Nbv * thyristor_v4_1.Vt))) / thyristor_v4_1.Roff else if thyristor_v4_1.vControl < thyristor_v4_1.Voff then thyristor_v4_1.vAK / thyristor_v4_1.Roff else if thyristor_v4_1.vControl < thyristor_v4_1.Von then (thyristor_v4_1.vAK * (thyristor_v4_1.Ron / thyristor_v4_1.Roff) ^ (2.0 * ((2.0 * thyristor_v4_1.vControl - thyristor_v4_1.Von - thyristor_v4_1.Voff) / (2.0 * thyristor_v4_1.Von - 2.0 * thyristor_v4_1.Voff)) ^ 3.0 - (3.0 * (2.0 * thyristor_v4_1.vControl - thyristor_v4_1.Von - thyristor_v4_1.Voff)) / (4.0 * thyristor_v4_1.Von - 4.0 * thyristor_v4_1.Voff))) / sqrt(thyristor_v4_1.Ron * thyristor_v4_1.Roff) else thyristor_v4_1.vAK / thyristor_v4_1.Ron);
//   thyristor_v4_1.vConmain = if thyristor_v4_1.Anode.i > thyristor_v4_1.IH OR thyristor_v4_1.vAK > thyristor_v4_1.VDRM then thyristor_v4_1.Von else 0.0;
//   inductor.L * der(inductor.i) = inductor.v;
//   inductor.v = inductor.p.v - inductor.n.v;
//   0.0 = inductor.p.i + inductor.n.i;
//   inductor.i = inductor.p.i;
//   inductor.n.i + (sineVoltage.n.i + ground.p.i) = 0.0;
//   ground.p.v = inductor.n.v;
//   ground.p.v = sineVoltage.n.v;
//   resistor.n.i + inductor.p.i = 0.0;
//   inductor.p.v = resistor.n.v;
//   resistor.p.i + (thyristor_v4_1.Cathode.i + pulseCurrent.p.i) = 0.0;
//   pulseCurrent.p.v = resistor.p.v;
//   pulseCurrent.p.v = thyristor_v4_1.Cathode.v;
//   pulseCurrent.n.i + thyristor_v4_1.Gate.i = 0.0;
//   pulseCurrent.n.v = thyristor_v4_1.Gate.v;
//   sineVoltage.p.i + thyristor_v4_1.Anode.i = 0.0;
//   sineVoltage.p.v = thyristor_v4_1.Anode.v;
// end Modelica.Electrical.Analog.Examples.ThyristorBehaviourTest;
// "
// ""
// "Check of Modelica.Electrical.Analog.Examples.ThyristorBehaviourTest completed successfully.
// 
// 
// Class Modelica.Electrical.Analog.Examples.ThyristorBehaviourTest has 45 equation(s) and 45 variable(s).
// 23 of these are trivial equation(s).
// "
// ""
// record SimulationResult
//     resultFile = "",
//     messages = "Simulation failed for model: Modelica.Electrical.Analog.Examples.ThyristorBehaviourTest
// "
// end SimulationResult;
// ""
// 0
// endResult
