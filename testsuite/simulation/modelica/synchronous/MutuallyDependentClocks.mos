// name: MutuallyDependentClocks
// keywords: synchronous subSample superSampe
// status: correct
// cflags:
//
//

setCommandLineOptions("+d=dumpSynchronous"); getErrorString();

loadString("
model MutuallyDependentClocks
  Clock c = Clock(0.1);
  Clock cf = superSample(c, 5); // c is parent of faster cf
  Clock cs = subSample(c, 5);   // c is parent of slower cs
  Real u, v, w, x, y, z;
equation
  v = sample(time, c);
  w = sample(time, cf);
  x = subSample(w, 5);   // cf becomes parent of c
  y = sample(time, cs);
  z = superSample(y, 5); // cs becomes parent of c
  u = v + x + z;
end MutuallyDependentClocks;
"); getErrorString();

instantiateModel(MutuallyDependentClocks); getErrorString();
translateModel(MutuallyDependentClocks); getErrorString();

// Result:
// true
// ""
// true
// ""
// "class MutuallyDependentClocks
//   Clock c = Clock(0.1);
//   Clock cf = superSample(c, 5);
//   Clock cs = subSample(c, 5);
//   Real u;
//   Real v;
//   Real w;
//   Real x;
//   Real y;
//   Real z;
// equation
//   v = sample(time, c);
//   w = sample(time, cf);
//   x = subSample(w, 5);
//   y = sample(time, cs);
//   z = superSample(y, 5);
//   u = v + x + z;
// end MutuallyDependentClocks;
// "
// ""
// synchronous features pre-phase: synchronousFeatures
//
//
// ########################################
// clock partitioning (3 partitions)
// ########################################
//
//
// clocked partition(1)
// ========================================
//
// Variables (1)
// ========================================
// 1: y:VARIABLE()  type: Real
//
//
// Equations (1, 1)
// ========================================
// 1/1 (1): y = $getPart(time)   [dynamic |0|0|0|0|]
//
//
// no matching
//
//
// clocked partition(2)
// ========================================
//
// Variables (1)
// ========================================
// 1: w:VARIABLE()  type: Real
//
//
// Equations (1, 1)
// ========================================
// 1/1 (1): w = $getPart(time)   [dynamic |0|0|0|0|]
//
//
// no matching
//
//
// clocked partition(3)
// ========================================
//
// Variables (4)
// ========================================
// 1: z:VARIABLE()  type: Real
// 2: x:VARIABLE()  type: Real
// 3: v:VARIABLE()  type: Real
// 4: u:VARIABLE()  type: Real
//
//
// Equations (4, 4)
// ========================================
// 1/1 (1): v = $getPart(time)   [dynamic |0|0|0|0|]
// 2/2 (1): x = $getPart(w)   [dynamic |0|0|0|0|]
// 3/3 (1): z = $getPart(y)   [dynamic |0|0|0|0|]
// 4/4 (1): u = v + x + z   [dynamic |0|0|0|0|]
//
//
// no matching
//
//
//
// Base clocks (1)
// ========================================
// 1: Clock(0.1)[3]
//
//
// Sub clocks (3)
// ========================================
// 1: factor(5/1) shift(0/1)  event(false)
// 2: factor(1/5) shift(0/1)  event(false)
// 3: factor(1/1) shift(0/1)  event(false)
//
// synchronous features post-phase: synchronousFeatures
//
//
// ########################################
// clock partitioning (3 partitions)
// ########################################
//
//
// clocked partition(1)
// ========================================
//
// Variables (1)
// ========================================
// 1: y:VARIABLE()  type: Real
//
//
// Equations (1, 1)
// ========================================
// 1/1 (1): y = $getPart(time)   [dynamic |0|0|0|0|]
//
//
// no matching
//
//
// clocked partition(2)
// ========================================
//
// Variables (1)
// ========================================
// 1: w:VARIABLE()  type: Real
//
//
// Equations (1, 1)
// ========================================
// 1/1 (1): w = $getPart(time)   [dynamic |0|0|0|0|]
//
//
// no matching
//
//
// clocked partition(3)
// ========================================
//
// Variables (4)
// ========================================
// 1: z:VARIABLE()  type: Real
// 2: x:VARIABLE()  type: Real
// 3: v:VARIABLE()  type: Real
// 4: u:VARIABLE()  type: Real
//
//
// Equations (4, 4)
// ========================================
// 1/1 (1): v = $getPart(time)   [dynamic |0|0|0|0|]
// 2/2 (1): x = $getPart(w)   [dynamic |0|0|0|0|]
// 3/3 (1): z = $getPart(y)   [dynamic |0|0|0|0|]
// 4/4 (1): u = v + x + z   [dynamic |0|0|0|0|]
//
//
// no matching
//
//
//
// Base clocks (1)
// ========================================
// 1: Clock(0.1)[3]
//
//
// Sub clocks (3)
// ========================================
// 1: factor(5/1) shift(0/1)  event(false)
// 2: factor(1/5) shift(0/1)  event(false)
// 3: factor(1/1) shift(0/1)  event(false)
//
// true
// ""
// endResult
