// name: homotopy5
// keywords: initialization, homotopy
// status: correct
// cflags:
// teardown_command: rm -rf initializationTests.homotopy5* _initializationTests.homotopy5* output.log
// cflags: -d=-newInst
//
//  case for homotopy
//

loadString("
within ;
package initializationTests
  model homotopy5
    Real x (start=-0.5);
    Real y (start=-0.5);
    parameter Real pi = 3.1415;
  equation
    0 = homotopy(2*x - 4 + sin(2*pi*x), x+0.5);
    0 = homotopy(2*y - 4 + sin(2*pi*y), 2*y - 4 + sin(2*pi*y) - (2*(-0.5) - 4 + sin(2*pi*(-0.5))));
  end homotopy5;
end initializationTests;
"); getErrorString();

sflags:="-homotopyOnFirstTry";

setCommandLineOptions("--homotopyApproach=adaptiveLocal"); getErrorString();
simulate(initializationTests.homotopy5, startTime=0.0, stopTime=0.0, simflags=sflags); getErrorString();
res := OpenModelica.Scripting.readSimulationResult("initializationTests.homotopy5_res.mat", {time, x}, 2); getErrorString();

print("x=");
val(x, 0.0);

print("y=");
val(x, 0.0);

// Result:
// true
// ""
// "-homotopyOnFirstTry"
// true
// ""
// record SimulationResult
//     resultFile = "initializationTests.homotopy5_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 0.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'initializationTests.homotopy5', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-homotopyOnFirstTry'",
//     messages = "assert            | warning | Homotopy algorithm did not converge.
// |                 | |       | lambda is smaller than -1: lambda=-1.06603
// |                 | |       | You can use -lv=LOG_INIT_HOMOTOPY,LOG_NLS_HOMOTOPY to get more information.
// assert            | info    | The homotopy algorithm is started again with opposing start direction.
// LOG_SUCCESS       | info    | The initialization finished successfully with 69 local homotopy steps.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// {{0.0,0.0},{2.000044743976706,2.000044743976706}}
// ""
// x=
// 2.000044743976706
// y=
// 2.000044743976706
// endResult
