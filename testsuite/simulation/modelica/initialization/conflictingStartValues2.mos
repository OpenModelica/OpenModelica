// name:     conflictingStartValues2
// keywords: initialization conflict
// status: correct
//
// ticket:4329,4603
// cflags: -d=-newInst

loadString("
model start
  parameter Real s = 1;
equation
end start;

model squared
  Real x (start=Start.s);
  Real y (start=10);
  Real z (start=100);
  start Start;
equation
  x*y = 9;
  x = y;
  x = z;
end squared;

model squared2
  squared S (y(start=p2));
  Real z;
  parameter Real p2=3;
equation
  S.x + S.y = S.z + z;
end squared2;

function f
  input Real x;
  output Real y;
algorithm
  y := 3*x;
end f;

model conflictingStartValues2
  squared2 S2 (S.z(start=f(p+p)));
  parameter Real p=-0.5;
equation
end conflictingStartValues2;
");getErrorString();

setCommandLineOptions("-d=aliasConflicts"); getErrorString();
simulate(conflictingStartValues2, stopTime=0.0, simflags="-output S2.S.x,S2.S.y,S2.S.z"); getErrorString();

// Result:
// true
// ""
// true
// ""
// record SimulationResult
//     resultFile = "conflictingStartValues2_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 0.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'conflictingStartValues2', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-output S2.S.x,S2.S.y,S2.S.z'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// time=0,S2.S.x=-3,S2.S.y=-3,S2.S.z=-3
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// "Warning: Alias set with conflicting start values
//  * Candidate: S2.S.x(start = S2.S.Start.s = 1.0, confidence number = 3)
//  * Candidate: S2.S.z(start = f(2.0 * p) = f(-1.0), confidence number = 1)
//  * Candidate: S2.S.y(start = S2.p2 = 3.0, confidence number = 2)
// => Select value from S2.S.z(start = f(2.0 * p) = f(-1.0)) for variable: S2.S.x
// "
// endResult
