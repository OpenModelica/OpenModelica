// name: eventTest
// keywords: initialization, event-iteration
// status: correct
// cflags:
// teardown_command: rm -rf initializationTests.eventTest* _initializationTests.eventTest* output.log
// cflags: -d=-newInst
//
//  case for events during initialization
//

// a := 1
// {der(x) = -14/5, der(y) = 1, x = 1/5, y = 1/5}
// a := 2
// {der(x) = -14/25, der(y) = 11/25, x = 1/5, y = 1/5}

loadString("
within ;
package initializationTests
  model eventTest
    Real x(start=0);
    Real y(start=0);
    Real a;
  initial equation 
    x + y = 2/5;
    x * y = 1/25;
  equation 
    a = if x < 1/25 then 1 else 2;
    a*der(x) + 3*der(y) = x;
    1*der(x) + 4*der(y) = y+1;
  end eventTest;
end initializationTests;
"); getErrorString();

simulate(initializationTests.eventTest, startTime=0.0, stopTime=0.0, simflags="-iim=symbolic"); getErrorString();
res := readSimulationResult("initializationTests.eventTest_res.mat", {time, x, y, der(x), der(y), a}, 2); getErrorString();

// Result:
// true
// ""
// record SimulationResult
//     resultFile = "initializationTests.eventTest_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 0.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'initializationTests.eventTest', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-iim=symbolic'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// {{0.0,0.0},{0.2000000024299068,0.2000000024299068},{0.1999999975700932,0.1999999975700932},{-0.5599999965981304,-0.5599999965981304},{0.4399999985420559,0.4399999985420559},{2.0,2.0}}
// ""
// endResult
