// name: discreteTest1
// keywords: initialization, discrete
// status: correct
// cflags:
// teardown_command: rm -rf initializationTests.discreteTest1* _initializationTests.discreteTest1* output.log
// cflags: -d=-newInst
//
//  case for discrete variables during initialization
//

loadString("
within ;
package initializationTests
  model discreteTest1
    discrete Real d1(start=1, fixed=false); // d1 = 1.1 | pre(d1) = 1.0
    discrete Real d2(start=1, fixed=false); // d2 = 1.0 | pre(d2) = 0.9
    discrete Real d3(start=1, fixed=true);  // d3 = 1.1 | pre(d3) = 1.0

    Real x1;  // 1.0
    Real x2;  // 0.9
    Real x3;  // 1.0
    
  initial equation 
    pre(d1) = 1;
    d2 = 1;

    x1 = pre(d1);
    x2 = pre(d2);
    x3 = pre(d3);

  equation 
    der(x1) = 0;
    der(x2) = 0;
    der(x3) = 0;
   
    when {initial(), sample(0.1, 0.1)} then
      d1 = pre(d1) + 0.1;
      d2 = pre(d2) + 0.1;
      d3 = pre(d3) + 0.1;
    end when;
  end discreteTest1;
end initializationTests;
"); getErrorString();

simulate(initializationTests.discreteTest1, startTime=0.0, stopTime=0.0); getErrorString();
res := OpenModelica.Scripting.readSimulationResult("initializationTests.discreteTest1_res.mat", {time, x1, x2, x3, d1, d2, d3}, 2); getErrorString();

// Result:
// true
// ""
// record SimulationResult
//     resultFile = "initializationTests.discreteTest1_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 0.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'initializationTests.discreteTest1', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// {{0.0,0.0},{1.0,1.0},{0.9,0.9},{1.0,1.0},{1.1,1.1},{1.0,1.0},{1.1,1.1}}
// ""
// endResult
