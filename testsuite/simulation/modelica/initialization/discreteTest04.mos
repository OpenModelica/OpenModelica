// name: discreteTest4
// keywords: initialization, discrete
// status: correct
// cflags:
// teardown_command: rm -rf initializationTests.discreteTest4* _initializationTests.discreteTest4* output.log
// cflags: -d=-newInst
//
//  case for discrete variables during initialization
//

loadString("
within ;
package initializationTests
  model discreteTest4
    Integer i1(start=1, fixed=false); // i1 = 3 | pre(i1) = 1
    Integer i2(start=1, fixed=false); // i2 = 2 | pre(i2) = 1
    Integer i3(start=1, fixed=true);  // i3 = 3 | pre(i3) = 1

    Real x1;  // 1.0
    Real x2;  // 1.0
    Real x3;  // 1.0
    
  initial equation
    pre(i1) = 1;
    pre(i2) = 1;
    
    x1 = pre(i1);
    x2 = pre(i2);
    x3 = pre(i3);

  equation 
    der(x1) = 0;
    der(x2) = 0;
    der(x3) = 0;
    
    i1 = if time > 0.5 then 2 else 3;
    i2 = if time < 0.5 then 2 else 3;
    i3 = if time > 0.5 then 2 else 3;
  end discreteTest4;
end initializationTests;
"); getErrorString();


simulate(initializationTests.discreteTest4, startTime=0.0, stopTime=0.0); getErrorString();
res := OpenModelica.Scripting.readSimulationResult("initializationTests.discreteTest4_res.mat", {time, x1, x2, x3, i1, i2, i3}, 2); getErrorString();

// Result:
// true
// ""
// record SimulationResult
//     resultFile = "initializationTests.discreteTest4_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 0.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'initializationTests.discreteTest4', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// {{0.0,0.0},{1.0,1.0},{1.0,1.0},{1.0,1.0},{3.0,3.0},{2.0,2.0},{3.0,3.0}}
// ""
// endResult
