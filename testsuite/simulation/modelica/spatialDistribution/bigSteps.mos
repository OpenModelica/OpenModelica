// name:                bigSteps.mos
// keywords:            spatialDistribution
// status:              correct
// teardown_command:    rm -f bigStepsModel*
//
// Simple model with fast velocity and big steps.

loadModel(Modelica); getErrorString();
loadString("
  model bigStepsModel
    \"Single conveyor belt transporting sand with fast positive velocity.\"
  extends Modelica.Icons.Example;
  Real leftInput;
  Real rightInput = 0;
  Real leftOutput;
  Real rightOutput;
  constant Real[:] initialPoints(each min = 0, each max = 1) = {0.0, 1.0};
  constant Real[:] initialValues = {0.0, 0.0};
  Real v = 25;
  Boolean posV;
  Real x(start=0, fixed=true);
  Real solution;
  Real err1;
equation
  if time < 1/v then
    solution = 0;
  else
    solution = sin(1/10*(time-1/25));
  end if;
  err1 =  abs(solution - rightOutput);
  leftInput = sin(1/10*time);
  v = der(x);
  posV = v >= 0;
  (leftOutput, rightOutput) = spatialDistribution(leftInput, rightInput, x, posV, initialPoints, initialValues);
  assert(err1 < 2e-3, \"Numerical solution too far from exact one\");
end bigStepsModel;"); getErrorString();

// Simulate
simulate(bigStepsModel, numberOfIntervals=10, stopTime=100); getErrorString();


// Result:
// true
// ""
// true
// ""
// record SimulationResult
//     resultFile = "bigStepsModel_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 100.0, numberOfIntervals = 10, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'bigStepsModel', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// endResult
