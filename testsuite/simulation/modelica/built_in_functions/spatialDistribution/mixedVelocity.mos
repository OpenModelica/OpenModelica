// name:                mixedVelocity.mos
// keywords:            spatialDistribution
// status:              correct
// teardown_command:    rm -f SingleBeltChangingVel*
//
// Simple model with spatialDistribution with changing velocity.

loadModel(Modelica); getErrorString();
loadString("model SingleBeltChangingVel
  \"Single conveyor belt transporting with changing velocity and direction
   and input from the left or right side.\"
  Real leftInput;
  Real rightInput;
  Real leftOutput;
  Real rightOutput;
  constant Real[:] initialPoints(each min = 0, each max = 1) = {0.0, 1.0};
  constant Real[:] initialValues = {0.0, 0.0};
  Real v;
  Boolean posV;
  Real x(start=0, fixed=true);
equation
  if posV then
    leftInput = 1;
    rightInput = 0;
  else
    leftInput = 0;
    rightInput = -1;
  end if;
  if time < 1 then
    v = 2;
  else
    v = -2;
  end if;
  v = der(x);
  posV = v >= 0;
  (leftOutput, rightOutput) = spatialDistribution(leftInput, rightInput, x, posV, initialPoints, initialValues);
end SingleBeltChangingVel;"); getErrorString();

// Simulate
simulate(SingleBeltChangingVel, stopTime=2.0, simflags="-lv=LOG_EVENTS"); getErrorString();

// Result:
// true
// ""
// true
// ""
// record SimulationResult
//     resultFile = "SingleBeltChangingVel_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 2.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'SingleBeltChangingVel', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-lv=LOG_EVENTS'",
//     messages = "LOG_EVENTS        | info    | status of relations at time=0
// |                 | |       | | [1] (pre:  true)  true = time < 1.0
// |                 | |       | | [2] (pre:  true)  true = v >= 0.0
// |                 | |       | | [3] (pre: false) false = spatialDistributionZeroCrossing(0, 2, x, posV)
// LOG_EVENTS        | info    | status of zero crossings at time=0
// |                 | |       | | [1] (pre:  0)  1 = time < 1.0
// |                 | |       | | [2] (pre:  0)  1 = v >= 0.0
// |                 | |       | | [3] (pre:  0) -1 = spatialDistributionZeroCrossing(0, 2, x, posV) > 0.0
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_EVENTS        | info    | state event at time=0.5
// |                 | |       | | [3] spatialDistributionZeroCrossing(0, 2, x, posV) > 0.0
// LOG_EVENTS        | info    | state event at time=1.0000000002
// |                 | |       | | [1] time < 1.0
// LOG_EVENTS        | info    | state event at time=1.5000000002
// |                 | |       | | [3] spatialDistributionZeroCrossing(0, 2, x, posV) > 0.0
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// endResult
