// Name:     ASSC
// keywords: index reduction
// status:   correct
// teardown_command: rm -rf ASSC *_init.xml *_records.c *.exe *.log *_res.mat *.c *.libs *.makefile *.o *.dll *.so *_functions.h *.h *_diff.csv output.log
//
//
//

loadFile("ASSC.mo"); getErrorString();
setCommandLineOptions("-d=dumpASSC,bltdump");
simulate(ASSC); getErrorString();


// Result:
// true
// ""
// true
// record SimulationResult
//     resultFile = "",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'ASSC', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "Simulation execution failed for model: ASSC
// stdout            | warning | The default linear solver fails, the fallback solver with total pivoting is started at time 0.000000. That might raise performance issues, for more information use -lv LOG_LS.
// stdout            | warning | Error solving linear system of equations (no. 7) at time 0.000000.
// stdout            | warning | Solving linear system 7 fails at time 0. For more information use -lv LOG_LS.
// assert            | debug   | Solving linear system 7 failed at time=0.
// |                 | |       | For more information please use -lv LOG_LS.
// assert            | info    | simulation terminated by an assertion at initialization
// "
// end SimulationResult;
// "Warning: The linear system:
// 1 : 2.0 * (a + b) + c + x = 10.0
// 2 : a + b + c = 0.0
// 3 : a + b + y = 5.0
// [
//   2.0 , 2.0 , 1.0 ;
//   1.0 , 1.0 , 1.0 ;
//   1.0 , 1.0 , 0.0
// ]
//   *
// [
//   a ;
//   b ;
//   c
// ]
//   =
// [
//   10.0 - x ;
//   0.0 ;
//   5.0 - y
// ]
//  might be structurally or numerically singular for variable b since U(2,2) = 0.0. It might be hard to solve. Compilation continues anyway.
// Warning: The linear system:
// 1 : 2.0 * (a + b) + c + x = 10.0
// 2 : a + b + y = 5.0
// 3 : a + b + c = 0.0
// [
//   1.0 , 2.0 , 2.0 ;
//   0.0 , 1.0 , 1.0 ;
//   1.0 , 1.0 , 1.0
// ]
//   *
// [
//   c ;
//   a ;
//   b
// ]
//   =
// [
//   10.0 - x ;
//   5.0 - y ;
//   0.0
// ]
//  might be structurally or numerically singular for variable b since U(3,3) = 0.0. It might be hard to solve. Compilation continues anyway.
// Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions("-d=initialization").
// Warning: The linear system:
// 1 : 2.0 * (a + b) + c + x = 10.0
// 2 : a + b + c = 0.0
// 3 : a + b + y = 5.0
// [
//   2.0 , 1.0 , 2.0 ;
//   1.0 , 1.0 , 1.0 ;
//   1.0 , 0.0 , 1.0
// ]
//   *
// [
//   b ;
//   c ;
//   a
// ]
//   =
// [
//   10.0 - x ;
//   0.0 ;
//   5.0 - y
// ]
//  might be structurally or numerically singular for variable a since U(3,3) = 0.0. It might be hard to solve. Compilation continues anyway.
// "
// endResult
