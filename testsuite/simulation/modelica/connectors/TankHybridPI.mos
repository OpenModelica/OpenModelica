// name:     TankHybridPI
// keywords: <insert keywords here>
// cflags: +std=2.x -d=-newInst
// status: correct
// teardown_command: rm -rf TankHybridPI_* TankHybridPI TankHybridPI.exe TankHybridPI.cpp TankHybridPI.makefile TankHybridPI.libs TankHybridPI.log output.log
// 
//  //??Error - simulates too short time
//
// Drmodelica: 13.3 Hybrid Tank Model with a Discrete Controller (p. 460)
// 
loadFile("TankHybridPI.mo");
simulate(TankHybridPI,stopTime=250,numberOfIntervals=250, tolerance=1e-5); // 2 intervals == 3 values
echo(false); // turns of output 

x:=val(tank.h,25.0);
y:=val(tank.h,100.0);
z:=val(tank.h,150.0);
w:=val(tank.h,200.0);
x:=1000*x;
y:=1000*y;
z:=1000*z;
w:=1000*w;
x:=floor(x);
y:=floor(y);
z:=floor(z);
w:=floor(w);

echo(true); // turns on output
x/1000.0; // rounded value to 3 digits
y/1000.0;
z/1000.0;
w/1000.0;

// Result:
// true
// record SimulationResult
//     resultFile = "TankHybridPI_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 250.0, numberOfIntervals = 250, tolerance = 1e-05, method = 'dassl', fileNamePrefix = 'TankHybridPI', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// true
// 0.439
// 0.254
// 0.249
// 0.215
// endResult
