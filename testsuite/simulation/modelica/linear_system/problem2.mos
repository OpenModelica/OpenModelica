// name: problem2
// keywords: linear system of equations
// status: correct
// teardown_command: rm -rf linear_system.problem2* output.log
// cflags: -d=-newInst
//
// Solving of a linear system of equations

loadFile("linearTestPackage.mo"); getErrorString();

simulate(linear_system.problem2);
getErrorString();

val(u3, 0.0);
val(u3, 1.0);
val(i2, 0.0);
val(i2, 1.0);


simulate(linear_system.problem2, simflags="-ls lapack");
getErrorString();

val(u3, 0.0);
val(u3, 1.0);
val(i2, 0.0);
val(i2, 1.0);


simulate(linear_system.problem2, simflags="-ls umfpack");
getErrorString();

val(u3, 0.0);
val(u3, 1.0);
val(i2, 0.0);
val(i2, 1.0);


simulate(linear_system.problem2, simflags="-ls lis");
getErrorString();

val(u3, 0.0);
val(u3, 1.0);
val(i2, 0.0);
val(i2, 1.0);

simulate(linear_system.problem2, simflags="-ls klu");
getErrorString();

val(u3, 0.0);
val(u3, 1.0);
val(i2, 0.0);
val(i2, 1.0);

simulate(linear_system.problem2, simflags="-ls totalpivot");
getErrorString();

val(u3, 0.0);
val(u3, 1.0);
val(i2, 0.0);
val(i2, 1.0);


setCommandLineOptions("-d=dumpRecursiveTearing --recursiveTearing=1");

simulate(linear_system.problem2, simflags="-ls lis");
getErrorString();

val(u3, 0.0);
val(u3, 1.0);
val(i2, 0.0);
val(i2, 1.0);


setCommandLineOptions("--maxSizeLinearTearing=0");

simulate(linear_system.problem2);
getErrorString();

val(u3, 0.0);
val(u3, 1.0);
val(i2, 0.0);
val(i2, 1.0);


simulate(linear_system.problem2, simflags="-ls lapack");
getErrorString();

val(u3, 0.0);
val(u3, 1.0);
val(i2, 0.0);
val(i2, 1.0);


simulate(linear_system.problem2, simflags="-ls umfpack");
getErrorString();

val(u3, 0.0);
val(u3, 1.0);
val(i2, 0.0);
val(i2, 1.0);


simulate(linear_system.problem2, simflags="-ls lis");
getErrorString();

val(u3, 0.0);
val(u3, 1.0);
val(i2, 0.0);
val(i2, 1.0);

simulate(linear_system.problem2, simflags="-ls klu");
getErrorString();

val(u3, 0.0);
val(u3, 1.0);
val(i2, 0.0);
val(i2, 1.0);

simulate(linear_system.problem2, simflags="-ls totalpivot");
getErrorString();

val(u3, 0.0);
val(u3, 1.0);
val(i2, 0.0);
val(i2, 1.0);


// Result:
// true
// ""
// record SimulationResult
//     resultFile = "linear_system.problem2_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'linear_system.problem2', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// 0.0
// 2.804903282692988
// 0.0
// 0.2804903282692988
// record SimulationResult
//     resultFile = "linear_system.problem2_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'linear_system.problem2', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-ls lapack'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// 0.0
// 2.804903282692988
// 0.0
// 0.2804903282692988
// record SimulationResult
//     resultFile = "linear_system.problem2_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'linear_system.problem2', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-ls umfpack'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// 0.0
// 2.804903282692988
// 0.0
// 0.2804903282692988
// record SimulationResult
//     resultFile = "linear_system.problem2_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'linear_system.problem2', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-ls lis'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// 0.0
// 2.804903282692988
// 0.0
// 0.2804903282692988
// record SimulationResult
//     resultFile = "linear_system.problem2_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'linear_system.problem2', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-ls klu'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// 0.0
// 2.804903282692988
// 0.0
// 0.2804903282692988
// record SimulationResult
//     resultFile = "linear_system.problem2_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'linear_system.problem2', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-ls totalpivot'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// 0.0
// 2.804903282692988
// 0.0
// 0.2804903282692988
// true
// INeqn => i3 = u2 / r3[1]
// INeqn => i2 = u2 / r2[2]
// INeqn => i1 = i3 + i2[3]
// INeqn => u1 = r1 * i1[4]
// INres => u1 + u2 = u0[1]
// OUTeqn => i3 = u2 / r3[0]
// OUTeqn => i2 = u2 / r2[1]
// OUTeqn => i1 = __OMC__1$RTEARINGF * u2[2]
// OUTeqn => u1 = __OMC__2$RTEARINGF * u2[3]
// OUTres => __OMC__3$RTEARINGF * u2 = u0[0]
// ****************
// TearVar: u2[0]
// ****************
// INeqn => i2 = u2 / r2[1]
// INeqn => i3 = u2 / r3[2]
// INeqn => i1 = i3 + i2[3]
// INeqn => u1 = r1 * i1[4]
// INres => u1 + u2 = u0[1]
// OUTeqn => i2 = u2 / r2[0]
// OUTeqn => i3 = u2 / r3[1]
// OUTeqn => i1 = __OMC__1$RTEARINGF * u2[2]
// OUTeqn => u1 = __OMC__2$RTEARINGF * u2[3]
// OUTres => __OMC__3$RTEARINGF * u2 = u0[0]
// ****************
// TearVar: u2[0]
// ****************
// record SimulationResult
//     resultFile = "linear_system.problem2_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'linear_system.problem2', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-ls lis'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// 0.0
// 2.804903282692988
// 0.0
// 0.2804903282692989
// true
// record SimulationResult
//     resultFile = "linear_system.problem2_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'linear_system.problem2', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// 0.0
// 2.804903282692988
// 0.0
// 0.2804903282692989
// record SimulationResult
//     resultFile = "linear_system.problem2_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'linear_system.problem2', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-ls lapack'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// 0.0
// 2.804903282692988
// 0.0
// 0.2804903282692989
// record SimulationResult
//     resultFile = "linear_system.problem2_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'linear_system.problem2', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-ls umfpack'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// 0.0
// 2.804903282692989
// 0.0
// 0.2804903282692989
// record SimulationResult
//     resultFile = "linear_system.problem2_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'linear_system.problem2', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-ls lis'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// 9.518569369879021e-28
// 2.804903282692988
// 2.655481430415245e-28
// 0.2804903282692989
// record SimulationResult
//     resultFile = "linear_system.problem2_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'linear_system.problem2', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-ls klu'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// 0.0
// 2.804903282692988
// 0.0
// 0.2804903282692989
// record SimulationResult
//     resultFile = "linear_system.problem2_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'linear_system.problem2', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-ls totalpivot'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// 0.0
// 2.804903282692988
// 0.0
// 0.2804903282692988
// endResult
