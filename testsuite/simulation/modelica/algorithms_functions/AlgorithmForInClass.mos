// name:     AlgorithmForInClass
// keywords: algorithm, for, class
// status: correct
// teardown_command: rm -rf AlgorithmForInClass_* AlgorithmForInClass.cpp AlgorithmForInClass.makefile AlgorithmForInClass AlgorithmForInClass.exe AlgorithmForInClass.libs AlgorithmForInClass.log output.log
// cflags: -d=-newInst
// 
//  Tests for-statements in algorithm-sections in classes.
//
loadFile("AlgorithmForInClass.mo");
getErrorString();
instantiateModel(AlgorithmForInClass);
getErrorString();
simulate(AlgorithmForInClass,numberOfIntervals=2); // 2 intervals == 3 values
getErrorString();
val(accum_sum[5],0.0); 
val(accum_sum[5],0.5);
val(accum_sum[5],1.0);
val(S[2],0.0); 
val(S[2],0.5);
val(S[2],1.0);
val(sum2[6],0.0); 
val(sum2[6],0.5);
val(sum2[6],1.0);
val(sum3[2,2],0.0); 
val(sum3[2,2],0.5);
val(sum3[2,2],1.0);

// Result:
// true
// ""
// "class AlgorithmForInClass
//   Real accum_sum[1];
//   Real accum_sum[2];
//   Real accum_sum[3];
//   Real accum_sum[4];
//   Real accum_sum[5];
//   parameter Real N = 3.0;
//   Real S[1];
//   Real S[2];
//   Real S[3];
//   Real sum2[1];
//   Real sum2[2];
//   Real sum2[3];
//   Real sum2[4];
//   Real sum2[5];
//   Real sum2[6];
//   Real sum3[1,1];
//   Real sum3[1,2];
//   Real sum3[1,3];
//   Real sum3[2,1];
//   Real sum3[2,2];
//   Real sum3[2,3];
//   Real sum3[3,1];
//   Real sum3[3,2];
//   Real sum3[3,3];
//   parameter Real v1[1] = 3.0;
//   parameter Real v1[2] = 9.0;
//   parameter Real v1[3] = 4.0;
//   parameter Real v2[1] = 2.0;
//   parameter Real v2[2] = 4.0;
//   parameter Real v2[3] = 1.0;
// algorithm
//   accum_sum[1] := 1.0;
//   for i in 2:5 loop
//     accum_sum[i] := accum_sum[-1 + i] + /*Real*/(i);
//   end for;
//   for i in 1:3 loop
//     S[i] := v1[i] + v2[i];
//   end for;
//   sum2[1] := 3.0;
//   for i in 1:3 loop
//     for j in 1:3 loop
//       sum2[i + j] := v1[i] + v2[j];
//       sum3[i,j] := v2[i] + v1[j];
//     end for;
//   end for;
// end AlgorithmForInClass;
// "
// ""
// record SimulationResult
//     resultFile = "AlgorithmForInClass_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 2, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'AlgorithmForInClass', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// 15.0
// 15.0
// 15.0
// 13.0
// 13.0
// 13.0
// 5.0
// 5.0
// 5.0
// 13.0
// 13.0
// 13.0
// endResult
