// name: InverseAlgorithm1
// keywords: inverse algorithm
// status: correct
// cflags: -d=-newInst

loadString("
model InverseAlgorithm1
  Real x;
  Real y, z;
initial equation
  y = 0.2;
equation
  der(x) = y;
algorithm
  y := sin(x);
  z := y;
end InverseAlgorithm1;
"); getErrorString();

simulate(InverseAlgorithm1, simflags="-lv=LOG_SOTI"); getErrorString();

// Result:
// true
// ""
// record SimulationResult
//     resultFile = "InverseAlgorithm1_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'InverseAlgorithm1', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-lv=LOG_SOTI'",
//     messages = "LOG_SOTI          | info    | ### SOLUTION OF THE INITIALIZATION ###
// |                 | |       | | states variables
// |                 | |       | | | [1] Real x(start=0, nominal=1) = 0.201358 (pre: 0)
// |                 | |       | | derivatives variables
// |                 | |       | | | [2] Real der(x) = 0.2 (pre: 0)
// |                 | |       | | other real variables
// |                 | |       | | | [3] Real y(start=0, nominal=1) = 0.2 (pre: 0)
// |                 | |       | | | [4] Real z(start=0, nominal=1) = 0.2 (pre: 0)
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// endResult
