// name: problem2-imprk
// status: correct
// teardown_command: rm -f testSolver.problem2* output.log

stopTime := 321.8122;
loadFile("testSolverPackage.mo"); getErrorString();
//default order 5
simulate(testSolver.problem2, stopTime=stopTime, numberOfIntervals=3000, method="imprungekutta", tolerance=1e-6); getErrorString();

res := OpenModelica.Scripting.compareSimulationResults("testSolver.problem2_res.mat",
  getEnvironmentVar("REFERENCEFILES")+"/solver/testSolver.problem2.mat",
  "testSolver.problem2_diff.csv",0.001,0.01,
{
"y[1]",
"y[2]",
"y[3]",
"y[4]",
"y[5]",
"y[6]",
"y[7]",
"y[8]",
"der(y[1])",
"der(y[2])",
"der(y[3])",
"der(y[4])",
"der(y[5])",
"der(y[6])",
"der(y[7])",
"der(y[8])"
});
getErrorString();

//order 3
simulate(testSolver.problem2, stopTime=stopTime, numberOfIntervals=3000, method="imprungekutta", simflags="-impRKOrder=3", tolerance=1e-6); getErrorString();

res := OpenModelica.Scripting.compareSimulationResults("testSolver.problem2_res.mat",
  getEnvironmentVar("REFERENCEFILES")+"/solver/testSolver.problem2.mat",
  "testSolver.problem2_diff.csv",0.001,0.01,
{
"y[1]",
"y[2]",
"y[3]",
"y[4]",
"y[5]",
"y[6]",
"y[7]",
"y[8]",
"der(y[1])",
"der(y[2])",
"der(y[3])",
"der(y[4])",
"der(y[5])",
"der(y[6])",
"der(y[7])",
"der(y[8])"
});
getErrorString();

//order 4
simulate(testSolver.problem2, stopTime=stopTime, numberOfIntervals=3000, method="imprungekutta", simflags="-impRKOrder=4",tolerance=1e-6); getErrorString();

res := OpenModelica.Scripting.compareSimulationResults("testSolver.problem2_res.mat",
  getEnvironmentVar("REFERENCEFILES")+"/solver/testSolver.problem2.mat",
  "testSolver.problem2_diff.csv",0.001,0.01,
{
"y[1]",
"y[2]",
"y[3]",
"y[4]",
"y[5]",
"y[6]",
"y[7]",
"y[8]",
"der(y[1])",
"der(y[2])",
"der(y[3])",
"der(y[4])",
"der(y[5])",
"der(y[6])",
"der(y[7])",
"der(y[8])"
});
getErrorString();

//order 6
simulate(testSolver.problem2, stopTime=stopTime, numberOfIntervals=3000, method="imprungekutta", simflags="-impRKOrder=6", tolerance=1e-6); getErrorString();

res := OpenModelica.Scripting.compareSimulationResults("testSolver.problem2_res.mat",
  getEnvironmentVar("REFERENCEFILES")+"/solver/testSolver.problem2.mat",
  "testSolver.problem2_diff.csv",0.001,0.01,
{
"y[1]",
"y[2]",
"y[3]",
"y[4]",
"y[5]",
"y[6]",
"y[7]",
"y[8]",
"der(y[1])",
"der(y[2])",
"der(y[3])",
"der(y[4])",
"der(y[5])",
"der(y[6])",
"der(y[7])",
"der(y[8])"
});
getErrorString();


// Result:
// 321.8122
// true
// ""
// record SimulationResult
//     resultFile = "testSolver.problem2_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 321.8122, numberOfIntervals = 3000, tolerance = 1e-06, method = 'imprungekutta', fileNamePrefix = 'testSolver.problem2', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions(\"-d=initialization\").
// "
// {"Files Equal!"}
// "Warning: 'compareSimulationResults' is deprecated. It is recommended to use 'diffSimulationResults' instead.
// "
// record SimulationResult
//     resultFile = "testSolver.problem2_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 321.8122, numberOfIntervals = 3000, tolerance = 1e-06, method = 'imprungekutta', fileNamePrefix = 'testSolver.problem2', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-impRKOrder=3'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions(\"-d=initialization\").
// "
// {"Files Equal!"}
// "Warning: 'compareSimulationResults' is deprecated. It is recommended to use 'diffSimulationResults' instead.
// "
// record SimulationResult
//     resultFile = "testSolver.problem2_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 321.8122, numberOfIntervals = 3000, tolerance = 1e-06, method = 'imprungekutta', fileNamePrefix = 'testSolver.problem2', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-impRKOrder=4'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions(\"-d=initialization\").
// "
// {"Files Equal!"}
// "Warning: 'compareSimulationResults' is deprecated. It is recommended to use 'diffSimulationResults' instead.
// "
// record SimulationResult
//     resultFile = "testSolver.problem2_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 321.8122, numberOfIntervals = 3000, tolerance = 1e-06, method = 'imprungekutta', fileNamePrefix = 'testSolver.problem2', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-impRKOrder=6'",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions(\"-d=initialization\").
// "
// {"Files Equal!"}
// "Warning: 'compareSimulationResults' is deprecated. It is recommended to use 'diffSimulationResults' instead.
// "
// endResult
