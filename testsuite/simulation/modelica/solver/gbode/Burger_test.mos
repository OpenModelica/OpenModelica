// name: Burger_01
// status: correct
// teardown_command: rm -rf temp_Burger_01/
//
// Test all available generic Runge-Kutta solvers with all available non-linear solver methods.

loadFile("Burger_Equations.mo");
getErrorString();

loadString("
model burgerEq
  extends Burger_Equations.Burger_equation_03(N=600);
end burgerEq;
"); getErrorString();

echo(false);
system("rm -rf temp_Burger/ && mkdir temp_Burger/");
cd("temp_Burger");
echo(true);

setCommandLineOptions("--generateSymbolicJacobian"); getErrorString();

// Build model
buildModel(burgerEq); getErrorString();

// Create reference results
system("./burgerEq -s=dassl -r burgerEq_ref.mat ", "refSimulation.log");
print(readFile("refSimulation.log"));

// Simulate with ESDIRK3 and KINSOL+KLU
system("./burgerEq -s=gbode -gbm=adams -gbfm=adams -gbratio=.04 -gbnls=kinsol", "burgerEq_test.log");
print(readFile("burgerEq_test.log"));

diffSimulationResults(actualFile = "burgerEq_res.mat",
                      expectedFile = "burgerEq_ref.mat",
                      diffPrefix = "diff",
                      vars = {"y[291]", "y[292]", "y[293]", "y[294]", "y[295]", "y[296]", "y[297]", "y[298]", "y[299]", "y[300]",
                              "y[301]", "y[302]", "y[303]", "y[304]", "y[305]", "y[306]", "y[307]", "y[308]", "y[309]", "y[310]"});
getErrorString();


// Result:
// true
// ""
// true
// ""
// true
// true
// ""
// {"burgerEq","burgerEq_init.xml"}
// ""
// 0
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
//
// 0
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
//
// (true,{})
// ""
// endResult
