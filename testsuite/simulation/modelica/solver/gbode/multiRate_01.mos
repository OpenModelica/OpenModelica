// name: multiRate_01
// status: correct
// teardown_command: rm -rf SlowFastDynamics_* *.log SlowFastDynamics.bat
//
// Test all available generic Runge-Kutta solvers with all available non-linear solver methods.

loadString("
model SlowFastDynamics
  parameter Real epsilon = 3;
  parameter Real corr = 0.01;
  parameter Real fast = 7;
  parameter Real slow = 0.1;
  Real y[2](start = {1,1}, each fixed=true);
equation
  der(y) = {-y[1] - corr*y[2] + fast*sin(fast*time), corr*y[1] - epsilon*y[2] - cos(slow*time)};
  annotation(experiment(StopTime=20));
end SlowFastDynamics;");
getErrorString();

rkMethods := {"expl_euler",
              "impl_euler",
              "sdirk3",
              "esdirk2",
              "esdirk3",
              "esdirk4",
              "merson",
              "dopri45 -gbint=dense_output_errctrl"};

nlsMethods := {"newton"};

setCommandLineOptions("--generateDynamicJacobian=symbolic"); getErrorString();

// Build model
buildModel(SlowFastDynamics);
getErrorString();

// Create reference results
system(realpath(".") + "/SlowFastDynamics -s=dassl -r SlowFastDynamics_ref.mat ", "refSimulation.log");
print(readFile("refSimulation.log"));

// Test all RK methods
for rkMethod in rkMethods loop
  for nlsMethod in nlsMethods loop
    print("\n--------------------------------------------------------\n");
    print("Running RK " + rkMethod + " with NLS " + nlsMethod + ":\n");
    logFile := "SlowFastDynamics_"+ rkMethod + "_" + nlsMethod + ".log";
    system(realpath(".") + "/SlowFastDynamics -s=gbode -gbratio=0.5 -gbm=" + rkMethod + " -gbnls=" + nlsMethod, logFile);
    print(readFile(logFile) + "\n");

    (success, failVars) := diffSimulationResults(actualFile = "SlowFastDynamics_res.mat",
                                 expectedFile = "SlowFastDynamics_ref.mat",
                                 diffPrefix = "diff_" + rkMethod + "_" + nlsMethod,
                                 vars = {"der(y[1])", "der(y[2])"});
    if size(failVars, 1) > 0 then
      print("Failed vars:\n");
      for var in failVars loop
        print("\t" + var + "\n");
      end for;
    end if;
    if not success then
      print("Failed to compare simulation results\n");
      print(getErrorString() + "\n");
    end if;
  end for;
end for;

// Result:
// true
// ""
// {"expl_euler", "impl_euler", "sdirk3", "esdirk2", "esdirk3", "esdirk4", "merson", "dopri45 -gbint=dense_output_errctrl"}
// {"newton"}
// true
// ""
// {"SlowFastDynamics", "SlowFastDynamics_init.xml"}
// ""
// 0
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
//
//
// --------------------------------------------------------
// Running RK expl_euler with NLS newton:
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
//
//
// --------------------------------------------------------
// Running RK impl_euler with NLS newton:
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
//
//
// --------------------------------------------------------
// Running RK sdirk3 with NLS newton:
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
//
//
// --------------------------------------------------------
// Running RK esdirk2 with NLS newton:
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
//
//
// --------------------------------------------------------
// Running RK esdirk3 with NLS newton:
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
//
//
// --------------------------------------------------------
// Running RK esdirk4 with NLS newton:
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
//
//
// --------------------------------------------------------
// Running RK merson with NLS newton:
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
//
//
// --------------------------------------------------------
// Running RK dopri45 -gbint=dense_output_errctrl with NLS newton:
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
//
//
// endResult
