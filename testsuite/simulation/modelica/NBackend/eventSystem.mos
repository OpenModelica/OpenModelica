// name: eventSystem
// keywords: NewBackend
// status: correct

loadString("
model eventSystem
  Real x1(start = 0.0, fixed = true);
  Real x2(start = -1.0, fixed = true);
  Real x3(start = 1.0, fixed = true);
  Real z;
  parameter Real t = 0.2;
equation
  assert(z <= 1, \"z is wrong\");

  when t < time then
    x1 = pre(x1) + 1;
  end when;

  when sample(0.1, t) then
    x2 = pre(x2) + 0.5;
  end when;

  z = sin(time);
  when z > 0.5 then
    x3 = pre(x3) + 2;
  end when;
end eventSystem;
"); getErrorString();

setCommandLineOptions("--newBackend -d=bltdump"); getErrorString();
simulate(eventSystem); getErrorString();

val(x1, 0.19);
val(x1, 0.21);

val(x2, 0.29);
val(x2, 0.31);

val(x3, 0.52);
val(x3, 0.53);

// Result:
// true
// ""
// true
// ""
// ################################################################################
//
// 	[ODE] Differential-Algebraic: (Causalize)
//
// ################################################################################
//
// ========================================
// CONTINUOUS ODE System
// ========================================
//
// BLOCK 1: Single Equation
// ----------------------------------------
// ### Variable:
// 	Real z
// ### Equation:
// 	[SCAL] (1) z = sin(time) ($RES_SIM_1)
//
// BLOCK 2: Single Equation
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_1
// ### Equation:
// 	[SCAL] (1) $SEV_1 = z <= 1.0 ($RES_EVT_7)
//
// BLOCK 3: Single Equation
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_0
// ### Equation:
// 	[SCAL] (1) $SEV_0 = z > 0.5 ($RES_EVT_8)
//
// BLOCK 4: Single Equation
// ----------------------------------------
// ### Variable:
// 	Real x3
// ### Equation:
// 	[WHEN] (1) when $SEV_0 then
// 	[----]   x3 := $PRE.x3 + 2.0
// 	[----] end when;
//
// ========================================
// CONTINUOUS ODE System
// ========================================
//
// BLOCK 1: Single Equation
// ----------------------------------------
// ### Variable:
// 	Boolean $TEV_0
// ### Equation:
// 	[SCAL] (1) $TEV_0 = sample(1, 0.1, t) ($RES_EVT_5)
//
// BLOCK 2: Single Equation
// ----------------------------------------
// ### Variable:
// 	Real x2
// ### Equation:
// 	[WHEN] (1) when $TEV_0 then
// 	[----]   x2 := $PRE.x2 + 0.5
// 	[----] end when;
//
// ========================================
// CONTINUOUS ODE System
// ========================================
//
// BLOCK 1: Single Equation
// ----------------------------------------
// ### Variable:
// 	Boolean $TEV_1
// ### Equation:
// 	[SCAL] (1) $TEV_1 = sample(2, t, 4.611686018427388e+18) ($RES_EVT_6)
//
// BLOCK 2: Single Equation
// ----------------------------------------
// ### Variable:
// 	Real x1
// ### Equation:
// 	[WHEN] (1) when $TEV_1 then
// 	[----]   x1 := $PRE.x1 + 1.0
// 	[----] end when;
//
// ========================================
// Event Info
// ========================================
//
// Time Events
// ****************************************
// 	(2) time > t
// 	(1) sample(0.1, t)
// State Events
// ****************************************
// 	[DISC] (1) Boolean $SEV_1 = z <= 1.0
// 	[DISC] (1) Boolean $SEV_0 = z > 0.5
//
// ################################################################################
//
// 	[ODE] Differential-Algebraic: (Causalize)
//
// ################################################################################
//
// ========================================
// CONTINUOUS ODE System
// ========================================
//
// BLOCK 1: Single Equation
// ----------------------------------------
// ### Variable:
// 	Real z
// ### Equation:
// 	[SCAL] (1) z = sin(time) ($RES_SIM_1)
//
// BLOCK 2: Single Equation
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_1
// ### Equation:
// 	[SCAL] (1) $SEV_1 = z <= 1.0 ($RES_EVT_7)
//
// BLOCK 3: Single Equation
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_0
// ### Equation:
// 	[SCAL] (1) $SEV_0 = z > 0.5 ($RES_EVT_8)
//
// BLOCK 4: Single Equation
// ----------------------------------------
// ### Variable:
// 	Real x3
// ### Equation:
// 	[WHEN] (1) when $SEV_0 then
// 	[----]   x3 := $PRE.x3 + 2.0
// 	[----] end when;
//
// ========================================
// CONTINUOUS ODE System
// ========================================
//
// BLOCK 1: Single Equation
// ----------------------------------------
// ### Variable:
// 	Boolean $TEV_0
// ### Equation:
// 	[SCAL] (1) $TEV_0 = sample(1, 0.1, t) ($RES_EVT_5)
//
// BLOCK 2: Single Equation
// ----------------------------------------
// ### Variable:
// 	Real x2
// ### Equation:
// 	[WHEN] (1) when $TEV_0 then
// 	[----]   x2 := $PRE.x2 + 0.5
// 	[----] end when;
//
// ========================================
// CONTINUOUS ODE System
// ========================================
//
// BLOCK 1: Single Equation
// ----------------------------------------
// ### Variable:
// 	Boolean $TEV_1
// ### Equation:
// 	[SCAL] (1) $TEV_1 = sample(2, t, 4.611686018427388e+18) ($RES_EVT_6)
//
// BLOCK 2: Single Equation
// ----------------------------------------
// ### Variable:
// 	Real x1
// ### Equation:
// 	[WHEN] (1) when $TEV_1 then
// 	[----]   x1 := $PRE.x1 + 1.0
// 	[----] end when;
//
// ################################################################################
//
// 	[INI] Initialization: (Causalize)
//
// ################################################################################
//
// ========================================
// CONTINUOUS INI System
// ========================================
//
// BLOCK 1: Single Equation
// ----------------------------------------
// ### Variable:
// 	Boolean $TEV_0
// ### Equation:
// 	[SCAL] (1) $TEV_0 = sample(1, 0.1, t) ($RES_EVT_5)
//
// BLOCK 2: Single Equation
// ----------------------------------------
// ### Variable:
// 	Boolean $TEV_1
// ### Equation:
// 	[SCAL] (1) $TEV_1 = sample(2, t, 4.611686018427388e+18) ($RES_EVT_6)
//
// ========================================
// CONTINUOUS INI System
// ========================================
//
// BLOCK 1: Single Equation
// ----------------------------------------
// ### Variable:
// 	Real x1
// ### Equation:
// 	[SIMP] (1) x1 = $START.x1 ($RES_SRT_9)
//
// BLOCK 2: Single Equation
// ----------------------------------------
// ### Variable:
// 	Real $PRE.x1
// ### Equation:
// 	[SIMP] (1) $PRE.x1 = x1 ($RES_PRE_14)
//
// ========================================
// CONTINUOUS INI System
// ========================================
//
// BLOCK 1: Single Equation
// ----------------------------------------
// ### Variable:
// 	Real x2
// ### Equation:
// 	[SIMP] (1) x2 = $START.x2 ($RES_SRT_10)
//
// BLOCK 2: Single Equation
// ----------------------------------------
// ### Variable:
// 	Real $PRE.x2
// ### Equation:
// 	[SIMP] (1) $PRE.x2 = x2 ($RES_PRE_13)
//
// ========================================
// CONTINUOUS INI System
// ========================================
//
// BLOCK 1: Single Equation
// ----------------------------------------
// ### Variable:
// 	Real z
// ### Equation:
// 	[SCAL] (1) z = sin(time) ($RES_SIM_1)
//
// BLOCK 2: Single Equation
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_1
// ### Equation:
// 	[SCAL] (1) $SEV_1 = z <= 1.0 ($RES_EVT_7)
//
// BLOCK 3: Single Equation
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_0
// ### Equation:
// 	[SCAL] (1) $SEV_0 = z > 0.5 ($RES_EVT_8)
//
// ========================================
// CONTINUOUS INI System
// ========================================
//
// BLOCK 1: Single Equation
// ----------------------------------------
// ### Variable:
// 	Real x3
// ### Equation:
// 	[SIMP] (1) x3 = $START.x3 ($RES_SRT_11)
//
// BLOCK 2: Single Equation
// ----------------------------------------
// ### Variable:
// 	Real $PRE.x3
// ### Equation:
// 	[SIMP] (1) $PRE.x3 = x3 ($RES_PRE_12)
//
// ========================================
// Event Info
// ========================================
//
// Time Events
// ****************************************
// 	(2) time > t
// 	(1) sample(0.1, t)
// State Events
// ****************************************
// 	[DISC] (1) Boolean $SEV_1 = z <= 1.0
// 	[DISC] (1) Boolean $SEV_0 = z > 0.5
//
// record SimulationResult
//     resultFile = "eventSystem_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'eventSystem', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// 0.0
// 1.0
// -0.5
// 0.0
// 1.0
// 3.0
// endResult
