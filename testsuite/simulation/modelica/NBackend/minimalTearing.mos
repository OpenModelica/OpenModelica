// name: minimalTearing
// keywords: NewBackend
// status: correct


loadString("
model minimalTearing
  Real y;
  Integer i;
equation
  i = if y > 0 then 1 else 2;
  y = cos(time + 1) * i;
end minimalTearing;
"); getErrorString();

setCommandLineOptions("--newBackend -d=tearingdump"); getErrorString();

simulate(minimalTearing); getErrorString();

// Result:
// true
// ""
// true
// ""
// ################################################################################
//
// 	[INI] Tearing
//
// ################################################################################
//
// BLOCK: Torn Algebraic Loop (Linear = false, Mixed = false)
// ----------------------------------------
// Strict Tearing Set
// ****************************************
// ### Iteration Variables:
// 	Real y
//
// ### Residual Equations:
// 	[SCAL] (1) $RES_SIM_0 = cos(1.0 + time) * CAST(Real, i) - y ($RES_SIM_0) ;
// ### Inner Equations:
// 	([DISC] (1) Boolean $SEV_0) [SCAL] (1) $SEV_0 = y > 0.0 ($RES_EVT_2)
// 	([DISC] (1) Integer i) [SCAL] (1) i = if $SEV_0 then 1 else 2 ($RES_SIM_1)
//
// ################################################################################
//
// 	[NLS] Jacobian INI_NLS_JAC_1: NLS
//
// ################################################################################
//
// Partial Derivative Variables (1/1)
// ****************************************
// (1)       [JACV] (1) Real $pDER_INI_NLS_JAC_1.$RES_SIM_0
//
// Seed Variables (1/1)
// ****************************************
// (1)       [SEED] (1) Real $SEED_INI_NLS_JAC_1.y
//
// BLOCK 1: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Real $pDER_INI_NLS_JAC_1.$RES_SIM_0
// ### Equation:
// 	[SCAL] (1) $pDER_INI_NLS_JAC_1.$RES_SIM_0 = -$SEED_INI_NLS_JAC_1.y ($RES_INI_NLS_JAC_1_0)
//
// ========================================
// Sparsity Pattern (nnz: 1)
// ========================================
//
// ### Columns ###
// ----------------------------------------
// (y)	 affects:	{$RES_SIM_0}
//
// ##### Rows #####
// ----------------------------------------
// ($RES_SIM_0)	 depends on:	{y}
//
// ========================================
// Sparsity Coloring
// ========================================
// Color (1)
//   - Column: {y}
//   - Row:    {$RES_SIM_0}
//
//
// ################################################################################
//
// 	[ODE] Tearing
//
// ################################################################################
//
// BLOCK: Torn Algebraic Loop (Linear = false, Mixed = false)
// ----------------------------------------
// Strict Tearing Set
// ****************************************
// ### Iteration Variables:
// 	Real y
//
// ### Residual Equations:
// 	[SCAL] (1) $RES_SIM_0 = cos(1.0 + time) * CAST(Real, i) - y ($RES_SIM_0) ;
// ### Inner Equations:
// 	([DISC] (1) Boolean $SEV_0) [SCAL] (1) $SEV_0 = y > 0.0 ($RES_EVT_2)
// 	([DISC] (1) Integer i) [SCAL] (1) i = if $SEV_0 then 1 else 2 ($RES_SIM_1)
//
// ################################################################################
//
// 	[NLS] Jacobian ODE_NLS_JAC_1: NLS
//
// ################################################################################
//
// Partial Derivative Variables (1/1)
// ****************************************
// (1)       [JACV] (1) Real $pDER_ODE_NLS_JAC_1.$RES_SIM_0
//
// Seed Variables (1/1)
// ****************************************
// (1)       [SEED] (1) Real $SEED_ODE_NLS_JAC_1.y
//
// BLOCK 1: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Real $pDER_ODE_NLS_JAC_1.$RES_SIM_0
// ### Equation:
// 	[SCAL] (1) $pDER_ODE_NLS_JAC_1.$RES_SIM_0 = -$SEED_ODE_NLS_JAC_1.y ($RES_ODE_NLS_JAC_1_0)
//
// ========================================
// Sparsity Pattern (nnz: 1)
// ========================================
//
// ### Columns ###
// ----------------------------------------
// (y)	 affects:	{$RES_SIM_0}
//
// ##### Rows #####
// ----------------------------------------
// ($RES_SIM_0)	 depends on:	{y}
//
// ========================================
// Sparsity Coloring
// ========================================
// Color (1)
//   - Column: {y}
//   - Row:    {$RES_SIM_0}
//
//
// record SimulationResult
//     resultFile = "minimalTearing_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'minimalTearing', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// endResult
