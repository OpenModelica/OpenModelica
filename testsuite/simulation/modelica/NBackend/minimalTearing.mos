// name: minimalTearing
// keywords: NewBackend
// status: correct


loadString("
model minimalTearing
  Real y;
  Integer i;
equation
  i = if y > 0 then 1 else 2;
  y = cos(time + 1) * i;
end minimalTearing;
"); getErrorString();

setCommandLineOptions("--newBackend -d=tearingdump"); getErrorString();

simulate(minimalTearing); getErrorString();

// Result:
// true
// ""
// true
// ""
// ################################################################################
//
// 	[INI] Tearing
//
// ################################################################################
//
// BLOCK: Torn Algebraic Loop (Linear = false, Mixed = false)
// ----------------------------------------
// Strict Tearing Set
// ****************************************
// ### Iteration Variables:
// 	Real y
//
// ### Residual Equations:
// 	[SCAL] ($RES_SIM_0) y = cos(time + 1.0) * CAST(Real, i)
//
// ### Inner Equations:
// 	([DISC] Integer i) [SCAL] ($RES_SIM_1) i = if y > 0.0 then 1 else 2
//
// Jacobian INI_NLS_JAC_1: NLS
// ----------------------------------------
// Result EquationPointers (1)
// ****************************************
// (1)	[SCAL] ($RES_INI_NLS_JAC_1_0) $SEED_INI_NLS_JAC_1.y = 0.0
//
//
// ################################################################################
//
// 	[ODE] Tearing
//
// ################################################################################
//
// BLOCK: Torn Algebraic Loop (Linear = false, Mixed = false)
// ----------------------------------------
// Strict Tearing Set
// ****************************************
// ### Iteration Variables:
// 	Real y
//
// ### Residual Equations:
// 	[SCAL] ($RES_SIM_0) y = cos(time + 1.0) * CAST(Real, i)
//
// ### Inner Equations:
// 	([DISC] Integer i) [SCAL] ($RES_SIM_1) i = if y > 0.0 then 1 else 2
//
// Jacobian ODE_NLS_JAC_1: NLS
// ----------------------------------------
// Result EquationPointers (1)
// ****************************************
// (1)	[SCAL] ($RES_ODE_NLS_JAC_1_0) $SEED_ODE_NLS_JAC_1.y = 0.0
//
//
// record SimulationResult
//     resultFile = "minimalTearing_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'minimalTearing', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// endResult
