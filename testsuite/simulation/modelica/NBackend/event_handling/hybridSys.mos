// name: hybridSys
// keywords: NewBackend
// status: correct


loadFile("hybridSys.mo"); getErrorString();

setCommandLineOptions("--newBackend -d=bltdump"); getErrorString();

simulate(hybridSys); getErrorString();

// Result:
// true
// ""
// true
// ""
// ################################################################################
//
// 	[ODE] Differential-Algebraic: (Causalize)
//
// ################################################################################
//
// ========================================
// CONTINUOUS 1 ODE System
// ========================================
//
// BLOCK 1: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_5
// ### Equation:
// 	[SCAL] (1) $SEV_5 = $PRE.x_Loop3 < CAST(Real, Niter) ($RES_EVT_25)
//
// BLOCK 2: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean endCondition
// ### Equation:
// 	[SCAL] (1) not endCondition = $SEV_5 ($RES_SIM_11)
//
// BLOCK 3: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_0
// ### Equation:
// 	[SCAL] (1) $SEV_0 = $PRE.phase_Loop3 and endCondition ($RES_EVT_18)
//
// BLOCK 4: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_End
// ### Equation:
// 	[SCAL] (1) phase_End = $SEV_0 ($RES_SIM_5)
//
// BLOCK 5: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real x_End
// ### Equation:
// 	[WHEN] (1) when phase_End then
// 	[----]   x_End := $PRE.x_End + 1.0
// 	[----] end when;
//
// BLOCK 6: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real x2
// ### Equation:
// 	[SCAL] (1) x2 = func2(x1, x_End) ($RES_SIM_15)
//
// BLOCK 7: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real $DER.x1
// ### Equation:
// 	[SCAL] (1) $DER.x1 = -func1(x1) ($RES_SIM_16)
//
// BLOCK 8: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_6
// ### Equation:
// 	[SCAL] (1) $SEV_6 = $PRE.x_Loop2 < CAST(Real, 1 + Niter) ($RES_EVT_24)
//
// BLOCK 9: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean loopCondition2
// ### Equation:
// 	[SCAL] (1) loopCondition2 = $SEV_6 ($RES_SIM_12)
//
// BLOCK 10: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_7
// ### Equation:
// 	[SCAL] (1) $SEV_7 = $PRE.x_Loop1 < CAST(Real, 1 + Niter) ($RES_EVT_23)
//
// BLOCK 11: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean loopCondition1
// ### Equation:
// 	[SCAL] (1) loopCondition1 = $SEV_7 ($RES_SIM_13)
//
// BLOCK 12: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_2
// ### Equation:
// 	[SCAL] (1) $SEV_2 = $PRE.phase_Loop1 and loopCondition1 or $PRE.phase_Loop2 and not loopCondition2 ($RES_EVT_20)
//
// BLOCK 13: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_Loop2
// ### Equation:
// 	[SCAL] (1) phase_Loop2 = $SEV_2 ($RES_SIM_7)
//
// BLOCK 14: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real x_Loop2
// ### Equation:
// 	[WHEN] (1) when phase_Loop2 then
// 	[----]   x_Loop2 := $PRE.x_Loop2 + 1.0
// 	[----] end when;
//
// BLOCK 15: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_1
// ### Equation:
// 	[SCAL] (1) $SEV_1 = $PRE.phase_Loop2 and loopCondition2 or $PRE.phase_Loop3 and not (not endCondition or endCondition) ($RES_EVT_21)
//
// BLOCK 16: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_Loop3
// ### Equation:
// 	[SCAL] (1) phase_Loop3 = $SEV_1 ($RES_SIM_6)
//
// BLOCK 17: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real x_Loop3
// ### Equation:
// 	[WHEN] (1) when phase_Loop3 then
// 	[----]   x_Loop3 := $PRE.x_Loop3 + 1.0
// 	[----] end when;
//
// BLOCK 18: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $TEV_0
// ### Equation:
// 	[SCAL] (1) $TEV_0 = sample(1, 1.0, 4.611686018427388e+18) ($RES_EVT_17)
//
// BLOCK 19: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean startCondition
// ### Equation:
// 	[SCAL] (1) startCondition = $TEV_0 ($RES_SIM_14)
//
// BLOCK 20: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_4
// ### Equation:
// 	[SCAL] (1) $SEV_4 = $PRE.phase_Start and not startCondition ($RES_EVT_19)
//
// BLOCK 21: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_Start
// ### Equation:
// 	[SCAL] (1) phase_Start = $SEV_4 ($RES_SIM_9)
//
// BLOCK 22: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real x_Start
// ### Equation:
// 	[WHEN] (1) when phase_Start then
// 	[----]   x_Start := $PRE.x_Start + 1.0
// 	[----] end when;
//
// BLOCK 23: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_3
// ### Equation:
// 	[SCAL] (1) $SEV_3 = ($PRE.phase_Start and startCondition or $PRE.phase_Loop3 and not endCondition) or $PRE.phase_Loop1 and not loopCondition1 ($RES_EVT_22)
//
// BLOCK 24: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_Loop1
// ### Equation:
// 	[SCAL] (1) phase_Loop1 = $SEV_3 ($RES_SIM_8)
//
// BLOCK 25: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real x_Loop1
// ### Equation:
// 	[WHEN] (1) when phase_Loop1 then
// 	[----]   x_Loop1 := $PRE.x_Loop1 + 1.0
// 	[----] end when;
//
// ========================================
// Event Info
// ========================================
//
// Time Events
// ****************************************
// 	(1) time > 1.0
// State Events
// ****************************************
// 	[DISC] (1) Boolean $SEV_0 = pre(phase_Loop3) and endCondition
// 	[DISC] (1) Boolean $SEV_4 = pre(phase_Start) and not startCondition
// 	[DISC] (1) Boolean $SEV_2 = pre(phase_Loop1) and loopCondition1 or pre(phase_Loop2) and not loopCondition2
// 	[DISC] (1) Boolean $SEV_1 = pre(phase_Loop2) and loopCondition2 or pre(phase_Loop3) and not (not endCondition or endCondition)
// 	[DISC] (1) Boolean $SEV_3 = (pre(phase_Start) and startCondition or pre(phase_Loop3) and not endCondition) or pre(phase_Loop1) and not loopCondition1
// 	[DISC] (1) Boolean $SEV_7 = pre(x_Loop1) < CAST(Real, 1 + Niter)
// 	[DISC] (1) Boolean $SEV_6 = pre(x_Loop2) < CAST(Real, 1 + Niter)
// 	[DISC] (1) Boolean $SEV_5 = pre(x_Loop3) < CAST(Real, Niter)
//
// ################################################################################
//
// 	[ODE] Differential-Algebraic: (Causalize)
//
// ################################################################################
//
// ========================================
// CONTINUOUS 1 ODE System
// ========================================
//
// BLOCK 1: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_5
// ### Equation:
// 	[SCAL] (1) $SEV_5 = $PRE.x_Loop3 < CAST(Real, Niter) ($RES_EVT_25)
//
// BLOCK 2: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean endCondition
// ### Equation:
// 	[SCAL] (1) not endCondition = $SEV_5 ($RES_SIM_11)
//
// BLOCK 3: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_0
// ### Equation:
// 	[SCAL] (1) $SEV_0 = $PRE.phase_Loop3 and endCondition ($RES_EVT_18)
//
// BLOCK 4: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_End
// ### Equation:
// 	[SCAL] (1) phase_End = $SEV_0 ($RES_SIM_5)
//
// BLOCK 5: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real x_End
// ### Equation:
// 	[WHEN] (1) when phase_End then
// 	[----]   x_End := $PRE.x_End + 1.0
// 	[----] end when;
//
// BLOCK 6: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real x2
// ### Equation:
// 	[SCAL] (1) x2 = func2(x1, x_End) ($RES_SIM_15)
//
// BLOCK 7: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real $DER.x1
// ### Equation:
// 	[SCAL] (1) $DER.x1 = -func1(x1) ($RES_SIM_16)
//
// BLOCK 8: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_6
// ### Equation:
// 	[SCAL] (1) $SEV_6 = $PRE.x_Loop2 < CAST(Real, 1 + Niter) ($RES_EVT_24)
//
// BLOCK 9: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean loopCondition2
// ### Equation:
// 	[SCAL] (1) loopCondition2 = $SEV_6 ($RES_SIM_12)
//
// BLOCK 10: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_7
// ### Equation:
// 	[SCAL] (1) $SEV_7 = $PRE.x_Loop1 < CAST(Real, 1 + Niter) ($RES_EVT_23)
//
// BLOCK 11: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean loopCondition1
// ### Equation:
// 	[SCAL] (1) loopCondition1 = $SEV_7 ($RES_SIM_13)
//
// BLOCK 12: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_2
// ### Equation:
// 	[SCAL] (1) $SEV_2 = $PRE.phase_Loop1 and loopCondition1 or $PRE.phase_Loop2 and not loopCondition2 ($RES_EVT_20)
//
// BLOCK 13: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_Loop2
// ### Equation:
// 	[SCAL] (1) phase_Loop2 = $SEV_2 ($RES_SIM_7)
//
// BLOCK 14: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real x_Loop2
// ### Equation:
// 	[WHEN] (1) when phase_Loop2 then
// 	[----]   x_Loop2 := $PRE.x_Loop2 + 1.0
// 	[----] end when;
//
// BLOCK 15: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_1
// ### Equation:
// 	[SCAL] (1) $SEV_1 = $PRE.phase_Loop2 and loopCondition2 or $PRE.phase_Loop3 and not (not endCondition or endCondition) ($RES_EVT_21)
//
// BLOCK 16: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_Loop3
// ### Equation:
// 	[SCAL] (1) phase_Loop3 = $SEV_1 ($RES_SIM_6)
//
// BLOCK 17: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real x_Loop3
// ### Equation:
// 	[WHEN] (1) when phase_Loop3 then
// 	[----]   x_Loop3 := $PRE.x_Loop3 + 1.0
// 	[----] end when;
//
// BLOCK 18: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $TEV_0
// ### Equation:
// 	[SCAL] (1) $TEV_0 = sample(1, 1.0, 4.611686018427388e+18) ($RES_EVT_17)
//
// BLOCK 19: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean startCondition
// ### Equation:
// 	[SCAL] (1) startCondition = $TEV_0 ($RES_SIM_14)
//
// BLOCK 20: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_4
// ### Equation:
// 	[SCAL] (1) $SEV_4 = $PRE.phase_Start and not startCondition ($RES_EVT_19)
//
// BLOCK 21: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_Start
// ### Equation:
// 	[SCAL] (1) phase_Start = $SEV_4 ($RES_SIM_9)
//
// BLOCK 22: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real x_Start
// ### Equation:
// 	[WHEN] (1) when phase_Start then
// 	[----]   x_Start := $PRE.x_Start + 1.0
// 	[----] end when;
//
// BLOCK 23: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_3
// ### Equation:
// 	[SCAL] (1) $SEV_3 = ($PRE.phase_Start and startCondition or $PRE.phase_Loop3 and not endCondition) or $PRE.phase_Loop1 and not loopCondition1 ($RES_EVT_22)
//
// BLOCK 24: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_Loop1
// ### Equation:
// 	[SCAL] (1) phase_Loop1 = $SEV_3 ($RES_SIM_8)
//
// BLOCK 25: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real x_Loop1
// ### Equation:
// 	[WHEN] (1) when phase_Loop1 then
// 	[----]   x_Loop1 := $PRE.x_Loop1 + 1.0
// 	[----] end when;
//
// ################################################################################
//
// 	[INI] Initialization: (Causalize)
//
// ################################################################################
//
// ========================================
// CONTINUOUS 1 INI System
// ========================================
//
// BLOCK 1: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $PRE.phase_Loop3
// ### Equation:
// 	[SIMP] (1) $PRE.phase_Loop3 = $START.$PRE.phase_Loop3 ($RES_SIM_36)
//
// BLOCK 2: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real $PRE.x_Loop3
// ### Equation:
// 	[SIMP] (1) $PRE.x_Loop3 = $START.$PRE.x_Loop3 ($RES_SIM_37)
//
// BLOCK 3: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_5
// ### Equation:
// 	[SCAL] (1) $SEV_5 = $PRE.x_Loop3 < CAST(Real, Niter) ($RES_EVT_25)
//
// BLOCK 4: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean endCondition
// ### Equation:
// 	[SCAL] (1) not endCondition = $SEV_5 ($RES_SIM_11)
//
// BLOCK 5: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_0
// ### Equation:
// 	[SCAL] (1) $SEV_0 = $PRE.phase_Loop3 and endCondition ($RES_EVT_18)
//
// BLOCK 6: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_End
// ### Equation:
// 	[SCAL] (1) phase_End = $SEV_0 ($RES_SIM_5)
//
// BLOCK 7: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real $PRE.x_End
// ### Equation:
// 	[SIMP] (1) $PRE.x_End = $START.$PRE.x_End ($RES_SIM_44)
//
// BLOCK 8: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real x_End
// ### Equation:
// 	[WHEN] (1) when phase_End then
// 	[----]   x_End := $PRE.x_End + 1.0
// 	[----] end when;
//
// BLOCK 9: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real x1
// ### Equation:
// 	[SIMP] (1) x1 = $START.x1 ($RES_SIM_45)
//
// BLOCK 10: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real x2
// ### Equation:
// 	[SCAL] (1) x2 = func2(x1, x_End) ($RES_SIM_15)
//
// BLOCK 11: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real $DER.x1
// ### Equation:
// 	[SCAL] (1) $DER.x1 = -func1(x1) ($RES_SIM_16)
//
// BLOCK 12: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $TEV_0
// ### Equation:
// 	[SCAL] (1) $TEV_0 = sample(1, 1.0, 4.611686018427388e+18) ($RES_EVT_17)
//
// BLOCK 13: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean startCondition
// ### Equation:
// 	[SCAL] (1) startCondition = $TEV_0 ($RES_SIM_14)
//
// BLOCK 14: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $PRE.phase_Start
// ### Equation:
// 	[SIMP] (1) $PRE.phase_Start = $START.$PRE.phase_Start ($RES_SIM_42)
//
// BLOCK 15: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_4
// ### Equation:
// 	[SCAL] (1) $SEV_4 = $PRE.phase_Start and not startCondition ($RES_EVT_19)
//
// BLOCK 16: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real $PRE.x_Start
// ### Equation:
// 	[SIMP] (1) $PRE.x_Start = $START.$PRE.x_Start ($RES_SIM_43)
//
// BLOCK 17: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_Start
// ### Equation:
// 	[SCAL] (1) phase_Start = $SEV_4 ($RES_SIM_9)
//
// BLOCK 18: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real x_Start
// ### Equation:
// 	[WHEN] (1) when phase_Start then
// 	[----]   x_Start := $PRE.x_Start + 1.0
// 	[----] end when;
//
// BLOCK 19: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real $PRE.x_Loop1
// ### Equation:
// 	[SIMP] (1) $PRE.x_Loop1 = $START.$PRE.x_Loop1 ($RES_SIM_41)
//
// BLOCK 20: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_7
// ### Equation:
// 	[SCAL] (1) $SEV_7 = $PRE.x_Loop1 < CAST(Real, 1 + Niter) ($RES_EVT_23)
//
// BLOCK 21: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean loopCondition1
// ### Equation:
// 	[SCAL] (1) loopCondition1 = $SEV_7 ($RES_SIM_13)
//
// BLOCK 22: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $PRE.phase_Loop1
// ### Equation:
// 	[SIMP] (1) $PRE.phase_Loop1 = $START.$PRE.phase_Loop1 ($RES_SIM_40)
//
// BLOCK 23: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_3
// ### Equation:
// 	[SCAL] (1) $SEV_3 = ($PRE.phase_Start and startCondition or $PRE.phase_Loop3 and not endCondition) or $PRE.phase_Loop1 and not loopCondition1 ($RES_EVT_22)
//
// BLOCK 24: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_Loop1
// ### Equation:
// 	[SCAL] (1) phase_Loop1 = $SEV_3 ($RES_SIM_8)
//
// BLOCK 25: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real x_Loop1
// ### Equation:
// 	[WHEN] (1) when phase_Loop1 then
// 	[----]   x_Loop1 := $PRE.x_Loop1 + 1.0
// 	[----] end when;
//
// BLOCK 26: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real $PRE.x_Loop2
// ### Equation:
// 	[SIMP] (1) $PRE.x_Loop2 = $START.$PRE.x_Loop2 ($RES_SIM_39)
//
// BLOCK 27: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_6
// ### Equation:
// 	[SCAL] (1) $SEV_6 = $PRE.x_Loop2 < CAST(Real, 1 + Niter) ($RES_EVT_24)
//
// BLOCK 28: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean loopCondition2
// ### Equation:
// 	[SCAL] (1) loopCondition2 = $SEV_6 ($RES_SIM_12)
//
// BLOCK 29: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $PRE.phase_Loop2
// ### Equation:
// 	[SIMP] (1) $PRE.phase_Loop2 = $START.$PRE.phase_Loop2 ($RES_SIM_38)
//
// BLOCK 30: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_2
// ### Equation:
// 	[SCAL] (1) $SEV_2 = $PRE.phase_Loop1 and loopCondition1 or $PRE.phase_Loop2 and not loopCondition2 ($RES_EVT_20)
//
// BLOCK 31: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_Loop2
// ### Equation:
// 	[SCAL] (1) phase_Loop2 = $SEV_2 ($RES_SIM_7)
//
// BLOCK 32: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real x_Loop2
// ### Equation:
// 	[WHEN] (1) when phase_Loop2 then
// 	[----]   x_Loop2 := $PRE.x_Loop2 + 1.0
// 	[----] end when;
//
// BLOCK 33: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_1
// ### Equation:
// 	[SCAL] (1) $SEV_1 = $PRE.phase_Loop2 and loopCondition2 or $PRE.phase_Loop3 and not (not endCondition or endCondition) ($RES_EVT_21)
//
// BLOCK 34: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_Loop3
// ### Equation:
// 	[SCAL] (1) phase_Loop3 = $SEV_1 ($RES_SIM_6)
//
// BLOCK 35: Single Equation (status = Solve.UNPROCESSED)
// ----------------------------------------
// ### Variable:
// 	Real x_Loop3
// ### Equation:
// 	[WHEN] (1) when phase_Loop3 then
// 	[----]   x_Loop3 := $PRE.x_Loop3 + 1.0
// 	[----] end when;
//
// ========================================
// Event Info
// ========================================
//
// Time Events
// ****************************************
// 	(1) time > 1.0
// State Events
// ****************************************
// 	[DISC] (1) Boolean $SEV_0 = pre(phase_Loop3) and endCondition
// 	[DISC] (1) Boolean $SEV_4 = pre(phase_Start) and not startCondition
// 	[DISC] (1) Boolean $SEV_2 = pre(phase_Loop1) and loopCondition1 or pre(phase_Loop2) and not loopCondition2
// 	[DISC] (1) Boolean $SEV_1 = pre(phase_Loop2) and loopCondition2 or pre(phase_Loop3) and not (not endCondition or endCondition)
// 	[DISC] (1) Boolean $SEV_3 = (pre(phase_Start) and startCondition or pre(phase_Loop3) and not endCondition) or pre(phase_Loop1) and not loopCondition1
// 	[DISC] (1) Boolean $SEV_7 = pre(x_Loop1) < CAST(Real, 1 + Niter)
// 	[DISC] (1) Boolean $SEV_6 = pre(x_Loop2) < CAST(Real, 1 + Niter)
// 	[DISC] (1) Boolean $SEV_5 = pre(x_Loop3) < CAST(Real, Niter)
//
// ################################################################################
//
// 	[ODE_EVENT] Event Handling: (Solve)
//
// ################################################################################
//
// ========================================
// CONTINUOUS 1 ODE_EVT System
// ========================================
//
// --- Alias of INI[1 | 3] ---
// BLOCK 1: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_5
// ### Equation:
// 	[SCAL] (1) $SEV_5 = $PRE.x_Loop3 < CAST(Real, Niter) ($RES_EVT_25)
//
// --- Alias of INI[1 | 4] ---
// BLOCK 2: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean endCondition
// ### Equation:
// 	[SCAL] (1) endCondition = not $SEV_5 ($RES_SIM_11)
//
// --- Alias of INI[1 | 5] ---
// BLOCK 3: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_0
// ### Equation:
// 	[SCAL] (1) $SEV_0 = $PRE.phase_Loop3 and endCondition ($RES_EVT_18)
//
// --- Alias of INI[1 | 6] ---
// BLOCK 4: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_End
// ### Equation:
// 	[SCAL] (1) phase_End = $SEV_0 ($RES_SIM_5)
//
// --- Alias of INI[1 | 8] ---
// BLOCK 5: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Real x_End
// ### Equation:
// 	[WHEN] (1) when phase_End then
// 	[----]   x_End := $PRE.x_End + 1.0
// 	[----] end when;
//
// --- Alias of INI[1 | 10] ---
// BLOCK 6: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Real x2
// ### Equation:
// 	[SCAL] (1) x2 = func2(x1, x_End) ($RES_SIM_15)
//
// --- Alias of INI[1 | 11] ---
// BLOCK 7: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Real $DER.x1
// ### Equation:
// 	[SCAL] (1) $DER.x1 = -func1(x1) ($RES_SIM_16)
//
// --- Alias of INI[1 | 27] ---
// BLOCK 8: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_6
// ### Equation:
// 	[SCAL] (1) $SEV_6 = $PRE.x_Loop2 < CAST(Real, 1 + Niter) ($RES_EVT_24)
//
// --- Alias of INI[1 | 28] ---
// BLOCK 9: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean loopCondition2
// ### Equation:
// 	[SCAL] (1) loopCondition2 = $SEV_6 ($RES_SIM_12)
//
// --- Alias of INI[1 | 20] ---
// BLOCK 10: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_7
// ### Equation:
// 	[SCAL] (1) $SEV_7 = $PRE.x_Loop1 < CAST(Real, 1 + Niter) ($RES_EVT_23)
//
// --- Alias of INI[1 | 21] ---
// BLOCK 11: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean loopCondition1
// ### Equation:
// 	[SCAL] (1) loopCondition1 = $SEV_7 ($RES_SIM_13)
//
// --- Alias of INI[1 | 30] ---
// BLOCK 12: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_2
// ### Equation:
// 	[SCAL] (1) $SEV_2 = $PRE.phase_Loop1 and loopCondition1 or $PRE.phase_Loop2 and not loopCondition2 ($RES_EVT_20)
//
// --- Alias of INI[1 | 31] ---
// BLOCK 13: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_Loop2
// ### Equation:
// 	[SCAL] (1) phase_Loop2 = $SEV_2 ($RES_SIM_7)
//
// --- Alias of INI[1 | 32] ---
// BLOCK 14: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Real x_Loop2
// ### Equation:
// 	[WHEN] (1) when phase_Loop2 then
// 	[----]   x_Loop2 := $PRE.x_Loop2 + 1.0
// 	[----] end when;
//
// --- Alias of INI[1 | 33] ---
// BLOCK 15: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_1
// ### Equation:
// 	[SCAL] (1) $SEV_1 = $PRE.phase_Loop2 and loopCondition2 or $PRE.phase_Loop3 and not (not endCondition or endCondition) ($RES_EVT_21)
//
// --- Alias of INI[1 | 34] ---
// BLOCK 16: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_Loop3
// ### Equation:
// 	[SCAL] (1) phase_Loop3 = $SEV_1 ($RES_SIM_6)
//
// --- Alias of INI[1 | 35] ---
// BLOCK 17: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Real x_Loop3
// ### Equation:
// 	[WHEN] (1) when phase_Loop3 then
// 	[----]   x_Loop3 := $PRE.x_Loop3 + 1.0
// 	[----] end when;
//
// --- Alias of INI[1 | 12] ---
// BLOCK 18: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean $TEV_0
// ### Equation:
// 	[SCAL] (1) $TEV_0 = sample(1, 1.0, 4.611686018427388e+18) ($RES_EVT_17)
//
// --- Alias of INI[1 | 13] ---
// BLOCK 19: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean startCondition
// ### Equation:
// 	[SCAL] (1) startCondition = $TEV_0 ($RES_SIM_14)
//
// --- Alias of INI[1 | 15] ---
// BLOCK 20: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_4
// ### Equation:
// 	[SCAL] (1) $SEV_4 = $PRE.phase_Start and not startCondition ($RES_EVT_19)
//
// --- Alias of INI[1 | 17] ---
// BLOCK 21: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_Start
// ### Equation:
// 	[SCAL] (1) phase_Start = $SEV_4 ($RES_SIM_9)
//
// --- Alias of INI[1 | 18] ---
// BLOCK 22: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Real x_Start
// ### Equation:
// 	[WHEN] (1) when phase_Start then
// 	[----]   x_Start := $PRE.x_Start + 1.0
// 	[----] end when;
//
// --- Alias of INI[1 | 23] ---
// BLOCK 23: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_3
// ### Equation:
// 	[SCAL] (1) $SEV_3 = ($PRE.phase_Start and startCondition or $PRE.phase_Loop3 and not endCondition) or $PRE.phase_Loop1 and not loopCondition1 ($RES_EVT_22)
//
// --- Alias of INI[1 | 24] ---
// BLOCK 24: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_Loop1
// ### Equation:
// 	[SCAL] (1) phase_Loop1 = $SEV_3 ($RES_SIM_8)
//
// --- Alias of INI[1 | 25] ---
// BLOCK 25: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Real x_Loop1
// ### Equation:
// 	[WHEN] (1) when phase_Loop1 then
// 	[----]   x_Loop1 := $PRE.x_Loop1 + 1.0
// 	[----] end when;
//
// ################################################################################
//
// 	[INI] Initialization: (Solve)
//
// ################################################################################
//
// ========================================
// CONTINUOUS 1 INI System
// ========================================
//
// BLOCK 1: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean $PRE.phase_Loop3
// ### Equation:
// 	[SIMP] (1) $PRE.phase_Loop3 = $START.$PRE.phase_Loop3 ($RES_SIM_36)
//
// BLOCK 2: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Real $PRE.x_Loop3
// ### Equation:
// 	[SIMP] (1) $PRE.x_Loop3 = $START.$PRE.x_Loop3 ($RES_SIM_37)
//
// BLOCK 3: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_5
// ### Equation:
// 	[SCAL] (1) $SEV_5 = $PRE.x_Loop3 < CAST(Real, Niter) ($RES_EVT_25)
//
// BLOCK 4: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean endCondition
// ### Equation:
// 	[SCAL] (1) endCondition = not $SEV_5 ($RES_SIM_11)
//
// BLOCK 5: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_0
// ### Equation:
// 	[SCAL] (1) $SEV_0 = $PRE.phase_Loop3 and endCondition ($RES_EVT_18)
//
// BLOCK 6: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_End
// ### Equation:
// 	[SCAL] (1) phase_End = $SEV_0 ($RES_SIM_5)
//
// BLOCK 7: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Real $PRE.x_End
// ### Equation:
// 	[SIMP] (1) $PRE.x_End = $START.$PRE.x_End ($RES_SIM_44)
//
// BLOCK 8: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Real x_End
// ### Equation:
// 	[WHEN] (1) when phase_End then
// 	[----]   x_End := $PRE.x_End + 1.0
// 	[----] end when;
//
// BLOCK 9: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Real x1
// ### Equation:
// 	[SIMP] (1) x1 = $START.x1 ($RES_SIM_45)
//
// BLOCK 10: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Real x2
// ### Equation:
// 	[SCAL] (1) x2 = func2(x1, x_End) ($RES_SIM_15)
//
// BLOCK 11: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Real $DER.x1
// ### Equation:
// 	[SCAL] (1) $DER.x1 = -func1(x1) ($RES_SIM_16)
//
// BLOCK 12: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean $TEV_0
// ### Equation:
// 	[SCAL] (1) $TEV_0 = sample(1, 1.0, 4.611686018427388e+18) ($RES_EVT_17)
//
// BLOCK 13: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean startCondition
// ### Equation:
// 	[SCAL] (1) startCondition = $TEV_0 ($RES_SIM_14)
//
// BLOCK 14: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean $PRE.phase_Start
// ### Equation:
// 	[SIMP] (1) $PRE.phase_Start = $START.$PRE.phase_Start ($RES_SIM_42)
//
// BLOCK 15: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_4
// ### Equation:
// 	[SCAL] (1) $SEV_4 = $PRE.phase_Start and not startCondition ($RES_EVT_19)
//
// BLOCK 16: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Real $PRE.x_Start
// ### Equation:
// 	[SIMP] (1) $PRE.x_Start = $START.$PRE.x_Start ($RES_SIM_43)
//
// BLOCK 17: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_Start
// ### Equation:
// 	[SCAL] (1) phase_Start = $SEV_4 ($RES_SIM_9)
//
// BLOCK 18: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Real x_Start
// ### Equation:
// 	[WHEN] (1) when phase_Start then
// 	[----]   x_Start := $PRE.x_Start + 1.0
// 	[----] end when;
//
// BLOCK 19: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Real $PRE.x_Loop1
// ### Equation:
// 	[SIMP] (1) $PRE.x_Loop1 = $START.$PRE.x_Loop1 ($RES_SIM_41)
//
// BLOCK 20: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_7
// ### Equation:
// 	[SCAL] (1) $SEV_7 = $PRE.x_Loop1 < CAST(Real, 1 + Niter) ($RES_EVT_23)
//
// BLOCK 21: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean loopCondition1
// ### Equation:
// 	[SCAL] (1) loopCondition1 = $SEV_7 ($RES_SIM_13)
//
// BLOCK 22: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean $PRE.phase_Loop1
// ### Equation:
// 	[SIMP] (1) $PRE.phase_Loop1 = $START.$PRE.phase_Loop1 ($RES_SIM_40)
//
// BLOCK 23: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_3
// ### Equation:
// 	[SCAL] (1) $SEV_3 = ($PRE.phase_Start and startCondition or $PRE.phase_Loop3 and not endCondition) or $PRE.phase_Loop1 and not loopCondition1 ($RES_EVT_22)
//
// BLOCK 24: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_Loop1
// ### Equation:
// 	[SCAL] (1) phase_Loop1 = $SEV_3 ($RES_SIM_8)
//
// BLOCK 25: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Real x_Loop1
// ### Equation:
// 	[WHEN] (1) when phase_Loop1 then
// 	[----]   x_Loop1 := $PRE.x_Loop1 + 1.0
// 	[----] end when;
//
// BLOCK 26: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Real $PRE.x_Loop2
// ### Equation:
// 	[SIMP] (1) $PRE.x_Loop2 = $START.$PRE.x_Loop2 ($RES_SIM_39)
//
// BLOCK 27: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_6
// ### Equation:
// 	[SCAL] (1) $SEV_6 = $PRE.x_Loop2 < CAST(Real, 1 + Niter) ($RES_EVT_24)
//
// BLOCK 28: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean loopCondition2
// ### Equation:
// 	[SCAL] (1) loopCondition2 = $SEV_6 ($RES_SIM_12)
//
// BLOCK 29: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean $PRE.phase_Loop2
// ### Equation:
// 	[SIMP] (1) $PRE.phase_Loop2 = $START.$PRE.phase_Loop2 ($RES_SIM_38)
//
// BLOCK 30: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_2
// ### Equation:
// 	[SCAL] (1) $SEV_2 = $PRE.phase_Loop1 and loopCondition1 or $PRE.phase_Loop2 and not loopCondition2 ($RES_EVT_20)
//
// BLOCK 31: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_Loop2
// ### Equation:
// 	[SCAL] (1) phase_Loop2 = $SEV_2 ($RES_SIM_7)
//
// BLOCK 32: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Real x_Loop2
// ### Equation:
// 	[WHEN] (1) when phase_Loop2 then
// 	[----]   x_Loop2 := $PRE.x_Loop2 + 1.0
// 	[----] end when;
//
// BLOCK 33: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean $SEV_1
// ### Equation:
// 	[SCAL] (1) $SEV_1 = $PRE.phase_Loop2 and loopCondition2 or $PRE.phase_Loop3 and not (not endCondition or endCondition) ($RES_EVT_21)
//
// BLOCK 34: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Boolean phase_Loop3
// ### Equation:
// 	[SCAL] (1) phase_Loop3 = $SEV_1 ($RES_SIM_6)
//
// BLOCK 35: Single Equation (status = Solve.EXPLICIT)
// ----------------------------------------
// ### Variable:
// 	Real x_Loop3
// ### Equation:
// 	[WHEN] (1) when phase_Loop3 then
// 	[----]   x_Loop3 := $PRE.x_Loop3 + 1.0
// 	[----] end when;
//
// ========================================
// Event Info
// ========================================
//
// Time Events
// ****************************************
// 	(1) time > 1.0
// State Events
// ****************************************
// 	[DISC] (1) Boolean $SEV_0 = pre(phase_Loop3) and endCondition
// 	[DISC] (1) Boolean $SEV_4 = pre(phase_Start) and not startCondition
// 	[DISC] (1) Boolean $SEV_2 = pre(phase_Loop1) and loopCondition1 or pre(phase_Loop2) and not loopCondition2
// 	[DISC] (1) Boolean $SEV_1 = pre(phase_Loop2) and loopCondition2 or pre(phase_Loop3) and not (not endCondition or endCondition)
// 	[DISC] (1) Boolean $SEV_3 = (pre(phase_Start) and startCondition or pre(phase_Loop3) and not endCondition) or pre(phase_Loop1) and not loopCondition1
// 	[DISC] (1) Boolean $SEV_7 = pre(x_Loop1) < CAST(Real, 1 + Niter)
// 	[DISC] (1) Boolean $SEV_6 = pre(x_Loop2) < CAST(Real, 1 + Niter)
// 	[DISC] (1) Boolean $SEV_5 = pre(x_Loop3) < CAST(Real, Niter)
//
// record SimulationResult
//     resultFile = "hybridSys_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'hybridSys', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// endResult
