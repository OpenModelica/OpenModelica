// name: Alias_test0
// keywords: NewBackend, Alias
// status: correct

loadString("
  model Test0
    // No errors, should only show how the output of the flag debugAlias is.
    Real y;             // not simple
    Real x(min=-200, max=200, start=-5, fixed=true, nominal=2);
    Real z(min=-100, max=100, start=-10, fixed=false) annotation(__OpenModelica_tearingSelect=TearingSelect.never);        // regular simple
  equation
    x = -2*z;
    y = time + 3.0;
    z = sin(time);
  end Test0;
"); getErrorString();

setCommandLineOptions("--newBackend -d=debugAlias");
simulate(Test0); getErrorString();

// Result:
// true
// ""
// true
// Variable to keep (values of attributes before replacements):
// --------------------------------------------------------------
// [ALGB] (1) Real x (fixed = true, start = -5.0, min = -200.0, max = 200.0, nominal = 2.0)
//
// Attribute collector (before replacements):
// *********************************************
// Min map:
// 	(x, -200.0)
// 	(z, -100.0)
// Max map:
// 	(x, 200.0)
// 	(z, 100.0)
// Start map:
// 	(x, -5.0)
// 	(z, -10.0)
// Fixed map:
// 	(x, true)
// 	(z, false)
// Nominal map:
// 	(x, 2.0)
// StateSelect map:
//
// TearingSelect map:
// 	(z, TearingSelect = never)
//
// Attribute collector (after replacements):
// ********************************************
// Min map:
// 	(x, -200.0)
// 	(z, -200.0)
// Max map:
// 	(x, 200.0)
// 	(z, 200.0)
// Start map:
// 	(x, -5.0)
// 	(z, 20.0)
// Fixed map:
// 	(x, true)
// 	(z, false)
// Nominal map:
// 	(x, 2.0)
// StateSelect map:
//
// TearingSelect map:
// 	(z, TearingSelect = never)
//
// Variable to keep (values of attributes after replacements):
// -------------------------------------------------------------
// [ALGB] (1) Real x (fixed = true, start = -5.0, min = -200.0, max = 200.0, nominal = 2.0)
// record SimulationResult
//     resultFile = "Test0_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-6, method = 'dassl', fileNamePrefix = 'Test0', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// endResult
