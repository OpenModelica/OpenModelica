// name: TestEnumerationWhen
// keywords: NewBackend
// status: correct
// cflags: --newBackend

// ticket #12423

loadString("
model TestEnumerationWhenEq
  type T = enumeration(off, on);
  T t(start = T.off, fixed = true);
equation
  when pre(t) == T.off and time > 0.4 and time < 0.6 then
    t = T.on;
  elsewhen pre(t) == T.on and time > 0.8 then
    t = T.off;
  end when;
end TestEnumerationWhenEq;

model TestEnumerationWhenAlg
  type T = enumeration(off, on);
  T t(start = T.off, fixed = true);
algorithm
  when t == T.off and time > 0.4 and time < 0.6 then
    t := T.on;
  elsewhen t == T.on and time > 0.8 then
    t := T.off;
  end when;
end TestEnumerationWhenAlg;
"); getErrorString();

simulate(TestEnumerationWhenEq); getErrorString();
val(t, 0.2);
val(t, 0.6);
val(t, 0.9);
simulate(TestEnumerationWhenAlg); getErrorString();
val(t, 0.2);
val(t, 0.6);
val(t, 0.9);

// Result:
// true
// ""
// record SimulationResult
//     resultFile = "TestEnumerationWhenEq_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-6, method = 'dassl', fileNamePrefix = 'TestEnumerationWhenEq', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// 1.0
// 2.0
// 1.0
// record SimulationResult
//     resultFile = "TestEnumerationWhenAlg_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-6, method = 'dassl', fileNamePrefix = 'TestEnumerationWhenAlg', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// 1.0
// 2.0
// 1.0
// endResult
