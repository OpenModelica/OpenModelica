// name: for_exp
// keywords: NewBackend
// status: correct

loadString("
model for_exp
  parameter Integer p = 10;
  Real[p] x;
  Real y;
equation
  for i in 1:p loop
    x[i] = sin(i*time);
  end for;
  y = sum(k for k in x);
end for_exp;

model binding_array
  parameter Integer N = 5;
  parameter Real Cu[N] = (ones(N)+ linspace(0,1.348,N))*1e7;
end binding_array;
"); getErrorString();

setCommandLineOptions("--newBackend -d=initialization");

simulate(binding_array); getErrorString();

// Result:
// true
// ""
// true
// Created Parameter Binding Equations:
// ****************************************
// 	[FOR-] (5) ($RES_BND_1)
// [----] for i in 1:5 loop
// [----]   [SCAL] (1) Cu[i] = 10000000.0 * (1.0 + 0.337 * CAST(Real, (-1) + i)) ($RES_BND_2)
// [----] end for;
//
// ################################################################################
//
// 	Balance Initialization
//
// ################################################################################
//
// Not underdetermined.
// Not overdetermined.
// (0) Unmatched variables:
// ****************************************
//
//
// (0) Unmatched equations:
// ****************************************
//
// record SimulationResult
//     resultFile = "binding_array_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'binding_array', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// endResult
