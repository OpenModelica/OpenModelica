// name: implicitEquation
// keywords: NewBackend
// status: correct

loadString("
model implicitEquation
  Real x;
equation
   x - x^2 + x^3 = sin(time);
end implicitEquation;"); getErrorString();

setCommandLineOptions("--newBackend -d=dumpSimCode");
simulate(implicitEquation); getErrorString();

// Result:
// true
// ""
// true
// ################################################################################
//
// 	SimCode (implicitEquation)
//
// ################################################################################
// ========================================
// SimVars
// ========================================
// Algebraic Variables (1)
// ****************************************
//   (0)[ALGB] x
//
// INIT
// ----------------------------------------
//   (2) Nonlinear System (size = 1, homotopy = false, mixed = false, torn = true)
//   --(1) 0 = sin(time) - (x + x ^ 3.0) - x ^ 2.0
//
// Algebraic Partition 1
// ----------------------------------------
//   (4) Nonlinear System (size = 1, homotopy = false, mixed = false, torn = true)
//   --(3) 0 = sin(time) - (x + x ^ 3.0) - x ^ 2.0
//
// ========================================
// [EMPTY] SimCode Jacobian A(idx = 2, partition = 0)
// ========================================
//
// ========================================
// [EMPTY] SimCode Jacobian B(idx = 3, partition = 0)
// ========================================
//
// ========================================
// [EMPTY] SimCode Jacobian C(idx = 4, partition = 0)
// ========================================
//
// ========================================
// [EMPTY] SimCode Jacobian D(idx = 5, partition = 0)
// ========================================
//
// ========================================
// [EMPTY] SimCode Jacobian F(idx = 6, partition = 0)
// ========================================
//
// ========================================
// [EMPTY] SimCode Jacobian ODE_IMP_JAC_2(idx = 1, partition = 0)
// ========================================
//
// ========================================
// [EMPTY] SimCode Jacobian ODE_IMP_JAC_1(idx = 0, partition = 0)
// ========================================
//
//
//
// *********************
// * SimCode Equations *
// *********************
//
//
// allEquations:
// ========================================
//
// 4:  (NONLINEAR) index:1 jacobian: true
// crefs: x
// 	3: sin(time) - (x + x ^ 3.0 - x ^ 2.0) (RESIDUAL)
// 	Jacobian idx: 1
//
//
// ========================================
//
//
//
// odeEquations (0 systems):
// ========================================
// ========================================
//
//
//
// algebraicEquations (1 systems):
// ========================================
// 4:  (NONLINEAR) index:1 jacobian: true
// crefs: x
// 	3: sin(time) - (x + x ^ 3.0 - x ^ 2.0) (RESIDUAL)
// 	Jacobian idx: 1
//
//
// ========================================
//
//
// clockPartitions (0 systems):
//
// ========================================
//
//
//
// initialEquations: (1)
// ========================================
// 2:  (NONLINEAR) index:0 jacobian: true
// crefs: x
// 	1: sin(time) - (x + x ^ 3.0 - x ^ 2.0) (RESIDUAL)
// 	Jacobian idx: 0
//
//
// ========================================
//
//
//
// initialEquations_lambda0: (0)
// ========================================
//
// removedInitialEquations:
// ========================================
//
// startValueEquations:
// ========================================
//
// nominalValueEquations:
// ========================================
//
// minValueEquations:
// ========================================
//
// maxValueEquations:
// ========================================
//
// parameterEquations:
// ========================================
//
// removedEquations:
// ========================================
//
// algorithmAndEquationAsserts:
// ========================================
//
// equationsForZeroCrossings:
// ========================================
//
// jacobianEquations:
// ========================================
// 7: -($SEED_ODE_JAC.x + 3.0 * x ^ 2.0 * $SEED_ODE_JAC.x - 2.0 * x * $SEED_ODE_JAC.x) (RESIDUAL)
// 6: -($SEED_ODE_IMP_JAC_2.x + 3.0 * x ^ 2.0 * $SEED_ODE_IMP_JAC_2.x - 2.0 * x * $SEED_ODE_IMP_JAC_2.x) (RESIDUAL)
// 5: -($SEED_ODE_IMP_JAC_1.x + 3.0 * x ^ 2.0 * $SEED_ODE_IMP_JAC_1.x - 2.0 * x * $SEED_ODE_IMP_JAC_1.x) (RESIDUAL)
//
// jacobianMatrices:
// ========================================
// 	Jacobian idx: 2
//
// 	Jacobian idx: 3
//
// 	Jacobian idx: 4
//
// 	Jacobian idx: 5
//
// 	Jacobian idx: 6
//
// 	Jacobian idx: 1
//
// 	Jacobian idx: 0
//
//
// modelInfo:
// ========================================
// algVars (1)
// ----------------------
// index: 0: x (no alias)  initial: 	no arrCref index:(1) []
// functions:
// -----------
//
// record SimulationResult
//     resultFile = "implicitEquation_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'implicitEquation', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// endResult
