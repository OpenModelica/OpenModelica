// name: CauerLowPassAnalog
// keywords: NewBackend, msl
// status: correct

loadModel(Modelica); getErrorString();

setCommandLineOptions("--newBackend -d=dummyselect,initialization");

simulate(Modelica.Electrical.Analog.Examples.CauerLowPassAnalog); getErrorString();

// Result:
// true
// ""
// true
// ################################################################################
//
// 	Index Reduction
//
// ################################################################################
//
// (8) Sorted State Candidates
// ****************************************
// {C3.v, L2.n.v, C2.v, L1.n.v, R1.n.v, C1.v, C5.v, C4.v}
//
// (5) Constraint Equations
// ****************************************
// [SCAL] ($RES_SIM_39) C3.v = L1.n.v - 0.0
// [SCAL] ($RES_SIM_31) C5.v = L2.n.v - 0.0
// [SCAL] ($RES_SIM_35) C4.v = L1.n.v - L2.n.v
// [SCAL] ($RES_SIM_47) C1.v = R1.n.v - 0.0
// [SCAL] ($RES_SIM_43) C2.v = R1.n.v - L1.n.v
//
// [dummyselect] 1. Differentiate the constraint equations
// ----------------------------------------
// [dummyselect] constraint eqn:		[SCAL] ($RES_SIM_39) C3.v = L1.n.v - 0.0
// [dummyselect] differentiated eqn:	[SCAL] ($RES_SIM_39) $DER.C3.v = $DER.L1.n.v
//
// [dummyselect] constraint eqn:		[SCAL] ($RES_SIM_31) C5.v = L2.n.v - 0.0
// [dummyselect] differentiated eqn:	[SCAL] ($RES_SIM_31) $DER.C5.v = $DER.L2.n.v
//
// [dummyselect] constraint eqn:		[SCAL] ($RES_SIM_35) C4.v = L1.n.v - L2.n.v
// [dummyselect] differentiated eqn:	[SCAL] ($RES_SIM_35) $DER.C4.v = $DER.L1.n.v - $DER.L2.n.v
//
// [dummyselect] constraint eqn:		[SCAL] ($RES_SIM_47) C1.v = R1.n.v - 0.0
// [dummyselect] differentiated eqn:	[SCAL] ($RES_SIM_47) $DER.C1.v = $DER.R1.n.v
//
// [dummyselect] constraint eqn:		[SCAL] ($RES_SIM_43) C2.v = R1.n.v - L1.n.v
// [dummyselect] differentiated eqn:	[SCAL] ($RES_SIM_43) $DER.C2.v = $DER.R1.n.v - $DER.L1.n.v
//
// (3) Selected States
// ****************************************
// {C4.v, C5.v, C1.v}
//
// ========================================
// 	 STATIC STATE SELECTION
// 	(no unmatched equations)
// ========================================
// ################################################################################
//
// 	Balance Initialization
//
// ################################################################################
//
// Stage 3 overdetermined.
// Not underdetermined.
//
// (3) Unmatched equations:
// ****************************************
// 	[SCAL] ($RES_SIM_75) $DER.C4.v = $DER.L1.n.v - $DER.L2.n.v;
// 	[SCAL] ($RES_SIM_74) $DER.C1.v = $DER.R1.n.v;
// 	[SCAL] ($RES_SIM_73) $DER.C2.v = $DER.R1.n.v - $DER.L1.n.v;
//
// (0) Unmatched variables:
// ****************************************
//
// record SimulationResult
//     resultFile = "Modelica.Electrical.Analog.Examples.CauerLowPassAnalog_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 60.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Electrical.Analog.Examples.CauerLowPassAnalog', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_STDOUT        | info    | Jacobian or SparsePattern is not generated or failed to initialize! Switch back to normal.
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// "Warning: NBResolveSingularities.balanceInitialization reports an overdetermined initialization!
// Checking for consistency is not yet supported, following equations had to be removed:
// 	[SCAL] ($RES_SIM_75) $DER.C4.v = $DER.L1.n.v - $DER.L2.n.v;
// 	[SCAL] ($RES_SIM_74) $DER.C1.v = $DER.R1.n.v;
// 	[SCAL] ($RES_SIM_73) $DER.C2.v = $DER.R1.n.v - $DER.L1.n.v;
// "
// endResult
