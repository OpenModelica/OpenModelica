// name:      MergingExample
// keywords:  hpcom
// status:    correct
// depends:   MergingExample_eqs_prof.json
//

loadModel(Modelica, {"3.2.1"}); getErrorString();

loadFile("MergingExample.mo"); getErrorString();
setDebugFlags("hpcom"); getErrorString();
setCommandLineOptions("+n=4 +hpcomScheduler=list --preOptModules-=comSubExp"); getErrorString();
simulate(MergingExample, stopTime = 1.0); getErrorString();

res := OpenModelica.Scripting.checkTaskGraph("taskGraphMergingExampleODE.graphml","ReferenceGraphs/MergingExample_TaskGraphODE.graphml");
res := OpenModelica.Scripting.compareSimulationResults("MergingExample_res.mat",
  getEnvironmentVar("REFERENCEFILES")+"/hpcom/MergingExample.mat",
  "MergingExample_diff.csv",0.01,0.0001,
  {"a",
   "b",
   "c",
   "d",
   "e",
   "f",
   "g",
   "h",
   "i"});

// Result:
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// readCalcTimesFromFile: No valid profiling-file found.
// Warning: The costs have been estimated. Maybe MergingExample_eqs_prof-file is missing.
// Using list Scheduler for the DAE system
// Using list Scheduler for the ODE system
// Using list Scheduler for the ZeroFunc system
// There is no parallel potential in the ODE system model!
// The ODE system model is not big enough to perform an effective parallel simulation!
// HpcOm is still under construction.
// record SimulationResult
//     resultFile = "MergingExample_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'MergingExample', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions(\"-d=initialization\").
// "
// {"Taskgraph correct"}
// {"Files Equal!"}
// endResult
