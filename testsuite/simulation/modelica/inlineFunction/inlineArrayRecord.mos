// name: inlineArrayRecord
// status: correct
// cflags: -d=-newInst

// use new inline method
setCommandLineOptions("+inlineMethod=append");

loadString("
model foo
  record A
    Real x;
    Real y;
  end A;

  function f
    input A[2] x;
    output Real y;
  algorithm
     y := x[1].x + x[1].y + x[2].x + x[2].y
    annotation(Inline=true); 
  end f;

  Real a;
  A[2] b = {A(time, time^2), A(time^3, time^4)};
equation
 a = f(b);
end foo;
");
getErrorString();

//setCommandLineOptions("+d=backenddaeinfo");
//getErrorString();
simulate(foo);
getErrorString();
val(a,{0,0.5,1.0}); // 0, 4

setCommandLineOptions("+inlineMethod=replace");
getErrorString();
simulate(foo);
getErrorString();
val(a,{0,0.5,1.0}); // 0, 4


// Result:
// true
// true
// ""
// record SimulationResult
//     resultFile = "foo_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'foo', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// {0.0,0.9375,4.0}
// true
// ""
// record SimulationResult
//     resultFile = "foo_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'foo', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// {0.0,0.9375,4.0}
// endResult
