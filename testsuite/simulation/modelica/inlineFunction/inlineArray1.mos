// name: inlineArray1
// status: correct
// cflags: -d=-newInst

// use new inline method
setCommandLineOptions("+inlineMethod=append");

loadString("
model foo
  function f
    input Real[5] x;
    output Real[7] y;
  protected
    Real abs1 = abs(sum(x));
    Real sumx = exp(-sqrt(abs1));
	  Real tmpy;
    Real tmpyy;
  algorithm
    y[1] := sumx^2;
	  y[2] := 2*sumx^2;
	  y[3] := 3*sumx^2;
	  y[4] := 4*sumx^2;
	  y[5] := 5*sumx^2;
	  y[6] := 6*sumx^2;
	  tmpy := 7*sumx^2;
    tmpyy := abs(tmpy/sum(y[i] for i in 1:6));
	  y[7] := exp(-sqrt(tmpyy)/tmpy);
    annotation(Inline=true);
  end f;
  Real y(fixed = true, start = 0);
protected
  Real[5] a(each start = 1);
  Real c;
  Real[5] x(each start =0);
  Real[:] z = {i*sin(time) + 1 for i in 1:10};
equation
   x[1] = a[1] + a[2];
   x[2] = z[1] + a[1];
   x[3] = z[2] + a[3] + a[1] + 2*a[2] + sum(z);
   x[4] = z[2] + a[3] + a[1] + 2*a[2];
   x[5] = z[2] + x[3] + a[1] + 2*a[2] + cos(sum(a));
   a[1] = sum(f(x))/10;
   a[2] = sum(f(z[1:5]))/10;
   a[3] = sum(f(z[6:10]))/10;
   a[4] = sum(f(z[2:6]))/10;
   a[5] = sum(f(z[3:7]))/10;
   c = exp(-sum(f(a)));
   der(y) = sin(c) - cos(sum(f(x))) + sum(a)/10;
end foo;
");
getErrorString();

setCommandLineOptions("+simplifyLoops=2");
//setCommandLineOptions("+d=backenddaeinfo");
getErrorString();
simulate(foo);
getErrorString();
val(y,{0,0.5,1.0}); // 0, -1
setCommandLineOptions("+inlineMethod=replace");
getErrorString();
simulate(foo);
getErrorString();
val(y,{0,0.5,1.0}); // 0, -1

// Result:
// true
// true
// ""
// true
// ""
// record SimulationResult
//     resultFile = "foo_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'foo', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// "Warning: There are iteration variables with default zero start attribute. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->Show additional information from the initialization process, in OMNotebook call setCommandLineOptions("-d=initialization").
// "
// {0.0,-0.4988765073162942,-0.9987936798262338}
// true
// ""
// record SimulationResult
//     resultFile = "foo_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'foo', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// ""
// {0.0,-0.4988765881077395,-0.9987937622066468}
// endResult
