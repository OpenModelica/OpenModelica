// name: ticket3687
// status: correct

// use new inline method
setCommandLineOptions("+inlineMethod=append");
loadString("
model foo
  function f
    input Real z;
    output Real y;
  protected
    Real a[2];
  algorithm
    a := {2 * z, z};
    y := sum(a)/3;
    annotation(Inline = true);
  end f;
  function f1
    input Real z;
    output Real y;
  protected
    Real a[2];
  algorithm
    a := {2 * z, z};
    y := sum(a)/3;
  end f1;
  Real z1, z2, w;
  Real a[2] = {sin(time),cos(time)};
equation
  z1 = f(5 + time);
  z2 = f1(5 + time);
  der(w) = abs(z2-z1);
end foo;
");
getErrorString();
simulate(foo);
getErrorString();
val(w,{0.0,1.0});
getErrorString();
// Result:
// true
// true
// ""
// record SimulationResult
//     resultFile = "foo_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'foo', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions(\"-d=initialization\").
// "
// {0.0,0.0}
// ""
// endResult
