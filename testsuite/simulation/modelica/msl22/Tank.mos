// name:     Tank
// keywords: Simulate, readSimulationData
// status:   correct
// cflags:   +std=2.x -d=-newInst
// teardown_command: rm -f TestModels.BlockModels* output.log
// 
//  Simulate systems of blocks 
//
loadModel(Modelica,{"2.2.2"});
loadFile("TestModels.mo");

// Tank
simulate(TestModels.BlockModels.SystemTests.Tank, tolerance=1e-10, numberOfIntervals=50);
{val(gain2.y,0.0),val(gain2.y,0.2),val(gain2.y,0.4),
val(gain2.y,0.6),val(gain2.y,0.8),val(gain2.y,1.0)};
{val(gain3.y,0.0),val(gain3.y,0.2),val(gain3.y,0.4),
val(gain3.y,0.6),val(gain3.y,0.8),val(gain3.y,1.0)};

// Result:
// true
// true
// record SimulationResult
//     resultFile = "TestModels.BlockModels.SystemTests.Tank_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 50, tolerance = 1e-10, method = 'dassl', fileNamePrefix = 'TestModels.BlockModels.SystemTests.Tank', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// {0.0,3.872435698507969,7.702453853926595,9.546046227187098,9.4251926127488,9.305108887110503}
// {0.0,0.01967850527481182,0.02775329503667375,0.03089667656429587,0.03070047656429587,0.03050427656429587}
// endResult
