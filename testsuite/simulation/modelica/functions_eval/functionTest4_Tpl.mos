// name:      functionTest4_Tpl
// keywords:  evalConstFunc
// status:    correct
// cflags: -d=-newInst
//


loadFile("PartEvalFunc.mo"); getErrorString();

setDebugFlags("dumpeqninorder");getErrorString();
simulate(PartEvalFunc.functionTest4Tuple);getErrorString();
// Result:
// true
// ""
// true
// ""
// 
// indxdae: eqns in order
// ========================================
// SingleEquation: 3
// 1: d:VARIABLE() .PartEvalFunc.functionTest4Tuple, .Real type: Real 
// 1/1 (1): d = cos(time)
// 
// SingleEquation: 1
// 1: a:DUMMY_STATE() .PartEvalFunc.functionTest4Tuple, .Real type: Real 
// 1/1 (1): a = sin(time)
// 
// SingleEquation: 2
// 1: c:DUMMY_STATE() .PartEvalFunc.functionTest4Tuple, .Real type: Real 
// 1/1 (1): c = 2.0 + a
// 
// ComplexEquation:
// 1: r2.y:VARIABLE() .PartEvalFunc.functionTest4Tuple, .PartEvalFunc.record1, .Real type: Real 
// 1/1 (1): r2.y = PartEvalFunc.recfuncTuple_eval1(PartEvalFunc.record1(2.0, a), a)
// 
// 
// record SimulationResult
//     resultFile = "PartEvalFunc.functionTest4Tuple_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'PartEvalFunc.functionTest4Tuple', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// ""
// endResult
