// name:      MoistAir
// keywords:  evalConstFunc
// status:    correct
// cflags: -d=-newInst
//


loadModel(Modelica,{"3.2.1"}); getErrorString();
simulate(Modelica.Media.Examples.ReferenceAir.MoistAir);getErrorString();
res := OpenModelica.Scripting.compareSimulationResults("Modelica.Media.Examples.ReferenceAir.MoistAir_res.mat",
  "ReferenceFiles/MoistAir.mat",
  "MoistAir_diff.csv", 0.01, 0.0001,
  {"medium.p",
   "medium.T"}); 
getErrorString();
// Result:
// true
// ""
// record SimulationResult
//     resultFile = "Modelica.Media.Examples.ReferenceAir.MoistAir_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-05, method = 'dassl', fileNamePrefix = 'Modelica.Media.Examples.ReferenceAir.MoistAir', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_ASSERT        | info    | [Modelica 3.2.1+maint.om/Media/Air/ReferenceMoistAir.mo:58:5-58:67:writable]
// |                 | |       | The following assertion has been violated at time 0.448000
// |                 | |       | ((medium.X_liquid >= 0.0 and medium.X_liquid <= 1.0)) --> \"Variable violating min/max constraint: 0.0 <= medium.X_liquid <= 1.0, has value: -0.00037869\"
// LOG_ASSERT        | info    | [Modelica 3.2.1+maint.om/Media/Air/ReferenceMoistAir.mo:63:5-64:78:writable]
// |                 | |       | The following assertion has been violated at time 0.954000
// |                 | |       | ((medium.x_sat >= 0.0 and medium.x_sat <= 1.0)) --> \"Variable violating min/max constraint: 0.0 <= medium.x_sat <= 1.0, has value: 1.0089\"
// LOG_SUCCESS       | info    | The simulation finished successfully.
// "
// end SimulationResult;
// "Warning: The model contains alias variables with redundant start and/or conflicting nominal values. It is recommended to resolve the conflicts, because otherwise the system could be hard to solve. To print the conflicting alias sets and the chosen candidates please use -d=aliasConflicts.
// "
// {"Files Equal!"}
// "Warning: 'compareSimulationResults' is deprecated. It is recommended to use 'diffSimulationResults' instead.
// "
// endResult
