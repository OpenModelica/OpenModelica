// name: TestSolve
// status: correct
// cflags: -d=-newInst
//
// Checks that the backend knows how to solve certain expressions
//

loadString("
model ModelTestSolve2
  Real[12] x(each start = -1);
  Real y[:] = array(-1 * (-1) ^ i * min(max(abs((-1) ^ i * time ^ i + sin(time ^ i) + cos(i * time) + i), 1e-5), 10 + sin(time ^ i)) for i in 1:10);
equation
  x[1] * y[2] + y[3] * x[1] + y[4] * x[1] * y[3] + y[5] * (x[1] * y[4]) + y[7] * y[1] * y[9] * x[1] + y[1] * x[1] ^ 1 = 10 ^ time;
  sqrt(x[2] + y[1] * x[2]) = time;
  x[3] ^ 3 = x[2];
  (x[4] * y[1]) ^ 3 * x[4] ^ 4 = x[2];
  exp(y[3] * sinh(x[5]) + time) = 1;
  abs(x[6] - sin(time)) = 0;
  x[7] = time * x[7] ^ (-2);
  abs((x[8] + x[8]*exp(sum(y))-(10-(sum(y))))) ^ 2 = 0;
  x[9]*(x[8]+10) = time-1;
  (if time < 0 then tanh((sinh((log(x[10]-1))^5-1))^3-1) else x[10]) = 10;
  x[11] = sqrt(delay(x[11],0.01) + time);
  exp(x[12]) * y[2] + y[3] * exp(x[12]) + y[4] * exp(x[12]) * y[3] + y[5] * (x[1] * y[4]) + y[7] * y[1] * y[9] * exp(x[12]) + y[1] * exp(x[12]) ^ 1 = 10 ^ time;
end ModelTestSolve2;
"); getErrorString();

simulate(ModelTestSolve2,simflags="-lv LOG_NLS_V"); getErrorString();
val(x[1],0.0);
val(x[2],0.0);
val(x[3],0.0);
val(x[4],0.0);
val(x[5],0.0);
val(x[6],0.0);
val(x[7],0.0);
val(x[8],0.0);
val(x[9],0.0);
val(x[10],0.0);
val(x[11],0.0);
val(x[12],0.0);
val(x[1],1.0);
val(x[2],1.0);
val(x[3],1.0);
val(x[4],1.0);
val(x[5],1.0);
val(x[6],1.0);
val(x[7],1.0);
val(x[8],1.0);
val(x[9],1.0);
val(x[10],1.0);
val(x[11],1.0);
val(x[12],1.0);

// Result:
// true
// ""
// record SimulationResult
//     resultFile = "ModelTestSolve2_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'ModelTestSolve2', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-lv LOG_NLS_V'",
//     messages = "LOG_NLS           | info    | initialize mixed system solvers
// |                 | |       | | 0 mixed systems
// LOG_NLS           | info    | initialize non-linear system solvers
// |                 | |       | | 0 non-linear systems
// LOG_NLS           | info    | update static data of non-linear system solvers
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS       | info    | The simulation finished successfully.
// LOG_NLS           | info    | free mixed system solvers
// LOG_NLS           | info    | free non-linear system solvers
// "
// end SimulationResult;
// ""
// 0.008849557522123894
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 0.0
// 13.74819306053072
// -0.04210846684003049
// 10.0
// 0.0
// -4.727387818712341
// 0.2134742295027175
// 0.419855241434907
// 0.748801190865333
// 0.769077109674782
// -0.5167956387245743
// 0.8414709848078965
// 1.0
// 24.06811711311686
// 0.0
// 10.0
// 1.616020834119052
// -1.544239158504185
// endResult
