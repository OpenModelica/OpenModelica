// Common file to load compiler sources, so only 1 piece of code needs to be changed

// "FrontEnd";
if true then /* Suppress output */
  prefixPath := if getEnvironmentVar("OMCOMPILERSOURCES")=="" then "../../../OMCompiler/Compiler/" else (getEnvironmentVar("OMCOMPILERSOURCES")+"/");
  setCommandLineOptions("+g=MetaModelica");
  files := {
    prefixPath + "FrontEnd/Absyn.mo",
    prefixPath + "FrontEnd/AbsynUtil.mo",
    prefixPath + "FrontEnd/Algorithm.mo",
    prefixPath + "FrontEnd/Builtin.mo",
    prefixPath + "FrontEnd/CevalFunction.mo",
    prefixPath + "FrontEnd/Ceval.mo",
    prefixPath + "FrontEnd/CheckModel.mo",
    prefixPath + "FrontEnd/ClassInf.mo",
    prefixPath + "FrontEnd/ClassLoader.mo",
    prefixPath + "FrontEnd/ComponentReference.mo",
    prefixPath + "FrontEnd/ConnectionGraph.mo",
    prefixPath + "FrontEnd/Connect.mo",
    prefixPath + "FrontEnd/ConnectUtil.mo",
    prefixPath + "FrontEnd/Constants.mo",
    prefixPath + "FrontEnd/DAEDump.mo",
    prefixPath + "FrontEnd/DAE.mo",
    prefixPath + "FrontEnd/DAEUtil.mo",
    prefixPath + "FrontEnd/DumpGraphviz.mo",
    prefixPath + "FrontEnd/Dump.mo",
    prefixPath + "FrontEnd/ExpressionDump.mo",
    prefixPath + "FrontEnd/Expression.mo",
    prefixPath + "FrontEnd/ExpressionSimplify.mo",
    prefixPath + "FrontEnd/ExpressionSimplifyTypes.mo",
    prefixPath + "FrontEnd/Graphviz.mo",
    prefixPath + "FrontEnd/Inline.mo",
    prefixPath + "FrontEnd/InnerOuter.mo",
    prefixPath + "FrontEnd/Inst.mo",
    prefixPath + "FrontEnd/InstVar.mo",
    prefixPath + "FrontEnd/InstDAE.mo",
    prefixPath + "FrontEnd/InstFunction.mo",
    prefixPath + "FrontEnd/InstBinding.mo",
    prefixPath + "FrontEnd/InstUtil.mo",
    prefixPath + "FrontEnd/InstExtends.mo",
    prefixPath + "FrontEnd/InstSection.mo",
    prefixPath + "FrontEnd/InstTypes.mo",
    prefixPath + "FrontEnd/Lookup.mo",
    prefixPath + "FrontEnd/MetaUtil.mo",
    prefixPath + "FrontEnd/MMath.mo",
    prefixPath + "FrontEnd/Mod.mo",
    prefixPath + "FrontEnd/Parser.mo",
    prefixPath + "FrontEnd/ParserExt.mo",
    prefixPath + "FrontEnd/Patternm.mo",
    prefixPath + "FrontEnd/Prefix.mo",
    prefixPath + "FrontEnd/PrefixUtil.mo",
    prefixPath + "FrontEnd/SCode.mo",
    prefixPath + "FrontEnd/SCodeDump.mo",
    prefixPath + "FrontEnd/SCodeUtil.mo",
    prefixPath + "FrontEnd/Static.mo",
    prefixPath + "FrontEnd/SCodeSimplify.mo",
    prefixPath + "FrontEnd/NFBuiltin.mo",
    prefixPath + "FrontEnd/NFConnect2.mo",
    prefixPath + "FrontEnd/NFConnectCheck.mo",
    prefixPath + "FrontEnd/NFConnectEquations.mo",
    prefixPath + "FrontEnd/NFConnectUtil2.mo",
    prefixPath + "FrontEnd/NFConnectionSets.mo",
    prefixPath + "FrontEnd/NFEnv.mo",
    prefixPath + "FrontEnd/NFEnvAvlTree.mo",
    prefixPath + "FrontEnd/NFEnvExtends.mo",
  //  prefixPath + "FrontEnd/NFEvalFunction.mo",
    prefixPath + "FrontEnd/NFExpandableConnectors.mo",
    prefixPath + "FrontEnd/NFInst.mo",
    prefixPath + "FrontEnd/NFInstDump.mo",
    prefixPath + "FrontEnd/NFInstFlatten.mo",
    prefixPath + "FrontEnd/NFInstPrefix.mo",
    prefixPath + "FrontEnd/NFInstSymbolTable.mo",
    prefixPath + "FrontEnd/NFInstTypes.mo",
    prefixPath + "FrontEnd/NFInstTypesOld.mo",
    prefixPath + "FrontEnd/NFInstUtil.mo",
    prefixPath + "FrontEnd/NFLookup.mo",
    prefixPath + "FrontEnd/NFMod.mo",
    prefixPath + "FrontEnd/NFRedeclare.mo",
    prefixPath + "FrontEnd/NFSCodeDependency.mo",
    prefixPath + "FrontEnd/NFSCodeEnv.mo",
    prefixPath + "FrontEnd/NFSCodeExpand.mo",
    prefixPath + "FrontEnd/NFSCodeFlattenImports.mo",
    prefixPath + "FrontEnd/NFSCodeFlatten.mo",
    prefixPath + "FrontEnd/NFSCodeFlattenRedeclare.mo",
    prefixPath + "FrontEnd/NFSCodeLookup.mo",
  //  prefixPath + "FrontEnd/NFSCodeHashTable.mo",
    prefixPath + "FrontEnd/NFSCodeMod.mo",
    prefixPath + "FrontEnd/NFSCodeCheck.mo",
    prefixPath + "FrontEnd/NFTypeCheck.mo",
    prefixPath + "FrontEnd/NFTyping.mo",
  //  prefixPath + "FrontEnd/NFSCodeStatic.mo",
    prefixPath + "FrontEnd/OperatorOverloading.mo",
    prefixPath + "FrontEnd/Types.mo",
    prefixPath + "FrontEnd/UnitAbsynBuilder.mo",
    prefixPath + "FrontEnd/UnitAbsyn.mo",
    prefixPath + "FrontEnd/UnitChecker.mo",
    prefixPath + "FrontEnd/UnitParserExt.mo",
    prefixPath + "FrontEnd/Values.mo",
    prefixPath + "FrontEnd/ValuesUtil.mo",

  // "FFrontEnd";
    prefixPath + "FFrontEnd/FCore.mo",
    prefixPath + "FFrontEnd/FExpand.mo",
    prefixPath + "FFrontEnd/FGraph.mo",
    prefixPath + "FFrontEnd/FGraphBuild.mo",
    prefixPath + "FFrontEnd/FGraphDump.mo",
    prefixPath + "FFrontEnd/FGraphStream.mo",
    prefixPath + "FFrontEnd/FInst.mo",
    prefixPath + "FFrontEnd/FLookup.mo",
    prefixPath + "FFrontEnd/FMod.mo",
    prefixPath + "FFrontEnd/FNode.mo",
    prefixPath + "FFrontEnd/FResolve.mo",
    prefixPath + "FFrontEnd/FTraverse.mo",
    prefixPath + "FFrontEnd/FVisit.mo",

  // "BackEnd";
    prefixPath + "BackEnd/BackendDAE.mo",
    prefixPath + "BackEnd/BackendDAEFunc.mo",
    prefixPath + "BackEnd/BackendDAECreate.mo",
    prefixPath + "BackEnd/BackendDAEEXT.mo",
    prefixPath + "BackEnd/BackendDAEOptimize.mo",
    prefixPath + "BackEnd/BackendDAETransform.mo",
    prefixPath + "BackEnd/BackendDAEUtil.mo",
    prefixPath + "BackEnd/BackendDump.mo",
    prefixPath + "BackEnd/BackendEquation.mo",
    prefixPath + "BackEnd/BackendVariable.mo",
    prefixPath + "BackEnd/BackendVarTransform.mo",
    prefixPath + "BackEnd/BinaryTree.mo",
    prefixPath + "BackEnd/BinaryTreeInt.mo",
    prefixPath + "BackEnd/Causalize.mo",
    prefixPath + "BackEnd/CommonSubExpression.mo",
    prefixPath + "BackEnd/DAEQuery.mo",
    prefixPath + "BackEnd/Differentiate.mo",
    prefixPath + "BackEnd/DumpGraphML.mo",
    prefixPath + "BackEnd/DumpHTML.mo",
    prefixPath + "BackEnd/EvaluateFunctions.mo",
    prefixPath + "BackEnd/EvaluateParameter.mo",
    prefixPath + "BackEnd/ExpressionSolve.mo",
    prefixPath + "BackEnd/FindZeroCrossings.mo",
    prefixPath + "BackEnd/HpcOmBenchmark.mo",
    prefixPath + "BackEnd/HpcOmBenchmarkExt.mo",
    prefixPath + "BackEnd/HpcOmEqSystems.mo",
    prefixPath + "BackEnd/HpcOmMemory.mo",
    prefixPath + "BackEnd/HpcOmScheduler.mo",
    prefixPath + "BackEnd/HpcOmSchedulerExt.mo",
    prefixPath + "BackEnd/HpcOmTaskGraph.mo",
    prefixPath + "BackEnd/IndexReduction.mo",
    prefixPath + "BackEnd/Initialization.mo",
    prefixPath + "BackEnd/InlineArrayEquations.mo",
    prefixPath + "BackEnd/Matching.mo",
    prefixPath + "BackEnd/MathematicaDump.mo",
    prefixPath + "BackEnd/OnRelaxation.mo",
    prefixPath + "BackEnd/OpenTURNS.mo",
    prefixPath + "BackEnd/RemoveSimpleEquations.mo",
    prefixPath + "BackEnd/ResolveLoops.mo",
    prefixPath + "BackEnd/Sorting.mo",
    prefixPath + "BackEnd/SymbolicJacobian.mo",
    prefixPath + "BackEnd/SynchronousFeatures.mo",
    prefixPath + "BackEnd/Tearing.mo",
    prefixPath + "BackEnd/Uncertainties.mo",
    prefixPath + "BackEnd/Unit.mo",
    prefixPath + "BackEnd/UnitCheck.mo",
  prefixPath + "BackEnd/Vectorization.mo",
    prefixPath + "BackEnd/XMLDump.mo",

  // "SimCode";
    prefixPath + "SimCode/HpcOmSimCode.mo",
    prefixPath + "SimCode/HpcOmSimCodeMain.mo",
    prefixPath + "SimCode/SimCode.mo",
    prefixPath + "SimCode/SimCodeFunction.mo",
    prefixPath + "SimCode/SimCodeMain.mo",
    prefixPath + "SimCode/SimCodeFunctionUtil.mo",
    prefixPath + "SimCode/SimCodeUtil.mo",
    prefixPath + "SimCode/SimCodeVar.mo",

  // "Script";
    prefixPath + "Script/CevalScript.mo",
    prefixPath + "Script/GlobalScript.mo",
    prefixPath + "Script/StaticScript.mo",
    prefixPath + "Script/Interactive.mo",
    prefixPath + "Script/Refactor.mo",
    prefixPath + "Script/RewriteRules.mo",

  // "Template";
    prefixPath + "Template/AbsynDumpTpl.mo",
    prefixPath + "Template/CodegenAdevs.mo",
    prefixPath + "Template/CodegenC.mo",
    prefixPath + "Template/CodegenCpp.mo",
    prefixPath + "Template/CodegenCppHpcom.mo",
    prefixPath + "Template/CodegenFMU.mo",
    prefixPath + "Template/CodegenFMUCpp.mo",
    prefixPath + "Template/CodegenCSharp.mo",
    prefixPath + "Template/CodegenJava.mo",
    prefixPath + "Template/CodegenJS.mo",
    prefixPath + "Template/CodegenModelica.mo",
    prefixPath + "Template/CodegenUtil.mo",
    prefixPath + "Template/CodegenXML.mo",
    prefixPath + "Template/DAEDumpTpl.mo",
    prefixPath + "Template/ExpressionDumpTpl.mo",
    prefixPath + "Template/GraphvizDump.mo",
    prefixPath + "Template/GraphMLDumpTpl.mo",
    prefixPath + "Template/NFInstDumpTpl.mo",
    prefixPath + "Template/SCodeDumpTpl.mo",
    prefixPath + "Template/SimCodeDump.mo",
    prefixPath + "Template/TplAbsyn.mo",
    prefixPath + "Template/TplCodegen.mo",
    prefixPath + "Template/TplMain.mo",
    prefixPath + "Template/Tpl.mo",
    prefixPath + "Template/TplParser.mo",
    prefixPath + "Template/Unparsing.mo",
    prefixPath + "Template/VisualXMLTpl.mo",

  // "Global";
    prefixPath + "Global/Global.mo",

  // "Main";
    prefixPath + "Main/Main.mo",

  // "Util";
    prefixPath + "Util/Array.mo",
    prefixPath + "Util/Autoconf.mo",
    prefixPath + "Util/AvlTreeString.mo",
    prefixPath + "Util/BaseHashTable.mo",
    prefixPath + "Util/BaseHashSet.mo",
    prefixPath + "Util/ClockIndexes.mo",
    prefixPath + "Util/Config.mo",
    prefixPath + "Util/Corba.mo",
  //  prefixPath + "Util/Database.mo",
    prefixPath + "Util/Debug.mo",
    prefixPath + "Util/DynLoad.mo",
    prefixPath + "Util/ErrorExt.mo",
    prefixPath + "Util/Error.mo",
    prefixPath + "Util/File.mo",
    prefixPath + "Util/Flags.mo",
    prefixPath + "Util/FMI.mo",
    prefixPath + "Util/FMIExt.mo",
    prefixPath + "Util/Graph.mo",
    prefixPath + "Util/GraphML.mo",
    prefixPath + "Util/GraphStream.mo",
    prefixPath + "Util/GraphStreamExt.mo",
    prefixPath + "Util/HashSet.mo",
    prefixPath + "Util/HashSetString.mo",
    prefixPath + "Util/HashTable2.mo",
    prefixPath + "Util/HashTable3.mo",
    prefixPath + "Util/HashTable4.mo",
    prefixPath + "Util/HashTable5.mo",
  //   prefixPath + "Util/HashTable6.mo",
    prefixPath + "Util/HashTableCG.mo",
    prefixPath + "Util/HashTableCrILst.mo",
    prefixPath + "Util/HashTableCrToCrEqLst.mo",
    prefixPath + "Util/HashTableCrToExp.mo",
    prefixPath + "Util/HashTableExpToExp.mo",
    prefixPath + "Util/HashTableCrIntToExp.mo",
    prefixPath + "Util/HashTableCrToExpSourceTpl.mo",
    prefixPath + "Util/HashTable.mo",
    prefixPath + "Util/HashTableExpToIndex.mo",
    prefixPath + "Util/HashTablePathToFunction.mo",
    prefixPath + "Util/HashTableStringToPath.mo",
    prefixPath + "Util/HashTableStringToUnit.mo",
    prefixPath + "Util/HashTableCrToUnit.mo",
    prefixPath + "Util/HashTableUnitToString.mo",
    prefixPath + "Util/IOStreamExt.mo",
    prefixPath + "Util/IOStream.mo",
    prefixPath + "Util/Lapack.mo",
    prefixPath + "Util/List.mo",
    prefixPath + "Util/ModelicaExternalC.mo",
    prefixPath + "Util/Print.mo",
    prefixPath + "Util/PriorityQueue.mo",
    prefixPath + "Util/Settings.mo",
    prefixPath + "Util/StringUtil.mo",
    prefixPath + "Util/SimulationResults.mo",
    prefixPath + "Util/StackOverflow.mo",
    prefixPath + "Util/TaskGraphResults.mo",
    prefixPath + "Util/Socket.mo",
    prefixPath + "Util/System.mo",
    prefixPath + "Util/Util.mo",
    prefixPath + "Util/VarTransform.mo",
    prefixPath + "Util/VisualXML.mo",
    prefixPath + "Util/ZeroMQ.mo"
  };
  LoadCompilerSourcesRes:= OpenModelica.Scripting.loadFiles(files,numThreads=min(5,OpenModelica.Scripting.numProcessors()));
  if not LoadCompilerSourcesRes then
    print("Failed to load compiler sources:\n");
    print(getErrorString());
    exit(1);
  end if;
end if;
