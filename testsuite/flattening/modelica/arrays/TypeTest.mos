// name:     TypeTest.mos
// keywords: type as array of type
// status:   correct
// 
// This is a test of:
// type A = Real[2]; A[3] a; a should have [2][3] dimensions!
// 

loadModel(Modelica); getErrorString();
loadModel(ModelicaServices); getErrorString();
loadFile("TypeTest.mo"); getErrorString();

instantiateModel(TypeTest); getErrorString();

loadFile("TypeTestArrayBug.mo"); getErrorString();
instantiateModel(TypeTestArrayBug); getErrorString();


// Result:
// true
// ""
// true
// ""
// true
// ""
// "function Modelica.Mechanics.MultiBody.Frames.Orientation \"Automatically generated record constructor for Modelica.Mechanics.MultiBody.Frames.Orientation\"
//   input Real[3, 3] T;
//   input Real[3] w(quantity = \"AngularVelocity\", unit = \"rad/s\");
//   output Orientation res;
// end Modelica.Mechanics.MultiBody.Frames.Orientation;
//
// function Modelica.Mechanics.MultiBody.Frames.nullRotation \"Inline before index reduction\" \"Return orientation object that does not rotate a frame\"
//   output Modelica.Mechanics.MultiBody.Frames.Orientation R \"Orientation object such that frame 1 and frame 2 are identical\";
// algorithm
//   R := Modelica.Mechanics.MultiBody.Frames.Orientation({{1.0, 0.0, 0.0}, {0.0, 1.0, 0.0}, {0.0, 0.0, 1.0}}, {0.0, 0.0, 0.0});
// end Modelica.Mechanics.MultiBody.Frames.nullRotation;
//
// class TypeTest
//   parameter Integer nPoints = 2;
//   Real points[1,1](quantity = \"Length\", unit = \"m\");
//   Real points[1,2](quantity = \"Length\", unit = \"m\");
//   Real points[1,3](quantity = \"Length\", unit = \"m\");
//   Real points[2,1](quantity = \"Length\", unit = \"m\");
//   Real points[2,2](quantity = \"Length\", unit = \"m\");
//   Real points[2,3](quantity = \"Length\", unit = \"m\");
//   parameter String visPoints[1].shapeType = \"box\" \"Type of shape (box, sphere, cylinder, pipecylinder, cone, pipe, beam, gearwheel, spring, <external shape>)\";
//   Real visPoints[1].R.T[1,1] = 1.0 \"Transformation matrix from world frame to local frame\";
//   Real visPoints[1].R.T[1,2] = 0.0 \"Transformation matrix from world frame to local frame\";
//   Real visPoints[1].R.T[1,3] = 0.0 \"Transformation matrix from world frame to local frame\";
//   Real visPoints[1].R.T[2,1] = 0.0 \"Transformation matrix from world frame to local frame\";
//   Real visPoints[1].R.T[2,2] = 1.0 \"Transformation matrix from world frame to local frame\";
//   Real visPoints[1].R.T[2,3] = 0.0 \"Transformation matrix from world frame to local frame\";
//   Real visPoints[1].R.T[3,1] = 0.0 \"Transformation matrix from world frame to local frame\";
//   Real visPoints[1].R.T[3,2] = 0.0 \"Transformation matrix from world frame to local frame\";
//   Real visPoints[1].R.T[3,3] = 1.0 \"Transformation matrix from world frame to local frame\";
//   Real visPoints[1].R.w[1](quantity = \"AngularVelocity\", unit = \"rad/s\") = 0.0 \"Absolute angular velocity of local frame, resolved in local frame\";
//   Real visPoints[1].R.w[2](quantity = \"AngularVelocity\", unit = \"rad/s\") = 0.0 \"Absolute angular velocity of local frame, resolved in local frame\";
//   Real visPoints[1].R.w[3](quantity = \"AngularVelocity\", unit = \"rad/s\") = 0.0 \"Absolute angular velocity of local frame, resolved in local frame\";
//   Real visPoints[1].r[1](quantity = \"Length\", unit = \"m\") \"Position vector from origin of world frame to origin of object frame, resolved in world frame\";
//   Real visPoints[1].r[2](quantity = \"Length\", unit = \"m\") \"Position vector from origin of world frame to origin of object frame, resolved in world frame\";
//   Real visPoints[1].r[3](quantity = \"Length\", unit = \"m\") \"Position vector from origin of world frame to origin of object frame, resolved in world frame\";
//   Real visPoints[1].r_shape[1](quantity = \"Length\", unit = \"m\") \"Position vector from origin of object frame to shape origin, resolved in object frame\";
//   Real visPoints[1].r_shape[2](quantity = \"Length\", unit = \"m\") \"Position vector from origin of object frame to shape origin, resolved in object frame\";
//   Real visPoints[1].r_shape[3](quantity = \"Length\", unit = \"m\") \"Position vector from origin of object frame to shape origin, resolved in object frame\";
//   Real visPoints[1].lengthDirection[1](unit = \"1\") \"Vector in length direction, resolved in object frame\";
//   Real visPoints[1].lengthDirection[2](unit = \"1\") \"Vector in length direction, resolved in object frame\";
//   Real visPoints[1].lengthDirection[3](unit = \"1\") \"Vector in length direction, resolved in object frame\";
//   Real visPoints[1].widthDirection[1](unit = \"1\") \"Vector in width direction, resolved in object frame\";
//   Real visPoints[1].widthDirection[2](unit = \"1\") \"Vector in width direction, resolved in object frame\";
//   Real visPoints[1].widthDirection[3](unit = \"1\") \"Vector in width direction, resolved in object frame\";
//   Real visPoints[1].length(quantity = \"Length\", unit = \"m\") = 0.0 \"Length of visual object\";
//   Real visPoints[1].width(quantity = \"Length\", unit = \"m\") = 0.0 \"Width of visual object\";
//   Real visPoints[1].height(quantity = \"Length\", unit = \"m\") = 0.0 \"Height of visual object\";
//   Real visPoints[1].extra = 0.0 \"Additional size data for some of the shape types\";
//   Real visPoints[1].color[1] \"Color of shape\";
//   Real visPoints[1].color[2] \"Color of shape\";
//   Real visPoints[1].color[3] \"Color of shape\";
//   Real visPoints[1].specularCoefficient(min = 0.0) = 0.7 \"Reflection of ambient light (= 0: light is completely absorbed)\";
//   parameter String visPoints[2].shapeType = \"box\" \"Type of shape (box, sphere, cylinder, pipecylinder, cone, pipe, beam, gearwheel, spring, <external shape>)\";
//   Real visPoints[2].R.T[1,1] = 1.0 \"Transformation matrix from world frame to local frame\";
//   Real visPoints[2].R.T[1,2] = 0.0 \"Transformation matrix from world frame to local frame\";
//   Real visPoints[2].R.T[1,3] = 0.0 \"Transformation matrix from world frame to local frame\";
//   Real visPoints[2].R.T[2,1] = 0.0 \"Transformation matrix from world frame to local frame\";
//   Real visPoints[2].R.T[2,2] = 1.0 \"Transformation matrix from world frame to local frame\";
//   Real visPoints[2].R.T[2,3] = 0.0 \"Transformation matrix from world frame to local frame\";
//   Real visPoints[2].R.T[3,1] = 0.0 \"Transformation matrix from world frame to local frame\";
//   Real visPoints[2].R.T[3,2] = 0.0 \"Transformation matrix from world frame to local frame\";
//   Real visPoints[2].R.T[3,3] = 1.0 \"Transformation matrix from world frame to local frame\";
//   Real visPoints[2].R.w[1](quantity = \"AngularVelocity\", unit = \"rad/s\") = 0.0 \"Absolute angular velocity of local frame, resolved in local frame\";
//   Real visPoints[2].R.w[2](quantity = \"AngularVelocity\", unit = \"rad/s\") = 0.0 \"Absolute angular velocity of local frame, resolved in local frame\";
//   Real visPoints[2].R.w[3](quantity = \"AngularVelocity\", unit = \"rad/s\") = 0.0 \"Absolute angular velocity of local frame, resolved in local frame\";
//   Real visPoints[2].r[1](quantity = \"Length\", unit = \"m\") \"Position vector from origin of world frame to origin of object frame, resolved in world frame\";
//   Real visPoints[2].r[2](quantity = \"Length\", unit = \"m\") \"Position vector from origin of world frame to origin of object frame, resolved in world frame\";
//   Real visPoints[2].r[3](quantity = \"Length\", unit = \"m\") \"Position vector from origin of world frame to origin of object frame, resolved in world frame\";
//   Real visPoints[2].r_shape[1](quantity = \"Length\", unit = \"m\") \"Position vector from origin of object frame to shape origin, resolved in object frame\";
//   Real visPoints[2].r_shape[2](quantity = \"Length\", unit = \"m\") \"Position vector from origin of object frame to shape origin, resolved in object frame\";
//   Real visPoints[2].r_shape[3](quantity = \"Length\", unit = \"m\") \"Position vector from origin of object frame to shape origin, resolved in object frame\";
//   Real visPoints[2].lengthDirection[1](unit = \"1\") \"Vector in length direction, resolved in object frame\";
//   Real visPoints[2].lengthDirection[2](unit = \"1\") \"Vector in length direction, resolved in object frame\";
//   Real visPoints[2].lengthDirection[3](unit = \"1\") \"Vector in length direction, resolved in object frame\";
//   Real visPoints[2].widthDirection[1](unit = \"1\") \"Vector in width direction, resolved in object frame\";
//   Real visPoints[2].widthDirection[2](unit = \"1\") \"Vector in width direction, resolved in object frame\";
//   Real visPoints[2].widthDirection[3](unit = \"1\") \"Vector in width direction, resolved in object frame\";
//   Real visPoints[2].length(quantity = \"Length\", unit = \"m\") = 0.0 \"Length of visual object\";
//   Real visPoints[2].width(quantity = \"Length\", unit = \"m\") = 0.0 \"Width of visual object\";
//   Real visPoints[2].height(quantity = \"Length\", unit = \"m\") = 0.0 \"Height of visual object\";
//   Real visPoints[2].extra = 0.0 \"Additional size data for some of the shape types\";
//   Real visPoints[2].color[1] \"Color of shape\";
//   Real visPoints[2].color[2] \"Color of shape\";
//   Real visPoints[2].color[3] \"Color of shape\";
//   Real visPoints[2].specularCoefficient(min = 0.0) = 0.7 \"Reflection of ambient light (= 0: light is completely absorbed)\";
// equation
//   visPoints[1].r = {points[1,1], points[1,2], points[1,3]};
//   visPoints[1].r_shape = {0.0, 0.0, 0.0};
//   visPoints[1].lengthDirection = {1.0, 0.0, 0.0};
//   visPoints[1].widthDirection = {0.0, 1.0, 0.0};
//   visPoints[1].color = {255.0, 0.0, 0.0};
//   visPoints[2].r = {points[2,1], points[2,2], points[2,3]};
//   visPoints[2].r_shape = {0.0, 0.0, 0.0};
//   visPoints[2].lengthDirection = {1.0, 0.0, 0.0};
//   visPoints[2].widthDirection = {0.0, 1.0, 0.0};
//   visPoints[2].color = {255.0, 0.0, 0.0};
//   points[1,1] = 1.0;
//   points[1,2] = 2.0;
//   points[1,3] = 3.0;
//   points[2,1] = 1.0;
//   points[2,2] = 2.0;
//   points[2,3] = 3.0;
// end TypeTest;
// "
// ""
// true
// ""
// "class TypeTestArrayBug
//   Real w[1](unit = \"m\");
//   Real w[2](unit = \"m\");
//   Real g[1,1](quantity = \"Good\", unit = \"m\");
//   Real g[1,2](quantity = \"Good\", unit = \"m\");
//   Real g[2,1](quantity = \"Good\", unit = \"m\");
//   Real g[2,2](quantity = \"Good\", unit = \"m\");
//   Real z[1,1](quantity = \"Length\", unit = \"m\");
//   Real z[1,2](quantity = \"Length\", unit = \"m\");
//   Real z[2,1](quantity = \"Length\", unit = \"m\");
//   Real z[2,2](quantity = \"Length\", unit = \"m\");
//   Real z[3,1](quantity = \"Length\", unit = \"m\");
//   Real z[3,2](quantity = \"Length\", unit = \"m\");
//   Real a[1,1,1,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,1,1,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,1,2,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,1,2,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,1,3,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,1,3,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,1,4,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,1,4,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,1,5,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,1,5,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,1,6,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,1,6,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,1,7,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,1,7,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,1,8,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,1,8,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,1,9,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,1,9,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,1,10,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,1,10,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,2,1,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,2,1,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,2,2,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,2,2,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,2,3,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,2,3,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,2,4,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,2,4,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,2,5,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,2,5,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,2,6,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,2,6,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,2,7,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,2,7,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,2,8,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,2,8,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,2,9,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,2,9,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,2,10,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,2,10,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,3,1,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,3,1,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,3,2,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,3,2,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,3,3,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,3,3,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,3,4,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,3,4,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,3,5,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,3,5,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,3,6,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,3,6,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,3,7,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,3,7,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,3,8,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,3,8,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,3,9,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,3,9,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,3,10,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,3,10,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,4,1,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,4,1,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,4,2,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,4,2,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,4,3,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,4,3,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,4,4,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,4,4,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,4,5,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,4,5,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,4,6,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,4,6,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,4,7,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,4,7,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,4,8,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,4,8,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,4,9,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,4,9,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,4,10,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[1,4,10,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,1,1,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,1,1,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,1,2,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,1,2,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,1,3,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,1,3,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,1,4,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,1,4,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,1,5,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,1,5,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,1,6,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,1,6,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,1,7,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,1,7,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,1,8,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,1,8,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,1,9,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,1,9,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,1,10,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,1,10,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,2,1,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,2,1,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,2,2,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,2,2,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,2,3,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,2,3,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,2,4,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,2,4,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,2,5,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,2,5,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,2,6,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,2,6,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,2,7,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,2,7,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,2,8,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,2,8,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,2,9,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,2,9,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,2,10,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,2,10,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,3,1,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,3,1,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,3,2,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,3,2,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,3,3,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,3,3,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,3,4,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,3,4,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,3,5,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,3,5,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,3,6,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,3,6,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,3,7,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,3,7,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,3,8,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,3,8,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,3,9,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,3,9,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,3,10,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,3,10,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,4,1,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,4,1,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,4,2,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,4,2,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,4,3,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,4,3,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,4,4,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,4,4,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,4,5,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,4,5,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,4,6,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,4,6,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,4,7,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,4,7,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,4,8,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,4,8,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,4,9,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,4,9,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,4,10,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[2,4,10,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,1,1,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,1,1,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,1,2,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,1,2,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,1,3,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,1,3,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,1,4,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,1,4,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,1,5,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,1,5,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,1,6,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,1,6,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,1,7,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,1,7,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,1,8,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,1,8,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,1,9,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,1,9,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,1,10,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,1,10,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,2,1,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,2,1,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,2,2,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,2,2,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,2,3,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,2,3,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,2,4,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,2,4,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,2,5,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,2,5,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,2,6,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,2,6,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,2,7,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,2,7,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,2,8,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,2,8,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,2,9,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,2,9,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,2,10,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,2,10,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,3,1,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,3,1,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,3,2,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,3,2,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,3,3,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,3,3,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,3,4,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,3,4,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,3,5,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,3,5,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,3,6,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,3,6,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,3,7,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,3,7,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,3,8,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,3,8,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,3,9,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,3,9,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,3,10,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,3,10,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,4,1,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,4,1,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,4,2,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,4,2,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,4,3,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,4,3,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,4,4,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,4,4,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,4,5,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,4,5,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,4,6,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,4,6,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,4,7,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,4,7,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,4,8,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,4,8,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,4,9,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,4,9,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,4,10,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[3,4,10,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,1,1,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,1,1,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,1,2,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,1,2,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,1,3,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,1,3,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,1,4,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,1,4,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,1,5,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,1,5,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,1,6,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,1,6,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,1,7,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,1,7,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,1,8,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,1,8,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,1,9,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,1,9,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,1,10,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,1,10,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,2,1,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,2,1,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,2,2,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,2,2,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,2,3,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,2,3,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,2,4,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,2,4,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,2,5,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,2,5,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,2,6,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,2,6,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,2,7,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,2,7,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,2,8,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,2,8,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,2,9,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,2,9,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,2,10,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,2,10,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,3,1,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,3,1,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,3,2,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,3,2,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,3,3,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,3,3,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,3,4,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,3,4,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,3,5,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,3,5,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,3,6,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,3,6,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,3,7,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,3,7,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,3,8,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,3,8,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,3,9,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,3,9,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,3,10,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,3,10,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,4,1,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,4,1,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,4,2,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,4,2,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,4,3,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,4,3,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,4,4,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,4,4,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,4,5,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,4,5,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,4,6,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,4,6,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,4,7,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,4,7,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,4,8,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,4,8,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,4,9,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,4,9,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,4,10,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[4,4,10,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,1,1,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,1,1,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,1,2,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,1,2,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,1,3,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,1,3,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,1,4,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,1,4,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,1,5,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,1,5,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,1,6,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,1,6,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,1,7,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,1,7,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,1,8,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,1,8,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,1,9,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,1,9,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,1,10,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,1,10,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,2,1,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,2,1,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,2,2,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,2,2,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,2,3,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,2,3,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,2,4,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,2,4,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,2,5,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,2,5,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,2,6,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,2,6,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,2,7,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,2,7,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,2,8,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,2,8,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,2,9,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,2,9,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,2,10,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,2,10,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,3,1,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,3,1,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,3,2,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,3,2,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,3,3,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,3,3,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,3,4,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,3,4,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,3,5,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,3,5,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,3,6,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,3,6,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,3,7,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,3,7,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,3,8,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,3,8,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,3,9,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,3,9,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,3,10,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,3,10,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,4,1,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,4,1,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,4,2,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,4,2,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,4,3,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,4,3,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,4,4,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,4,4,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,4,5,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,4,5,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,4,6,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,4,6,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,4,7,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,4,7,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,4,8,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,4,8,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,4,9,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,4,9,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,4,10,1](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
//   Real a[5,4,10,2](quantity = \"SomeQ\", unit = \"m\", nominal = 5.0);
// end TypeTestArrayBug;
// "
// "[flattening/modelica/arrays/TypeTestArrayBug.mo:3:24-3:34:writable] Warning: Non-array modification '\"m\"' for array component, possibly due to missing 'each'.
// "
// endResult
