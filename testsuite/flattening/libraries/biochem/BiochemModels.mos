//name:         BioChem.Examples
//keyword:      instantiating msl221
//status:       correct
// cflags: -d=-newInst
//
// instantiate example
//


loadFile("ContainerSimple.mo"); getErrorString();
instantiateModel(BioChem_Examples_CircadianOscillator_Container); getErrorString();
checkModel(BioChem_Examples_CircadianOscillator_Container); getErrorString();
clear();

loadFile("extra_cellularTotal.mo"); getErrorString();
instantiateModel(BioChem_Examples_centralMetabolism_extra_cellular); getErrorString();
checkModel(BioChem_Examples_centralMetabolism_extra_cellular); getErrorString();
clear();

loadFile("ContainerTotal.mo"); getErrorString();
instantiateModel(BioChem_Examples_CircadianOscillator_Container); getErrorString();
checkModel(BioChem_Examples_CircadianOscillator_Container); getErrorString();
clear();

loadFile("CytosolTotal.mo"); getErrorString();
instantiateModel(BioChem_Examples_CaOscillations_Cytosol); getErrorString();
checkModel(BioChem_Examples_CaOscillations_Cytosol); getErrorString();
clear();

loadModel(BioChem); getErrorString();
checkModel(BioChem.Examples.InsulinSignaling_Sedaghat); getErrorString();
checkModel(BioChem.Examples.Glycolysis); getErrorString();
checkModel(BioChem.Examples.EnzMM); getErrorString();
checkModel(BioChem.Examples.GMO.cell); getErrorString();
checkModel(BioChem.Examples.centralMetabolism);
checkModel(BioChem.Examples.centralMetabolism.cytosol); getErrorString();
checkModel(BioChem.Examples.CircadianOscillator.Container); getErrorString();
checkModel(BioChem.Examples.CircadianOscillator.Nucleus); getErrorString();
checkModel(BioChem.Examples.CircadianOscillator.Cytoplasm); getErrorString();
checkModel(BioChem.Examples.CellDivison.cell); getErrorString();
checkModel(BioChem.Examples.CaOscillations.Cytosol); getErrorString();
checkModel(BioChem.Examples.CaOscillations.Endoplasmic_Reticulum); getErrorString();
checkModel(BioChem.Examples.GlucoseInsulinModel.GlucoseInsulinModel); getErrorString();
checkModel(BioChem.Examples.GlucoseInsulinModel.Utilities.Reactions.FlowReaction); getErrorString();
checkModel(BioChem.Examples.GlucoseInsulinModel.Utilities.Reactions.UtilizationReaction); getErrorString();
checkModel(BioChem.Examples.GlucoseInsulinModel.Utilities.Reactions.signaltosubstance); getErrorString();
checkModel(BioChem.Examples.GlucoseInsulinModel.Utilities.Reactions.U_ii_reaction); getErrorString();
checkModel(BioChem.Examples.GlucoseInsulinModel.Utilities.Reactions.ActivationReaction); getErrorString();
checkModel(BioChem.Examples.GlucoseInsulinModel.Utilities.Reactions.MM_insulin); getErrorString();
checkModel(BioChem.Examples.GlucoseInsulinModel.Utilities.Reactions.GlucoseUptakeReaction); getErrorString();
checkModel(BioChem.Examples.MassAction.UniUni); getErrorString();
checkModel(BioChem.Examples.MassAction.UniBi); getErrorString();
checkModel(BioChem.Examples.MultiCompartments.GlucoseMetabolism); getErrorString();
checkModel(BioChem.Examples.MultiCompartments.BigCompartmentReversible); getErrorString();
checkModel(BioChem.Examples.MultiCompartments.BigCompartmentIrreversible); getErrorString();
checkModel(BioChem.Examples.MultiCompartments.Utilities.TCA); getErrorString();
checkModel(BioChem.Examples.MultiCompartments.Utilities.SmallCompartment); getErrorString();

// Result:
// true
// ""
// "class BioChem_Examples_CircadianOscillator_Container
//   Real V(quantity = \"Volume\", unit = \"l\", start = 1.0, stateSelect = StateSelect.prefer) \"Compartment volume\";
//   Real nucleus.V(quantity = \"Volume\", unit = \"l\", start = 1.0, stateSelect = StateSelect.prefer) \"Compartment volume\";
//   Real nucleus.Nucleus_V = nucleus.V \"Variable used to make the compartment volume accessible for inner components. Do not edit.\";
//   Real nucleus.y3.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real nucleus.y3.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real nucleus.y3.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real nucleus.y3.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.y3.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.y3.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.y6.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real nucleus.y6.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real nucleus.y6.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real nucleus.y6.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.y6.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.y6.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.y7.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.05, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real nucleus.y7.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real nucleus.y7.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real nucleus.y7.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.y7.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.y7.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.y3_node.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.y3_node.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.y3_node.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real nucleus.k3t = k3t;
//   Real nucleus.y2_node.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.y2_node.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.y2_node.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.per2_cry_nuclear_export.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real nucleus.per2_cry_nuclear_export.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.per2_cry_nuclear_export.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.per2_cry_nuclear_export.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.per2_cry_nuclear_export.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.per2_cry_nuclear_export.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.per2_cry_nuclear_export.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.per2_cry_nuclear_export.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real nucleus.per2_cry_nuclear_export.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real nucleus.per2_cry_nuclear_export.k3t = nucleus.k3t;
//   Real nucleus.ambientSubstance.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real nucleus.ambientSubstance.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real nucleus.ambientSubstance.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real nucleus.ambientSubstance.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.ambientSubstance.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.ambientSubstance.n1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real nucleus.k3d = k3d;
//   Real nucleus.nuclear_per2_cry_complex_degradation.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real nucleus.nuclear_per2_cry_complex_degradation.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.nuclear_per2_cry_complex_degradation.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.nuclear_per2_cry_complex_degradation.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.nuclear_per2_cry_complex_degradation.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.nuclear_per2_cry_complex_degradation.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.nuclear_per2_cry_complex_degradation.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.nuclear_per2_cry_complex_degradation.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real nucleus.nuclear_per2_cry_complex_degradation.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real nucleus.nuclear_per2_cry_complex_degradation.k3d = nucleus.k3d;
//   Real nucleus.y6_node.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.y6_node.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.y6_node.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real nucleus.k6t = k6t;
//   Real nucleus.y5_node.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.y5_node.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.y5_node.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.BMAL1_nuclear_export.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real nucleus.BMAL1_nuclear_export.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.BMAL1_nuclear_export.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.BMAL1_nuclear_export.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.BMAL1_nuclear_export.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.BMAL1_nuclear_export.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.BMAL1_nuclear_export.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.BMAL1_nuclear_export.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real nucleus.BMAL1_nuclear_export.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real nucleus.BMAL1_nuclear_export.k6t = nucleus.k6t;
//   parameter Real nucleus.k6d = k6d;
//   Real nucleus.nuclear_BMAL1_degradation.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real nucleus.nuclear_BMAL1_degradation.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.nuclear_BMAL1_degradation.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.nuclear_BMAL1_degradation.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.nuclear_BMAL1_degradation.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.nuclear_BMAL1_degradation.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.nuclear_BMAL1_degradation.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.nuclear_BMAL1_degradation.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real nucleus.nuclear_BMAL1_degradation.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real nucleus.nuclear_BMAL1_degradation.k6d = nucleus.k6d;
//   parameter Real nucleus.k6a = k6a;
//   Real nucleus.BMAL1_activation.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real nucleus.BMAL1_activation.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.BMAL1_activation.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.BMAL1_activation.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.BMAL1_activation.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.BMAL1_activation.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.BMAL1_activation.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.BMAL1_activation.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real nucleus.BMAL1_activation.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real nucleus.BMAL1_activation.k6a = nucleus.k6a;
//   parameter Real nucleus.k7a = k7a;
//   Real nucleus.BMAL1_deactivation.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real nucleus.BMAL1_deactivation.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.BMAL1_deactivation.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.BMAL1_deactivation.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.BMAL1_deactivation.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.BMAL1_deactivation.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.BMAL1_deactivation.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.BMAL1_deactivation.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real nucleus.BMAL1_deactivation.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real nucleus.BMAL1_deactivation.k7a = nucleus.k7a;
//   parameter Real nucleus.k7d = k7d;
//   Real nucleus.Active_BMAL1_degradation.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real nucleus.Active_BMAL1_degradation.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.Active_BMAL1_degradation.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.Active_BMAL1_degradation.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.Active_BMAL1_degradation.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.Active_BMAL1_degradation.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.Active_BMAL1_degradation.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.Active_BMAL1_degradation.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real nucleus.Active_BMAL1_degradation.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real nucleus.Active_BMAL1_degradation.k7d = nucleus.k7d;
//   Real cytoplasm.V(quantity = \"Volume\", unit = \"l\", start = 1.0, stateSelect = StateSelect.prefer) \"Compartment volume\";
//   Real cytoplasm.Cytoplasm_V = cytoplasm.V \"Variable used to make the compartment volume accessible for inner components. Do not edit.\";
//   Real cytoplasm.y1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.2, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytoplasm.y1.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytoplasm.y1.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytoplasm.y1.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.y1.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.y1.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.y2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytoplasm.y2.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytoplasm.y2.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytoplasm.y2.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.y2.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.y2.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.y4.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.8, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytoplasm.y4.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytoplasm.y4.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytoplasm.y4.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.y4.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.y4.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.y5.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytoplasm.y5.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytoplasm.y5.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytoplasm.y5.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.y5.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.y5.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.ambientSubstance.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytoplasm.ambientSubstance.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytoplasm.ambientSubstance.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytoplasm.ambientSubstance.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.ambientSubstance.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.ambientSubstance.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.trans_per2_cry = trans_per2_cry;
//   Real cytoplasm.per2_cry_transcription.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytoplasm.per2_cry_transcription.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.per2_cry_transcription.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.per2_cry_transcription.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.per2_cry_transcription.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.per2_cry_transcription.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.per2_cry_transcription.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.per2_cry_transcription.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytoplasm.per2_cry_transcription.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real cytoplasm.per2_cry_transcription.trans_per2_cry = cytoplasm.trans_per2_cry;
//   parameter Real cytoplasm.k1d = k1d;
//   Real cytoplasm.per2_cry_mRNA_degradation.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytoplasm.per2_cry_mRNA_degradation.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.per2_cry_mRNA_degradation.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.per2_cry_mRNA_degradation.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.per2_cry_mRNA_degradation.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.per2_cry_mRNA_degradation.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.per2_cry_mRNA_degradation.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.per2_cry_mRNA_degradation.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytoplasm.per2_cry_mRNA_degradation.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real cytoplasm.per2_cry_mRNA_degradation.k1d = cytoplasm.k1d;
//   parameter Real cytoplasm.k2b = k2b;
//   parameter Real cytoplasm.q = q;
//   Real cytoplasm.per2_cry_complex_formation.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytoplasm.per2_cry_complex_formation.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.per2_cry_complex_formation.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.per2_cry_complex_formation.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.per2_cry_complex_formation.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.per2_cry_complex_formation.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.per2_cry_complex_formation.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.per2_cry_complex_formation.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytoplasm.per2_cry_complex_formation.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real cytoplasm.per2_cry_complex_formation.m1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.per2_cry_complex_formation.m1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.per2_cry_complex_formation.m1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real cytoplasm.per2_cry_complex_formation.k2b = cytoplasm.k2b;
//   parameter Real cytoplasm.per2_cry_complex_formation.q = cytoplasm.q;
//   parameter Real cytoplasm.k2d = k2d;
//   Real cytoplasm.cytoplasmic_per2_cry_complex_degradation.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.cytoplasmic_per2_cry_complex_degradation.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.cytoplasmic_per2_cry_complex_degradation.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.cytoplasmic_per2_cry_complex_degradation.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.cytoplasmic_per2_cry_complex_degradation.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytoplasm.cytoplasmic_per2_cry_complex_degradation.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real cytoplasm.cytoplasmic_per2_cry_complex_degradation.k2d = cytoplasm.k2d;
//   parameter Real cytoplasm.k2t = k2t;
//   Real cytoplasm.y3_node.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.y3_node.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.y3_node.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.per2_cry_nuclear_import.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytoplasm.per2_cry_nuclear_import.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.per2_cry_nuclear_import.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.per2_cry_nuclear_import.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.per2_cry_nuclear_import.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.per2_cry_nuclear_import.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.per2_cry_nuclear_import.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.per2_cry_nuclear_import.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytoplasm.per2_cry_nuclear_import.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real cytoplasm.per2_cry_nuclear_import.k2t = cytoplasm.k2t;
//   Real cytoplasm.y2_node.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.y2_node.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.y2_node.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.trans_Bmal1 = trans_Bmal1;
//   Real cytoplasm.Bmal1_transcription.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytoplasm.Bmal1_transcription.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.Bmal1_transcription.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.Bmal1_transcription.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.Bmal1_transcription.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.Bmal1_transcription.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.Bmal1_transcription.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.Bmal1_transcription.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytoplasm.Bmal1_transcription.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real cytoplasm.Bmal1_transcription.trans_Bmal1 = cytoplasm.trans_Bmal1;
//   parameter Real cytoplasm.k4d = k4d;
//   Real cytoplasm.Bmal1_mRNA_degradation.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytoplasm.Bmal1_mRNA_degradation.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.Bmal1_mRNA_degradation.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.Bmal1_mRNA_degradation.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.Bmal1_mRNA_degradation.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.Bmal1_mRNA_degradation.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.Bmal1_mRNA_degradation.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.Bmal1_mRNA_degradation.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytoplasm.Bmal1_mRNA_degradation.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real cytoplasm.Bmal1_mRNA_degradation.k4d = cytoplasm.k4d;
//   parameter Real cytoplasm.k5b = k5b;
//   Real cytoplasm.BMAL1_translation.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytoplasm.BMAL1_translation.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.BMAL1_translation.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.BMAL1_translation.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.BMAL1_translation.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.BMAL1_translation.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.BMAL1_translation.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.BMAL1_translation.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytoplasm.BMAL1_translation.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real cytoplasm.BMAL1_translation.m1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.BMAL1_translation.m1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.BMAL1_translation.m1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real cytoplasm.BMAL1_translation.k5b = cytoplasm.k5b;
//   parameter Real cytoplasm.k5d = k5d;
//   Real cytoplasm.cytoplasmic_BMAL1_degradation.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytoplasm.cytoplasmic_BMAL1_degradation.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.cytoplasmic_BMAL1_degradation.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.cytoplasmic_BMAL1_degradation.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.cytoplasmic_BMAL1_degradation.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.cytoplasmic_BMAL1_degradation.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.cytoplasmic_BMAL1_degradation.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.cytoplasmic_BMAL1_degradation.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytoplasm.cytoplasmic_BMAL1_degradation.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real cytoplasm.cytoplasmic_BMAL1_degradation.k5d = cytoplasm.k5d;
//   parameter Real cytoplasm.k5t = k5t;
//   Real cytoplasm.y6_node.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.y6_node.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.y6_node.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.BMAL1_nuclear_import.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytoplasm.BMAL1_nuclear_import.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.BMAL1_nuclear_import.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.BMAL1_nuclear_import.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.BMAL1_nuclear_import.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.BMAL1_nuclear_import.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.BMAL1_nuclear_import.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.BMAL1_nuclear_import.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytoplasm.BMAL1_nuclear_import.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real cytoplasm.BMAL1_nuclear_import.k5t = cytoplasm.k5t;
//   Real cytoplasm.y5_node.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.y5_node.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.y5_node.V(quantity = \"Volume\", unit = \"l\");
//   Real Nucleus_V = nucleus.V \"Variable used to make the compartment volume of inner compartments accessible. Do not edit.\";
//   Real Cytoplasm_V = cytoplasm.V \"Variable used to make the compartment volume of inner compartments accessible. Do not edit.\";
//   Real Container_V = V \"Variable used to make the compartment volume accessible for inner components. Do not edit.\";
//   Real trans_per2_cry(start = 0.0);
//   parameter Real v1b = 9.0;
//   parameter Real c_sbml = 0.01;
//   parameter Real k1b = 1.0;
//   parameter Real k1i = 0.5600000000000001;
//   parameter Real hill_coeff = 8.0;
//   Real trans_Bmal1(start = 0.0);
//   parameter Real v4b = 3.6;
//   parameter Real r_sbml = 3.0;
//   parameter Real k4b = 2.16;
//   Real y5_y6_y7(start = 3.05);
//   parameter Real k1d = 0.12;
//   parameter Real k2b = 0.3;
//   parameter Real q = 2.0;
//   parameter Real k2d = 0.05;
//   parameter Real k2t = 0.24;
//   parameter Real k3t = 0.02;
//   parameter Real k3d = 0.12;
//   parameter Real k4d = 0.75;
//   parameter Real k5b = 0.24;
//   parameter Real k5d = 0.06;
//   parameter Real k5t = 0.45;
//   parameter Real k6t = 0.06;
//   parameter Real k6d = 0.12;
//   parameter Real k6a = 0.09;
//   parameter Real k7a = 0.003;
//   parameter Real k7d = 0.09;
// equation
//   der(nucleus.y3.n) = nucleus.y3.rNet;
//   nucleus.y3.rNet = nucleus.y3.n1.r;
//   nucleus.y3.c = nucleus.y3.n1.c;
//   nucleus.V = nucleus.y3.n1.V;
//   nucleus.y3.c = nucleus.y3.n / nucleus.V;
//   der(nucleus.y6.n) = nucleus.y6.rNet;
//   nucleus.y6.rNet = nucleus.y6.n1.r;
//   nucleus.y6.c = nucleus.y6.n1.c;
//   nucleus.V = nucleus.y6.n1.V;
//   nucleus.y6.c = nucleus.y6.n / nucleus.V;
//   der(nucleus.y7.n) = nucleus.y7.rNet;
//   nucleus.y7.rNet = nucleus.y7.n1.r;
//   nucleus.y7.c = nucleus.y7.n1.c;
//   nucleus.V = nucleus.y7.n1.V;
//   nucleus.y7.c = nucleus.y7.n / nucleus.V;
//   nucleus.per2_cry_nuclear_export.rr = nucleus.Nucleus_V * nucleus.per2_cry_nuclear_export.k3t * nucleus.per2_cry_nuclear_export.s1.c;
//   nucleus.per2_cry_nuclear_export.s1.r = nucleus.per2_cry_nuclear_export.nS1 * nucleus.per2_cry_nuclear_export.rr;
//   nucleus.per2_cry_nuclear_export.p1.r = (-nucleus.per2_cry_nuclear_export.nP1) * nucleus.per2_cry_nuclear_export.rr;
//   der(nucleus.ambientSubstance.n) = 0.0;
//   nucleus.ambientSubstance.rNet = nucleus.ambientSubstance.n1.r;
//   nucleus.ambientSubstance.c = nucleus.ambientSubstance.n1.c;
//   nucleus.V = nucleus.ambientSubstance.n1.V;
//   nucleus.ambientSubstance.c = nucleus.ambientSubstance.n / nucleus.V;
//   nucleus.nuclear_per2_cry_complex_degradation.rr = nucleus.Nucleus_V * nucleus.nuclear_per2_cry_complex_degradation.k3d * nucleus.nuclear_per2_cry_complex_degradation.s1.c;
//   nucleus.nuclear_per2_cry_complex_degradation.s1.r = nucleus.nuclear_per2_cry_complex_degradation.nS1 * nucleus.nuclear_per2_cry_complex_degradation.rr;
//   nucleus.nuclear_per2_cry_complex_degradation.p1.r = (-nucleus.nuclear_per2_cry_complex_degradation.nP1) * nucleus.nuclear_per2_cry_complex_degradation.rr;
//   nucleus.BMAL1_nuclear_export.rr = nucleus.Nucleus_V * nucleus.BMAL1_nuclear_export.k6t * nucleus.BMAL1_nuclear_export.s1.c;
//   nucleus.BMAL1_nuclear_export.s1.r = nucleus.BMAL1_nuclear_export.nS1 * nucleus.BMAL1_nuclear_export.rr;
//   nucleus.BMAL1_nuclear_export.p1.r = (-nucleus.BMAL1_nuclear_export.nP1) * nucleus.BMAL1_nuclear_export.rr;
//   nucleus.nuclear_BMAL1_degradation.rr = nucleus.Nucleus_V * nucleus.nuclear_BMAL1_degradation.k6d * nucleus.nuclear_BMAL1_degradation.s1.c;
//   nucleus.nuclear_BMAL1_degradation.s1.r = nucleus.nuclear_BMAL1_degradation.nS1 * nucleus.nuclear_BMAL1_degradation.rr;
//   nucleus.nuclear_BMAL1_degradation.p1.r = (-nucleus.nuclear_BMAL1_degradation.nP1) * nucleus.nuclear_BMAL1_degradation.rr;
//   nucleus.BMAL1_activation.rr = nucleus.Nucleus_V * nucleus.BMAL1_activation.k6a * nucleus.BMAL1_activation.s1.c;
//   nucleus.BMAL1_activation.s1.r = nucleus.BMAL1_activation.nS1 * nucleus.BMAL1_activation.rr;
//   nucleus.BMAL1_activation.p1.r = (-nucleus.BMAL1_activation.nP1) * nucleus.BMAL1_activation.rr;
//   nucleus.BMAL1_deactivation.rr = nucleus.Nucleus_V * nucleus.BMAL1_deactivation.k7a * nucleus.BMAL1_deactivation.s1.c;
//   nucleus.BMAL1_deactivation.s1.r = nucleus.BMAL1_deactivation.nS1 * nucleus.BMAL1_deactivation.rr;
//   nucleus.BMAL1_deactivation.p1.r = (-nucleus.BMAL1_deactivation.nP1) * nucleus.BMAL1_deactivation.rr;
//   nucleus.Active_BMAL1_degradation.rr = nucleus.Nucleus_V * nucleus.Active_BMAL1_degradation.k7d * nucleus.Active_BMAL1_degradation.s1.c;
//   nucleus.Active_BMAL1_degradation.s1.r = nucleus.Active_BMAL1_degradation.nS1 * nucleus.Active_BMAL1_degradation.rr;
//   nucleus.Active_BMAL1_degradation.p1.r = (-nucleus.Active_BMAL1_degradation.nP1) * nucleus.Active_BMAL1_degradation.rr;
//   der(nucleus.V) = 0.0 \"Compartment volume is constant\";
//   der(cytoplasm.y1.n) = cytoplasm.y1.rNet;
//   cytoplasm.y1.rNet = cytoplasm.y1.n1.r;
//   cytoplasm.y1.c = cytoplasm.y1.n1.c;
//   cytoplasm.V = cytoplasm.y1.n1.V;
//   cytoplasm.y1.c = cytoplasm.y1.n / cytoplasm.V;
//   der(cytoplasm.y2.n) = cytoplasm.y2.rNet;
//   cytoplasm.y2.rNet = cytoplasm.y2.n1.r;
//   cytoplasm.y2.c = cytoplasm.y2.n1.c;
//   cytoplasm.V = cytoplasm.y2.n1.V;
//   cytoplasm.y2.c = cytoplasm.y2.n / cytoplasm.V;
//   der(cytoplasm.y4.n) = cytoplasm.y4.rNet;
//   cytoplasm.y4.rNet = cytoplasm.y4.n1.r;
//   cytoplasm.y4.c = cytoplasm.y4.n1.c;
//   cytoplasm.V = cytoplasm.y4.n1.V;
//   cytoplasm.y4.c = cytoplasm.y4.n / cytoplasm.V;
//   der(cytoplasm.y5.n) = cytoplasm.y5.rNet;
//   cytoplasm.y5.rNet = cytoplasm.y5.n1.r;
//   cytoplasm.y5.c = cytoplasm.y5.n1.c;
//   cytoplasm.V = cytoplasm.y5.n1.V;
//   cytoplasm.y5.c = cytoplasm.y5.n / cytoplasm.V;
//   der(cytoplasm.ambientSubstance.n) = 0.0;
//   cytoplasm.ambientSubstance.rNet = cytoplasm.ambientSubstance.n1.r;
//   cytoplasm.ambientSubstance.c = cytoplasm.ambientSubstance.n1.c;
//   cytoplasm.V = cytoplasm.ambientSubstance.n1.V;
//   cytoplasm.ambientSubstance.c = cytoplasm.ambientSubstance.n / cytoplasm.V;
//   cytoplasm.per2_cry_transcription.rr = cytoplasm.Cytoplasm_V * cytoplasm.per2_cry_transcription.trans_per2_cry;
//   cytoplasm.per2_cry_transcription.s1.r = cytoplasm.per2_cry_transcription.nS1 * cytoplasm.per2_cry_transcription.rr;
//   cytoplasm.per2_cry_transcription.p1.r = (-cytoplasm.per2_cry_transcription.nP1) * cytoplasm.per2_cry_transcription.rr;
//   cytoplasm.per2_cry_mRNA_degradation.rr = cytoplasm.Cytoplasm_V * cytoplasm.per2_cry_mRNA_degradation.k1d * cytoplasm.per2_cry_mRNA_degradation.s1.c;
//   cytoplasm.per2_cry_mRNA_degradation.s1.r = cytoplasm.per2_cry_mRNA_degradation.nS1 * cytoplasm.per2_cry_mRNA_degradation.rr;
//   cytoplasm.per2_cry_mRNA_degradation.p1.r = (-cytoplasm.per2_cry_mRNA_degradation.nP1) * cytoplasm.per2_cry_mRNA_degradation.rr;
//   cytoplasm.per2_cry_complex_formation.rr = cytoplasm.Cytoplasm_V * cytoplasm.per2_cry_complex_formation.k2b * cytoplasm.per2_cry_complex_formation.m1.c ^ cytoplasm.per2_cry_complex_formation.q;
//   cytoplasm.per2_cry_complex_formation.s1.r = cytoplasm.per2_cry_complex_formation.nS1 * cytoplasm.per2_cry_complex_formation.rr;
//   cytoplasm.per2_cry_complex_formation.p1.r = (-cytoplasm.per2_cry_complex_formation.nP1) * cytoplasm.per2_cry_complex_formation.rr;
//   cytoplasm.per2_cry_complex_formation.m1.r = 0.0;
//   cytoplasm.cytoplasmic_per2_cry_complex_degradation.rr = cytoplasm.Cytoplasm_V * cytoplasm.cytoplasmic_per2_cry_complex_degradation.k2d * cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.c;
//   cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.r = cytoplasm.cytoplasmic_per2_cry_complex_degradation.nS1 * cytoplasm.cytoplasmic_per2_cry_complex_degradation.rr;
//   cytoplasm.cytoplasmic_per2_cry_complex_degradation.p1.r = (-cytoplasm.cytoplasmic_per2_cry_complex_degradation.nP1) * cytoplasm.cytoplasmic_per2_cry_complex_degradation.rr;
//   cytoplasm.per2_cry_nuclear_import.rr = cytoplasm.Cytoplasm_V * cytoplasm.per2_cry_nuclear_import.k2t * cytoplasm.per2_cry_nuclear_import.s1.c;
//   cytoplasm.per2_cry_nuclear_import.s1.r = cytoplasm.per2_cry_nuclear_import.nS1 * cytoplasm.per2_cry_nuclear_import.rr;
//   cytoplasm.per2_cry_nuclear_import.p1.r = (-cytoplasm.per2_cry_nuclear_import.nP1) * cytoplasm.per2_cry_nuclear_import.rr;
//   cytoplasm.Bmal1_transcription.rr = cytoplasm.Cytoplasm_V * cytoplasm.Bmal1_transcription.trans_Bmal1;
//   cytoplasm.Bmal1_transcription.s1.r = cytoplasm.Bmal1_transcription.nS1 * cytoplasm.Bmal1_transcription.rr;
//   cytoplasm.Bmal1_transcription.p1.r = (-cytoplasm.Bmal1_transcription.nP1) * cytoplasm.Bmal1_transcription.rr;
//   cytoplasm.Bmal1_mRNA_degradation.rr = cytoplasm.Cytoplasm_V * cytoplasm.Bmal1_mRNA_degradation.k4d * cytoplasm.Bmal1_mRNA_degradation.s1.c;
//   cytoplasm.Bmal1_mRNA_degradation.s1.r = cytoplasm.Bmal1_mRNA_degradation.nS1 * cytoplasm.Bmal1_mRNA_degradation.rr;
//   cytoplasm.Bmal1_mRNA_degradation.p1.r = (-cytoplasm.Bmal1_mRNA_degradation.nP1) * cytoplasm.Bmal1_mRNA_degradation.rr;
//   cytoplasm.BMAL1_translation.rr = cytoplasm.Cytoplasm_V * cytoplasm.BMAL1_translation.k5b * cytoplasm.BMAL1_translation.m1.c;
//   cytoplasm.BMAL1_translation.s1.r = cytoplasm.BMAL1_translation.nS1 * cytoplasm.BMAL1_translation.rr;
//   cytoplasm.BMAL1_translation.p1.r = (-cytoplasm.BMAL1_translation.nP1) * cytoplasm.BMAL1_translation.rr;
//   cytoplasm.BMAL1_translation.m1.r = 0.0;
//   cytoplasm.cytoplasmic_BMAL1_degradation.rr = cytoplasm.Cytoplasm_V * cytoplasm.cytoplasmic_BMAL1_degradation.k5d * cytoplasm.cytoplasmic_BMAL1_degradation.s1.c;
//   cytoplasm.cytoplasmic_BMAL1_degradation.s1.r = cytoplasm.cytoplasmic_BMAL1_degradation.nS1 * cytoplasm.cytoplasmic_BMAL1_degradation.rr;
//   cytoplasm.cytoplasmic_BMAL1_degradation.p1.r = (-cytoplasm.cytoplasmic_BMAL1_degradation.nP1) * cytoplasm.cytoplasmic_BMAL1_degradation.rr;
//   cytoplasm.BMAL1_nuclear_import.rr = cytoplasm.Cytoplasm_V * cytoplasm.BMAL1_nuclear_import.k5t * cytoplasm.BMAL1_nuclear_import.s1.c;
//   cytoplasm.BMAL1_nuclear_import.s1.r = cytoplasm.BMAL1_nuclear_import.nS1 * cytoplasm.BMAL1_nuclear_import.rr;
//   cytoplasm.BMAL1_nuclear_import.p1.r = (-cytoplasm.BMAL1_nuclear_import.nP1) * cytoplasm.BMAL1_nuclear_import.rr;
//   der(cytoplasm.V) = 0.0 \"Compartment volume is constant\";
//   trans_per2_cry = v1b * (nucleus.y7.c + c_sbml) / (k1b * (1.0 + (nucleus.y3.c / k1i) ^ hill_coeff) + nucleus.y7.c + c_sbml);
//   trans_Bmal1 = v4b * nucleus.y3.c ^ r_sbml / (k4b ^ r_sbml + nucleus.y3.c ^ r_sbml);
//   y5_y6_y7 = cytoplasm.y5.c + nucleus.y6.c + nucleus.y7.c;
//   der(V) = 0.0 \"Compartment volume is constant\";
//   cytoplasm.y1.n1.r + cytoplasm.per2_cry_transcription.p1.r + cytoplasm.per2_cry_mRNA_degradation.s1.r + cytoplasm.per2_cry_complex_formation.m1.r = 0.0;
//   cytoplasm.y2.n1.r + (-cytoplasm.y2_node.r) + cytoplasm.per2_cry_complex_formation.p1.r + cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.r + cytoplasm.per2_cry_nuclear_import.s1.r = 0.0;
//   cytoplasm.y4.n1.r + cytoplasm.Bmal1_transcription.p1.r + cytoplasm.Bmal1_mRNA_degradation.s1.r + cytoplasm.BMAL1_translation.m1.r = 0.0;
//   cytoplasm.y5.n1.r + (-cytoplasm.y5_node.r) + cytoplasm.BMAL1_translation.p1.r + cytoplasm.cytoplasmic_BMAL1_degradation.s1.r + cytoplasm.BMAL1_nuclear_import.s1.r = 0.0;
//   cytoplasm.ambientSubstance.n1.r + cytoplasm.per2_cry_transcription.s1.r + cytoplasm.per2_cry_mRNA_degradation.p1.r + cytoplasm.per2_cry_complex_formation.s1.r + cytoplasm.cytoplasmic_per2_cry_complex_degradation.p1.r + cytoplasm.Bmal1_transcription.s1.r + cytoplasm.Bmal1_mRNA_degradation.p1.r + cytoplasm.BMAL1_translation.s1.r + cytoplasm.cytoplasmic_BMAL1_degradation.p1.r = 0.0;
//   cytoplasm.y3_node.r + nucleus.y3_node.r = 0.0;
//   cytoplasm.y2_node.r + nucleus.y2_node.r = 0.0;
//   cytoplasm.y6_node.r + nucleus.y6_node.r = 0.0;
//   cytoplasm.y5_node.r + nucleus.y5_node.r = 0.0;
//   (-cytoplasm.y3_node.r) + cytoplasm.per2_cry_nuclear_import.p1.r = 0.0;
//   (-cytoplasm.y6_node.r) + cytoplasm.BMAL1_nuclear_import.p1.r = 0.0;
//   cytoplasm.BMAL1_nuclear_import.p1.V = cytoplasm.y6_node.V;
//   cytoplasm.BMAL1_nuclear_import.p1.c = cytoplasm.y6_node.c;
//   cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.V = cytoplasm.per2_cry_complex_formation.p1.V;
//   cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.V = cytoplasm.per2_cry_nuclear_import.s1.V;
//   cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.V = cytoplasm.y2.n1.V;
//   cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.V = cytoplasm.y2_node.V;
//   cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.c = cytoplasm.per2_cry_complex_formation.p1.c;
//   cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.c = cytoplasm.per2_cry_nuclear_import.s1.c;
//   cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.c = cytoplasm.y2.n1.c;
//   cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.c = cytoplasm.y2_node.c;
//   cytoplasm.per2_cry_nuclear_import.p1.V = cytoplasm.y3_node.V;
//   cytoplasm.per2_cry_nuclear_import.p1.c = cytoplasm.y3_node.c;
//   cytoplasm.BMAL1_nuclear_import.s1.V = cytoplasm.BMAL1_translation.p1.V;
//   cytoplasm.BMAL1_nuclear_import.s1.V = cytoplasm.cytoplasmic_BMAL1_degradation.s1.V;
//   cytoplasm.BMAL1_nuclear_import.s1.V = cytoplasm.y5.n1.V;
//   cytoplasm.BMAL1_nuclear_import.s1.V = cytoplasm.y5_node.V;
//   cytoplasm.BMAL1_nuclear_import.s1.c = cytoplasm.BMAL1_translation.p1.c;
//   cytoplasm.BMAL1_nuclear_import.s1.c = cytoplasm.cytoplasmic_BMAL1_degradation.s1.c;
//   cytoplasm.BMAL1_nuclear_import.s1.c = cytoplasm.y5.n1.c;
//   cytoplasm.BMAL1_nuclear_import.s1.c = cytoplasm.y5_node.c;
//   cytoplasm.per2_cry_complex_formation.m1.V = cytoplasm.per2_cry_mRNA_degradation.s1.V;
//   cytoplasm.per2_cry_complex_formation.m1.V = cytoplasm.per2_cry_transcription.p1.V;
//   cytoplasm.per2_cry_complex_formation.m1.V = cytoplasm.y1.n1.V;
//   cytoplasm.per2_cry_complex_formation.m1.c = cytoplasm.per2_cry_mRNA_degradation.s1.c;
//   cytoplasm.per2_cry_complex_formation.m1.c = cytoplasm.per2_cry_transcription.p1.c;
//   cytoplasm.per2_cry_complex_formation.m1.c = cytoplasm.y1.n1.c;
//   cytoplasm.BMAL1_translation.s1.V = cytoplasm.Bmal1_mRNA_degradation.p1.V;
//   cytoplasm.BMAL1_translation.s1.V = cytoplasm.Bmal1_transcription.s1.V;
//   cytoplasm.BMAL1_translation.s1.V = cytoplasm.ambientSubstance.n1.V;
//   cytoplasm.BMAL1_translation.s1.V = cytoplasm.cytoplasmic_BMAL1_degradation.p1.V;
//   cytoplasm.BMAL1_translation.s1.V = cytoplasm.cytoplasmic_per2_cry_complex_degradation.p1.V;
//   cytoplasm.BMAL1_translation.s1.V = cytoplasm.per2_cry_complex_formation.s1.V;
//   cytoplasm.BMAL1_translation.s1.V = cytoplasm.per2_cry_mRNA_degradation.p1.V;
//   cytoplasm.BMAL1_translation.s1.V = cytoplasm.per2_cry_transcription.s1.V;
//   cytoplasm.BMAL1_translation.s1.c = cytoplasm.Bmal1_mRNA_degradation.p1.c;
//   cytoplasm.BMAL1_translation.s1.c = cytoplasm.Bmal1_transcription.s1.c;
//   cytoplasm.BMAL1_translation.s1.c = cytoplasm.ambientSubstance.n1.c;
//   cytoplasm.BMAL1_translation.s1.c = cytoplasm.cytoplasmic_BMAL1_degradation.p1.c;
//   cytoplasm.BMAL1_translation.s1.c = cytoplasm.cytoplasmic_per2_cry_complex_degradation.p1.c;
//   cytoplasm.BMAL1_translation.s1.c = cytoplasm.per2_cry_complex_formation.s1.c;
//   cytoplasm.BMAL1_translation.s1.c = cytoplasm.per2_cry_mRNA_degradation.p1.c;
//   cytoplasm.BMAL1_translation.s1.c = cytoplasm.per2_cry_transcription.s1.c;
//   cytoplasm.BMAL1_translation.m1.V = cytoplasm.Bmal1_mRNA_degradation.s1.V;
//   cytoplasm.BMAL1_translation.m1.V = cytoplasm.Bmal1_transcription.p1.V;
//   cytoplasm.BMAL1_translation.m1.V = cytoplasm.y4.n1.V;
//   cytoplasm.BMAL1_translation.m1.c = cytoplasm.Bmal1_mRNA_degradation.s1.c;
//   cytoplasm.BMAL1_translation.m1.c = cytoplasm.Bmal1_transcription.p1.c;
//   cytoplasm.BMAL1_translation.m1.c = cytoplasm.y4.n1.c;
//   nucleus.y3.n1.r + (-nucleus.y3_node.r) + nucleus.per2_cry_nuclear_export.s1.r + nucleus.nuclear_per2_cry_complex_degradation.s1.r = 0.0;
//   nucleus.y6.n1.r + (-nucleus.y6_node.r) + nucleus.BMAL1_nuclear_export.s1.r + nucleus.nuclear_BMAL1_degradation.s1.r + nucleus.BMAL1_activation.s1.r + nucleus.BMAL1_deactivation.p1.r = 0.0;
//   nucleus.y7.n1.r + nucleus.BMAL1_activation.p1.r + nucleus.BMAL1_deactivation.s1.r + nucleus.Active_BMAL1_degradation.s1.r = 0.0;
//   nucleus.ambientSubstance.n1.r + nucleus.nuclear_per2_cry_complex_degradation.p1.r + nucleus.nuclear_BMAL1_degradation.p1.r + nucleus.Active_BMAL1_degradation.p1.r = 0.0;
//   (-nucleus.y2_node.r) + nucleus.per2_cry_nuclear_export.p1.r = 0.0;
//   (-nucleus.y5_node.r) + nucleus.BMAL1_nuclear_export.p1.r = 0.0;
//   nucleus.nuclear_per2_cry_complex_degradation.s1.V = nucleus.per2_cry_nuclear_export.s1.V;
//   nucleus.nuclear_per2_cry_complex_degradation.s1.V = nucleus.y3.n1.V;
//   nucleus.nuclear_per2_cry_complex_degradation.s1.V = nucleus.y3_node.V;
//   nucleus.nuclear_per2_cry_complex_degradation.s1.c = nucleus.per2_cry_nuclear_export.s1.c;
//   nucleus.nuclear_per2_cry_complex_degradation.s1.c = nucleus.y3.n1.c;
//   nucleus.nuclear_per2_cry_complex_degradation.s1.c = nucleus.y3_node.c;
//   nucleus.Active_BMAL1_degradation.s1.V = nucleus.BMAL1_activation.p1.V;
//   nucleus.Active_BMAL1_degradation.s1.V = nucleus.BMAL1_deactivation.s1.V;
//   nucleus.Active_BMAL1_degradation.s1.V = nucleus.y7.n1.V;
//   nucleus.Active_BMAL1_degradation.s1.c = nucleus.BMAL1_activation.p1.c;
//   nucleus.Active_BMAL1_degradation.s1.c = nucleus.BMAL1_deactivation.s1.c;
//   nucleus.Active_BMAL1_degradation.s1.c = nucleus.y7.n1.c;
//   nucleus.BMAL1_activation.s1.V = nucleus.BMAL1_deactivation.p1.V;
//   nucleus.BMAL1_activation.s1.V = nucleus.BMAL1_nuclear_export.s1.V;
//   nucleus.BMAL1_activation.s1.V = nucleus.nuclear_BMAL1_degradation.s1.V;
//   nucleus.BMAL1_activation.s1.V = nucleus.y6.n1.V;
//   nucleus.BMAL1_activation.s1.V = nucleus.y6_node.V;
//   nucleus.BMAL1_activation.s1.c = nucleus.BMAL1_deactivation.p1.c;
//   nucleus.BMAL1_activation.s1.c = nucleus.BMAL1_nuclear_export.s1.c;
//   nucleus.BMAL1_activation.s1.c = nucleus.nuclear_BMAL1_degradation.s1.c;
//   nucleus.BMAL1_activation.s1.c = nucleus.y6.n1.c;
//   nucleus.BMAL1_activation.s1.c = nucleus.y6_node.c;
//   nucleus.Active_BMAL1_degradation.p1.V = nucleus.ambientSubstance.n1.V;
//   nucleus.Active_BMAL1_degradation.p1.V = nucleus.nuclear_BMAL1_degradation.p1.V;
//   nucleus.Active_BMAL1_degradation.p1.V = nucleus.nuclear_per2_cry_complex_degradation.p1.V;
//   nucleus.Active_BMAL1_degradation.p1.c = nucleus.ambientSubstance.n1.c;
//   nucleus.Active_BMAL1_degradation.p1.c = nucleus.nuclear_BMAL1_degradation.p1.c;
//   nucleus.Active_BMAL1_degradation.p1.c = nucleus.nuclear_per2_cry_complex_degradation.p1.c;
//   nucleus.BMAL1_nuclear_export.p1.V = nucleus.y5_node.V;
//   nucleus.BMAL1_nuclear_export.p1.c = nucleus.y5_node.c;
//   nucleus.per2_cry_nuclear_export.p1.V = nucleus.y2_node.V;
//   nucleus.per2_cry_nuclear_export.p1.c = nucleus.y2_node.c;
//   cytoplasm.y5_node.V = nucleus.y5_node.V;
//   cytoplasm.y5_node.c = nucleus.y5_node.c;
//   cytoplasm.y6_node.V = nucleus.y6_node.V;
//   cytoplasm.y6_node.c = nucleus.y6_node.c;
//   cytoplasm.y2_node.V = nucleus.y2_node.V;
//   cytoplasm.y2_node.c = nucleus.y2_node.c;
//   cytoplasm.y3_node.V = nucleus.y3_node.V;
//   cytoplasm.y3_node.c = nucleus.y3_node.c;
// end BioChem_Examples_CircadianOscillator_Container;
// "
// "[flattening/libraries/biochem/ContainerSimple.mo:177:9-177:51:writable] Warning: Connecting two signal sources while connecting cytoplasm.y5_node.V to nucleus.y5_node.V.
// [flattening/libraries/biochem/ContainerSimple.mo:178:9-178:51:writable] Warning: Connecting two signal sources while connecting nucleus.y6_node.V to cytoplasm.y6_node.V.
// [flattening/libraries/biochem/ContainerSimple.mo:179:9-179:51:writable] Warning: Connecting two signal sources while connecting cytoplasm.y2_node.V to nucleus.y2_node.V.
// [flattening/libraries/biochem/ContainerSimple.mo:180:9-180:51:writable] Warning: Connecting two signal sources while connecting nucleus.y3_node.V to cytoplasm.y3_node.V.
// "
// "Check of BioChem_Examples_CircadianOscillator_Container completed successfully.
// Class BioChem_Examples_CircadianOscillator_Container has 252 equation(s) and 252 variable(s).
// 180 of these are trivial equation(s)."
// "[flattening/libraries/biochem/ContainerSimple.mo:177:9-177:51:writable] Warning: Connecting two signal sources while connecting cytoplasm.y5_node.V to nucleus.y5_node.V.
// [flattening/libraries/biochem/ContainerSimple.mo:178:9-178:51:writable] Warning: Connecting two signal sources while connecting nucleus.y6_node.V to cytoplasm.y6_node.V.
// [flattening/libraries/biochem/ContainerSimple.mo:179:9-179:51:writable] Warning: Connecting two signal sources while connecting cytoplasm.y2_node.V to nucleus.y2_node.V.
// [flattening/libraries/biochem/ContainerSimple.mo:180:9-180:51:writable] Warning: Connecting two signal sources while connecting nucleus.y3_node.V to cytoplasm.y3_node.V.
// "
// true
// true
// "Warning: BioChem requested package Modelica of version 2.2.1. Modelica 3.1 is used instead which states that it is only compatible with a conversion script. OpenModelica currently does not support conversion scripts and will proceed with potential issues as a result.
// "
// "class BioChem_Examples_centralMetabolism_extra_cellular
//   Real V(quantity = \"Volume\", unit = \"l\", start = 2.0, stateSelect = StateSelect.prefer) \"Compartment volume\";
//   Real cytosol.V(quantity = \"Volume\", unit = \"l\", start = 2.0, stateSelect = StateSelect.prefer) \"Compartment volume\";
//   Real cytosol.cytosol_V = cytosol.V \"Variable used to make the compartment volume accessible for inner components. Do not edit.\";
//   Real cytosol.NADH.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.00406177, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytosol.NADH.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytosol.NADH.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytosol.NADH.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.NADH.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.NADH.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.FDP.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.0999758, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytosol.FDP.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytosol.FDP.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytosol.FDP.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.FDP.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.FDP.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.PYR.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.148871, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytosol.PYR.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytosol.PYR.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytosol.PYR.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.PYR.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.PYR.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.ADP.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.0695775, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytosol.ADP.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytosol.ADP.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytosol.ADP.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.ADP.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.ADP.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.IMP.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.650608, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytosol.IMP.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytosol.IMP.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytosol.IMP.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.IMP.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.IMP.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.ATP.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 12.7913) = cytosol.atp \"Current concentration of substance (mM)\";
//   Real cytosol.ATP.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytosol.ATP.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0) \"Number of moles of substance in pool (mol)\";
//   Real cytosol.ATP.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.ATP.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.ATP.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.AMP.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.000398124, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytosol.AMP.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytosol.AMP.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytosol.AMP.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.AMP.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.AMP.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.LAC.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 4.34299, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytosol.LAC.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytosol.LAC.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytosol.LAC.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.LAC.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.LAC.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.NAD.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.6959379999999999) = cytosol.nad \"Current concentration of substance (mM)\";
//   Real cytosol.NAD.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytosol.NAD.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0) \"Number of moles of substance in pool (mol)\";
//   Real cytosol.NAD.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.NAD.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.NAD.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.CP.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 28.2621, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytosol.CP.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytosol.CP.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytosol.CP.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.CP.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.CP.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.Cr.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 25.7379) = cytosol.cr \"Current concentration of substance (mM)\";
//   Real cytosol.Cr.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytosol.Cr.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0) \"Number of moles of substance in pool (mol)\";
//   Real cytosol.Cr.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.Cr.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.Cr.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.GLY.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytosol.GLY.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytosol.GLY.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytosol.GLY.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.GLY.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.GLY.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.PN.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0) = cytosol.pn \"Current concentration of substance (mM)\";
//   Real cytosol.PN.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytosol.PN.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0) \"Number of moles of substance in pool (mol)\";
//   Real cytosol.PN.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.PN.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.PN.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.G6P.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.603855 / (1.0 + cytosol.kh), stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytosol.G6P.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytosol.G6P.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytosol.G6P.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.G6P.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.G6P.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.F6P.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.603855 * cytosol.kh / (1.0 + cytosol.kh), stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytosol.F6P.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytosol.F6P.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytosol.F6P.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.F6P.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.F6P.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.jda.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytosol.jda.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.jda.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.jda.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.jda.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.jda.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.jda.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.jda.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = cytosol.cytosol_V / cytosol.jda.bamp \"Stoichiometric coefficient for the substrate\";
//   Real cytosol.jda.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = cytosol.cytosol_V \"Stoichiometric coefficient for the product\";
//   parameter Real cytosol.jda.KmAMP = 0.3;
//   parameter Real cytosol.jda.KmIMP = 3.54545;
//   parameter Real cytosol.jda.KcatDA = 121.0;
//   Real cytosol.jda.bamp = cytosol.bamp;
//   Real cytosol.vpfk.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytosol.vpfk.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vpfk.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vpfk.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.vpfk.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vpfk.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vpfk.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.vpfk.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vpfk.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vpfk.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.vpfk.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytosol.vpfk.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real cytosol.vpfk.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = cytosol.cytosol_V / cytosol.vpfk.badp \"Stoichiometric coefficient for product 2\";
//   parameter Real cytosol.vpfk.n_sbml = 2.0;
//   parameter Real cytosol.vpfk.KcatPFK = 400.0;
//   parameter Real cytosol.vpfk.KmF6P = 3.49515;
//   Real cytosol.vpfk.badp = cytosol.badp;
//   Real cytosol.vldh.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytosol.vldh.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vldh.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vldh.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.vldh.s2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vldh.s2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vldh.s2.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.vldh.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vldh.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vldh.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.vldh.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for substrate 1\";
//   Real cytosol.vldh.nS2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for substrate 2\";
//   Real cytosol.vldh.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real cytosol.vldh.m1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vldh.m1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vldh.m1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real cytosol.vldh.kia = 0.00245;
//   parameter Real cytosol.vldh.kmb = 0.137;
//   parameter Real cytosol.vldh.kip = 7.3;
//   parameter Real cytosol.vldh.kmq = 0.1;
//   parameter Real cytosol.vldh.kiq = 0.5;
//   parameter Real cytosol.vldh.k1ib = 0.1;
//   parameter Real cytosol.vldh.kmp = 1.0;
//   parameter Real cytosol.vldh.kma = 0.00844;
//   parameter Real cytosol.vldh.kib = 0.228;
//   parameter Real cytosol.vldh.kf = 458.0;
//   parameter Real cytosol.vldh.kr = 135.0;
//   parameter Real cytosol.vldh.e0 = 8.0;
//   Real cytosol.vpdh.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytosol.vpdh.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vpdh.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vpdh.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.vpdh.s2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vpdh.s2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vpdh.s2.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.vpdh.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vpdh.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vpdh.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.vpdh.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for substrate 1\";
//   Real cytosol.vpdh.nS2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = cytosol.cytosol_V / cytosol.vpdh.badp \"Stoichiometric coefficient for substrate 2\";
//   Real cytosol.vpdh.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 3.67 \"Stoichiometric coefficient for the product\";
//   Real cytosol.vpdh.m1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vpdh.m1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vpdh.m1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real cytosol.vpdh.KmPYR = 0.5;
//   parameter Real cytosol.vpdh.KcatPDH = 1.0;
//   Real cytosol.vpdh.badp = cytosol.badp;
//   Real cytosol.jak.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytosol.jak.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.jak.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.jak.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.jak.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.jak.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.jak.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.jak.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = cytosol.cytosol_V / cytosol.jak.bamp \"Stoichiometric coefficient for the substrate\";
//   Real cytosol.jak.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 2.0 * cytosol.cytosol_V / cytosol.jak.badp \"Stoichiometric coefficient for the product\";
//   Real cytosol.jak.m1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.jak.m1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.jak.m1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real cytosol.jak.KcatAK = 150000.0;
//   Real cytosol.jak.bamp = cytosol.bamp;
//   Real cytosol.jak.badp = cytosol.badp;
//   Real cytosol.vgph.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytosol.vgph.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vgph.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vgph.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.vgph.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vgph.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vgph.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.vgph.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytosol.vgph.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Integer cytosol.vgph.dimM = 3 \"number of modifiers\";
//   Real cytosol.vgph.m[1].c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vgph.m[1].r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vgph.m[1].V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.vgph.m[2].c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vgph.m[2].r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vgph.m[2].V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.vgph.m[3].c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vgph.m[3].r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vgph.m[3].V(quantity = \"Volume\", unit = \"l\");
//   parameter Real cytosol.vgph.kh = cytosol.kh;
//   parameter Real cytosol.vgph.KcatGPH = 248.0;
//   Real cytosol.vgph.bamp = cytosol.bamp;
//   Real cytosol.jatpase.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytosol.jatpase.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.jatpase.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.jatpase.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.jatpase.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.jatpase.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.jatpase.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.jatpase.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytosol.jatpase.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = cytosol.cytosol_V / cytosol.jatpase.badp \"Stoichiometric coefficient for the product\";
//   parameter Real cytosol.jatpase.KcatATPase = 370.0 \"I am unsure about this value\";
//   Real cytosol.jatpase.badp = cytosol.badp;
//   Real cytosol.jck.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytosol.jck.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.jck.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.jck.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.jck.s2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.jck.s2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.jck.s2.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.jck.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.jck.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.jck.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.jck.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.jck.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.jck.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.jck.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for substrate 1\";
//   Real cytosol.jck.nS2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for substrate 2\";
//   Real cytosol.jck.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = cytosol.cytosol_V / cytosol.jck.badp \"Stoichiometric coefficient for product 1\";
//   Real cytosol.jck.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   parameter Real cytosol.jck.KcatCK = 1970.0;
//   Real cytosol.jck.badp = cytosol.badp;
//   Real cytosol.node_LAC.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.node_LAC.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.node_LAC.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.mitochondria.V(quantity = \"Volume\", unit = \"l\", start = 2.0, stateSelect = StateSelect.prefer) \"Compartment volume\";
//   Real cytosol.mitochondria.NADHm.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytosol.mitochondria.NADHm.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytosol.mitochondria.NADHm.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytosol.mitochondria.NADHm.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.mitochondria.NADHm.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.mitochondria.NADHm.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.mitochondria.NADm.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytosol.mitochondria.NADm.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytosol.mitochondria.NADm.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytosol.mitochondria.NADm.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.mitochondria.NADm.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.mitochondria.NADm.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.mitochondria.jox.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytosol.mitochondria.jox.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.mitochondria.jox.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.mitochondria.jox.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.mitochondria.jox.s2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.mitochondria.jox.s2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.mitochondria.jox.s2.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.mitochondria.jox.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.mitochondria.jox.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.mitochondria.jox.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.mitochondria.jox.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.mitochondria.jox.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.mitochondria.jox.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.mitochondria.jox.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 2.5 * cytosol.cytosol_V / cytosol.mitochondria.jox.badp \"Stoichiometric coefficient for substrate 1\";
//   Real cytosol.mitochondria.jox.nS2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for substrate 2\";
//   Real cytosol.mitochondria.jox.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real cytosol.mitochondria.jox.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   Real cytosol.mitochondria.jox.badp = cytosol.mitochondria.badp;
//   Real cytosol.mitochondria.node_ADP.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.mitochondria.node_ADP.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.mitochondria.node_ADP.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.mitochondria.node_NADHm.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.mitochondria.node_NADHm.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.mitochondria.node_NADHm.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.mitochondria.vn.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytosol.mitochondria.vn.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.mitochondria.vn.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.mitochondria.vn.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.mitochondria.vn.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.mitochondria.vn.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.mitochondria.vn.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.mitochondria.vn.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytosol.mitochondria.vn.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real cytosol.mitochondria.vn.VmaxN = 10.8347;
//   parameter Real cytosol.mitochondria.vn.KmNADH = 0.216694;
//   Real cytosol.mitochondria.node_NADH.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.mitochondria.node_NADH.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.mitochondria.node_NADH.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.mitochondria.node_ATP.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.mitochondria.node_ATP.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.mitochondria.node_ATP.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.mitochondria.badp = cytosol.badp;
//   Real cytosol.bamp = bamp;
//   Real cytosol.badp = badp;
//   Real cytosol.pn = pn;
//   Real cytosol.atp = atp;
//   Real cytosol.cr = cr;
//   Real cytosol.nad = nad;
//   parameter Real cytosol.kh = kh;
//   parameter Real cytosol.kt = kt;
//   Real cytosol.vH6P.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vH6P.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vH6P.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.vH6P.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vH6P.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vH6P.p1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real cytosol.vH6P.kS1(quantity = \"Equilibrium coefficient\", unit = \"1\") = 1.0 \"Equilibrium coefficient for the substrate\";
//   parameter Real cytosol.vH6P.kP1(quantity = \"Equilibrium coefficient\", unit = \"1\") = cytosol.kh \"Equilibrium coefficient for the product\";
//   Real cytosol.vald.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytosol.vald.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vald.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vald.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.vald.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vald.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vald.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.vald.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytosol.vald.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 2.0 \"Stoichiometric coefficient for the product\";
//   parameter Real cytosol.vald.kt = cytosol.kt;
//   parameter Real cytosol.vald.ka1 = 0.01;
//   parameter Real cytosol.vald.ka2 = 1.65;
//   parameter Real cytosol.vald.ka3 = 3000.0;
//   parameter Real cytosol.vald.ka4 = 0.125;
//   parameter Real cytosol.vald.ka5 = 340.0;
//   parameter Real cytosol.vald.ka6 = 14000000.0;
//   parameter Real cytosol.vald.ka7 = 56000.0;
//   Real cytosol.DHAP.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.07427 / (1.0 + cytosol.kt), stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytosol.DHAP.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytosol.DHAP.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytosol.DHAP.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.DHAP.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.DHAP.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.G3P.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.07427 * cytosol.kt / (1.0 + cytosol.kt), stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytosol.G3P.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytosol.G3P.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytosol.G3P.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.G3P.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.G3P.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.vgpdh_1.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytosol.vgpdh_1.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vgpdh_1.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vgpdh_1.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.vgpdh_1.s2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vgpdh_1.s2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vgpdh_1.s2.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.vgpdh_1.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vgpdh_1.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vgpdh_1.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.vgpdh_1.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vgpdh_1.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vgpdh_1.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.vgpdh_1.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 2.0 * cytosol.cytosol_V / cytosol.vgpdh_1.badp \"Stoichiometric coefficient for substrate 1\";
//   Real cytosol.vgpdh_1.nS2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for substrate 2\";
//   Real cytosol.vgpdh_1.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real cytosol.vgpdh_1.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   Real cytosol.vgpdh_1.m1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vgpdh_1.m1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vgpdh_1.m1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real cytosol.vgpdh_1.KcatGPDH = 78595.60000000001;
//   parameter Real cytosol.vgpdh_1.KmGPDH = 0.0369;
//   parameter Real cytosol.vgpdh_1.KmADP = 1.4;
//   parameter Real cytosol.vgpdh_1.KmPN = 120.0;
//   Real cytosol.vgpdh_1.badp = cytosol.badp;
//   Real cytosol.vT3P.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vT3P.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vT3P.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytosol.vT3P.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytosol.vT3P.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytosol.vT3P.p1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real cytosol.vT3P.kS1(quantity = \"Equilibrium coefficient\", unit = \"1\") = 1.0 \"Equilibrium coefficient for the substrate\";
//   parameter Real cytosol.vT3P.kP1(quantity = \"Equilibrium coefficient\", unit = \"1\") = cytosol.kt \"Equilibrium coefficient for the product\";
//   Real vef.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real vef.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real vef.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real vef.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real vef.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real vef.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real vef.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real vef.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real vef.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real vef.VmaxEF = 15.0;
//   parameter Real vef.KmLAC = 26.8483;
//   Real LACext.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real LACext.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real LACext.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real LACext.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real LACext.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real LACext.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real default_V = V \"Variable used to make the compartment volume accessible for inner components. Do not edit.\";
//   Real cytosol_V = cytosol.V \"Variable used to make the compartment volume of inner compartments accessible. Do not edit.\";
//   parameter Real iv1 = 0.603855;
//   parameter Real iv2 = 0.0999758;
//   parameter Real iv3 = 0.07427;
//   parameter Real iv4 = 0.148871;
//   parameter Real iv5 = 4.34299;
//   parameter Real iv6 = 0.00406177;
//   parameter Real iv7 = 1.72073e-05;
//   parameter Real iv8 = 0.0695775;
//   parameter Real iv9 = 28.2621;
//   parameter Real iv10 = 0.000398124;
//   parameter Real iv11 = 0.650608;
//   parameter Real nv19 = 1.0;
//   parameter Real nv20 = 1.14947;
//   parameter Real kamp = 0.008414710000000001;
//   parameter Real k2amp = 200.0;
//   parameter Real kadp = 0.05;
//   parameter Real k2adp = 84.7376;
//   parameter Real tan = 27.5 \"\";
//   parameter Real tcr = 54.0;
//   parameter Real kt = 0.08500000000000001;
//   parameter Real kh = 0.2;
//   parameter Real PNt = 139.117;
//   Real adpt;
//   Real ampt;
//   Real atp;
//   Real atpt;
//   Real badp;
//   Real bamp;
//   Real pn;
//   Real cr;
//   Real nad;
// equation
//   der(cytosol.NADH.n) = cytosol.NADH.rNet;
//   cytosol.NADH.rNet = cytosol.NADH.n1.r;
//   cytosol.NADH.c = cytosol.NADH.n1.c;
//   cytosol.V = cytosol.NADH.n1.V;
//   cytosol.NADH.c = cytosol.NADH.n / cytosol.V;
//   der(cytosol.FDP.n) = cytosol.FDP.rNet;
//   cytosol.FDP.rNet = cytosol.FDP.n1.r;
//   cytosol.FDP.c = cytosol.FDP.n1.c;
//   cytosol.V = cytosol.FDP.n1.V;
//   cytosol.FDP.c = cytosol.FDP.n / cytosol.V;
//   der(cytosol.PYR.n) = cytosol.PYR.rNet;
//   cytosol.PYR.rNet = cytosol.PYR.n1.r;
//   cytosol.PYR.c = cytosol.PYR.n1.c;
//   cytosol.V = cytosol.PYR.n1.V;
//   cytosol.PYR.c = cytosol.PYR.n / cytosol.V;
//   der(cytosol.ADP.n) = cytosol.ADP.rNet;
//   cytosol.ADP.rNet = cytosol.ADP.n1.r;
//   cytosol.ADP.c = cytosol.ADP.n1.c;
//   cytosol.V = cytosol.ADP.n1.V;
//   cytosol.ADP.c = cytosol.ADP.n / cytosol.V;
//   der(cytosol.IMP.n) = cytosol.IMP.rNet;
//   cytosol.IMP.rNet = cytosol.IMP.n1.r;
//   cytosol.IMP.c = cytosol.IMP.n1.c;
//   cytosol.V = cytosol.IMP.n1.V;
//   cytosol.IMP.c = cytosol.IMP.n / cytosol.V;
//   cytosol.ATP.rNet = cytosol.ATP.n1.r;
//   cytosol.ATP.c = cytosol.ATP.n1.c;
//   cytosol.V = cytosol.ATP.n1.V;
//   cytosol.ATP.c = cytosol.ATP.n / cytosol.V;
//   der(cytosol.AMP.n) = cytosol.AMP.rNet;
//   cytosol.AMP.rNet = cytosol.AMP.n1.r;
//   cytosol.AMP.c = cytosol.AMP.n1.c;
//   cytosol.V = cytosol.AMP.n1.V;
//   cytosol.AMP.c = cytosol.AMP.n / cytosol.V;
//   der(cytosol.LAC.n) = cytosol.LAC.rNet;
//   cytosol.LAC.rNet = cytosol.LAC.n1.r;
//   cytosol.LAC.c = cytosol.LAC.n1.c;
//   cytosol.V = cytosol.LAC.n1.V;
//   cytosol.LAC.c = cytosol.LAC.n / cytosol.V;
//   cytosol.NAD.rNet = cytosol.NAD.n1.r;
//   cytosol.NAD.c = cytosol.NAD.n1.c;
//   cytosol.V = cytosol.NAD.n1.V;
//   cytosol.NAD.c = cytosol.NAD.n / cytosol.V;
//   der(cytosol.CP.n) = cytosol.CP.rNet;
//   cytosol.CP.rNet = cytosol.CP.n1.r;
//   cytosol.CP.c = cytosol.CP.n1.c;
//   cytosol.V = cytosol.CP.n1.V;
//   cytosol.CP.c = cytosol.CP.n / cytosol.V;
//   cytosol.Cr.rNet = cytosol.Cr.n1.r;
//   cytosol.Cr.c = cytosol.Cr.n1.c;
//   cytosol.V = cytosol.Cr.n1.V;
//   cytosol.Cr.c = cytosol.Cr.n / cytosol.V;
//   der(cytosol.GLY.n) = 0.0;
//   cytosol.GLY.rNet = cytosol.GLY.n1.r;
//   cytosol.GLY.c = cytosol.GLY.n1.c;
//   cytosol.V = cytosol.GLY.n1.V;
//   cytosol.GLY.c = cytosol.GLY.n / cytosol.V;
//   cytosol.PN.rNet = cytosol.PN.n1.r;
//   cytosol.PN.c = cytosol.PN.n1.c;
//   cytosol.V = cytosol.PN.n1.V;
//   cytosol.PN.c = cytosol.PN.n / cytosol.V;
//   der(cytosol.G6P.n) = cytosol.G6P.rNet;
//   cytosol.G6P.rNet = cytosol.G6P.n1.r;
//   cytosol.G6P.c = cytosol.G6P.n1.c;
//   cytosol.V = cytosol.G6P.n1.V;
//   cytosol.G6P.c = cytosol.G6P.n / cytosol.V;
//   der(cytosol.F6P.n) = cytosol.F6P.rNet;
//   cytosol.F6P.rNet = cytosol.F6P.n1.r;
//   cytosol.F6P.c = cytosol.F6P.n1.c;
//   cytosol.V = cytosol.F6P.n1.V;
//   cytosol.F6P.c = cytosol.F6P.n / cytosol.V;
//   cytosol.jda.rr = cytosol.jda.KcatDA * cytosol.jda.s1.c / (cytosol.jda.KmAMP + cytosol.jda.s1.c) + (-0.01) * cytosol.jda.p1.c / (cytosol.jda.KmIMP + cytosol.jda.p1.c);
//   cytosol.jda.s1.r = cytosol.jda.nS1 * cytosol.jda.rr;
//   cytosol.jda.p1.r = (-cytosol.jda.nP1) * cytosol.jda.rr;
//   cytosol.vpfk.rr = cytosol.vpfk.KcatPFK * cytosol.vpfk.s1.c ^ cytosol.vpfk.n_sbml / (cytosol.vpfk.KmF6P + cytosol.vpfk.s1.c ^ cytosol.vpfk.n_sbml);
//   cytosol.vpfk.s1.r = cytosol.vpfk.nS1 * cytosol.vpfk.rr;
//   cytosol.vpfk.p1.r = (-cytosol.vpfk.nP1) * cytosol.vpfk.rr;
//   cytosol.vpfk.p2.r = (-cytosol.vpfk.nP2) * cytosol.vpfk.rr;
//   cytosol.vldh.rr = cytosol.vldh.e0 * (cytosol.vldh.s2.c * cytosol.vldh.s1.c * cytosol.vldh.kf / (cytosol.vldh.kmb * cytosol.vldh.kia) - cytosol.vldh.kr * cytosol.vldh.p1.c * cytosol.vldh.m1.c / (cytosol.vldh.kmp * cytosol.vldh.kiq)) / (cytosol.vldh.s2.c * (1.0 / cytosol.vldh.kia + (1.0 / (cytosol.vldh.kmb * cytosol.vldh.kia) + cytosol.vldh.p1.c / (cytosol.vldh.kia * cytosol.vldh.kip * cytosol.vldh.kmb)) * cytosol.vldh.s1.c + cytosol.vldh.kmq * cytosol.vldh.p1.c / (cytosol.vldh.kmp * cytosol.vldh.kiq * cytosol.vldh.kia)) + (1.0 + cytosol.vldh.s1.c / cytosol.vldh.k1ib) * (1.0 + cytosol.vldh.s1.c * cytosol.vldh.kma / (cytosol.vldh.kia * cytosol.vldh.kmb) + cytosol.vldh.kmq * cytosol.vldh.p1.c / (cytosol.vldh.kiq * cytosol.vldh.kmp)) + cytosol.vldh.m1.c / cytosol.vldh.kiq + cytosol.vldh.s1.c * cytosol.vldh.kma * cytosol.vldh.m1.c / (cytosol.vldh.kia * cytosol.vldh.kiq * cytosol.vldh.kmb) + cytosol.vldh.p1.c * cytosol.vldh.m1.c / (cytosol.vldh.kmp * cytosol.vldh.kiq) + cytosol.vldh.s1.c * cytosol.vldh.p1.c * cytosol.vldh.m1.c / (cytosol.vldh.kib * cytosol.vldh.kiq * cytosol.vldh.kmp));
//   cytosol.vldh.s1.r = cytosol.vldh.nS1 * cytosol.vldh.rr;
//   cytosol.vldh.s2.r = cytosol.vldh.nS2 * cytosol.vldh.rr;
//   cytosol.vldh.p1.r = (-cytosol.vldh.nP1) * cytosol.vldh.rr;
//   cytosol.vldh.m1.r = 0.0;
//   cytosol.vpdh.rr = cytosol.vpdh.KcatPDH * cytosol.vpdh.s1.c * cytosol.vpdh.m1.c / ((cytosol.vpdh.s1.c + cytosol.vpdh.KmPYR) * (0.1 + cytosol.vpdh.m1.c));
//   cytosol.vpdh.s1.r = cytosol.vpdh.nS1 * cytosol.vpdh.rr;
//   cytosol.vpdh.s2.r = cytosol.vpdh.nS2 * cytosol.vpdh.rr;
//   cytosol.vpdh.p1.r = (-cytosol.vpdh.nP1) * cytosol.vpdh.rr;
//   cytosol.vpdh.m1.r = 0.0;
//   cytosol.jak.rr = cytosol.jak.KcatAK * (cytosol.jak.m1.c * cytosol.jak.s1.c - cytosol.jak.p1.c ^ 2.0) / (1.0 + 10.0 * (cytosol.jak.s1.c + cytosol.jak.p1.c) + cytosol.jak.m1.c * (10.0 + 100.0 * cytosol.jak.s1.c) + cytosol.jak.p1.c * (10.0 + 100.0 * cytosol.jak.p1.c + 0.2865329512893983 * cytosol.jak.s1.c));
//   cytosol.jak.s1.r = cytosol.jak.nS1 * cytosol.jak.rr;
//   cytosol.jak.p1.r = (-cytosol.jak.nP1) * cytosol.jak.rr;
//   cytosol.jak.m1.r = 0.0;
//   cytosol.vgph.rr = cytosol.vgph.KcatGPH * cytosol.vgph.m[3].c * (0.002 + cytosol.vgph.m[2].c + cytosol.vgph.m[1].c / cytosol.vgph.bamp) / ((0.014 + cytosol.vgph.m[2].c + cytosol.vgph.m[1].c / cytosol.vgph.bamp) * (8.0 * (0.01 + cytosol.vgph.m[2].c + cytosol.vgph.m[1].c / cytosol.vgph.bamp) / (0.002 + cytosol.vgph.m[2].c + cytosol.vgph.m[1].c / cytosol.vgph.bamp) + cytosol.vgph.m[3].c));
//   cytosol.vgph.s1.r = cytosol.vgph.nS1 * cytosol.vgph.rr;
//   cytosol.vgph.p1.r = (-cytosol.vgph.nP1) * cytosol.vgph.rr;
//   cytosol.vgph.m[1].r = 0.0;
//   cytosol.vgph.m[2].r = 0.0;
//   cytosol.vgph.m[3].r = 0.0;
//   cytosol.jatpase.rr = cytosol.jatpase.KcatATPase * cytosol.jatpase.s1.c / (0.05 + cytosol.jatpase.s1.c);
//   cytosol.jatpase.s1.r = cytosol.jatpase.nS1 * cytosol.jatpase.rr;
//   cytosol.jatpase.p1.r = (-cytosol.jatpase.nP1) * cytosol.jatpase.rr;
//   cytosol.jck.rr = cytosol.jck.KcatCK * (1.84331797235023 * cytosol.jck.s1.c * cytosol.jck.s2.c + (-293.33) * cytosol.jck.p1.c * cytosol.jck.p2.c) / (1.0 + 0.02865329512893983 * cytosol.jck.s2.c + 1.25 * cytosol.jck.p2.c + cytosol.jck.s1.c * (1.43 + 0.09216589861751152 * cytosol.jck.s2.c) + cytosol.jck.p1.c * (16.7 + 10.0 * cytosol.jck.p2.c + 0.4761904761904762 * cytosol.jck.s2.c));
//   cytosol.jck.s1.r = cytosol.jck.nS1 * cytosol.jck.rr;
//   cytosol.jck.s2.r = cytosol.jck.nS2 * cytosol.jck.rr;
//   cytosol.jck.p1.r = (-cytosol.jck.nP1) * cytosol.jck.rr;
//   cytosol.jck.p2.r = (-cytosol.jck.nP2) * cytosol.jck.rr;
//   der(cytosol.mitochondria.NADHm.n) = cytosol.mitochondria.NADHm.rNet;
//   cytosol.mitochondria.NADHm.rNet = cytosol.mitochondria.NADHm.n1.r;
//   cytosol.mitochondria.NADHm.c = cytosol.mitochondria.NADHm.n1.c;
//   cytosol.mitochondria.V = cytosol.mitochondria.NADHm.n1.V;
//   cytosol.mitochondria.NADHm.c = cytosol.mitochondria.NADHm.n / cytosol.mitochondria.V;
//   der(cytosol.mitochondria.NADm.n) = cytosol.mitochondria.NADm.rNet;
//   cytosol.mitochondria.NADm.rNet = cytosol.mitochondria.NADm.n1.r;
//   cytosol.mitochondria.NADm.c = cytosol.mitochondria.NADm.n1.c;
//   cytosol.mitochondria.V = cytosol.mitochondria.NADm.n1.V;
//   cytosol.mitochondria.NADm.c = cytosol.mitochondria.NADm.n / cytosol.mitochondria.V;
//   cytosol.mitochondria.jox.rr = 10000.0 * cytosol.mitochondria.jox.s1.c * cytosol.mitochondria.jox.s2.c / ((0.01 + cytosol.mitochondria.jox.s1.c) * (0.15 + cytosol.mitochondria.jox.s2.c));
//   cytosol.mitochondria.jox.s1.r = cytosol.mitochondria.jox.nS1 * cytosol.mitochondria.jox.rr;
//   cytosol.mitochondria.jox.s2.r = cytosol.mitochondria.jox.nS2 * cytosol.mitochondria.jox.rr;
//   cytosol.mitochondria.jox.p1.r = (-cytosol.mitochondria.jox.nP1) * cytosol.mitochondria.jox.rr;
//   cytosol.mitochondria.jox.p2.r = (-cytosol.mitochondria.jox.nP2) * cytosol.mitochondria.jox.rr;
//   cytosol.mitochondria.vn.rr = cytosol.mitochondria.vn.VmaxN * cytosol.mitochondria.vn.s1.c / (cytosol.mitochondria.vn.KmNADH + cytosol.mitochondria.vn.s1.c);
//   cytosol.mitochondria.vn.s1.r = cytosol.mitochondria.vn.nS1 * cytosol.mitochondria.vn.rr;
//   cytosol.mitochondria.vn.p1.r = (-cytosol.mitochondria.vn.nP1) * cytosol.mitochondria.vn.rr;
//   der(cytosol.mitochondria.V) = 0.0 \"Compartment volume is constant\";
//   cytosol.vH6P.p1.c = cytosol.vH6P.s1.c * cytosol.vH6P.kP1 / cytosol.vH6P.kS1;
//   cytosol.vH6P.s1.r + cytosol.vH6P.p1.r = 0.0;
//   cytosol.vald.rr = (cytosol.vald.ka7 * cytosol.vald.s1.c - cytosol.vald.ka6 * cytosol.vald.p1.c ^ 2.0 * cytosol.vald.kt) / (cytosol.vald.ka1 + cytosol.vald.ka2 * cytosol.vald.p1.c + cytosol.vald.s1.c + cytosol.vald.ka3 * cytosol.vald.p1.c * cytosol.vald.s1.c + cytosol.vald.ka4 * cytosol.vald.kt * cytosol.vald.p1.c + cytosol.vald.ka5 * cytosol.vald.p1.c ^ 2.0 * cytosol.vald.kt);
//   cytosol.vald.s1.r = cytosol.vald.nS1 * cytosol.vald.rr;
//   cytosol.vald.p1.r = (-cytosol.vald.nP1) * cytosol.vald.rr;
//   der(cytosol.DHAP.n) = cytosol.DHAP.rNet;
//   cytosol.DHAP.rNet = cytosol.DHAP.n1.r;
//   cytosol.DHAP.c = cytosol.DHAP.n1.c;
//   cytosol.V = cytosol.DHAP.n1.V;
//   cytosol.DHAP.c = cytosol.DHAP.n / cytosol.V;
//   der(cytosol.G3P.n) = cytosol.G3P.rNet;
//   cytosol.G3P.rNet = cytosol.G3P.n1.r;
//   cytosol.G3P.c = cytosol.G3P.n1.c;
//   cytosol.V = cytosol.G3P.n1.V;
//   cytosol.G3P.c = cytosol.G3P.n / cytosol.V;
//   cytosol.vgpdh_1.rr = cytosol.vgpdh_1.KcatGPDH * cytosol.vgpdh_1.s2.c * cytosol.vgpdh_1.s1.c * cytosol.vgpdh_1.m1.c / ((cytosol.vgpdh_1.KmGPDH + cytosol.vgpdh_1.s2.c) * (cytosol.vgpdh_1.s1.c + cytosol.vgpdh_1.KmADP) * (cytosol.vgpdh_1.m1.c + cytosol.vgpdh_1.KmPN));
//   cytosol.vgpdh_1.s1.r = cytosol.vgpdh_1.nS1 * cytosol.vgpdh_1.rr;
//   cytosol.vgpdh_1.s2.r = cytosol.vgpdh_1.nS2 * cytosol.vgpdh_1.rr;
//   cytosol.vgpdh_1.p1.r = (-cytosol.vgpdh_1.nP1) * cytosol.vgpdh_1.rr;
//   cytosol.vgpdh_1.p2.r = (-cytosol.vgpdh_1.nP2) * cytosol.vgpdh_1.rr;
//   cytosol.vgpdh_1.m1.r = 0.0;
//   cytosol.vT3P.p1.c = cytosol.vT3P.s1.c * cytosol.vT3P.kP1 / cytosol.vT3P.kS1;
//   cytosol.vT3P.s1.r + cytosol.vT3P.p1.r = 0.0;
//   der(cytosol.V) = 0.0 \"Compartment volume is constant\";
//   vef.rr = vef.VmaxEF * vef.s1.c / (vef.KmLAC + vef.s1.c);
//   vef.s1.r = vef.nS1 * vef.rr;
//   vef.p1.r = (-vef.nP1) * vef.rr;
//   der(LACext.n) = LACext.rNet;
//   LACext.rNet = LACext.n1.r;
//   LACext.c = LACext.n1.c;
//   V = LACext.n1.V;
//   LACext.c = LACext.n / V;
//   badp = k2adp * kadp / (kadp + cytosol.ADP.c);
//   adpt = cytosol.ADP.c * badp;
//   atpt = tan + (-cytosol.IMP.c) - adpt - ampt;
//   ampt = cytosol.AMP.c * bamp;
//   atp = atpt / cytosol.V;
//   pn = (PNt + (-3.0) * atpt + (-2.0) * adpt + (-2.0) * cytosol.CP.c + ((-2.0) * cytosol.FDP.c + (-cytosol.DHAP.c) - cytosol.G3P.c - cytosol.G6P.c - cytosol.F6P.c) * cytosol.V + (-cytosol.IMP.c) - ampt) / cytosol.V;
//   bamp = k2amp * kamp / (kamp + cytosol.AMP.c);
//   nad = 0.7 - cytosol.NADH.c;
//   cr = tcr - cytosol.CP.c;
//   der(V) = 0.0 \"Compartment volume is constant\";
//   vef.s1.r + cytosol.node_LAC.r = 0.0;
//   vef.p1.r + LACext.n1.r = 0.0;
//   cytosol.NADH.n1.r + cytosol.vldh.s2.r + cytosol.mitochondria.node_NADH.r + cytosol.vgpdh_1.p1.r = 0.0;
//   cytosol.FDP.n1.r + cytosol.vpfk.p1.r + cytosol.vald.s1.r = 0.0;
//   cytosol.PYR.n1.r + cytosol.vldh.s1.r + cytosol.vpdh.s1.r + cytosol.vgpdh_1.p2.r = 0.0;
//   cytosol.ADP.n1.r + cytosol.vpfk.p2.r + cytosol.vpdh.s2.r + cytosol.jak.p1.r + cytosol.jatpase.p1.r + cytosol.jck.p1.r + cytosol.mitochondria.node_ADP.r + cytosol.vgpdh_1.s1.r = 0.0;
//   cytosol.IMP.n1.r + cytosol.jda.p1.r + cytosol.vgph.m[1].r = 0.0;
//   cytosol.AMP.n1.r + cytosol.jda.s1.r + cytosol.jak.s1.r + cytosol.vgph.m[2].r = 0.0;
//   cytosol.LAC.n1.r + cytosol.vldh.p1.r + (-cytosol.node_LAC.r) = 0.0;
//   cytosol.CP.n1.r + cytosol.jck.p2.r = 0.0;
//   cytosol.GLY.n1.r + cytosol.vgph.s1.r = 0.0;
//   cytosol.vldh.m1.r + cytosol.vpdh.m1.r + cytosol.NAD.n1.r = 0.0;
//   cytosol.vpfk.s1.r + cytosol.F6P.n1.r + cytosol.vH6P.p1.r = 0.0;
//   cytosol.vpdh.p1.r + cytosol.mitochondria.node_NADHm.r = 0.0;
//   cytosol.jak.m1.r + cytosol.jatpase.s1.r + cytosol.jck.s1.r + cytosol.mitochondria.node_ATP.r + cytosol.ATP.n1.r = 0.0;
//   cytosol.jck.s2.r + cytosol.Cr.n1.r = 0.0;
//   cytosol.mitochondria.NADHm.n1.r + (-cytosol.mitochondria.node_NADHm.r) + cytosol.mitochondria.vn.p1.r + cytosol.mitochondria.jox.s2.r = 0.0;
//   cytosol.mitochondria.NADm.n1.r + cytosol.mitochondria.jox.p1.r = 0.0;
//   cytosol.mitochondria.vn.s1.r + (-cytosol.mitochondria.node_NADH.r) = 0.0;
//   (-cytosol.mitochondria.node_ADP.r) + cytosol.mitochondria.jox.s1.r = 0.0;
//   (-cytosol.mitochondria.node_ATP.r) + cytosol.mitochondria.jox.p2.r = 0.0;
//   cytosol.mitochondria.NADm.n1.V = cytosol.mitochondria.jox.p1.V;
//   cytosol.mitochondria.NADm.n1.c = cytosol.mitochondria.jox.p1.c;
//   cytosol.mitochondria.NADHm.n1.V = cytosol.mitochondria.jox.s2.V;
//   cytosol.mitochondria.NADHm.n1.V = cytosol.mitochondria.node_NADHm.V;
//   cytosol.mitochondria.NADHm.n1.V = cytosol.mitochondria.vn.p1.V;
//   cytosol.mitochondria.NADHm.n1.c = cytosol.mitochondria.jox.s2.c;
//   cytosol.mitochondria.NADHm.n1.c = cytosol.mitochondria.node_NADHm.c;
//   cytosol.mitochondria.NADHm.n1.c = cytosol.mitochondria.vn.p1.c;
//   cytosol.mitochondria.jox.p2.V = cytosol.mitochondria.node_ATP.V;
//   cytosol.mitochondria.jox.p2.c = cytosol.mitochondria.node_ATP.c;
//   cytosol.mitochondria.jox.s1.V = cytosol.mitochondria.node_ADP.V;
//   cytosol.mitochondria.jox.s1.c = cytosol.mitochondria.node_ADP.c;
//   cytosol.mitochondria.node_NADH.V = cytosol.mitochondria.vn.s1.V;
//   cytosol.mitochondria.node_NADH.c = cytosol.mitochondria.vn.s1.c;
//   cytosol.vgpdh_1.s2.r + cytosol.G3P.n1.r + cytosol.vT3P.p1.r = 0.0;
//   cytosol.vgpdh_1.m1.r + cytosol.PN.n1.r + cytosol.vgph.m[3].r = 0.0;
//   cytosol.G6P.n1.r + cytosol.vgph.p1.r + cytosol.vH6P.s1.r = 0.0;
//   cytosol.vald.p1.r + cytosol.DHAP.n1.r + cytosol.vT3P.s1.r = 0.0;
//   cytosol.PN.n1.V = cytosol.vgpdh_1.m1.V;
//   cytosol.PN.n1.V = cytosol.vgph.m[3].V;
//   cytosol.PN.n1.c = cytosol.vgpdh_1.m1.c;
//   cytosol.PN.n1.c = cytosol.vgph.m[3].c;
//   cytosol.PYR.n1.V = cytosol.vgpdh_1.p2.V;
//   cytosol.PYR.n1.V = cytosol.vldh.s1.V;
//   cytosol.PYR.n1.V = cytosol.vpdh.s1.V;
//   cytosol.PYR.n1.c = cytosol.vgpdh_1.p2.c;
//   cytosol.PYR.n1.c = cytosol.vldh.s1.c;
//   cytosol.PYR.n1.c = cytosol.vpdh.s1.c;
//   cytosol.DHAP.n1.V = cytosol.vT3P.s1.V;
//   cytosol.DHAP.n1.V = cytosol.vald.p1.V;
//   cytosol.DHAP.n1.c = cytosol.vT3P.s1.c;
//   cytosol.DHAP.n1.c = cytosol.vald.p1.c;
//   cytosol.G3P.n1.V = cytosol.vT3P.p1.V;
//   cytosol.G3P.n1.V = cytosol.vgpdh_1.s2.V;
//   cytosol.G3P.n1.c = cytosol.vT3P.p1.c;
//   cytosol.G3P.n1.c = cytosol.vgpdh_1.s2.c;
//   cytosol.ADP.n1.V = cytosol.jak.p1.V;
//   cytosol.ADP.n1.V = cytosol.jatpase.p1.V;
//   cytosol.ADP.n1.V = cytosol.jck.p1.V;
//   cytosol.ADP.n1.V = cytosol.mitochondria.node_ADP.V;
//   cytosol.ADP.n1.V = cytosol.vgpdh_1.s1.V;
//   cytosol.ADP.n1.V = cytosol.vpdh.s2.V;
//   cytosol.ADP.n1.V = cytosol.vpfk.p2.V;
//   cytosol.ADP.n1.c = cytosol.jak.p1.c;
//   cytosol.ADP.n1.c = cytosol.jatpase.p1.c;
//   cytosol.ADP.n1.c = cytosol.jck.p1.c;
//   cytosol.ADP.n1.c = cytosol.mitochondria.node_ADP.c;
//   cytosol.ADP.n1.c = cytosol.vgpdh_1.s1.c;
//   cytosol.ADP.n1.c = cytosol.vpdh.s2.c;
//   cytosol.ADP.n1.c = cytosol.vpfk.p2.c;
//   cytosol.G6P.n1.V = cytosol.vH6P.s1.V;
//   cytosol.G6P.n1.V = cytosol.vgph.p1.V;
//   cytosol.G6P.n1.c = cytosol.vH6P.s1.c;
//   cytosol.G6P.n1.c = cytosol.vgph.p1.c;
//   cytosol.ATP.n1.V = cytosol.jak.m1.V;
//   cytosol.ATP.n1.V = cytosol.jatpase.s1.V;
//   cytosol.ATP.n1.V = cytosol.jck.s1.V;
//   cytosol.ATP.n1.V = cytosol.mitochondria.node_ATP.V;
//   cytosol.ATP.n1.c = cytosol.jak.m1.c;
//   cytosol.ATP.n1.c = cytosol.jatpase.s1.c;
//   cytosol.ATP.n1.c = cytosol.jck.s1.c;
//   cytosol.ATP.n1.c = cytosol.mitochondria.node_ATP.c;
//   cytosol.FDP.n1.V = cytosol.vald.s1.V;
//   cytosol.FDP.n1.V = cytosol.vpfk.p1.V;
//   cytosol.FDP.n1.c = cytosol.vald.s1.c;
//   cytosol.FDP.n1.c = cytosol.vpfk.p1.c;
//   cytosol.NADH.n1.V = cytosol.mitochondria.node_NADH.V;
//   cytosol.NADH.n1.V = cytosol.vgpdh_1.p1.V;
//   cytosol.NADH.n1.V = cytosol.vldh.s2.V;
//   cytosol.NADH.n1.c = cytosol.mitochondria.node_NADH.c;
//   cytosol.NADH.n1.c = cytosol.vgpdh_1.p1.c;
//   cytosol.NADH.n1.c = cytosol.vldh.s2.c;
//   cytosol.mitochondria.node_NADHm.V = cytosol.vpdh.p1.V;
//   cytosol.mitochondria.node_NADHm.c = cytosol.vpdh.p1.c;
//   cytosol.NAD.n1.V = cytosol.vldh.m1.V;
//   cytosol.NAD.n1.V = cytosol.vpdh.m1.V;
//   cytosol.NAD.n1.c = cytosol.vldh.m1.c;
//   cytosol.NAD.n1.c = cytosol.vpdh.m1.c;
//   cytosol.Cr.n1.V = cytosol.jck.s2.V;
//   cytosol.Cr.n1.c = cytosol.jck.s2.c;
//   cytosol.IMP.n1.V = cytosol.jda.p1.V;
//   cytosol.IMP.n1.V = cytosol.vgph.m[1].V;
//   cytosol.IMP.n1.c = cytosol.jda.p1.c;
//   cytosol.IMP.n1.c = cytosol.vgph.m[1].c;
//   cytosol.CP.n1.V = cytosol.jck.p2.V;
//   cytosol.CP.n1.c = cytosol.jck.p2.c;
//   cytosol.AMP.n1.V = cytosol.jak.s1.V;
//   cytosol.AMP.n1.V = cytosol.jda.s1.V;
//   cytosol.AMP.n1.V = cytosol.vgph.m[2].V;
//   cytosol.AMP.n1.c = cytosol.jak.s1.c;
//   cytosol.AMP.n1.c = cytosol.jda.s1.c;
//   cytosol.AMP.n1.c = cytosol.vgph.m[2].c;
//   cytosol.F6P.n1.V = cytosol.vH6P.p1.V;
//   cytosol.F6P.n1.V = cytosol.vpfk.s1.V;
//   cytosol.F6P.n1.c = cytosol.vH6P.p1.c;
//   cytosol.F6P.n1.c = cytosol.vpfk.s1.c;
//   cytosol.LAC.n1.V = cytosol.node_LAC.V;
//   cytosol.LAC.n1.V = cytosol.vldh.p1.V;
//   cytosol.LAC.n1.c = cytosol.node_LAC.c;
//   cytosol.LAC.n1.c = cytosol.vldh.p1.c;
//   cytosol.GLY.n1.V = cytosol.vgph.s1.V;
//   cytosol.GLY.n1.c = cytosol.vgph.s1.c;
//   LACext.n1.V = vef.p1.V;
//   LACext.n1.c = vef.p1.c;
//   cytosol.node_LAC.V = vef.s1.V;
//   cytosol.node_LAC.c = vef.s1.c;
// end BioChem_Examples_centralMetabolism_extra_cellular;
// "
// "Warning: BioChem requested package Modelica of version 2.2.1. Modelica 3.1 is used instead which states that it is only compatible with a conversion script. OpenModelica currently does not support conversion scripts and will proceed with potential issues as a result.
// "
// "Check of BioChem_Examples_centralMetabolism_extra_cellular completed successfully.
// Class BioChem_Examples_centralMetabolism_extra_cellular has 353 equation(s) and 353 variable(s).
// 249 of these are trivial equation(s)."
// "Warning: BioChem requested package Modelica of version 2.2.1. Modelica 3.1 is used instead which states that it is only compatible with a conversion script. OpenModelica currently does not support conversion scripts and will proceed with potential issues as a result.
// "
// true
// true
// "Warning: BioChem requested package Modelica of version 2.2.1. Modelica 3.1 is used instead which states that it is only compatible with a conversion script. OpenModelica currently does not support conversion scripts and will proceed with potential issues as a result.
// "
// "class BioChem_Examples_CircadianOscillator_Container
//   Real V(quantity = \"Volume\", unit = \"l\", start = 1.0, stateSelect = StateSelect.prefer) \"Compartment volume\";
//   Real nucleus.V(quantity = \"Volume\", unit = \"l\", start = 1.0, stateSelect = StateSelect.prefer) \"Compartment volume\";
//   Real nucleus.Nucleus_V = nucleus.V \"Variable used to make the compartment volume accessible for inner components. Do not edit.\";
//   Real nucleus.y3.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real nucleus.y3.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real nucleus.y3.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real nucleus.y3.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.y3.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.y3.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.y6.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real nucleus.y6.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real nucleus.y6.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real nucleus.y6.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.y6.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.y6.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.y7.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.05, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real nucleus.y7.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real nucleus.y7.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real nucleus.y7.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.y7.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.y7.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.y3_node.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.y3_node.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.y3_node.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real nucleus.k3t = k3t;
//   Real nucleus.y2_node.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.y2_node.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.y2_node.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.per2_cry_nuclear_export.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real nucleus.per2_cry_nuclear_export.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.per2_cry_nuclear_export.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.per2_cry_nuclear_export.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.per2_cry_nuclear_export.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.per2_cry_nuclear_export.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.per2_cry_nuclear_export.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.per2_cry_nuclear_export.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real nucleus.per2_cry_nuclear_export.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real nucleus.per2_cry_nuclear_export.k3t = nucleus.k3t;
//   Real nucleus.ambientSubstance.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real nucleus.ambientSubstance.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real nucleus.ambientSubstance.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real nucleus.ambientSubstance.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.ambientSubstance.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.ambientSubstance.n1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real nucleus.k3d = k3d;
//   Real nucleus.nuclear_per2_cry_complex_degradation.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real nucleus.nuclear_per2_cry_complex_degradation.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.nuclear_per2_cry_complex_degradation.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.nuclear_per2_cry_complex_degradation.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.nuclear_per2_cry_complex_degradation.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.nuclear_per2_cry_complex_degradation.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.nuclear_per2_cry_complex_degradation.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.nuclear_per2_cry_complex_degradation.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real nucleus.nuclear_per2_cry_complex_degradation.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real nucleus.nuclear_per2_cry_complex_degradation.k3d = nucleus.k3d;
//   Real nucleus.y6_node.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.y6_node.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.y6_node.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real nucleus.k6t = k6t;
//   Real nucleus.y5_node.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.y5_node.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.y5_node.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.BMAL1_nuclear_export.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real nucleus.BMAL1_nuclear_export.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.BMAL1_nuclear_export.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.BMAL1_nuclear_export.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.BMAL1_nuclear_export.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.BMAL1_nuclear_export.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.BMAL1_nuclear_export.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.BMAL1_nuclear_export.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real nucleus.BMAL1_nuclear_export.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real nucleus.BMAL1_nuclear_export.k6t = nucleus.k6t;
//   parameter Real nucleus.k6d = k6d;
//   Real nucleus.nuclear_BMAL1_degradation.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real nucleus.nuclear_BMAL1_degradation.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.nuclear_BMAL1_degradation.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.nuclear_BMAL1_degradation.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.nuclear_BMAL1_degradation.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.nuclear_BMAL1_degradation.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.nuclear_BMAL1_degradation.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.nuclear_BMAL1_degradation.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real nucleus.nuclear_BMAL1_degradation.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real nucleus.nuclear_BMAL1_degradation.k6d = nucleus.k6d;
//   parameter Real nucleus.k6a = k6a;
//   Real nucleus.BMAL1_activation.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real nucleus.BMAL1_activation.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.BMAL1_activation.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.BMAL1_activation.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.BMAL1_activation.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.BMAL1_activation.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.BMAL1_activation.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.BMAL1_activation.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real nucleus.BMAL1_activation.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real nucleus.BMAL1_activation.k6a = nucleus.k6a;
//   parameter Real nucleus.k7a = k7a;
//   Real nucleus.BMAL1_deactivation.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real nucleus.BMAL1_deactivation.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.BMAL1_deactivation.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.BMAL1_deactivation.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.BMAL1_deactivation.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.BMAL1_deactivation.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.BMAL1_deactivation.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.BMAL1_deactivation.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real nucleus.BMAL1_deactivation.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real nucleus.BMAL1_deactivation.k7a = nucleus.k7a;
//   parameter Real nucleus.k7d = k7d;
//   Real nucleus.Active_BMAL1_degradation.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real nucleus.Active_BMAL1_degradation.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.Active_BMAL1_degradation.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.Active_BMAL1_degradation.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.Active_BMAL1_degradation.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real nucleus.Active_BMAL1_degradation.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real nucleus.Active_BMAL1_degradation.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real nucleus.Active_BMAL1_degradation.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real nucleus.Active_BMAL1_degradation.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real nucleus.Active_BMAL1_degradation.k7d = nucleus.k7d;
//   Real cytoplasm.V(quantity = \"Volume\", unit = \"l\", start = 1.0, stateSelect = StateSelect.prefer) \"Compartment volume\";
//   Real cytoplasm.Cytoplasm_V = cytoplasm.V \"Variable used to make the compartment volume accessible for inner components. Do not edit.\";
//   Real cytoplasm.y1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.2, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytoplasm.y1.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytoplasm.y1.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytoplasm.y1.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.y1.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.y1.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.y2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytoplasm.y2.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytoplasm.y2.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytoplasm.y2.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.y2.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.y2.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.y4.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.8, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytoplasm.y4.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytoplasm.y4.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytoplasm.y4.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.y4.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.y4.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.y5.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytoplasm.y5.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytoplasm.y5.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytoplasm.y5.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.y5.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.y5.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.ambientSubstance.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real cytoplasm.ambientSubstance.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real cytoplasm.ambientSubstance.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real cytoplasm.ambientSubstance.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.ambientSubstance.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.ambientSubstance.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.trans_per2_cry = trans_per2_cry;
//   Real cytoplasm.per2_cry_transcription.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytoplasm.per2_cry_transcription.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.per2_cry_transcription.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.per2_cry_transcription.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.per2_cry_transcription.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.per2_cry_transcription.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.per2_cry_transcription.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.per2_cry_transcription.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytoplasm.per2_cry_transcription.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real cytoplasm.per2_cry_transcription.trans_per2_cry = cytoplasm.trans_per2_cry;
//   parameter Real cytoplasm.k1d = k1d;
//   Real cytoplasm.per2_cry_mRNA_degradation.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytoplasm.per2_cry_mRNA_degradation.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.per2_cry_mRNA_degradation.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.per2_cry_mRNA_degradation.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.per2_cry_mRNA_degradation.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.per2_cry_mRNA_degradation.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.per2_cry_mRNA_degradation.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.per2_cry_mRNA_degradation.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytoplasm.per2_cry_mRNA_degradation.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real cytoplasm.per2_cry_mRNA_degradation.k1d = cytoplasm.k1d;
//   parameter Real cytoplasm.k2b = k2b;
//   parameter Real cytoplasm.q = q;
//   Real cytoplasm.per2_cry_complex_formation.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytoplasm.per2_cry_complex_formation.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.per2_cry_complex_formation.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.per2_cry_complex_formation.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.per2_cry_complex_formation.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.per2_cry_complex_formation.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.per2_cry_complex_formation.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.per2_cry_complex_formation.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytoplasm.per2_cry_complex_formation.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real cytoplasm.per2_cry_complex_formation.m1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.per2_cry_complex_formation.m1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.per2_cry_complex_formation.m1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real cytoplasm.per2_cry_complex_formation.k2b = cytoplasm.k2b;
//   parameter Real cytoplasm.per2_cry_complex_formation.q = cytoplasm.q;
//   parameter Real cytoplasm.k2d = k2d;
//   Real cytoplasm.cytoplasmic_per2_cry_complex_degradation.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.cytoplasmic_per2_cry_complex_degradation.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.cytoplasmic_per2_cry_complex_degradation.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.cytoplasmic_per2_cry_complex_degradation.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.cytoplasmic_per2_cry_complex_degradation.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytoplasm.cytoplasmic_per2_cry_complex_degradation.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real cytoplasm.cytoplasmic_per2_cry_complex_degradation.k2d = cytoplasm.k2d;
//   parameter Real cytoplasm.k2t = k2t;
//   Real cytoplasm.y3_node.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.y3_node.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.y3_node.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.per2_cry_nuclear_import.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytoplasm.per2_cry_nuclear_import.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.per2_cry_nuclear_import.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.per2_cry_nuclear_import.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.per2_cry_nuclear_import.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.per2_cry_nuclear_import.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.per2_cry_nuclear_import.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.per2_cry_nuclear_import.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytoplasm.per2_cry_nuclear_import.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real cytoplasm.per2_cry_nuclear_import.k2t = cytoplasm.k2t;
//   Real cytoplasm.y2_node.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.y2_node.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.y2_node.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.trans_Bmal1 = trans_Bmal1;
//   Real cytoplasm.Bmal1_transcription.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytoplasm.Bmal1_transcription.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.Bmal1_transcription.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.Bmal1_transcription.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.Bmal1_transcription.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.Bmal1_transcription.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.Bmal1_transcription.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.Bmal1_transcription.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytoplasm.Bmal1_transcription.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real cytoplasm.Bmal1_transcription.trans_Bmal1 = cytoplasm.trans_Bmal1;
//   parameter Real cytoplasm.k4d = k4d;
//   Real cytoplasm.Bmal1_mRNA_degradation.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytoplasm.Bmal1_mRNA_degradation.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.Bmal1_mRNA_degradation.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.Bmal1_mRNA_degradation.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.Bmal1_mRNA_degradation.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.Bmal1_mRNA_degradation.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.Bmal1_mRNA_degradation.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.Bmal1_mRNA_degradation.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytoplasm.Bmal1_mRNA_degradation.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real cytoplasm.Bmal1_mRNA_degradation.k4d = cytoplasm.k4d;
//   parameter Real cytoplasm.k5b = k5b;
//   Real cytoplasm.BMAL1_translation.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytoplasm.BMAL1_translation.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.BMAL1_translation.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.BMAL1_translation.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.BMAL1_translation.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.BMAL1_translation.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.BMAL1_translation.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.BMAL1_translation.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytoplasm.BMAL1_translation.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real cytoplasm.BMAL1_translation.m1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.BMAL1_translation.m1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.BMAL1_translation.m1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real cytoplasm.BMAL1_translation.k5b = cytoplasm.k5b;
//   parameter Real cytoplasm.k5d = k5d;
//   Real cytoplasm.cytoplasmic_BMAL1_degradation.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytoplasm.cytoplasmic_BMAL1_degradation.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.cytoplasmic_BMAL1_degradation.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.cytoplasmic_BMAL1_degradation.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.cytoplasmic_BMAL1_degradation.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.cytoplasmic_BMAL1_degradation.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.cytoplasmic_BMAL1_degradation.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.cytoplasmic_BMAL1_degradation.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytoplasm.cytoplasmic_BMAL1_degradation.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real cytoplasm.cytoplasmic_BMAL1_degradation.k5d = cytoplasm.k5d;
//   parameter Real cytoplasm.k5t = k5t;
//   Real cytoplasm.y6_node.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.y6_node.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.y6_node.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.BMAL1_nuclear_import.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real cytoplasm.BMAL1_nuclear_import.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.BMAL1_nuclear_import.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.BMAL1_nuclear_import.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.BMAL1_nuclear_import.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.BMAL1_nuclear_import.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.BMAL1_nuclear_import.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real cytoplasm.BMAL1_nuclear_import.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real cytoplasm.BMAL1_nuclear_import.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real cytoplasm.BMAL1_nuclear_import.k5t = cytoplasm.k5t;
//   Real cytoplasm.y5_node.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real cytoplasm.y5_node.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real cytoplasm.y5_node.V(quantity = \"Volume\", unit = \"l\");
//   Real Nucleus_V = nucleus.V \"Variable used to make the compartment volume of inner compartments accessible. Do not edit.\";
//   Real Cytoplasm_V = cytoplasm.V \"Variable used to make the compartment volume of inner compartments accessible. Do not edit.\";
//   Real Container_V = V \"Variable used to make the compartment volume accessible for inner components. Do not edit.\";
//   Real trans_per2_cry(start = 0.0);
//   parameter Real v1b = 9.0;
//   parameter Real c_sbml = 0.01;
//   parameter Real k1b = 1.0;
//   parameter Real k1i = 0.5600000000000001;
//   parameter Real hill_coeff = 8.0;
//   Real trans_Bmal1(start = 0.0);
//   parameter Real v4b = 3.6;
//   parameter Real r_sbml = 3.0;
//   parameter Real k4b = 2.16;
//   Real y5_y6_y7(start = 3.05);
//   parameter Real k1d = 0.12;
//   parameter Real k2b = 0.3;
//   parameter Real q = 2.0;
//   parameter Real k2d = 0.05;
//   parameter Real k2t = 0.24;
//   parameter Real k3t = 0.02;
//   parameter Real k3d = 0.12;
//   parameter Real k4d = 0.75;
//   parameter Real k5b = 0.24;
//   parameter Real k5d = 0.06;
//   parameter Real k5t = 0.45;
//   parameter Real k6t = 0.06;
//   parameter Real k6d = 0.12;
//   parameter Real k6a = 0.09;
//   parameter Real k7a = 0.003;
//   parameter Real k7d = 0.09;
// equation
//   der(nucleus.y3.n) = nucleus.y3.rNet;
//   nucleus.y3.rNet = nucleus.y3.n1.r;
//   nucleus.y3.c = nucleus.y3.n1.c;
//   nucleus.V = nucleus.y3.n1.V;
//   nucleus.y3.c = nucleus.y3.n / nucleus.V;
//   der(nucleus.y6.n) = nucleus.y6.rNet;
//   nucleus.y6.rNet = nucleus.y6.n1.r;
//   nucleus.y6.c = nucleus.y6.n1.c;
//   nucleus.V = nucleus.y6.n1.V;
//   nucleus.y6.c = nucleus.y6.n / nucleus.V;
//   der(nucleus.y7.n) = nucleus.y7.rNet;
//   nucleus.y7.rNet = nucleus.y7.n1.r;
//   nucleus.y7.c = nucleus.y7.n1.c;
//   nucleus.V = nucleus.y7.n1.V;
//   nucleus.y7.c = nucleus.y7.n / nucleus.V;
//   nucleus.per2_cry_nuclear_export.rr = nucleus.Nucleus_V * nucleus.per2_cry_nuclear_export.k3t * nucleus.per2_cry_nuclear_export.s1.c;
//   nucleus.per2_cry_nuclear_export.s1.r = nucleus.per2_cry_nuclear_export.nS1 * nucleus.per2_cry_nuclear_export.rr;
//   nucleus.per2_cry_nuclear_export.p1.r = (-nucleus.per2_cry_nuclear_export.nP1) * nucleus.per2_cry_nuclear_export.rr;
//   der(nucleus.ambientSubstance.n) = 0.0;
//   nucleus.ambientSubstance.rNet = nucleus.ambientSubstance.n1.r;
//   nucleus.ambientSubstance.c = nucleus.ambientSubstance.n1.c;
//   nucleus.V = nucleus.ambientSubstance.n1.V;
//   nucleus.ambientSubstance.c = nucleus.ambientSubstance.n / nucleus.V;
//   nucleus.nuclear_per2_cry_complex_degradation.rr = nucleus.Nucleus_V * nucleus.nuclear_per2_cry_complex_degradation.k3d * nucleus.nuclear_per2_cry_complex_degradation.s1.c;
//   nucleus.nuclear_per2_cry_complex_degradation.s1.r = nucleus.nuclear_per2_cry_complex_degradation.nS1 * nucleus.nuclear_per2_cry_complex_degradation.rr;
//   nucleus.nuclear_per2_cry_complex_degradation.p1.r = (-nucleus.nuclear_per2_cry_complex_degradation.nP1) * nucleus.nuclear_per2_cry_complex_degradation.rr;
//   nucleus.BMAL1_nuclear_export.rr = nucleus.Nucleus_V * nucleus.BMAL1_nuclear_export.k6t * nucleus.BMAL1_nuclear_export.s1.c;
//   nucleus.BMAL1_nuclear_export.s1.r = nucleus.BMAL1_nuclear_export.nS1 * nucleus.BMAL1_nuclear_export.rr;
//   nucleus.BMAL1_nuclear_export.p1.r = (-nucleus.BMAL1_nuclear_export.nP1) * nucleus.BMAL1_nuclear_export.rr;
//   nucleus.nuclear_BMAL1_degradation.rr = nucleus.Nucleus_V * nucleus.nuclear_BMAL1_degradation.k6d * nucleus.nuclear_BMAL1_degradation.s1.c;
//   nucleus.nuclear_BMAL1_degradation.s1.r = nucleus.nuclear_BMAL1_degradation.nS1 * nucleus.nuclear_BMAL1_degradation.rr;
//   nucleus.nuclear_BMAL1_degradation.p1.r = (-nucleus.nuclear_BMAL1_degradation.nP1) * nucleus.nuclear_BMAL1_degradation.rr;
//   nucleus.BMAL1_activation.rr = nucleus.Nucleus_V * nucleus.BMAL1_activation.k6a * nucleus.BMAL1_activation.s1.c;
//   nucleus.BMAL1_activation.s1.r = nucleus.BMAL1_activation.nS1 * nucleus.BMAL1_activation.rr;
//   nucleus.BMAL1_activation.p1.r = (-nucleus.BMAL1_activation.nP1) * nucleus.BMAL1_activation.rr;
//   nucleus.BMAL1_deactivation.rr = nucleus.Nucleus_V * nucleus.BMAL1_deactivation.k7a * nucleus.BMAL1_deactivation.s1.c;
//   nucleus.BMAL1_deactivation.s1.r = nucleus.BMAL1_deactivation.nS1 * nucleus.BMAL1_deactivation.rr;
//   nucleus.BMAL1_deactivation.p1.r = (-nucleus.BMAL1_deactivation.nP1) * nucleus.BMAL1_deactivation.rr;
//   nucleus.Active_BMAL1_degradation.rr = nucleus.Nucleus_V * nucleus.Active_BMAL1_degradation.k7d * nucleus.Active_BMAL1_degradation.s1.c;
//   nucleus.Active_BMAL1_degradation.s1.r = nucleus.Active_BMAL1_degradation.nS1 * nucleus.Active_BMAL1_degradation.rr;
//   nucleus.Active_BMAL1_degradation.p1.r = (-nucleus.Active_BMAL1_degradation.nP1) * nucleus.Active_BMAL1_degradation.rr;
//   der(nucleus.V) = 0.0 \"Compartment volume is constant\";
//   der(cytoplasm.y1.n) = cytoplasm.y1.rNet;
//   cytoplasm.y1.rNet = cytoplasm.y1.n1.r;
//   cytoplasm.y1.c = cytoplasm.y1.n1.c;
//   cytoplasm.V = cytoplasm.y1.n1.V;
//   cytoplasm.y1.c = cytoplasm.y1.n / cytoplasm.V;
//   der(cytoplasm.y2.n) = cytoplasm.y2.rNet;
//   cytoplasm.y2.rNet = cytoplasm.y2.n1.r;
//   cytoplasm.y2.c = cytoplasm.y2.n1.c;
//   cytoplasm.V = cytoplasm.y2.n1.V;
//   cytoplasm.y2.c = cytoplasm.y2.n / cytoplasm.V;
//   der(cytoplasm.y4.n) = cytoplasm.y4.rNet;
//   cytoplasm.y4.rNet = cytoplasm.y4.n1.r;
//   cytoplasm.y4.c = cytoplasm.y4.n1.c;
//   cytoplasm.V = cytoplasm.y4.n1.V;
//   cytoplasm.y4.c = cytoplasm.y4.n / cytoplasm.V;
//   der(cytoplasm.y5.n) = cytoplasm.y5.rNet;
//   cytoplasm.y5.rNet = cytoplasm.y5.n1.r;
//   cytoplasm.y5.c = cytoplasm.y5.n1.c;
//   cytoplasm.V = cytoplasm.y5.n1.V;
//   cytoplasm.y5.c = cytoplasm.y5.n / cytoplasm.V;
//   der(cytoplasm.ambientSubstance.n) = 0.0;
//   cytoplasm.ambientSubstance.rNet = cytoplasm.ambientSubstance.n1.r;
//   cytoplasm.ambientSubstance.c = cytoplasm.ambientSubstance.n1.c;
//   cytoplasm.V = cytoplasm.ambientSubstance.n1.V;
//   cytoplasm.ambientSubstance.c = cytoplasm.ambientSubstance.n / cytoplasm.V;
//   cytoplasm.per2_cry_transcription.rr = cytoplasm.Cytoplasm_V * cytoplasm.per2_cry_transcription.trans_per2_cry;
//   cytoplasm.per2_cry_transcription.s1.r = cytoplasm.per2_cry_transcription.nS1 * cytoplasm.per2_cry_transcription.rr;
//   cytoplasm.per2_cry_transcription.p1.r = (-cytoplasm.per2_cry_transcription.nP1) * cytoplasm.per2_cry_transcription.rr;
//   cytoplasm.per2_cry_mRNA_degradation.rr = cytoplasm.Cytoplasm_V * cytoplasm.per2_cry_mRNA_degradation.k1d * cytoplasm.per2_cry_mRNA_degradation.s1.c;
//   cytoplasm.per2_cry_mRNA_degradation.s1.r = cytoplasm.per2_cry_mRNA_degradation.nS1 * cytoplasm.per2_cry_mRNA_degradation.rr;
//   cytoplasm.per2_cry_mRNA_degradation.p1.r = (-cytoplasm.per2_cry_mRNA_degradation.nP1) * cytoplasm.per2_cry_mRNA_degradation.rr;
//   cytoplasm.per2_cry_complex_formation.rr = cytoplasm.Cytoplasm_V * cytoplasm.per2_cry_complex_formation.k2b * cytoplasm.per2_cry_complex_formation.m1.c ^ cytoplasm.per2_cry_complex_formation.q;
//   cytoplasm.per2_cry_complex_formation.s1.r = cytoplasm.per2_cry_complex_formation.nS1 * cytoplasm.per2_cry_complex_formation.rr;
//   cytoplasm.per2_cry_complex_formation.p1.r = (-cytoplasm.per2_cry_complex_formation.nP1) * cytoplasm.per2_cry_complex_formation.rr;
//   cytoplasm.per2_cry_complex_formation.m1.r = 0.0;
//   cytoplasm.cytoplasmic_per2_cry_complex_degradation.rr = cytoplasm.Cytoplasm_V * cytoplasm.cytoplasmic_per2_cry_complex_degradation.k2d * cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.c;
//   cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.r = cytoplasm.cytoplasmic_per2_cry_complex_degradation.nS1 * cytoplasm.cytoplasmic_per2_cry_complex_degradation.rr;
//   cytoplasm.cytoplasmic_per2_cry_complex_degradation.p1.r = (-cytoplasm.cytoplasmic_per2_cry_complex_degradation.nP1) * cytoplasm.cytoplasmic_per2_cry_complex_degradation.rr;
//   cytoplasm.per2_cry_nuclear_import.rr = cytoplasm.Cytoplasm_V * cytoplasm.per2_cry_nuclear_import.k2t * cytoplasm.per2_cry_nuclear_import.s1.c;
//   cytoplasm.per2_cry_nuclear_import.s1.r = cytoplasm.per2_cry_nuclear_import.nS1 * cytoplasm.per2_cry_nuclear_import.rr;
//   cytoplasm.per2_cry_nuclear_import.p1.r = (-cytoplasm.per2_cry_nuclear_import.nP1) * cytoplasm.per2_cry_nuclear_import.rr;
//   cytoplasm.Bmal1_transcription.rr = cytoplasm.Cytoplasm_V * cytoplasm.Bmal1_transcription.trans_Bmal1;
//   cytoplasm.Bmal1_transcription.s1.r = cytoplasm.Bmal1_transcription.nS1 * cytoplasm.Bmal1_transcription.rr;
//   cytoplasm.Bmal1_transcription.p1.r = (-cytoplasm.Bmal1_transcription.nP1) * cytoplasm.Bmal1_transcription.rr;
//   cytoplasm.Bmal1_mRNA_degradation.rr = cytoplasm.Cytoplasm_V * cytoplasm.Bmal1_mRNA_degradation.k4d * cytoplasm.Bmal1_mRNA_degradation.s1.c;
//   cytoplasm.Bmal1_mRNA_degradation.s1.r = cytoplasm.Bmal1_mRNA_degradation.nS1 * cytoplasm.Bmal1_mRNA_degradation.rr;
//   cytoplasm.Bmal1_mRNA_degradation.p1.r = (-cytoplasm.Bmal1_mRNA_degradation.nP1) * cytoplasm.Bmal1_mRNA_degradation.rr;
//   cytoplasm.BMAL1_translation.rr = cytoplasm.Cytoplasm_V * cytoplasm.BMAL1_translation.k5b * cytoplasm.BMAL1_translation.m1.c;
//   cytoplasm.BMAL1_translation.s1.r = cytoplasm.BMAL1_translation.nS1 * cytoplasm.BMAL1_translation.rr;
//   cytoplasm.BMAL1_translation.p1.r = (-cytoplasm.BMAL1_translation.nP1) * cytoplasm.BMAL1_translation.rr;
//   cytoplasm.BMAL1_translation.m1.r = 0.0;
//   cytoplasm.cytoplasmic_BMAL1_degradation.rr = cytoplasm.Cytoplasm_V * cytoplasm.cytoplasmic_BMAL1_degradation.k5d * cytoplasm.cytoplasmic_BMAL1_degradation.s1.c;
//   cytoplasm.cytoplasmic_BMAL1_degradation.s1.r = cytoplasm.cytoplasmic_BMAL1_degradation.nS1 * cytoplasm.cytoplasmic_BMAL1_degradation.rr;
//   cytoplasm.cytoplasmic_BMAL1_degradation.p1.r = (-cytoplasm.cytoplasmic_BMAL1_degradation.nP1) * cytoplasm.cytoplasmic_BMAL1_degradation.rr;
//   cytoplasm.BMAL1_nuclear_import.rr = cytoplasm.Cytoplasm_V * cytoplasm.BMAL1_nuclear_import.k5t * cytoplasm.BMAL1_nuclear_import.s1.c;
//   cytoplasm.BMAL1_nuclear_import.s1.r = cytoplasm.BMAL1_nuclear_import.nS1 * cytoplasm.BMAL1_nuclear_import.rr;
//   cytoplasm.BMAL1_nuclear_import.p1.r = (-cytoplasm.BMAL1_nuclear_import.nP1) * cytoplasm.BMAL1_nuclear_import.rr;
//   der(cytoplasm.V) = 0.0 \"Compartment volume is constant\";
//   trans_per2_cry = v1b * (nucleus.y7.c + c_sbml) / (k1b * (1.0 + (nucleus.y3.c / k1i) ^ hill_coeff) + nucleus.y7.c + c_sbml);
//   trans_Bmal1 = v4b * nucleus.y3.c ^ r_sbml / (k4b ^ r_sbml + nucleus.y3.c ^ r_sbml);
//   y5_y6_y7 = cytoplasm.y5.c + nucleus.y6.c + nucleus.y7.c;
//   der(V) = 0.0 \"Compartment volume is constant\";
//   cytoplasm.y1.n1.r + cytoplasm.per2_cry_transcription.p1.r + cytoplasm.per2_cry_mRNA_degradation.s1.r + cytoplasm.per2_cry_complex_formation.m1.r = 0.0;
//   cytoplasm.y2.n1.r + (-cytoplasm.y2_node.r) + cytoplasm.per2_cry_complex_formation.p1.r + cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.r + cytoplasm.per2_cry_nuclear_import.s1.r = 0.0;
//   cytoplasm.y4.n1.r + cytoplasm.Bmal1_transcription.p1.r + cytoplasm.Bmal1_mRNA_degradation.s1.r + cytoplasm.BMAL1_translation.m1.r = 0.0;
//   cytoplasm.y5.n1.r + (-cytoplasm.y5_node.r) + cytoplasm.BMAL1_translation.p1.r + cytoplasm.cytoplasmic_BMAL1_degradation.s1.r + cytoplasm.BMAL1_nuclear_import.s1.r = 0.0;
//   cytoplasm.ambientSubstance.n1.r + cytoplasm.per2_cry_transcription.s1.r + cytoplasm.per2_cry_mRNA_degradation.p1.r + cytoplasm.per2_cry_complex_formation.s1.r + cytoplasm.cytoplasmic_per2_cry_complex_degradation.p1.r + cytoplasm.Bmal1_transcription.s1.r + cytoplasm.Bmal1_mRNA_degradation.p1.r + cytoplasm.BMAL1_translation.s1.r + cytoplasm.cytoplasmic_BMAL1_degradation.p1.r = 0.0;
//   cytoplasm.y3_node.r + nucleus.y3_node.r = 0.0;
//   cytoplasm.y2_node.r + nucleus.y2_node.r = 0.0;
//   cytoplasm.y6_node.r + nucleus.y6_node.r = 0.0;
//   cytoplasm.y5_node.r + nucleus.y5_node.r = 0.0;
//   (-cytoplasm.y3_node.r) + cytoplasm.per2_cry_nuclear_import.p1.r = 0.0;
//   (-cytoplasm.y6_node.r) + cytoplasm.BMAL1_nuclear_import.p1.r = 0.0;
//   cytoplasm.BMAL1_nuclear_import.p1.V = cytoplasm.y6_node.V;
//   cytoplasm.BMAL1_nuclear_import.p1.c = cytoplasm.y6_node.c;
//   cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.V = cytoplasm.per2_cry_complex_formation.p1.V;
//   cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.V = cytoplasm.per2_cry_nuclear_import.s1.V;
//   cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.V = cytoplasm.y2.n1.V;
//   cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.V = cytoplasm.y2_node.V;
//   cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.c = cytoplasm.per2_cry_complex_formation.p1.c;
//   cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.c = cytoplasm.per2_cry_nuclear_import.s1.c;
//   cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.c = cytoplasm.y2.n1.c;
//   cytoplasm.cytoplasmic_per2_cry_complex_degradation.s1.c = cytoplasm.y2_node.c;
//   cytoplasm.per2_cry_nuclear_import.p1.V = cytoplasm.y3_node.V;
//   cytoplasm.per2_cry_nuclear_import.p1.c = cytoplasm.y3_node.c;
//   cytoplasm.BMAL1_nuclear_import.s1.V = cytoplasm.BMAL1_translation.p1.V;
//   cytoplasm.BMAL1_nuclear_import.s1.V = cytoplasm.cytoplasmic_BMAL1_degradation.s1.V;
//   cytoplasm.BMAL1_nuclear_import.s1.V = cytoplasm.y5.n1.V;
//   cytoplasm.BMAL1_nuclear_import.s1.V = cytoplasm.y5_node.V;
//   cytoplasm.BMAL1_nuclear_import.s1.c = cytoplasm.BMAL1_translation.p1.c;
//   cytoplasm.BMAL1_nuclear_import.s1.c = cytoplasm.cytoplasmic_BMAL1_degradation.s1.c;
//   cytoplasm.BMAL1_nuclear_import.s1.c = cytoplasm.y5.n1.c;
//   cytoplasm.BMAL1_nuclear_import.s1.c = cytoplasm.y5_node.c;
//   cytoplasm.per2_cry_complex_formation.m1.V = cytoplasm.per2_cry_mRNA_degradation.s1.V;
//   cytoplasm.per2_cry_complex_formation.m1.V = cytoplasm.per2_cry_transcription.p1.V;
//   cytoplasm.per2_cry_complex_formation.m1.V = cytoplasm.y1.n1.V;
//   cytoplasm.per2_cry_complex_formation.m1.c = cytoplasm.per2_cry_mRNA_degradation.s1.c;
//   cytoplasm.per2_cry_complex_formation.m1.c = cytoplasm.per2_cry_transcription.p1.c;
//   cytoplasm.per2_cry_complex_formation.m1.c = cytoplasm.y1.n1.c;
//   cytoplasm.BMAL1_translation.s1.V = cytoplasm.Bmal1_mRNA_degradation.p1.V;
//   cytoplasm.BMAL1_translation.s1.V = cytoplasm.Bmal1_transcription.s1.V;
//   cytoplasm.BMAL1_translation.s1.V = cytoplasm.ambientSubstance.n1.V;
//   cytoplasm.BMAL1_translation.s1.V = cytoplasm.cytoplasmic_BMAL1_degradation.p1.V;
//   cytoplasm.BMAL1_translation.s1.V = cytoplasm.cytoplasmic_per2_cry_complex_degradation.p1.V;
//   cytoplasm.BMAL1_translation.s1.V = cytoplasm.per2_cry_complex_formation.s1.V;
//   cytoplasm.BMAL1_translation.s1.V = cytoplasm.per2_cry_mRNA_degradation.p1.V;
//   cytoplasm.BMAL1_translation.s1.V = cytoplasm.per2_cry_transcription.s1.V;
//   cytoplasm.BMAL1_translation.s1.c = cytoplasm.Bmal1_mRNA_degradation.p1.c;
//   cytoplasm.BMAL1_translation.s1.c = cytoplasm.Bmal1_transcription.s1.c;
//   cytoplasm.BMAL1_translation.s1.c = cytoplasm.ambientSubstance.n1.c;
//   cytoplasm.BMAL1_translation.s1.c = cytoplasm.cytoplasmic_BMAL1_degradation.p1.c;
//   cytoplasm.BMAL1_translation.s1.c = cytoplasm.cytoplasmic_per2_cry_complex_degradation.p1.c;
//   cytoplasm.BMAL1_translation.s1.c = cytoplasm.per2_cry_complex_formation.s1.c;
//   cytoplasm.BMAL1_translation.s1.c = cytoplasm.per2_cry_mRNA_degradation.p1.c;
//   cytoplasm.BMAL1_translation.s1.c = cytoplasm.per2_cry_transcription.s1.c;
//   cytoplasm.BMAL1_translation.m1.V = cytoplasm.Bmal1_mRNA_degradation.s1.V;
//   cytoplasm.BMAL1_translation.m1.V = cytoplasm.Bmal1_transcription.p1.V;
//   cytoplasm.BMAL1_translation.m1.V = cytoplasm.y4.n1.V;
//   cytoplasm.BMAL1_translation.m1.c = cytoplasm.Bmal1_mRNA_degradation.s1.c;
//   cytoplasm.BMAL1_translation.m1.c = cytoplasm.Bmal1_transcription.p1.c;
//   cytoplasm.BMAL1_translation.m1.c = cytoplasm.y4.n1.c;
//   nucleus.y3.n1.r + (-nucleus.y3_node.r) + nucleus.per2_cry_nuclear_export.s1.r + nucleus.nuclear_per2_cry_complex_degradation.s1.r = 0.0;
//   nucleus.y6.n1.r + (-nucleus.y6_node.r) + nucleus.BMAL1_nuclear_export.s1.r + nucleus.nuclear_BMAL1_degradation.s1.r + nucleus.BMAL1_activation.s1.r + nucleus.BMAL1_deactivation.p1.r = 0.0;
//   nucleus.y7.n1.r + nucleus.BMAL1_activation.p1.r + nucleus.BMAL1_deactivation.s1.r + nucleus.Active_BMAL1_degradation.s1.r = 0.0;
//   nucleus.ambientSubstance.n1.r + nucleus.nuclear_per2_cry_complex_degradation.p1.r + nucleus.nuclear_BMAL1_degradation.p1.r + nucleus.Active_BMAL1_degradation.p1.r = 0.0;
//   (-nucleus.y2_node.r) + nucleus.per2_cry_nuclear_export.p1.r = 0.0;
//   (-nucleus.y5_node.r) + nucleus.BMAL1_nuclear_export.p1.r = 0.0;
//   nucleus.nuclear_per2_cry_complex_degradation.s1.V = nucleus.per2_cry_nuclear_export.s1.V;
//   nucleus.nuclear_per2_cry_complex_degradation.s1.V = nucleus.y3.n1.V;
//   nucleus.nuclear_per2_cry_complex_degradation.s1.V = nucleus.y3_node.V;
//   nucleus.nuclear_per2_cry_complex_degradation.s1.c = nucleus.per2_cry_nuclear_export.s1.c;
//   nucleus.nuclear_per2_cry_complex_degradation.s1.c = nucleus.y3.n1.c;
//   nucleus.nuclear_per2_cry_complex_degradation.s1.c = nucleus.y3_node.c;
//   nucleus.Active_BMAL1_degradation.s1.V = nucleus.BMAL1_activation.p1.V;
//   nucleus.Active_BMAL1_degradation.s1.V = nucleus.BMAL1_deactivation.s1.V;
//   nucleus.Active_BMAL1_degradation.s1.V = nucleus.y7.n1.V;
//   nucleus.Active_BMAL1_degradation.s1.c = nucleus.BMAL1_activation.p1.c;
//   nucleus.Active_BMAL1_degradation.s1.c = nucleus.BMAL1_deactivation.s1.c;
//   nucleus.Active_BMAL1_degradation.s1.c = nucleus.y7.n1.c;
//   nucleus.BMAL1_activation.s1.V = nucleus.BMAL1_deactivation.p1.V;
//   nucleus.BMAL1_activation.s1.V = nucleus.BMAL1_nuclear_export.s1.V;
//   nucleus.BMAL1_activation.s1.V = nucleus.nuclear_BMAL1_degradation.s1.V;
//   nucleus.BMAL1_activation.s1.V = nucleus.y6.n1.V;
//   nucleus.BMAL1_activation.s1.V = nucleus.y6_node.V;
//   nucleus.BMAL1_activation.s1.c = nucleus.BMAL1_deactivation.p1.c;
//   nucleus.BMAL1_activation.s1.c = nucleus.BMAL1_nuclear_export.s1.c;
//   nucleus.BMAL1_activation.s1.c = nucleus.nuclear_BMAL1_degradation.s1.c;
//   nucleus.BMAL1_activation.s1.c = nucleus.y6.n1.c;
//   nucleus.BMAL1_activation.s1.c = nucleus.y6_node.c;
//   nucleus.Active_BMAL1_degradation.p1.V = nucleus.ambientSubstance.n1.V;
//   nucleus.Active_BMAL1_degradation.p1.V = nucleus.nuclear_BMAL1_degradation.p1.V;
//   nucleus.Active_BMAL1_degradation.p1.V = nucleus.nuclear_per2_cry_complex_degradation.p1.V;
//   nucleus.Active_BMAL1_degradation.p1.c = nucleus.ambientSubstance.n1.c;
//   nucleus.Active_BMAL1_degradation.p1.c = nucleus.nuclear_BMAL1_degradation.p1.c;
//   nucleus.Active_BMAL1_degradation.p1.c = nucleus.nuclear_per2_cry_complex_degradation.p1.c;
//   nucleus.BMAL1_nuclear_export.p1.V = nucleus.y5_node.V;
//   nucleus.BMAL1_nuclear_export.p1.c = nucleus.y5_node.c;
//   nucleus.per2_cry_nuclear_export.p1.V = nucleus.y2_node.V;
//   nucleus.per2_cry_nuclear_export.p1.c = nucleus.y2_node.c;
//   cytoplasm.y5_node.V = nucleus.y5_node.V;
//   cytoplasm.y5_node.c = nucleus.y5_node.c;
//   cytoplasm.y6_node.V = nucleus.y6_node.V;
//   cytoplasm.y6_node.c = nucleus.y6_node.c;
//   cytoplasm.y2_node.V = nucleus.y2_node.V;
//   cytoplasm.y2_node.c = nucleus.y2_node.c;
//   cytoplasm.y3_node.V = nucleus.y3_node.V;
//   cytoplasm.y3_node.c = nucleus.y3_node.c;
// end BioChem_Examples_CircadianOscillator_Container;
// "
// "Warning: BioChem requested package Modelica of version 2.2.1. Modelica 3.1 is used instead which states that it is only compatible with a conversion script. OpenModelica currently does not support conversion scripts and will proceed with potential issues as a result.
// [flattening/libraries/biochem/ContainerTotal.mo:867:9-867:145:writable] Warning: Connecting two signal sources while connecting cytoplasm.y5_node.V to nucleus.y5_node.V.
// [flattening/libraries/biochem/ContainerTotal.mo:868:9-868:144:writable] Warning: Connecting two signal sources while connecting nucleus.y6_node.V to cytoplasm.y6_node.V.
// [flattening/libraries/biochem/ContainerTotal.mo:869:9-869:144:writable] Warning: Connecting two signal sources while connecting cytoplasm.y2_node.V to nucleus.y2_node.V.
// [flattening/libraries/biochem/ContainerTotal.mo:870:9-870:145:writable] Warning: Connecting two signal sources while connecting nucleus.y3_node.V to cytoplasm.y3_node.V.
// "
// "Check of BioChem_Examples_CircadianOscillator_Container completed successfully.
// Class BioChem_Examples_CircadianOscillator_Container has 252 equation(s) and 252 variable(s).
// 180 of these are trivial equation(s)."
// "Warning: BioChem requested package Modelica of version 2.2.1. Modelica 3.1 is used instead which states that it is only compatible with a conversion script. OpenModelica currently does not support conversion scripts and will proceed with potential issues as a result.
// [flattening/libraries/biochem/ContainerTotal.mo:867:9-867:145:writable] Warning: Connecting two signal sources while connecting cytoplasm.y5_node.V to nucleus.y5_node.V.
// [flattening/libraries/biochem/ContainerTotal.mo:868:9-868:144:writable] Warning: Connecting two signal sources while connecting nucleus.y6_node.V to cytoplasm.y6_node.V.
// [flattening/libraries/biochem/ContainerTotal.mo:869:9-869:144:writable] Warning: Connecting two signal sources while connecting cytoplasm.y2_node.V to nucleus.y2_node.V.
// [flattening/libraries/biochem/ContainerTotal.mo:870:9-870:145:writable] Warning: Connecting two signal sources while connecting nucleus.y3_node.V to cytoplasm.y3_node.V.
// "
// true
// true
// "Warning: BioChem requested package Modelica of version 2.2.1. Modelica 3.1 is used instead which states that it is only compatible with a conversion script. OpenModelica currently does not support conversion scripts and will proceed with potential issues as a result.
// "
// "class BioChem_Examples_CaOscillations_Cytosol
//   Real V(quantity = \"Volume\", unit = \"l\", start = 1.0, stateSelect = StateSelect.prefer) \"Compartment volume\";
//   Real Endoplasmic_Reticulum.V(quantity = \"Volume\", unit = \"l\", start = 1.0, stateSelect = StateSelect.prefer) \"Compartment volume\";
//   Real Endoplasmic_Reticulum.Endoplasmic_Reticulum_V = Endoplasmic_Reticulum.V \"Variable used to make the compartment volume accessible for inner components. Do not edit.\";
//   Real Endoplasmic_Reticulum.CaER.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real Endoplasmic_Reticulum.CaER.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real Endoplasmic_Reticulum.CaER.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real Endoplasmic_Reticulum.CaER.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real Endoplasmic_Reticulum.CaER.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real Endoplasmic_Reticulum.CaER.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real Endoplasmic_Reticulum.p1_sbml = p1_sbml;
//   Real Endoplasmic_Reticulum.p2_sbml = p2_sbml;
//   Real Endoplasmic_Reticulum.p3_sbml = p3_sbml;
//   Real Endoplasmic_Reticulum.Ca_Cyt_node.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real Endoplasmic_Reticulum.Ca_Cyt_node.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real Endoplasmic_Reticulum.Ca_Cyt_node.V(quantity = \"Volume\", unit = \"l\");
//   Real Endoplasmic_Reticulum.Jch.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real Endoplasmic_Reticulum.Jch.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real Endoplasmic_Reticulum.Jch.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real Endoplasmic_Reticulum.Jch.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real Endoplasmic_Reticulum.Jch.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real Endoplasmic_Reticulum.Jch.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real Endoplasmic_Reticulum.Jch.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real Endoplasmic_Reticulum.Jch.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real Endoplasmic_Reticulum.Jch.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real Endoplasmic_Reticulum.Jch.Fch_0 = 8.0;
//   Real Endoplasmic_Reticulum.Jch.p1_sbml = Endoplasmic_Reticulum.p1_sbml;
//   Real Endoplasmic_Reticulum.Jch.p2_sbml = Endoplasmic_Reticulum.p2_sbml;
//   Real Endoplasmic_Reticulum.Jch.p3_sbml = Endoplasmic_Reticulum.p3_sbml;
//   Real Endoplasmic_Reticulum.Jleak.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real Endoplasmic_Reticulum.Jleak.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real Endoplasmic_Reticulum.Jleak.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real Endoplasmic_Reticulum.Jleak.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real Endoplasmic_Reticulum.Jleak.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real Endoplasmic_Reticulum.Jleak.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real Endoplasmic_Reticulum.Jleak.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real Endoplasmic_Reticulum.Jleak.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real Endoplasmic_Reticulum.Jleak.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real Endoplasmic_Reticulum.Jleak.Fleak = 0.5;
//   Real Endoplasmic_Reticulum.CaER_node.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real Endoplasmic_Reticulum.CaER_node.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real Endoplasmic_Reticulum.CaER_node.V(quantity = \"Volume\", unit = \"l\");
//   Real Cytosol_V = V \"Variable used to make the compartment volume accessible for inner components. Do not edit.\";
//   Real Endoplasmic_Reticulum_V = Endoplasmic_Reticulum.V \"Variable used to make the compartment volume of inner compartments accessible. Do not edit.\";
//   Real Ca_Cyt.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real Ca_Cyt.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real Ca_Cyt.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real Ca_Cyt.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real Ca_Cyt.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real Ca_Cyt.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real n_sbml(start = 1.0);
//   parameter Real n0 = 1.0;
//   parameter Real kbN = 0.5;
//   parameter Real kappa = 5.0;
//   Real p1_sbml(start = 0.0);
//   parameter Real p11 = 0.2;
//   parameter Real p12 = 0.8;
//   parameter Real K1 = 5.0;
//   Real p2_sbml(start = 0.0);
//   parameter Real K2 = 0.7;
//   Real p3_sbml(start = 0.95);
//   parameter Real k31 = 0.5;
//   parameter Real K3 = 0.7;
//   Real Jpump.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real Jpump.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real Jpump.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real Jpump.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real Jpump.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real Jpump.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real Jpump.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real Jpump.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real Jpump.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real Jpump.Fpump_0 = 2.0;
//   parameter Real Jpump.Kpump = 0.1;
// equation
//   der(Endoplasmic_Reticulum.CaER.n) = Endoplasmic_Reticulum.CaER.rNet;
//   Endoplasmic_Reticulum.CaER.rNet = Endoplasmic_Reticulum.CaER.n1.r;
//   Endoplasmic_Reticulum.CaER.c = Endoplasmic_Reticulum.CaER.n1.c;
//   Endoplasmic_Reticulum.V = Endoplasmic_Reticulum.CaER.n1.V;
//   Endoplasmic_Reticulum.CaER.c = Endoplasmic_Reticulum.CaER.n / Endoplasmic_Reticulum.V;
//   Endoplasmic_Reticulum.Jch.rr = Endoplasmic_Reticulum.Jch.Fch_0 * Endoplasmic_Reticulum.Jch.p1_sbml * Endoplasmic_Reticulum.Jch.p2_sbml * Endoplasmic_Reticulum.Jch.p3_sbml;
//   Endoplasmic_Reticulum.Jch.s1.r = Endoplasmic_Reticulum.Jch.nS1 * Endoplasmic_Reticulum.Jch.rr;
//   Endoplasmic_Reticulum.Jch.p1.r = (-Endoplasmic_Reticulum.Jch.nP1) * Endoplasmic_Reticulum.Jch.rr;
//   Endoplasmic_Reticulum.Jleak.rr = Endoplasmic_Reticulum.Jleak.Fleak;
//   Endoplasmic_Reticulum.Jleak.s1.r = Endoplasmic_Reticulum.Jleak.nS1 * Endoplasmic_Reticulum.Jleak.rr;
//   Endoplasmic_Reticulum.Jleak.p1.r = (-Endoplasmic_Reticulum.Jleak.nP1) * Endoplasmic_Reticulum.Jleak.rr;
//   der(Endoplasmic_Reticulum.V) = 0.0 \"Compartment volume is constant\";
//   der(Ca_Cyt.n) = Ca_Cyt.rNet;
//   Ca_Cyt.rNet = Ca_Cyt.n1.r;
//   Ca_Cyt.c = Ca_Cyt.n1.c;
//   V = Ca_Cyt.n1.V;
//   Ca_Cyt.c = Ca_Cyt.n / V;
//   Jpump.rr = Jpump.Fpump_0 * Jpump.s1.c / (Jpump.Kpump + Jpump.s1.c);
//   Jpump.s1.r = Jpump.nS1 * Jpump.rr;
//   Jpump.p1.r = (-Jpump.nP1) * Jpump.rr;
//   n_sbml = n0 * (exp((-kbN) * time) + kappa * (1.0 - exp((-kbN) * time)));
//   p1_sbml = p11 + p12 * n_sbml / (K1 + n_sbml);
//   p2_sbml = Ca_Cyt.c / (K2 + Ca_Cyt.c);
//   der(p3_sbml) = k31 * (K3 * (1.0 - p3_sbml) - Ca_Cyt.c * p3_sbml);
//   der(V) = 0.0 \"Compartment volume is constant\";
//   Ca_Cyt.n1.r + Jpump.s1.r + Endoplasmic_Reticulum.Ca_Cyt_node.r = 0.0;
//   Jpump.p1.r + Endoplasmic_Reticulum.CaER_node.r = 0.0;
//   Endoplasmic_Reticulum.CaER.n1.r + Endoplasmic_Reticulum.Jleak.s1.r + (-Endoplasmic_Reticulum.CaER_node.r) + Endoplasmic_Reticulum.Jch.s1.r = 0.0;
//   (-Endoplasmic_Reticulum.Ca_Cyt_node.r) + Endoplasmic_Reticulum.Jleak.p1.r + Endoplasmic_Reticulum.Jch.p1.r = 0.0;
//   Endoplasmic_Reticulum.Ca_Cyt_node.V = Endoplasmic_Reticulum.Jch.p1.V;
//   Endoplasmic_Reticulum.Ca_Cyt_node.V = Endoplasmic_Reticulum.Jleak.p1.V;
//   Endoplasmic_Reticulum.Ca_Cyt_node.c = Endoplasmic_Reticulum.Jch.p1.c;
//   Endoplasmic_Reticulum.Ca_Cyt_node.c = Endoplasmic_Reticulum.Jleak.p1.c;
//   Endoplasmic_Reticulum.CaER.n1.V = Endoplasmic_Reticulum.CaER_node.V;
//   Endoplasmic_Reticulum.CaER.n1.V = Endoplasmic_Reticulum.Jch.s1.V;
//   Endoplasmic_Reticulum.CaER.n1.V = Endoplasmic_Reticulum.Jleak.s1.V;
//   Endoplasmic_Reticulum.CaER.n1.c = Endoplasmic_Reticulum.CaER_node.c;
//   Endoplasmic_Reticulum.CaER.n1.c = Endoplasmic_Reticulum.Jch.s1.c;
//   Endoplasmic_Reticulum.CaER.n1.c = Endoplasmic_Reticulum.Jleak.s1.c;
//   Ca_Cyt.n1.V = Endoplasmic_Reticulum.Ca_Cyt_node.V;
//   Ca_Cyt.n1.V = Jpump.s1.V;
//   Ca_Cyt.n1.c = Endoplasmic_Reticulum.Ca_Cyt_node.c;
//   Ca_Cyt.n1.c = Jpump.s1.c;
//   Endoplasmic_Reticulum.CaER_node.V = Jpump.p1.V;
//   Endoplasmic_Reticulum.CaER_node.c = Jpump.p1.c;
// end BioChem_Examples_CaOscillations_Cytosol;
// "
// "Warning: BioChem requested package Modelica of version 2.2.1. Modelica 3.1 is used instead which states that it is only compatible with a conversion script. OpenModelica currently does not support conversion scripts and will proceed with potential issues as a result.
// [flattening/libraries/biochem/CytosolTotal.mo:862:9-862:228:writable] Warning: Connecting two signal sources while connecting Ca_Cyt.n1.V to Endoplasmic_Reticulum.Ca_Cyt_node.V.
// "
// "Check of BioChem_Examples_CaOscillations_Cytosol completed successfully.
// Class BioChem_Examples_CaOscillations_Cytosol has 60 equation(s) and 60 variable(s).
// 44 of these are trivial equation(s)."
// "Warning: BioChem requested package Modelica of version 2.2.1. Modelica 3.1 is used instead which states that it is only compatible with a conversion script. OpenModelica currently does not support conversion scripts and will proceed with potential issues as a result.
// [flattening/libraries/biochem/CytosolTotal.mo:862:9-862:228:writable] Warning: Connecting two signal sources while connecting Ca_Cyt.n1.V to Endoplasmic_Reticulum.Ca_Cyt_node.V.
// "
// true
// true
// ""
// "Check of BioChem.Examples.InsulinSignaling_Sedaghat completed successfully.
// Class BioChem.Examples.InsulinSignaling_Sedaghat has 141 equation(s) and 141 variable(s).
// 96 of these are trivial equation(s)."
// ""
// "Check of BioChem.Examples.Glycolysis completed successfully.
// Class BioChem.Examples.Glycolysis has 170 equation(s) and 170 variable(s).
// 117 of these are trivial equation(s)."
// ""
// "Check of BioChem.Examples.EnzMM completed successfully.
// Class BioChem.Examples.EnzMM has 22 equation(s) and 22 variable(s).
// 17 of these are trivial equation(s)."
// ""
// "Check of BioChem.Examples.GMO.cell completed successfully.
// Class BioChem.Examples.GMO.cell has 96 equation(s) and 96 variable(s).
// 65 of these are trivial equation(s)."
// ""
// ""
// "Check of BioChem.Examples.centralMetabolism.cytosol completed successfully.
// Class BioChem.Examples.centralMetabolism.cytosol has 320 equation(s) and 320 variable(s).
// 229 of these are trivial equation(s)."
// "Error: Cannot instantiate BioChem.Examples.centralMetabolism due to class specialization PACKAGE.
// "
// "Check of BioChem.Examples.CircadianOscillator.Container completed successfully.
// Class BioChem.Examples.CircadianOscillator.Container has 252 equation(s) and 252 variable(s).
// 180 of these are trivial equation(s)."
// "[BioChem 1.0.1+msl.3.2.1/Examples/package.mo:1086:7-1086:129:writable] Warning: Connecting two signal sources while connecting cytoplasm.y5_node.V to nucleus.y5_node.V.
// [BioChem 1.0.1+msl.3.2.1/Examples/package.mo:1087:7-1087:128:writable] Warning: Connecting two signal sources while connecting nucleus.y6_node.V to cytoplasm.y6_node.V.
// [BioChem 1.0.1+msl.3.2.1/Examples/package.mo:1088:7-1088:128:writable] Warning: Connecting two signal sources while connecting cytoplasm.y2_node.V to nucleus.y2_node.V.
// [BioChem 1.0.1+msl.3.2.1/Examples/package.mo:1089:7-1089:129:writable] Warning: Connecting two signal sources while connecting nucleus.y3_node.V to cytoplasm.y3_node.V.
// "
// "Check of BioChem.Examples.CircadianOscillator.Nucleus completed successfully.
// Class BioChem.Examples.CircadianOscillator.Nucleus has 99 equation(s) and 101 variable(s).
// 70 of these are trivial equation(s)."
// ""
// "Check of BioChem.Examples.CircadianOscillator.Cytoplasm completed successfully.
// Class BioChem.Examples.CircadianOscillator.Cytoplasm has 140 equation(s) and 142 variable(s).
// 100 of these are trivial equation(s)."
// ""
// "Check of BioChem.Examples.CellDivison.cell completed successfully.
// Class BioChem.Examples.CellDivison.cell has 148 equation(s) and 148 variable(s).
// 101 of these are trivial equation(s)."
// ""
// "Check of BioChem.Examples.CaOscillations.Cytosol completed successfully.
// Class BioChem.Examples.CaOscillations.Cytosol has 60 equation(s) and 60 variable(s).
// 44 of these are trivial equation(s)."
// "[BioChem 1.0.1+msl.3.2.1/Examples/package.mo:2195:7-2195:211:writable] Warning: Connecting two signal sources while connecting Ca_Cyt.n1.V to endoplasmicReticulum.Ca_Cyt_node.V.
// "
// "Check of BioChem.Examples.CaOscillations.Endoplasmic_Reticulum completed successfully.
// Class BioChem.Examples.CaOscillations.Endoplasmic_Reticulum has 34 equation(s) and 35 variable(s).
// 26 of these are trivial equation(s)."
// ""
// "Check of BioChem.Examples.GlucoseInsulinModel.GlucoseInsulinModel completed successfully.
// Class BioChem.Examples.GlucoseInsulinModel.GlucoseInsulinModel has 687 equation(s) and 687 variable(s).
// 530 of these are trivial equation(s)."
// "[BioChem 1.0.1+msl.3.2.1/Examples/package.mo:2450:11-2450:101:writable] Warning: Connecting two signal sources while connecting Ra_calc.n1.V to Ra_connector.V.
// [BioChem 1.0.1+msl.3.2.1/Examples/package.mo:2666:11-2666:131:writable] Warning: Connecting two signal sources while connecting G_t.n1.V to U_idm_connector.V.
// [BioChem 1.0.1+msl.3.2.1/Examples/package.mo:2667:11-2667:130:writable] Warning: Connecting two signal sources while connecting G_t.n1.V to U_idf_connector.V.
// [BioChem 1.0.1+msl.3.2.1/Examples/package.mo:2668:11-2668:96:writable] Warning: Connecting two signal sources while connecting G_t.n1.V to G_connector.V.
// [BioChem 1.0.1+msl.3.2.1/Examples/package.mo:2640:11-2640:105:writable] Warning: connect(G_p_connector, G_p_connector) connects the same connector instance! The connect equation will be ignored.
// [BioChem 1.0.1+msl.3.2.1/Examples/package.mo:2560:11-2560:127:writable] Warning: Connecting two signal sources while connecting G_p.n1.V to E_connector.V.
// [BioChem 1.0.1+msl.3.2.1/Examples/package.mo:2561:11-2561:95:writable] Warning: Connecting two signal sources while connecting G_p.n1.V to G_connector.V.
// [BioChem 1.0.1+msl.3.2.1/Examples/package.mo:2562:11-2562:120:writable] Warning: Connecting two signal sources while connecting G_p_signal.n1.V to G_p_connector.V.
// [BioChem 1.0.1+msl.3.2.1/Examples/package.mo:2563:11-2563:110:writable] Warning: Connecting two signal sources while connecting G_signal.n1.V to G_signal_connector.V.
// [BioChem 1.0.1+msl.3.2.1/Examples/package.mo:2525:11-2525:109:writable] Warning: Connecting two signal sources while connecting I_signal.n1.V to I_signal_connector.V.
// [BioChem 1.0.1+msl.3.2.1/Examples/package.mo:2526:11-2526:135:writable] Warning: Connecting two signal sources while connecting I_p_signal.n1.V to I_p_connector.V.
// [BioChem 1.0.1+msl.3.2.1/Examples/package.mo:2527:11-2527:96:writable] Warning: Connecting two signal sources while connecting I_p.n1.V to I_connector.V.
// [BioChem 1.0.1+msl.3.2.1/Examples/package.mo:2584:11-2584:138:writable] Warning: Connecting two signal sources while connecting I_connector.V to I_l.n1.V.
// [BioChem 1.0.1+msl.3.2.1/Examples/package.mo:2621:11-2621:103:writable] Warning: Connecting two signal sources while connecting EGP_calc.n1.V to EGP_connector.V.
// [BioChem 1.0.1+msl.3.2.1/Examples/package.mo:2499:11-2499:108:writable] Warning: Connecting two signal sources while connecting I_po_connector.V to I_po_signal.n1.V.
// [BioChem 1.0.1+msl.3.2.1/Examples/package.mo:2502:11-2502:132:writable] Warning: Connecting two signal sources while connecting S_calc.n1.V to S_connector.V.
// "
// "Check of BioChem.Examples.GlucoseInsulinModel.Utilities.Reactions.FlowReaction completed successfully.
// Class BioChem.Examples.GlucoseInsulinModel.Utilities.Reactions.FlowReaction has 7 equation(s) and 7 variable(s).
// 4 of these are trivial equation(s)."
// ""
// "Check of BioChem.Examples.GlucoseInsulinModel.Utilities.Reactions.UtilizationReaction completed successfully.
// Class BioChem.Examples.GlucoseInsulinModel.Utilities.Reactions.UtilizationReaction has 11 equation(s) and 11 variable(s).
// 6 of these are trivial equation(s)."
// ""
// "Check of BioChem.Examples.GlucoseInsulinModel.Utilities.Reactions.signaltosubstance completed successfully.
// Class BioChem.Examples.GlucoseInsulinModel.Utilities.Reactions.signaltosubstance has 7 equation(s) and 7 variable(s).
// 5 of these are trivial equation(s)."
// ""
// "Check of BioChem.Examples.GlucoseInsulinModel.Utilities.Reactions.U_ii_reaction completed successfully.
// Class BioChem.Examples.GlucoseInsulinModel.Utilities.Reactions.U_ii_reaction has 7 equation(s) and 7 variable(s).
// 5 of these are trivial equation(s)."
// ""
// "Check of BioChem.Examples.GlucoseInsulinModel.Utilities.Reactions.ActivationReaction completed successfully.
// Class BioChem.Examples.GlucoseInsulinModel.Utilities.Reactions.ActivationReaction has 9 equation(s) and 9 variable(s).
// 6 of these are trivial equation(s)."
// ""
// "Check of BioChem.Examples.GlucoseInsulinModel.Utilities.Reactions.MM_insulin completed successfully.
// Class BioChem.Examples.GlucoseInsulinModel.Utilities.Reactions.MM_insulin has 9 equation(s) and 9 variable(s).
// 6 of these are trivial equation(s)."
// ""
// "Check of BioChem.Examples.GlucoseInsulinModel.Utilities.Reactions.GlucoseUptakeReaction completed successfully.
// Class BioChem.Examples.GlucoseInsulinModel.Utilities.Reactions.GlucoseUptakeReaction has 9 equation(s) and 9 variable(s).
// 6 of these are trivial equation(s)."
// ""
// "Check of BioChem.Examples.MassAction.UniUni completed successfully.
// Class BioChem.Examples.MassAction.UniUni has 745 equation(s) and 745 variable(s).
// 609 of these are trivial equation(s)."
// ""
// "Check of BioChem.Examples.MassAction.UniBi completed successfully.
// Class BioChem.Examples.MassAction.UniBi has 945 equation(s) and 945 variable(s).
// 769 of these are trivial equation(s)."
// ""
// "Check of BioChem.Examples.MultiCompartments.GlucoseMetabolism completed successfully.
// Class BioChem.Examples.MultiCompartments.GlucoseMetabolism has 385 equation(s) and 385 variable(s).
// 278 of these are trivial equation(s)."
// ""
// "Check of BioChem.Examples.MultiCompartments.BigCompartmentReversible completed successfully.
// Class BioChem.Examples.MultiCompartments.BigCompartmentReversible has 26 equation(s) and 26 variable(s).
// 20 of these are trivial equation(s)."
// ""
// "Check of BioChem.Examples.MultiCompartments.BigCompartmentIrreversible completed successfully.
// Class BioChem.Examples.MultiCompartments.BigCompartmentIrreversible has 26 equation(s) and 26 variable(s).
// 20 of these are trivial equation(s)."
// ""
// "Check of BioChem.Examples.MultiCompartments.Utilities.TCA completed successfully.
// Class BioChem.Examples.MultiCompartments.Utilities.TCA has 206 equation(s) and 206 variable(s).
// 155 of these are trivial equation(s)."
// ""
// "Check of BioChem.Examples.MultiCompartments.Utilities.SmallCompartment completed successfully.
// Class BioChem.Examples.MultiCompartments.Utilities.SmallCompartment has 10 equation(s) and 10 variable(s).
// 8 of these are trivial equation(s)."
// ""
// endResult
