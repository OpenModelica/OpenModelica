//name:         UniBi
//keyword:      instantiating msl221
//status:       correct
// cflags: -d=-newInst
//
// instantiate example
//
loadModel(BioChem);
instantiateModel(BioChem.Examples.MassAction.UniBi);
getErrorString();
// Result:
// true
// "class BioChem.Examples.MassAction.UniBi \"Examples of uni-bi reactions\"
//   Real V(quantity = \"Volume\", unit = \"l\", start = 1.0, stateSelect = StateSelect.prefer) \"Compartment volume\";
//   Real sF3.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF3.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF3.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF3.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF3.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF3.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF2.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF2.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF2.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF2.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF2.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s42.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s42.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s42.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s42.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s42.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s42.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s43.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s43.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s43.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s43.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s43.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s43.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s7.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s7.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s7.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s7.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s7.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s7.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s44.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s44.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s44.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s44.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s44.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s44.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s11.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s11.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s11.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s11.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s11.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s11.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s3.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s3.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s3.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s3.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s3.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s3.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s59.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s59.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s59.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s59.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s59.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s59.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s9.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s9.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s9.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s9.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s9.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s9.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s5.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s5.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s5.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s5.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s5.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s5.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s17.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s17.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s17.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s17.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s17.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s17.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF5.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF5.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF5.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF5.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF5.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF5.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s13.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s13.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s13.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s13.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s13.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s13.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF13.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF13.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF13.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF13.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF13.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF13.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s48.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s48.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s48.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s48.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s48.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s48.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF6.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF6.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF6.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF6.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF6.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF6.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s45.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s45.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s45.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s45.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s45.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s45.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s47.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s47.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s47.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s47.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s47.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s47.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s19.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s19.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s19.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s19.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s19.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s19.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF11.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF11.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF11.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF11.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF11.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF11.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF9.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF9.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF9.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF9.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF9.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF9.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF12.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF12.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF12.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF12.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF12.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF12.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s21.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s21.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s21.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s21.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s21.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s21.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s15.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s15.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s15.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s15.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s15.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s15.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s46.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s46.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s46.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s46.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s46.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s46.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF7.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF7.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF7.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF7.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF7.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF7.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s49.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s49.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s49.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s49.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s49.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s49.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF4.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF4.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF4.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF4.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF4.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF4.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF10.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF10.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF10.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF10.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF10.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF10.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF8.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF8.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF8.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF8.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF8.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF8.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s41.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s41.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s41.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s41.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s41.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s41.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF1.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF1.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF1.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF1.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF1.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s40.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s40.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s40.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s40.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s40.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s40.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s2.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s2.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s2.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s2.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s2.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s4.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s4.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s4.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s4.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s4.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s4.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s6.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s6.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s6.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s6.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s6.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s6.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s8.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s8.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s8.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s8.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s8.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s8.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s10.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s10.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s10.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s10.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s10.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s10.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s20.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s20.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s20.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s20.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s20.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s20.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s18.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s18.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s18.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s18.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s18.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s18.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s16.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s16.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s16.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s16.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s16.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s16.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s14.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s14.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s14.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s14.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s14.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s14.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s12.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s12.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s12.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s12.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s12.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s12.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s1.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s1.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s1.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s1.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s1.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real ubi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubi.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubi.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubi.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real ubi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real ubi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real ubi.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   parameter Real ubi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   Real ubifa.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real ubifa.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubifa.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubifa.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubifa.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubifa.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubifa.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real ubifa.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubifa.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubifa.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubifa.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real ubifa.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real ubifa.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   Real ubifa.aF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubifa.aF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubifa.aF1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real ubifa.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   Real ubifafi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real ubifafi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubifafi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubifafi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubifafi.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubifafi.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubifafi.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real ubifafi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubifafi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubifafi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubifafi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real ubifafi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real ubifafi.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   Real ubifafi.aF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubifafi.aF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubifafi.aF1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubifafi.iF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubifafi.iF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubifafi.iF1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real ubifafi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   Real ubifi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real ubifi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubifi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubifi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubifi.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubifi.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubifi.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real ubifi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubifi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubifi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubifi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real ubifi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real ubifi.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   Real ubifi.iF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubifi.iF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubifi.iF1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real ubifi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   Real ubr.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real ubr.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubr.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubr.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubr.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubr.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubr.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real ubr.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubr.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubr.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubr.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real ubr.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real ubr.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   parameter Real ubr.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real ubr.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real ubrba.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real ubrba.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrba.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrba.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrba.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrba.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrba.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrba.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrba.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrba.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrba.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real ubrba.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real ubrba.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   Real ubrba.aB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrba.aB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrba.aB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real ubrba.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real ubrba.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real ubrfababi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real ubrfababi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfababi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfababi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfababi.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfababi.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfababi.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfababi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfababi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfababi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfababi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real ubrfababi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real ubrfababi.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   Real ubrfababi.aF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfababi.aF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfababi.aF1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfababi.aB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfababi.aB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfababi.aB1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfababi.iB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfababi.iB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfababi.iB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real ubrfababi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real ubrfababi.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real ubrfaba.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real ubrfaba.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfaba.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfaba.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfaba.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfaba.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfaba.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfaba.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfaba.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfaba.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfaba.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real ubrfaba.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real ubrfaba.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   Real ubrfaba.aF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfaba.aF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfaba.aF1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfaba.aB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfaba.aB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfaba.aB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real ubrfaba.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real ubrfaba.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real ubrfa.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real ubrfa.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfa.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfa.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfa.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfa.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfa.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfa.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfa.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfa.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfa.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real ubrfa.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real ubrfa.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   Real ubrfa.aF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfa.aF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfa.aF1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real ubrfa.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real ubrfa.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real ubrbi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real ubrbi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrbi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrbi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrbi.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrbi.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrbi.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrbi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrbi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrbi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrbi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real ubrbi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real ubrbi.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   Real ubrbi.iB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrbi.iB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrbi.iB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real ubrbi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real ubrbi.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real ubrbabi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real ubrbabi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrbabi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrbabi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrbabi.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrbabi.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrbabi.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrbabi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrbabi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrbabi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrbabi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real ubrbabi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real ubrbabi.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   Real ubrbabi.aB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrbabi.aB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrbabi.aB1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrbabi.iB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrbabi.iB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrbabi.iB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real ubrbabi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real ubrbabi.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real s51.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s51.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s51.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s51.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s51.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s51.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s50.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s50.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s50.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s50.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s50.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s50.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF27.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF27.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF27.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF27.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF27.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF27.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s25.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s25.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s25.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s25.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s25.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s25.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s24.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s24.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s24.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s24.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s24.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s24.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF25.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF25.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF25.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF25.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF25.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF25.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s31.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s31.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s31.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s31.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s31.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s31.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s22.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s22.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s22.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s22.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s22.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s22.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfabi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real ubrfabi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfabi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfabi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfabi.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfabi.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfabi.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfabi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfabi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfabi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfabi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real ubrfabi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real ubrfabi.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   Real ubrfabi.aF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfabi.aF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfabi.aF1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfabi.iB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfabi.iB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfabi.iB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real ubrfabi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real ubrfabi.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real s54.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s54.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s54.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s54.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s54.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s54.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s23.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s23.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s23.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s23.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s23.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s23.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s55.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s55.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s55.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s55.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s55.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s55.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real ubrfafi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafi.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafi.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafi.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real ubrfafi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real ubrfafi.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   Real ubrfafi.aF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafi.aF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafi.aF1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafi.iF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafi.iF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafi.iF1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real ubrfafi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real ubrfafi.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real s30.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s30.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s30.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s30.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s30.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s30.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF14.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF14.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF14.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF14.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF14.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF14.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF17.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF17.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF17.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF17.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF17.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF17.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s33.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s33.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s33.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s33.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s33.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s33.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF15.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF15.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF15.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF15.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF15.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF15.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real ubrfi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfi.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfi.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfi.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real ubrfi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real ubrfi.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   Real ubrfi.iF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfi.iF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfi.iF1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real ubrfi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real ubrfi.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real ubrfafibi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real ubrfafibi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafibi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafibi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafibi.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafibi.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafibi.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafibi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafibi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafibi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafibi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real ubrfafibi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real ubrfafibi.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   Real ubrfafibi.aF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafibi.aF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafibi.aF1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafibi.iF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafibi.iF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafibi.iF1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafibi.iB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafibi.iB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafibi.iB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real ubrfafibi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real ubrfafibi.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real sF26.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF26.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF26.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF26.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF26.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF26.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF28.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF28.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF28.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF28.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF28.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF28.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s32.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s32.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s32.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s32.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s32.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s32.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF16.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF16.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF16.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF16.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF16.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF16.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s35.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s35.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s35.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s35.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s35.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s35.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s37.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s37.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s37.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s37.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s37.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s37.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF31.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF31.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF31.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF31.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF31.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF31.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF33.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF33.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF33.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF33.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF33.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF33.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF30.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF30.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF30.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF30.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF30.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF30.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s34.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s34.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s34.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s34.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s34.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s34.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF32.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF32.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF32.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF32.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF32.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF32.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF34.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF34.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF34.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF34.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF34.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF34.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s39.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s39.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s39.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s39.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s39.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s39.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF35.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF35.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF35.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF35.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF35.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF35.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfibabi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real ubrfibabi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfibabi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfibabi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfibabi.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfibabi.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfibabi.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfibabi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfibabi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfibabi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfibabi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real ubrfibabi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real ubrfibabi.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   Real ubrfibabi.iF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfibabi.iF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfibabi.iF1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfibabi.aB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfibabi.aB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfibabi.aB1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfibabi.iB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfibabi.iB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfibabi.iB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real ubrfibabi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real ubrfibabi.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real ubrfibi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real ubrfibi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfibi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfibi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfibi.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfibi.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfibi.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfibi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfibi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfibi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfibi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real ubrfibi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real ubrfibi.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   Real ubrfibi.iF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfibi.iF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfibi.iF1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfibi.iB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfibi.iB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfibi.iB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real ubrfibi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real ubrfibi.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real s57.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s57.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s57.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s57.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s57.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s57.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfiba.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real ubrfiba.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfiba.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfiba.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfiba.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfiba.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfiba.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfiba.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfiba.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfiba.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfiba.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real ubrfiba.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real ubrfiba.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   Real ubrfiba.iF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfiba.iF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfiba.iF1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfiba.aB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfiba.aB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfiba.aB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real ubrfiba.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real ubrfiba.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real s56.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s56.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s56.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s56.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s56.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s56.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s58.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s58.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s58.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s58.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s58.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s58.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s36.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s36.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s36.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s36.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s36.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s36.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF29.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF29.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF29.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF29.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF29.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF29.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s38.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s38.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s38.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s38.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s38.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s38.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF20.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF20.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF20.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF20.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF20.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF20.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s26.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s26.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s26.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s26.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s26.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s26.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafiba.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real ubrfafiba.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafiba.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafiba.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafiba.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafiba.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafiba.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafiba.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafiba.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafiba.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafiba.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real ubrfafiba.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real ubrfafiba.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   Real ubrfafiba.aF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafiba.aF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafiba.aF1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafiba.iF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafiba.iF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafiba.iF1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafiba.aB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafiba.aB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafiba.aB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real ubrfafiba.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real ubrfafiba.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real s27.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s27.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s27.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s27.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s27.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s27.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF18.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF18.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF18.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF18.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF18.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF18.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF19.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF19.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF19.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF19.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF19.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF19.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s52.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s52.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s52.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s52.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s52.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s52.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s29.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s29.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s29.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s29.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s29.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s29.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s53.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 0.1, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s53.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s53.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s53.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s53.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s53.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafibabi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real ubrfafibabi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafibabi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafibabi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafibabi.p2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafibabi.p2.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafibabi.p2.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafibabi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafibabi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafibabi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafibabi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real ubrfafibabi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 1\";
//   Real ubrfafibabi.nP2(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for product 2\";
//   Real ubrfafibabi.aF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafibabi.aF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafibabi.aF1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafibabi.iF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafibabi.iF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafibabi.iF1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafibabi.aB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafibabi.aB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafibabi.aB1.V(quantity = \"Volume\", unit = \"l\");
//   Real ubrfafibabi.iB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real ubrfafibabi.iB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real ubrfafibabi.iB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real ubrfafibabi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real ubrfafibabi.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real s28.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s28.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s28.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s28.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s28.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s28.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF21.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF21.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF21.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF21.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF21.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF21.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF23.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF23.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF23.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF23.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF23.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF23.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF24.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF24.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF24.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF24.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF24.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF24.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF22.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF22.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF22.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF22.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF22.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF22.n1.V(quantity = \"Volume\", unit = \"l\");
// equation
//   der(sF3.n) = 0.0;
//   sF3.rNet = sF3.n1.r;
//   sF3.c = sF3.n1.c;
//   V = sF3.n1.V;
//   sF3.c = sF3.n / V;
//   der(sF2.n) = 0.0;
//   sF2.rNet = sF2.n1.r;
//   sF2.c = sF2.n1.c;
//   V = sF2.n1.V;
//   sF2.c = sF2.n / V;
//   der(s42.n) = s42.rNet;
//   s42.rNet = s42.n1.r;
//   s42.c = s42.n1.c;
//   V = s42.n1.V;
//   s42.c = s42.n / V;
//   der(s43.n) = s43.rNet;
//   s43.rNet = s43.n1.r;
//   s43.c = s43.n1.c;
//   V = s43.n1.V;
//   s43.c = s43.n / V;
//   der(s7.n) = s7.rNet;
//   s7.rNet = s7.n1.r;
//   s7.c = s7.n1.c;
//   V = s7.n1.V;
//   s7.c = s7.n / V;
//   der(s44.n) = s44.rNet;
//   s44.rNet = s44.n1.r;
//   s44.c = s44.n1.c;
//   V = s44.n1.V;
//   s44.c = s44.n / V;
//   der(s11.n) = s11.rNet;
//   s11.rNet = s11.n1.r;
//   s11.c = s11.n1.c;
//   V = s11.n1.V;
//   s11.c = s11.n / V;
//   der(s3.n) = s3.rNet;
//   s3.rNet = s3.n1.r;
//   s3.c = s3.n1.c;
//   V = s3.n1.V;
//   s3.c = s3.n / V;
//   der(s59.n) = s59.rNet;
//   s59.rNet = s59.n1.r;
//   s59.c = s59.n1.c;
//   V = s59.n1.V;
//   s59.c = s59.n / V;
//   der(s9.n) = s9.rNet;
//   s9.rNet = s9.n1.r;
//   s9.c = s9.n1.c;
//   V = s9.n1.V;
//   s9.c = s9.n / V;
//   der(s5.n) = s5.rNet;
//   s5.rNet = s5.n1.r;
//   s5.c = s5.n1.c;
//   V = s5.n1.V;
//   s5.c = s5.n / V;
//   der(s17.n) = s17.rNet;
//   s17.rNet = s17.n1.r;
//   s17.c = s17.n1.c;
//   V = s17.n1.V;
//   s17.c = s17.n / V;
//   der(sF5.n) = 0.0;
//   sF5.rNet = sF5.n1.r;
//   sF5.c = sF5.n1.c;
//   V = sF5.n1.V;
//   sF5.c = sF5.n / V;
//   der(s13.n) = s13.rNet;
//   s13.rNet = s13.n1.r;
//   s13.c = s13.n1.c;
//   V = s13.n1.V;
//   s13.c = s13.n / V;
//   der(sF13.n) = 0.0;
//   sF13.rNet = sF13.n1.r;
//   sF13.c = sF13.n1.c;
//   V = sF13.n1.V;
//   sF13.c = sF13.n / V;
//   der(s48.n) = s48.rNet;
//   s48.rNet = s48.n1.r;
//   s48.c = s48.n1.c;
//   V = s48.n1.V;
//   s48.c = s48.n / V;
//   der(sF6.n) = 0.0;
//   sF6.rNet = sF6.n1.r;
//   sF6.c = sF6.n1.c;
//   V = sF6.n1.V;
//   sF6.c = sF6.n / V;
//   der(s45.n) = s45.rNet;
//   s45.rNet = s45.n1.r;
//   s45.c = s45.n1.c;
//   V = s45.n1.V;
//   s45.c = s45.n / V;
//   der(s47.n) = s47.rNet;
//   s47.rNet = s47.n1.r;
//   s47.c = s47.n1.c;
//   V = s47.n1.V;
//   s47.c = s47.n / V;
//   der(s19.n) = s19.rNet;
//   s19.rNet = s19.n1.r;
//   s19.c = s19.n1.c;
//   V = s19.n1.V;
//   s19.c = s19.n / V;
//   der(sF11.n) = 0.0;
//   sF11.rNet = sF11.n1.r;
//   sF11.c = sF11.n1.c;
//   V = sF11.n1.V;
//   sF11.c = sF11.n / V;
//   der(sF9.n) = 0.0;
//   sF9.rNet = sF9.n1.r;
//   sF9.c = sF9.n1.c;
//   V = sF9.n1.V;
//   sF9.c = sF9.n / V;
//   der(sF12.n) = 0.0;
//   sF12.rNet = sF12.n1.r;
//   sF12.c = sF12.n1.c;
//   V = sF12.n1.V;
//   sF12.c = sF12.n / V;
//   der(s21.n) = s21.rNet;
//   s21.rNet = s21.n1.r;
//   s21.c = s21.n1.c;
//   V = s21.n1.V;
//   s21.c = s21.n / V;
//   der(s15.n) = s15.rNet;
//   s15.rNet = s15.n1.r;
//   s15.c = s15.n1.c;
//   V = s15.n1.V;
//   s15.c = s15.n / V;
//   der(s46.n) = s46.rNet;
//   s46.rNet = s46.n1.r;
//   s46.c = s46.n1.c;
//   V = s46.n1.V;
//   s46.c = s46.n / V;
//   der(sF7.n) = 0.0;
//   sF7.rNet = sF7.n1.r;
//   sF7.c = sF7.n1.c;
//   V = sF7.n1.V;
//   sF7.c = sF7.n / V;
//   der(s49.n) = s49.rNet;
//   s49.rNet = s49.n1.r;
//   s49.c = s49.n1.c;
//   V = s49.n1.V;
//   s49.c = s49.n / V;
//   der(sF4.n) = 0.0;
//   sF4.rNet = sF4.n1.r;
//   sF4.c = sF4.n1.c;
//   V = sF4.n1.V;
//   sF4.c = sF4.n / V;
//   der(sF10.n) = 0.0;
//   sF10.rNet = sF10.n1.r;
//   sF10.c = sF10.n1.c;
//   V = sF10.n1.V;
//   sF10.c = sF10.n / V;
//   der(sF8.n) = 0.0;
//   sF8.rNet = sF8.n1.r;
//   sF8.c = sF8.n1.c;
//   V = sF8.n1.V;
//   sF8.c = sF8.n / V;
//   der(s41.n) = s41.rNet;
//   s41.rNet = s41.n1.r;
//   s41.c = s41.n1.c;
//   V = s41.n1.V;
//   s41.c = s41.n / V;
//   der(sF.n) = 0.0;
//   sF.rNet = sF.n1.r;
//   sF.c = sF.n1.c;
//   V = sF.n1.V;
//   sF.c = sF.n / V;
//   der(sF1.n) = 0.0;
//   sF1.rNet = sF1.n1.r;
//   sF1.c = sF1.n1.c;
//   V = sF1.n1.V;
//   sF1.c = sF1.n / V;
//   der(s40.n) = s40.rNet;
//   s40.rNet = s40.n1.r;
//   s40.c = s40.n1.c;
//   V = s40.n1.V;
//   s40.c = s40.n / V;
//   der(s.n) = s.rNet;
//   s.rNet = s.n1.r;
//   s.c = s.n1.c;
//   V = s.n1.V;
//   s.c = s.n / V;
//   der(s2.n) = s2.rNet;
//   s2.rNet = s2.n1.r;
//   s2.c = s2.n1.c;
//   V = s2.n1.V;
//   s2.c = s2.n / V;
//   der(s4.n) = s4.rNet;
//   s4.rNet = s4.n1.r;
//   s4.c = s4.n1.c;
//   V = s4.n1.V;
//   s4.c = s4.n / V;
//   der(s6.n) = s6.rNet;
//   s6.rNet = s6.n1.r;
//   s6.c = s6.n1.c;
//   V = s6.n1.V;
//   s6.c = s6.n / V;
//   der(s8.n) = s8.rNet;
//   s8.rNet = s8.n1.r;
//   s8.c = s8.n1.c;
//   V = s8.n1.V;
//   s8.c = s8.n / V;
//   der(s10.n) = s10.rNet;
//   s10.rNet = s10.n1.r;
//   s10.c = s10.n1.c;
//   V = s10.n1.V;
//   s10.c = s10.n / V;
//   der(s20.n) = s20.rNet;
//   s20.rNet = s20.n1.r;
//   s20.c = s20.n1.c;
//   V = s20.n1.V;
//   s20.c = s20.n / V;
//   der(s18.n) = s18.rNet;
//   s18.rNet = s18.n1.r;
//   s18.c = s18.n1.c;
//   V = s18.n1.V;
//   s18.c = s18.n / V;
//   der(s16.n) = s16.rNet;
//   s16.rNet = s16.n1.r;
//   s16.c = s16.n1.c;
//   V = s16.n1.V;
//   s16.c = s16.n / V;
//   der(s14.n) = s14.rNet;
//   s14.rNet = s14.n1.r;
//   s14.c = s14.n1.c;
//   V = s14.n1.V;
//   s14.c = s14.n / V;
//   der(s12.n) = s12.rNet;
//   s12.rNet = s12.n1.r;
//   s12.c = s12.n1.c;
//   V = s12.n1.V;
//   s12.c = s12.n / V;
//   der(s1.n) = s1.rNet;
//   s1.rNet = s1.n1.r;
//   s1.c = s1.n1.c;
//   V = s1.n1.V;
//   s1.c = s1.n / V;
//   ubi.rr = ubi.k1 * ubi.s1.c ^ ubi.nS1 * ubi.s1.V;
//   ubi.s1.r = ubi.nS1 * ubi.rr;
//   ubi.p1.r = (-ubi.nP1) * ubi.rr;
//   ubi.p2.r = (-ubi.nP2) * ubi.rr;
//   ubifa.rr = ubifa.k1 * ubifa.aF1.c * ubifa.s1.c ^ ubifa.nS1 * ubifa.s1.V;
//   ubifa.s1.r = ubifa.nS1 * ubifa.rr;
//   ubifa.p1.r = (-ubifa.nP1) * ubifa.rr;
//   ubifa.p2.r = (-ubifa.nP2) * ubifa.rr;
//   ubifa.aF1.r = 0.0;
//   ubifafi.rr = ubifafi.k1 * ubifafi.aF1.c * ubifafi.s1.c ^ ubifafi.nS1 * ubifafi.s1.V / ubifafi.iF1.c;
//   ubifafi.s1.r = ubifafi.nS1 * ubifafi.rr;
//   ubifafi.p1.r = (-ubifafi.nP1) * ubifafi.rr;
//   ubifafi.p2.r = (-ubifafi.nP2) * ubifafi.rr;
//   ubifafi.aF1.r = 0.0;
//   ubifafi.iF1.r = 0.0;
//   ubifi.rr = ubifi.k1 * ubifi.s1.c ^ ubifi.nS1 * ubifi.s1.V / ubifi.iF1.c;
//   ubifi.s1.r = ubifi.nS1 * ubifi.rr;
//   ubifi.p1.r = (-ubifi.nP1) * ubifi.rr;
//   ubifi.p2.r = (-ubifi.nP2) * ubifi.rr;
//   ubifi.iF1.r = 0.0;
//   ubr.rr = ubr.k1 * ubr.s1.c ^ ubr.nS1 * ubr.s1.V - ubr.k2 * ubr.p1.c ^ ubr.nP1 * ubr.p2.c ^ ubr.nP2 * ubr.p1.V;
//   ubr.s1.r = ubr.nS1 * ubr.rr;
//   ubr.p1.r = (-ubr.nP1) * ubr.rr;
//   ubr.p2.r = (-ubr.nP2) * ubr.rr;
//   ubrba.rr = ubrba.k1 * ubrba.s1.c ^ ubrba.nS1 * ubrba.s1.V - ubrba.k2 * ubrba.aB1.c * ubrba.p1.c ^ ubrba.nP1 * ubrba.p2.c ^ ubrba.nP2 * ubrba.p1.V;
//   ubrba.s1.r = ubrba.nS1 * ubrba.rr;
//   ubrba.p1.r = (-ubrba.nP1) * ubrba.rr;
//   ubrba.p2.r = (-ubrba.nP2) * ubrba.rr;
//   ubrba.aB1.r = 0.0;
//   ubrfababi.rr = ubrfababi.k1 * ubrfababi.aF1.c * ubrfababi.s1.c ^ ubrfababi.nS1 * ubrfababi.s1.V - ubrfababi.k2 * ubrfababi.aB1.c * ubrfababi.p1.c ^ ubrfababi.nP1 * ubrfababi.p2.c ^ ubrfababi.nP2 * ubrfababi.p1.V / ubrfababi.iB1.c;
//   ubrfababi.s1.r = ubrfababi.nS1 * ubrfababi.rr;
//   ubrfababi.p1.r = (-ubrfababi.nP1) * ubrfababi.rr;
//   ubrfababi.p2.r = (-ubrfababi.nP2) * ubrfababi.rr;
//   ubrfababi.aF1.r = 0.0;
//   ubrfababi.aB1.r = 0.0;
//   ubrfababi.iB1.r = 0.0;
//   ubrfaba.rr = ubrfaba.k1 * ubrfaba.aF1.c * ubrfaba.s1.c ^ ubrfaba.nS1 * ubrfaba.s1.V - ubrfaba.k2 * ubrfaba.aB1.c * ubrfaba.p1.c ^ ubrfaba.nP1 * ubrfaba.p2.c ^ ubrfaba.nP2 * ubrfaba.p1.V;
//   ubrfaba.s1.r = ubrfaba.nS1 * ubrfaba.rr;
//   ubrfaba.p1.r = (-ubrfaba.nP1) * ubrfaba.rr;
//   ubrfaba.p2.r = (-ubrfaba.nP2) * ubrfaba.rr;
//   ubrfaba.aF1.r = 0.0;
//   ubrfaba.aB1.r = 0.0;
//   ubrfa.rr = ubrfa.k1 * ubrfa.aF1.c * ubrfa.s1.c ^ ubrfa.nS1 * ubrfa.s1.V - ubrfa.k2 * ubrfa.p1.c ^ ubrfa.nP1 * ubrfa.p2.c ^ ubrfa.nP2 * ubrfa.p1.V;
//   ubrfa.s1.r = ubrfa.nS1 * ubrfa.rr;
//   ubrfa.p1.r = (-ubrfa.nP1) * ubrfa.rr;
//   ubrfa.p2.r = (-ubrfa.nP2) * ubrfa.rr;
//   ubrfa.aF1.r = 0.0;
//   ubrbi.rr = ubrbi.k1 * ubrbi.s1.c ^ ubrbi.nS1 * ubrbi.s1.V - ubrbi.k2 * ubrbi.p1.c ^ ubrbi.nP1 * ubrbi.p2.c ^ ubrbi.nP2 * ubrbi.p1.V / ubrbi.iB1.c;
//   ubrbi.s1.r = ubrbi.nS1 * ubrbi.rr;
//   ubrbi.p1.r = (-ubrbi.nP1) * ubrbi.rr;
//   ubrbi.p2.r = (-ubrbi.nP2) * ubrbi.rr;
//   ubrbi.iB1.r = 0.0;
//   ubrbabi.rr = ubrbabi.k1 * ubrbabi.s1.c ^ ubrbabi.nS1 * ubrbabi.s1.V - ubrbabi.k2 * ubrbabi.aB1.c * ubrbabi.p1.c ^ ubrbabi.nP1 * ubrbabi.p2.c ^ ubrbabi.nP2 * ubrbabi.p1.V / ubrbabi.iB1.c;
//   ubrbabi.s1.r = ubrbabi.nS1 * ubrbabi.rr;
//   ubrbabi.p1.r = (-ubrbabi.nP1) * ubrbabi.rr;
//   ubrbabi.p2.r = (-ubrbabi.nP2) * ubrbabi.rr;
//   ubrbabi.aB1.r = 0.0;
//   ubrbabi.iB1.r = 0.0;
//   der(s51.n) = s51.rNet;
//   s51.rNet = s51.n1.r;
//   s51.c = s51.n1.c;
//   V = s51.n1.V;
//   s51.c = s51.n / V;
//   der(s50.n) = s50.rNet;
//   s50.rNet = s50.n1.r;
//   s50.c = s50.n1.c;
//   V = s50.n1.V;
//   s50.c = s50.n / V;
//   der(sF27.n) = 0.0;
//   sF27.rNet = sF27.n1.r;
//   sF27.c = sF27.n1.c;
//   V = sF27.n1.V;
//   sF27.c = sF27.n / V;
//   der(s25.n) = s25.rNet;
//   s25.rNet = s25.n1.r;
//   s25.c = s25.n1.c;
//   V = s25.n1.V;
//   s25.c = s25.n / V;
//   der(s24.n) = s24.rNet;
//   s24.rNet = s24.n1.r;
//   s24.c = s24.n1.c;
//   V = s24.n1.V;
//   s24.c = s24.n / V;
//   der(sF25.n) = 0.0;
//   sF25.rNet = sF25.n1.r;
//   sF25.c = sF25.n1.c;
//   V = sF25.n1.V;
//   sF25.c = sF25.n / V;
//   der(s31.n) = s31.rNet;
//   s31.rNet = s31.n1.r;
//   s31.c = s31.n1.c;
//   V = s31.n1.V;
//   s31.c = s31.n / V;
//   der(s22.n) = s22.rNet;
//   s22.rNet = s22.n1.r;
//   s22.c = s22.n1.c;
//   V = s22.n1.V;
//   s22.c = s22.n / V;
//   ubrfabi.rr = ubrfabi.k1 * ubrfabi.aF1.c * ubrfabi.s1.c ^ ubrfabi.nS1 * ubrfabi.s1.V - ubrfabi.k2 * ubrfabi.p1.c ^ ubrfabi.nP1 * ubrfabi.p2.c ^ ubrfabi.nP2 * ubrfabi.p1.V / ubrfabi.iB1.c;
//   ubrfabi.s1.r = ubrfabi.nS1 * ubrfabi.rr;
//   ubrfabi.p1.r = (-ubrfabi.nP1) * ubrfabi.rr;
//   ubrfabi.p2.r = (-ubrfabi.nP2) * ubrfabi.rr;
//   ubrfabi.aF1.r = 0.0;
//   ubrfabi.iB1.r = 0.0;
//   der(s54.n) = s54.rNet;
//   s54.rNet = s54.n1.r;
//   s54.c = s54.n1.c;
//   V = s54.n1.V;
//   s54.c = s54.n / V;
//   der(s23.n) = s23.rNet;
//   s23.rNet = s23.n1.r;
//   s23.c = s23.n1.c;
//   V = s23.n1.V;
//   s23.c = s23.n / V;
//   der(s55.n) = s55.rNet;
//   s55.rNet = s55.n1.r;
//   s55.c = s55.n1.c;
//   V = s55.n1.V;
//   s55.c = s55.n / V;
//   ubrfafi.rr = ubrfafi.k1 * ubrfafi.aF1.c * ubrfafi.s1.c ^ ubrfafi.nS1 * ubrfafi.s1.V / ubrfafi.iF1.c - ubrfafi.k2 * ubrfafi.p1.c ^ ubrfafi.nP1 * ubrfafi.p2.c ^ ubrfafi.nP2 * ubrfafi.p1.V;
//   ubrfafi.s1.r = ubrfafi.nS1 * ubrfafi.rr;
//   ubrfafi.p1.r = (-ubrfafi.nP1) * ubrfafi.rr;
//   ubrfafi.p2.r = (-ubrfafi.nP2) * ubrfafi.rr;
//   ubrfafi.aF1.r = 0.0;
//   ubrfafi.iF1.r = 0.0;
//   der(s30.n) = s30.rNet;
//   s30.rNet = s30.n1.r;
//   s30.c = s30.n1.c;
//   V = s30.n1.V;
//   s30.c = s30.n / V;
//   der(sF14.n) = 0.0;
//   sF14.rNet = sF14.n1.r;
//   sF14.c = sF14.n1.c;
//   V = sF14.n1.V;
//   sF14.c = sF14.n / V;
//   der(sF17.n) = 0.0;
//   sF17.rNet = sF17.n1.r;
//   sF17.c = sF17.n1.c;
//   V = sF17.n1.V;
//   sF17.c = sF17.n / V;
//   der(s33.n) = s33.rNet;
//   s33.rNet = s33.n1.r;
//   s33.c = s33.n1.c;
//   V = s33.n1.V;
//   s33.c = s33.n / V;
//   der(sF15.n) = 0.0;
//   sF15.rNet = sF15.n1.r;
//   sF15.c = sF15.n1.c;
//   V = sF15.n1.V;
//   sF15.c = sF15.n / V;
//   ubrfi.rr = ubrfi.k1 * ubrfi.s1.c ^ ubrfi.nS1 * ubrfi.s1.V / ubrfi.iF1.c - ubrfi.k2 * ubrfi.p1.c ^ ubrfi.nP1 * ubrfi.p2.c ^ ubrfi.nP2 * ubrfi.p1.V;
//   ubrfi.s1.r = ubrfi.nS1 * ubrfi.rr;
//   ubrfi.p1.r = (-ubrfi.nP1) * ubrfi.rr;
//   ubrfi.p2.r = (-ubrfi.nP2) * ubrfi.rr;
//   ubrfi.iF1.r = 0.0;
//   ubrfafibi.rr = ubrfafibi.k1 * ubrfafibi.aF1.c * ubrfafibi.s1.c ^ ubrfafibi.nS1 * ubrfafibi.s1.V / ubrfafibi.iF1.c - ubrfafibi.k2 * ubrfafibi.p1.c ^ ubrfafibi.nP1 * ubrfafibi.p2.c ^ ubrfafibi.nP2 * ubrfafibi.p1.V / ubrfafibi.iB1.c;
//   ubrfafibi.s1.r = ubrfafibi.nS1 * ubrfafibi.rr;
//   ubrfafibi.p1.r = (-ubrfafibi.nP1) * ubrfafibi.rr;
//   ubrfafibi.p2.r = (-ubrfafibi.nP2) * ubrfafibi.rr;
//   ubrfafibi.aF1.r = 0.0;
//   ubrfafibi.iF1.r = 0.0;
//   ubrfafibi.iB1.r = 0.0;
//   der(sF26.n) = 0.0;
//   sF26.rNet = sF26.n1.r;
//   sF26.c = sF26.n1.c;
//   V = sF26.n1.V;
//   sF26.c = sF26.n / V;
//   der(sF28.n) = 0.0;
//   sF28.rNet = sF28.n1.r;
//   sF28.c = sF28.n1.c;
//   V = sF28.n1.V;
//   sF28.c = sF28.n / V;
//   der(s32.n) = s32.rNet;
//   s32.rNet = s32.n1.r;
//   s32.c = s32.n1.c;
//   V = s32.n1.V;
//   s32.c = s32.n / V;
//   der(sF16.n) = 0.0;
//   sF16.rNet = sF16.n1.r;
//   sF16.c = sF16.n1.c;
//   V = sF16.n1.V;
//   sF16.c = sF16.n / V;
//   der(s35.n) = s35.rNet;
//   s35.rNet = s35.n1.r;
//   s35.c = s35.n1.c;
//   V = s35.n1.V;
//   s35.c = s35.n / V;
//   der(s37.n) = s37.rNet;
//   s37.rNet = s37.n1.r;
//   s37.c = s37.n1.c;
//   V = s37.n1.V;
//   s37.c = s37.n / V;
//   der(sF31.n) = 0.0;
//   sF31.rNet = sF31.n1.r;
//   sF31.c = sF31.n1.c;
//   V = sF31.n1.V;
//   sF31.c = sF31.n / V;
//   der(sF33.n) = 0.0;
//   sF33.rNet = sF33.n1.r;
//   sF33.c = sF33.n1.c;
//   V = sF33.n1.V;
//   sF33.c = sF33.n / V;
//   der(sF30.n) = 0.0;
//   sF30.rNet = sF30.n1.r;
//   sF30.c = sF30.n1.c;
//   V = sF30.n1.V;
//   sF30.c = sF30.n / V;
//   der(s34.n) = s34.rNet;
//   s34.rNet = s34.n1.r;
//   s34.c = s34.n1.c;
//   V = s34.n1.V;
//   s34.c = s34.n / V;
//   der(sF32.n) = 0.0;
//   sF32.rNet = sF32.n1.r;
//   sF32.c = sF32.n1.c;
//   V = sF32.n1.V;
//   sF32.c = sF32.n / V;
//   der(sF34.n) = 0.0;
//   sF34.rNet = sF34.n1.r;
//   sF34.c = sF34.n1.c;
//   V = sF34.n1.V;
//   sF34.c = sF34.n / V;
//   der(s39.n) = s39.rNet;
//   s39.rNet = s39.n1.r;
//   s39.c = s39.n1.c;
//   V = s39.n1.V;
//   s39.c = s39.n / V;
//   der(sF35.n) = 0.0;
//   sF35.rNet = sF35.n1.r;
//   sF35.c = sF35.n1.c;
//   V = sF35.n1.V;
//   sF35.c = sF35.n / V;
//   ubrfibabi.rr = ubrfibabi.k1 * ubrfibabi.s1.c ^ ubrfibabi.nS1 * ubrfibabi.s1.V / ubrfibabi.iF1.c - ubrfibabi.k2 * ubrfibabi.aB1.c * ubrfibabi.p1.c ^ ubrfibabi.nP1 * ubrfibabi.p2.c ^ ubrfibabi.nP2 * ubrfibabi.p1.V / ubrfibabi.iB1.c;
//   ubrfibabi.s1.r = ubrfibabi.nS1 * ubrfibabi.rr;
//   ubrfibabi.p1.r = (-ubrfibabi.nP1) * ubrfibabi.rr;
//   ubrfibabi.p2.r = (-ubrfibabi.nP2) * ubrfibabi.rr;
//   ubrfibabi.iF1.r = 0.0;
//   ubrfibabi.aB1.r = 0.0;
//   ubrfibabi.iB1.r = 0.0;
//   ubrfibi.rr = ubrfibi.k1 * ubrfibi.s1.c ^ ubrfibi.nS1 * ubrfibi.s1.V / ubrfibi.iF1.c - ubrfibi.k2 * ubrfibi.p1.c ^ ubrfibi.nP1 * ubrfibi.p2.c ^ ubrfibi.nP2 * ubrfibi.p1.V / ubrfibi.iB1.c;
//   ubrfibi.s1.r = ubrfibi.nS1 * ubrfibi.rr;
//   ubrfibi.p1.r = (-ubrfibi.nP1) * ubrfibi.rr;
//   ubrfibi.p2.r = (-ubrfibi.nP2) * ubrfibi.rr;
//   ubrfibi.iF1.r = 0.0;
//   ubrfibi.iB1.r = 0.0;
//   der(s57.n) = s57.rNet;
//   s57.rNet = s57.n1.r;
//   s57.c = s57.n1.c;
//   V = s57.n1.V;
//   s57.c = s57.n / V;
//   ubrfiba.rr = ubrfiba.k1 * ubrfiba.s1.c ^ ubrfiba.nS1 * ubrfiba.s1.V / ubrfiba.iF1.c - ubrfiba.k2 * ubrfiba.aB1.c * ubrfiba.p1.c ^ ubrfiba.nP1 * ubrfiba.p2.c ^ ubrfiba.nP2 * ubrfiba.p1.V;
//   ubrfiba.s1.r = ubrfiba.nS1 * ubrfiba.rr;
//   ubrfiba.p1.r = (-ubrfiba.nP1) * ubrfiba.rr;
//   ubrfiba.p2.r = (-ubrfiba.nP2) * ubrfiba.rr;
//   ubrfiba.iF1.r = 0.0;
//   ubrfiba.aB1.r = 0.0;
//   der(s56.n) = s56.rNet;
//   s56.rNet = s56.n1.r;
//   s56.c = s56.n1.c;
//   V = s56.n1.V;
//   s56.c = s56.n / V;
//   der(s58.n) = s58.rNet;
//   s58.rNet = s58.n1.r;
//   s58.c = s58.n1.c;
//   V = s58.n1.V;
//   s58.c = s58.n / V;
//   der(s36.n) = s36.rNet;
//   s36.rNet = s36.n1.r;
//   s36.c = s36.n1.c;
//   V = s36.n1.V;
//   s36.c = s36.n / V;
//   der(sF29.n) = 0.0;
//   sF29.rNet = sF29.n1.r;
//   sF29.c = sF29.n1.c;
//   V = sF29.n1.V;
//   sF29.c = sF29.n / V;
//   der(s38.n) = s38.rNet;
//   s38.rNet = s38.n1.r;
//   s38.c = s38.n1.c;
//   V = s38.n1.V;
//   s38.c = s38.n / V;
//   der(sF20.n) = 0.0;
//   sF20.rNet = sF20.n1.r;
//   sF20.c = sF20.n1.c;
//   V = sF20.n1.V;
//   sF20.c = sF20.n / V;
//   der(s26.n) = s26.rNet;
//   s26.rNet = s26.n1.r;
//   s26.c = s26.n1.c;
//   V = s26.n1.V;
//   s26.c = s26.n / V;
//   ubrfafiba.rr = ubrfafiba.k1 * ubrfafiba.aF1.c * ubrfafiba.s1.c ^ ubrfafiba.nS1 * ubrfafiba.s1.V / ubrfafiba.iF1.c - ubrfafiba.k2 * ubrfafiba.aB1.c * ubrfafiba.p1.c ^ ubrfafiba.nP1 * ubrfafiba.p2.c ^ ubrfafiba.nP2 * ubrfafiba.p1.V;
//   ubrfafiba.s1.r = ubrfafiba.nS1 * ubrfafiba.rr;
//   ubrfafiba.p1.r = (-ubrfafiba.nP1) * ubrfafiba.rr;
//   ubrfafiba.p2.r = (-ubrfafiba.nP2) * ubrfafiba.rr;
//   ubrfafiba.aF1.r = 0.0;
//   ubrfafiba.iF1.r = 0.0;
//   ubrfafiba.aB1.r = 0.0;
//   der(s27.n) = s27.rNet;
//   s27.rNet = s27.n1.r;
//   s27.c = s27.n1.c;
//   V = s27.n1.V;
//   s27.c = s27.n / V;
//   der(sF18.n) = 0.0;
//   sF18.rNet = sF18.n1.r;
//   sF18.c = sF18.n1.c;
//   V = sF18.n1.V;
//   sF18.c = sF18.n / V;
//   der(sF19.n) = 0.0;
//   sF19.rNet = sF19.n1.r;
//   sF19.c = sF19.n1.c;
//   V = sF19.n1.V;
//   sF19.c = sF19.n / V;
//   der(s52.n) = s52.rNet;
//   s52.rNet = s52.n1.r;
//   s52.c = s52.n1.c;
//   V = s52.n1.V;
//   s52.c = s52.n / V;
//   der(s29.n) = s29.rNet;
//   s29.rNet = s29.n1.r;
//   s29.c = s29.n1.c;
//   V = s29.n1.V;
//   s29.c = s29.n / V;
//   der(s53.n) = s53.rNet;
//   s53.rNet = s53.n1.r;
//   s53.c = s53.n1.c;
//   V = s53.n1.V;
//   s53.c = s53.n / V;
//   ubrfafibabi.rr = ubrfafibabi.k1 * ubrfafibabi.aF1.c * ubrfafibabi.s1.c ^ ubrfafibabi.nS1 * ubrfafibabi.s1.V / ubrfafibabi.iF1.c - ubrfafibabi.k2 * ubrfafibabi.aB1.c * ubrfafibabi.p1.c ^ ubrfafibabi.nP1 * ubrfafibabi.p2.c ^ ubrfafibabi.nP2 * ubrfafibabi.p1.V / ubrfafibabi.iB1.c;
//   ubrfafibabi.s1.r = ubrfafibabi.nS1 * ubrfafibabi.rr;
//   ubrfafibabi.p1.r = (-ubrfafibabi.nP1) * ubrfafibabi.rr;
//   ubrfafibabi.p2.r = (-ubrfafibabi.nP2) * ubrfafibabi.rr;
//   ubrfafibabi.aF1.r = 0.0;
//   ubrfafibabi.iF1.r = 0.0;
//   ubrfafibabi.aB1.r = 0.0;
//   ubrfafibabi.iB1.r = 0.0;
//   der(s28.n) = s28.rNet;
//   s28.rNet = s28.n1.r;
//   s28.c = s28.n1.c;
//   V = s28.n1.V;
//   s28.c = s28.n / V;
//   der(sF21.n) = 0.0;
//   sF21.rNet = sF21.n1.r;
//   sF21.c = sF21.n1.c;
//   V = sF21.n1.V;
//   sF21.c = sF21.n / V;
//   der(sF23.n) = 0.0;
//   sF23.rNet = sF23.n1.r;
//   sF23.c = sF23.n1.c;
//   V = sF23.n1.V;
//   sF23.c = sF23.n / V;
//   der(sF24.n) = 0.0;
//   sF24.rNet = sF24.n1.r;
//   sF24.c = sF24.n1.c;
//   V = sF24.n1.V;
//   sF24.c = sF24.n / V;
//   der(sF22.n) = 0.0;
//   sF22.rNet = sF22.n1.r;
//   sF22.c = sF22.n1.c;
//   V = sF22.n1.V;
//   sF22.c = sF22.n / V;
//   der(V) = 0.0 \"Compartment volume is constant\";
//   sF3.n1.r + ubifi.iF1.r = 0.0;
//   sF2.n1.r + ubifafi.iF1.r = 0.0;
//   s42.n1.r + ubifafi.p2.r = 0.0;
//   s43.n1.r + ubifi.p2.r = 0.0;
//   s7.n1.r + ubifi.p1.r = 0.0;
//   s44.n1.r + ubrba.p2.r = 0.0;
//   s11.n1.r + ubrba.p1.r = 0.0;
//   s3.n1.r + ubifa.p1.r = 0.0;
//   s59.n1.r + ubr.p2.r = 0.0;
//   s9.n1.r + ubr.p1.r = 0.0;
//   s5.n1.r + ubifafi.p1.r = 0.0;
//   s17.n1.r + ubrfa.p1.r = 0.0;
//   sF5.n1.r + ubrbabi.aB1.r = 0.0;
//   s13.n1.r + ubrbabi.p1.r = 0.0;
//   sF13.n1.r + ubrfababi.iB1.r = 0.0;
//   s48.n1.r + ubrbi.p2.r = 0.0;
//   sF6.n1.r + ubrbabi.iB1.r = 0.0;
//   s45.n1.r + ubrfababi.p2.r = 0.0;
//   s47.n1.r + ubrfa.p2.r = 0.0;
//   s19.n1.r + ubrfaba.p1.r = 0.0;
//   sF11.n1.r + ubrfababi.aF1.r = 0.0;
//   sF9.n1.r + ubrfaba.aF1.r = 0.0;
//   sF12.n1.r + ubrfababi.aB1.r = 0.0;
//   s21.n1.r + ubrfababi.p1.r = 0.0;
//   s15.n1.r + ubrbi.p1.r = 0.0;
//   s46.n1.r + ubrfaba.p2.r = 0.0;
//   sF7.n1.r + ubrbi.iB1.r = 0.0;
//   s49.n1.r + ubrbabi.p2.r = 0.0;
//   sF4.n1.r + ubrba.aB1.r = 0.0;
//   sF10.n1.r + ubrfaba.aB1.r = 0.0;
//   sF8.n1.r + ubrfa.aF1.r = 0.0;
//   s41.n1.r + ubifa.p2.r = 0.0;
//   sF.n1.r + ubifa.aF1.r = 0.0;
//   sF1.n1.r + ubifafi.aF1.r = 0.0;
//   s40.n1.r + ubi.p2.r = 0.0;
//   s.n1.r + ubi.s1.r = 0.0;
//   s2.n1.r + ubifa.s1.r = 0.0;
//   s4.n1.r + ubifafi.s1.r = 0.0;
//   s6.n1.r + ubifi.s1.r = 0.0;
//   s8.n1.r + ubr.s1.r = 0.0;
//   s10.n1.r + ubrba.s1.r = 0.0;
//   s20.n1.r + ubrfababi.s1.r = 0.0;
//   s18.n1.r + ubrfaba.s1.r = 0.0;
//   s16.n1.r + ubrfa.s1.r = 0.0;
//   s14.n1.r + ubrbi.s1.r = 0.0;
//   s12.n1.r + ubrbabi.s1.r = 0.0;
//   s1.n1.r + ubi.p1.r = 0.0;
//   s51.n1.r + ubrfafi.p2.r = 0.0;
//   s50.n1.r + ubrfabi.p2.r = 0.0;
//   sF27.n1.r + ubrfafibi.iB1.r = 0.0;
//   s25.n1.r + ubrfafi.p1.r = 0.0;
//   s24.n1.r + ubrfafi.s1.r = 0.0;
//   sF25.n1.r + ubrfafibi.aF1.r = 0.0;
//   s31.n1.r + ubrfafibi.p1.r = 0.0;
//   s22.n1.r + ubrfabi.s1.r = 0.0;
//   ubrfabi.p1.r + s23.n1.r = 0.0;
//   ubrfabi.aF1.r + sF14.n1.r = 0.0;
//   ubrfabi.iB1.r + sF15.n1.r = 0.0;
//   s54.n1.r + ubrfafibi.p2.r = 0.0;
//   s55.n1.r + ubrfi.p2.r = 0.0;
//   ubrfafi.aF1.r + sF16.n1.r = 0.0;
//   ubrfafi.iF1.r + sF17.n1.r = 0.0;
//   s30.n1.r + ubrfafibi.s1.r = 0.0;
//   s33.n1.r + ubrfi.p1.r = 0.0;
//   ubrfi.s1.r + s32.n1.r = 0.0;
//   ubrfi.iF1.r + sF28.n1.r = 0.0;
//   ubrfafibi.iF1.r + sF26.n1.r = 0.0;
//   s35.n1.r + ubrfiba.p1.r = 0.0;
//   s37.n1.r + ubrfibabi.p1.r = 0.0;
//   sF31.n1.r + ubrfibabi.iF1.r = 0.0;
//   sF33.n1.r + ubrfibabi.iB1.r = 0.0;
//   sF30.n1.r + ubrfiba.aB1.r = 0.0;
//   s34.n1.r + ubrfiba.s1.r = 0.0;
//   sF32.n1.r + ubrfibabi.aB1.r = 0.0;
//   sF34.n1.r + ubrfibi.iF1.r = 0.0;
//   s39.n1.r + ubrfibi.p1.r = 0.0;
//   sF35.n1.r + ubrfibi.iB1.r = 0.0;
//   ubrfibabi.s1.r + s36.n1.r = 0.0;
//   ubrfibabi.p2.r + s57.n1.r = 0.0;
//   ubrfibi.s1.r + s38.n1.r = 0.0;
//   ubrfibi.p2.r + s58.n1.r = 0.0;
//   ubrfiba.p2.r + s56.n1.r = 0.0;
//   ubrfiba.iF1.r + sF29.n1.r = 0.0;
//   sF20.n1.r + ubrfafiba.aB1.r = 0.0;
//   s26.n1.r + ubrfafiba.s1.r = 0.0;
//   ubrfafiba.p2.r + s52.n1.r = 0.0;
//   ubrfafiba.p1.r + s27.n1.r = 0.0;
//   ubrfafiba.aF1.r + sF18.n1.r = 0.0;
//   ubrfafiba.iF1.r + sF19.n1.r = 0.0;
//   s29.n1.r + ubrfafibabi.p1.r = 0.0;
//   s53.n1.r + ubrfafibabi.p2.r = 0.0;
//   ubrfafibabi.s1.r + s28.n1.r = 0.0;
//   ubrfafibabi.aF1.r + sF21.n1.r = 0.0;
//   ubrfafibabi.iF1.r + sF22.n1.r = 0.0;
//   ubrfafibabi.aB1.r + sF23.n1.r = 0.0;
//   ubrfafibabi.iB1.r + sF24.n1.r = 0.0;
//   s.n1.V = ubi.s1.V;
//   s.n1.c = ubi.s1.c;
//   s1.n1.V = ubi.p1.V;
//   s1.n1.c = ubi.p1.c;
//   s40.n1.V = ubi.p2.V;
//   s40.n1.c = ubi.p2.c;
//   s41.n1.V = ubifa.p2.V;
//   s41.n1.c = ubifa.p2.c;
//   s2.n1.V = ubifa.s1.V;
//   s2.n1.c = ubifa.s1.c;
//   s3.n1.V = ubifa.p1.V;
//   s3.n1.c = ubifa.p1.c;
//   sF.n1.V = ubifa.aF1.V;
//   sF.n1.c = ubifa.aF1.c;
//   s4.n1.V = ubifafi.s1.V;
//   s4.n1.c = ubifafi.s1.c;
//   s42.n1.V = ubifafi.p2.V;
//   s42.n1.c = ubifafi.p2.c;
//   s5.n1.V = ubifafi.p1.V;
//   s5.n1.c = ubifafi.p1.c;
//   sF2.n1.V = ubifafi.iF1.V;
//   sF2.n1.c = ubifafi.iF1.c;
//   sF1.n1.V = ubifafi.aF1.V;
//   sF1.n1.c = ubifafi.aF1.c;
//   s6.n1.V = ubifi.s1.V;
//   s6.n1.c = ubifi.s1.c;
//   s43.n1.V = ubifi.p2.V;
//   s43.n1.c = ubifi.p2.c;
//   s7.n1.V = ubifi.p1.V;
//   s7.n1.c = ubifi.p1.c;
//   sF3.n1.V = ubifi.iF1.V;
//   sF3.n1.c = ubifi.iF1.c;
//   s8.n1.V = ubr.s1.V;
//   s8.n1.c = ubr.s1.c;
//   s59.n1.V = ubr.p2.V;
//   s59.n1.c = ubr.p2.c;
//   s9.n1.V = ubr.p1.V;
//   s9.n1.c = ubr.p1.c;
//   s10.n1.V = ubrba.s1.V;
//   s10.n1.c = ubrba.s1.c;
//   s44.n1.V = ubrba.p2.V;
//   s44.n1.c = ubrba.p2.c;
//   s11.n1.V = ubrba.p1.V;
//   s11.n1.c = ubrba.p1.c;
//   sF4.n1.V = ubrba.aB1.V;
//   sF4.n1.c = ubrba.aB1.c;
//   s45.n1.V = ubrfababi.p2.V;
//   s45.n1.c = ubrfababi.p2.c;
//   s20.n1.V = ubrfababi.s1.V;
//   s20.n1.c = ubrfababi.s1.c;
//   s21.n1.V = ubrfababi.p1.V;
//   s21.n1.c = ubrfababi.p1.c;
//   sF13.n1.V = ubrfababi.iB1.V;
//   sF13.n1.c = ubrfababi.iB1.c;
//   sF12.n1.V = ubrfababi.aB1.V;
//   sF12.n1.c = ubrfababi.aB1.c;
//   sF11.n1.V = ubrfababi.aF1.V;
//   sF11.n1.c = ubrfababi.aF1.c;
//   s19.n1.V = ubrfaba.p1.V;
//   s19.n1.c = ubrfaba.p1.c;
//   s46.n1.V = ubrfaba.p2.V;
//   s46.n1.c = ubrfaba.p2.c;
//   s18.n1.V = ubrfaba.s1.V;
//   s18.n1.c = ubrfaba.s1.c;
//   sF10.n1.V = ubrfaba.aB1.V;
//   sF10.n1.c = ubrfaba.aB1.c;
//   sF9.n1.V = ubrfaba.aF1.V;
//   sF9.n1.c = ubrfaba.aF1.c;
//   s17.n1.V = ubrfa.p1.V;
//   s17.n1.c = ubrfa.p1.c;
//   s16.n1.V = ubrfa.s1.V;
//   s16.n1.c = ubrfa.s1.c;
//   s47.n1.V = ubrfa.p2.V;
//   s47.n1.c = ubrfa.p2.c;
//   sF8.n1.V = ubrfa.aF1.V;
//   sF8.n1.c = ubrfa.aF1.c;
//   s48.n1.V = ubrbi.p2.V;
//   s48.n1.c = ubrbi.p2.c;
//   s14.n1.V = ubrbi.s1.V;
//   s14.n1.c = ubrbi.s1.c;
//   s15.n1.V = ubrbi.p1.V;
//   s15.n1.c = ubrbi.p1.c;
//   sF7.n1.V = ubrbi.iB1.V;
//   sF7.n1.c = ubrbi.iB1.c;
//   s13.n1.V = ubrbabi.p1.V;
//   s13.n1.c = ubrbabi.p1.c;
//   s49.n1.V = ubrbabi.p2.V;
//   s49.n1.c = ubrbabi.p2.c;
//   s12.n1.V = ubrbabi.s1.V;
//   s12.n1.c = ubrbabi.s1.c;
//   sF6.n1.V = ubrbabi.iB1.V;
//   sF6.n1.c = ubrbabi.iB1.c;
//   sF5.n1.V = ubrbabi.aB1.V;
//   sF5.n1.c = ubrbabi.aB1.c;
//   s55.n1.V = ubrfi.p2.V;
//   s55.n1.c = ubrfi.p2.c;
//   s24.n1.V = ubrfafi.s1.V;
//   s24.n1.c = ubrfafi.s1.c;
//   s51.n1.V = ubrfafi.p2.V;
//   s51.n1.c = ubrfafi.p2.c;
//   sF14.n1.V = ubrfabi.aF1.V;
//   sF14.n1.c = ubrfabi.aF1.c;
//   s25.n1.V = ubrfafi.p1.V;
//   s25.n1.c = ubrfafi.p1.c;
//   sF25.n1.V = ubrfafibi.aF1.V;
//   sF25.n1.c = ubrfafibi.aF1.c;
//   sF28.n1.V = ubrfi.iF1.V;
//   sF28.n1.c = ubrfi.iF1.c;
//   s22.n1.V = ubrfabi.s1.V;
//   s22.n1.c = ubrfabi.s1.c;
//   s30.n1.V = ubrfafibi.s1.V;
//   s30.n1.c = ubrfafibi.s1.c;
//   sF15.n1.V = ubrfabi.iB1.V;
//   sF15.n1.c = ubrfabi.iB1.c;
//   sF26.n1.V = ubrfafibi.iF1.V;
//   sF26.n1.c = ubrfafibi.iF1.c;
//   s33.n1.V = ubrfi.p1.V;
//   s33.n1.c = ubrfi.p1.c;
//   sF17.n1.V = ubrfafi.iF1.V;
//   sF17.n1.c = ubrfafi.iF1.c;
//   sF27.n1.V = ubrfafibi.iB1.V;
//   sF27.n1.c = ubrfafibi.iB1.c;
//   s54.n1.V = ubrfafibi.p2.V;
//   s54.n1.c = ubrfafibi.p2.c;
//   s23.n1.V = ubrfabi.p1.V;
//   s23.n1.c = ubrfabi.p1.c;
//   s31.n1.V = ubrfafibi.p1.V;
//   s31.n1.c = ubrfafibi.p1.c;
//   s32.n1.V = ubrfi.s1.V;
//   s32.n1.c = ubrfi.s1.c;
//   s50.n1.V = ubrfabi.p2.V;
//   s50.n1.c = ubrfabi.p2.c;
//   sF16.n1.V = ubrfafi.aF1.V;
//   sF16.n1.c = ubrfafi.aF1.c;
//   sF29.n1.V = ubrfiba.iF1.V;
//   sF29.n1.c = ubrfiba.iF1.c;
//   s37.n1.V = ubrfibabi.p1.V;
//   s37.n1.c = ubrfibabi.p1.c;
//   s38.n1.V = ubrfibi.s1.V;
//   s38.n1.c = ubrfibi.s1.c;
//   s56.n1.V = ubrfiba.p2.V;
//   s56.n1.c = ubrfiba.p2.c;
//   s35.n1.V = ubrfiba.p1.V;
//   s35.n1.c = ubrfiba.p1.c;
//   s58.n1.V = ubrfibi.p2.V;
//   s58.n1.c = ubrfibi.p2.c;
//   s36.n1.V = ubrfibabi.s1.V;
//   s36.n1.c = ubrfibabi.s1.c;
//   sF31.n1.V = ubrfibabi.iF1.V;
//   sF31.n1.c = ubrfibabi.iF1.c;
//   sF35.n1.V = ubrfibi.iB1.V;
//   sF35.n1.c = ubrfibi.iB1.c;
//   s57.n1.V = ubrfibabi.p2.V;
//   s57.n1.c = ubrfibabi.p2.c;
//   sF34.n1.V = ubrfibi.iF1.V;
//   sF34.n1.c = ubrfibi.iF1.c;
//   sF30.n1.V = ubrfiba.aB1.V;
//   sF30.n1.c = ubrfiba.aB1.c;
//   s39.n1.V = ubrfibi.p1.V;
//   s39.n1.c = ubrfibi.p1.c;
//   s34.n1.V = ubrfiba.s1.V;
//   s34.n1.c = ubrfiba.s1.c;
//   sF33.n1.V = ubrfibabi.iB1.V;
//   sF33.n1.c = ubrfibabi.iB1.c;
//   sF32.n1.V = ubrfibabi.aB1.V;
//   sF32.n1.c = ubrfibabi.aB1.c;
//   sF19.n1.V = ubrfafiba.iF1.V;
//   sF19.n1.c = ubrfafiba.iF1.c;
//   s26.n1.V = ubrfafiba.s1.V;
//   s26.n1.c = ubrfafiba.s1.c;
//   sF18.n1.V = ubrfafiba.aF1.V;
//   sF18.n1.c = ubrfafiba.aF1.c;
//   s52.n1.V = ubrfafiba.p2.V;
//   s52.n1.c = ubrfafiba.p2.c;
//   sF20.n1.V = ubrfafiba.aB1.V;
//   sF20.n1.c = ubrfafiba.aB1.c;
//   s27.n1.V = ubrfafiba.p1.V;
//   s27.n1.c = ubrfafiba.p1.c;
//   s29.n1.V = ubrfafibabi.p1.V;
//   s29.n1.c = ubrfafibabi.p1.c;
//   s53.n1.V = ubrfafibabi.p2.V;
//   s53.n1.c = ubrfafibabi.p2.c;
//   s28.n1.V = ubrfafibabi.s1.V;
//   s28.n1.c = ubrfafibabi.s1.c;
//   sF21.n1.V = ubrfafibabi.aF1.V;
//   sF21.n1.c = ubrfafibabi.aF1.c;
//   sF23.n1.V = ubrfafibabi.aB1.V;
//   sF23.n1.c = ubrfafibabi.aB1.c;
//   sF24.n1.V = ubrfafibabi.iB1.V;
//   sF24.n1.c = ubrfafibabi.iB1.c;
//   sF22.n1.V = ubrfafibabi.iF1.V;
//   sF22.n1.c = ubrfafibabi.iF1.c;
// end BioChem.Examples.MassAction.UniBi;
// "
// ""
// endResult
