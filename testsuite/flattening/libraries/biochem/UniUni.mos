//name:         UniUni
//keyword:      instantiating msl221
//status:       correct
// cflags: -d=-newInst
//
// instantiate example
//

loadModel(BioChem);
instantiateModel(BioChem.Examples.MassAction.UniUni);
getErrorString();
// Result:
// true
// "class BioChem.Examples.MassAction.UniUni \"Example of uni-uni reactions\"
//   Real V(quantity = \"Volume\", unit = \"l\", start = 1.0, stateSelect = StateSelect.prefer) \"Compartment volume\";
//   Real sF21.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF21.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF21.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF21.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF21.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF21.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfafi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real uurfafi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfafi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfafi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfafi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfafi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfafi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfafi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real uurfafi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real uurfafi.aF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfafi.aF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfafi.aF1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfafi.iF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfafi.iF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfafi.iF1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real uurfafi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real uurfafi.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real s28.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s28.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s28.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s28.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s28.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s28.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real uuifa.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real uuifa.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uuifa.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uuifa.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real uuifa.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uuifa.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uuifa.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real uuifa.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real uuifa.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real uuifa.aF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uuifa.aF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uuifa.aF1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real uuifa.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   Real s38.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s38.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s38.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s38.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s38.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s38.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s6.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s6.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s6.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s6.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s6.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s6.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF6.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF6.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF6.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF6.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF6.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF6.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF24.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF24.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF24.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF24.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF24.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF24.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfafibi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real uurfafibi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfafibi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfafibi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfafibi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfafibi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfafibi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfafibi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real uurfafibi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real uurfafibi.aF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfafibi.aF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfafibi.aF1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfafibi.iF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfafibi.iF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfafibi.iF1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfafibi.iB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfafibi.iB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfafibi.iB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real uurfafibi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real uurfafibi.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real uur.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real uur.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uur.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uur.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real uur.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uur.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uur.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real uur.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real uur.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real uur.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real uur.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real s20.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s20.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s20.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s20.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s20.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s20.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF3.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF3.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF3.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF3.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF3.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF3.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF30.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF30.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF30.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF30.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF30.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF30.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF27.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF27.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF27.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF27.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF27.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF27.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfibabi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real uurfibabi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfibabi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfibabi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfibabi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfibabi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfibabi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfibabi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real uurfibabi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real uurfibabi.iF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfibabi.iF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfibabi.iF1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfibabi.aB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfibabi.aB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfibabi.aB1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfibabi.iB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfibabi.iB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfibabi.iB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real uurfibabi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real uurfibabi.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real uurbi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real uurbi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurbi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurbi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurbi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurbi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurbi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurbi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real uurbi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real uurbi.iB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurbi.iB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurbi.iB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real uurbi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real uurbi.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real s12.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s12.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s12.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s12.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s12.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s12.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF8.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF8.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF8.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF8.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF8.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF8.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF16.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF16.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF16.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF16.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF16.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF16.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF33.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF33.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF33.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF33.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF33.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF33.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF19.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF19.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF19.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF19.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF19.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF19.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfababi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real uurfababi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfababi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfababi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfababi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfababi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfababi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfababi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real uurfababi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real uurfababi.aF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfababi.aF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfababi.aF1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfababi.aB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfababi.aB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfababi.aB1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfababi.iB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfababi.iB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfababi.iB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real uurfababi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real uurfababi.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real s26.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s26.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s26.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s26.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s26.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s26.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF15.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF15.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF15.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF15.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF15.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF15.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s4.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s4.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s4.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s4.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s4.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s4.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF22.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF22.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF22.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF22.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF22.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF22.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfafiba.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real uurfafiba.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfafiba.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfafiba.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfafiba.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfafiba.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfafiba.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfafiba.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real uurfafiba.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real uurfafiba.aF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfafiba.aF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfafiba.aF1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfafiba.iF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfafiba.iF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfafiba.iF1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfafiba.aB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfafiba.aB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfafiba.aB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real uurfafiba.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real uurfafiba.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real sF7.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF7.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF7.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF7.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF7.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF7.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real uuifafi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real uuifafi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uuifafi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uuifafi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real uuifafi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uuifafi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uuifafi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real uuifafi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real uuifafi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real uuifafi.aF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uuifafi.aF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uuifafi.aF1.V(quantity = \"Volume\", unit = \"l\");
//   Real uuifafi.iF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uuifafi.iF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uuifafi.iF1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real uuifafi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   Real s18.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s18.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s18.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s18.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s18.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s18.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF5.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF5.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF5.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF5.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF5.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF5.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s32.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s32.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s32.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s32.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s32.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s32.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF25.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF25.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF25.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF25.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF25.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF25.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s34.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s34.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s34.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s34.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s34.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s34.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real uurfi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real uurfi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real uurfi.iF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfi.iF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfi.iF1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real uurfi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real uurfi.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real uurba.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real uurba.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurba.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurba.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurba.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurba.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurba.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurba.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real uurba.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real uurba.aB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurba.aB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurba.aB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real uurba.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real uurba.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real s10.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s10.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s10.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s10.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s10.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s10.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF31.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF31.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF31.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF31.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF31.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF31.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF28.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF28.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF28.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF28.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF28.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF28.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfibi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real uurfibi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfibi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfibi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfibi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfibi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfibi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfibi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real uurfibi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real uurfibi.iF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfibi.iF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfibi.iF1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfibi.iB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfibi.iB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfibi.iB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real uurfibi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real uurfibi.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real sF17.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF17.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF17.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF17.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF17.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF17.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfa.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real uurfa.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfa.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfa.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfa.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfa.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfa.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfa.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real uurfa.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real uurfa.aF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfa.aF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfa.aF1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real uurfa.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real uurfa.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real sF10.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF10.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF10.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF10.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF10.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF10.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s24.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s24.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s24.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s24.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s24.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s24.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF34.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF34.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF34.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF34.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF34.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF34.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s36.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s36.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s36.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s36.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s36.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s36.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF14.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF14.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF14.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF14.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF14.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF14.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s2.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s2.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s2.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s2.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s2.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF20.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF20.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF20.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF20.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF20.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF20.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfabi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real uurfabi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfabi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfabi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfabi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfabi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfabi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfabi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real uurfabi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real uurfabi.aF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfabi.aF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfabi.aF1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfabi.iB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfabi.iB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfabi.iB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real uurfabi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real uurfabi.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real sF13.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF13.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF13.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF13.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF13.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF13.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s16.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s16.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s16.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s16.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s16.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s16.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s30.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s30.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s30.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s30.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s30.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s30.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF12.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF12.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF12.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF12.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF12.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF12.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF23.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF23.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF23.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF23.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF23.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF23.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfafibabi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real uurfafibabi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfafibabi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfafibabi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfafibabi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfafibabi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfafibabi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfafibabi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real uurfafibabi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real uurfafibabi.aF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfafibabi.aF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfafibabi.aF1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfafibabi.iF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfafibabi.iF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfafibabi.iF1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfafibabi.aB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfafibabi.aB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfafibabi.aB1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfafibabi.iB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfafibabi.iB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfafibabi.iB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real uurfafibabi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real uurfafibabi.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real uuifi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real uuifi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uuifi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uuifi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real uuifi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uuifi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uuifi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real uuifi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real uuifi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real uuifi.iF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uuifi.iF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uuifi.iF1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real uuifi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   Real sF9.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF9.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF9.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF9.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF9.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF9.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s8.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s8.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s8.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s8.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s8.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s8.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF29.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF29.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF29.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF29.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF29.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF29.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF26.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF26.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF26.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF26.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF26.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF26.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF4.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF4.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF4.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF4.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF4.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF4.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfiba.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real uurfiba.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfiba.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfiba.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfiba.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfiba.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfiba.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfiba.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real uurfiba.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real uurfiba.iF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfiba.iF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfiba.iF1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfiba.aB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfiba.aB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfiba.aB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real uurfiba.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real uurfiba.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real uurbabi.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real uurbabi.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurbabi.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurbabi.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurbabi.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurbabi.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurbabi.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurbabi.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real uurbabi.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real uurbabi.aB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurbabi.aB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurbabi.aB1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurbabi.iB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurbabi.iB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurbabi.iB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real uurbabi.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real uurbabi.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real s22.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s22.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s22.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s22.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s22.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s22.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF11.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF11.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF11.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF11.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF11.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF11.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF32.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF32.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF32.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF32.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF32.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF32.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF18.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF18.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF18.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF18.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF18.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF18.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfaba.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real uurfaba.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfaba.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfaba.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfaba.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfaba.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfaba.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfaba.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real uurfaba.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   Real uurfaba.aF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfaba.aF1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfaba.aF1.V(quantity = \"Volume\", unit = \"l\");
//   Real uurfaba.aB1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uurfaba.aB1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uurfaba.aB1.V(quantity = \"Volume\", unit = \"l\");
//   parameter Real uurfaba.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   parameter Real uurfaba.k2(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Backwards reaction coefficient for the reaction\";
//   Real s14.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s14.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s14.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s14.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s14.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s14.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF35.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF35.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF35.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF35.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF35.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF35.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF1.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF1.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF1.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF1.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF1.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s3.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 2.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s3.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s3.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s3.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s3.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s3.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s5.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 2.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s5.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s5.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s5.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s5.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s5.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s7.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 2.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s7.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s7.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s7.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s7.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s7.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s9.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 2.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s9.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s9.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s9.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s9.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s9.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s11.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 2.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s11.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s11.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s11.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s11.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s11.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s13.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 2.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s13.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s13.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s13.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s13.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s13.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s15.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 2.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s15.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s15.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s15.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s15.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s15.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s17.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 2.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s17.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s17.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s17.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s17.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s17.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s19.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 2.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s19.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s19.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s19.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s19.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s19.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s21.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 2.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s21.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s21.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s21.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s21.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s21.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s23.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 2.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s23.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s23.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s23.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s23.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s23.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s25.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 2.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s25.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s25.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s25.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s25.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s25.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s27.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 2.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s27.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s27.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s27.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s27.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s27.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s29.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 2.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s29.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s29.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s29.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s29.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s29.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s39.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 2.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s39.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s39.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s39.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s39.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s39.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s37.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 2.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s37.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s37.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s37.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s37.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s37.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s33.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 2.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s33.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s33.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s33.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s33.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s33.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s31.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 2.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s31.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s31.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s31.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s31.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s31.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real uui.rr(quantity = \"Reaction rate\", unit = \"mol/s\") \"Rate of the reaction\";
//   Real uui.s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uui.s1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uui.s1.V(quantity = \"Volume\", unit = \"l\");
//   Real uui.p1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real uui.p1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real uui.p1.V(quantity = \"Volume\", unit = \"l\");
//   Real uui.nS1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the substrate\";
//   Real uui.nP1(quantity = \"Stoichiometric coefficient\", unit = \"1\") = 1.0 \"Stoichiometric coefficient for the product\";
//   parameter Real uui.k1(quantity = \"Reaction coefficient\", unit = \"1\") = 1.0 \"Forwards reaction coefficient for the reaction\";
//   Real sF2.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF2.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF2.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF2.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF2.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF2.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 2.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s1.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s1.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s1.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s1.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s1.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real sF.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 1.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real sF.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real sF.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real sF.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real sF.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real sF.n1.V(quantity = \"Volume\", unit = \"l\");
//   Real s35.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0, start = 2.0, stateSelect = StateSelect.prefer) \"Current concentration of substance (mM)\";
//   Real s35.rNet(quantity = \"Molar flow rate\", unit = \"mol/s\") \"Net flow rate of substance into the node\";
//   Real s35.n(quantity = \"AmountOfSubstance\", unit = \"mol\", min = 0.0, stateSelect = StateSelect.prefer) \"Number of moles of substance in pool (mol)\";
//   Real s35.n1.c(quantity = \"Concentration\", unit = \"mol/l\", min = 0.0);
//   Real s35.n1.r(quantity = \"Molar flow rate\", unit = \"mol/s\");
//   Real s35.n1.V(quantity = \"Volume\", unit = \"l\");
// equation
//   der(sF21.n) = 0.0;
//   sF21.rNet = sF21.n1.r;
//   sF21.c = sF21.n1.c;
//   V = sF21.n1.V;
//   sF21.c = sF21.n / V;
//   uurfafi.rr = uurfafi.k1 * uurfafi.aF1.c * uurfafi.s1.c ^ uurfafi.nS1 * uurfafi.s1.V / uurfafi.iF1.c - uurfafi.k2 * uurfafi.p1.c ^ uurfafi.nP1 * uurfafi.p1.V;
//   uurfafi.s1.r = uurfafi.nS1 * uurfafi.rr;
//   uurfafi.p1.r = (-uurfafi.nP1) * uurfafi.rr;
//   uurfafi.aF1.r = 0.0;
//   uurfafi.iF1.r = 0.0;
//   der(s28.n) = s28.rNet;
//   s28.rNet = s28.n1.r;
//   s28.c = s28.n1.c;
//   V = s28.n1.V;
//   s28.c = s28.n / V;
//   uuifa.rr = uuifa.k1 * uuifa.aF1.c * uuifa.s1.c ^ uuifa.nS1 * uuifa.s1.V;
//   uuifa.s1.r = uuifa.nS1 * uuifa.rr;
//   uuifa.p1.r = (-uuifa.nP1) * uuifa.rr;
//   uuifa.aF1.r = 0.0;
//   der(s38.n) = s38.rNet;
//   s38.rNet = s38.n1.r;
//   s38.c = s38.n1.c;
//   V = s38.n1.V;
//   s38.c = s38.n / V;
//   der(s6.n) = s6.rNet;
//   s6.rNet = s6.n1.r;
//   s6.c = s6.n1.c;
//   V = s6.n1.V;
//   s6.c = s6.n / V;
//   der(sF6.n) = 0.0;
//   sF6.rNet = sF6.n1.r;
//   sF6.c = sF6.n1.c;
//   V = sF6.n1.V;
//   sF6.c = sF6.n / V;
//   der(sF24.n) = 0.0;
//   sF24.rNet = sF24.n1.r;
//   sF24.c = sF24.n1.c;
//   V = sF24.n1.V;
//   sF24.c = sF24.n / V;
//   uurfafibi.rr = uurfafibi.k1 * uurfafibi.aF1.c * uurfafibi.s1.c ^ uurfafibi.nS1 * uurfafibi.s1.V / uurfafibi.iF1.c - uurfafibi.k2 * uurfafibi.p1.c ^ uurfafibi.nP1 * uurfafibi.p1.V / uurfafibi.iB1.c;
//   uurfafibi.s1.r = uurfafibi.nS1 * uurfafibi.rr;
//   uurfafibi.p1.r = (-uurfafibi.nP1) * uurfafibi.rr;
//   uurfafibi.aF1.r = 0.0;
//   uurfafibi.iF1.r = 0.0;
//   uurfafibi.iB1.r = 0.0;
//   uur.rr = uur.k1 * uur.s1.c ^ uur.nS1 * uur.s1.V - uur.k2 * uur.p1.c ^ uur.nP1 * uur.p1.V;
//   uur.s1.r = uur.nS1 * uur.rr;
//   uur.p1.r = (-uur.nP1) * uur.rr;
//   der(s20.n) = s20.rNet;
//   s20.rNet = s20.n1.r;
//   s20.c = s20.n1.c;
//   V = s20.n1.V;
//   s20.c = s20.n / V;
//   der(sF3.n) = 0.0;
//   sF3.rNet = sF3.n1.r;
//   sF3.c = sF3.n1.c;
//   V = sF3.n1.V;
//   sF3.c = sF3.n / V;
//   der(sF30.n) = 0.0;
//   sF30.rNet = sF30.n1.r;
//   sF30.c = sF30.n1.c;
//   V = sF30.n1.V;
//   sF30.c = sF30.n / V;
//   der(sF27.n) = 0.0;
//   sF27.rNet = sF27.n1.r;
//   sF27.c = sF27.n1.c;
//   V = sF27.n1.V;
//   sF27.c = sF27.n / V;
//   uurfibabi.rr = uurfibabi.k1 * uurfibabi.s1.c ^ uurfibabi.nS1 * uurfibabi.s1.V / uurfibabi.iF1.c - uurfibabi.k2 * uurfibabi.aB1.c * uurfibabi.p1.c ^ uurfibabi.nP1 * uurfibabi.p1.V / uurfibabi.iB1.c;
//   uurfibabi.s1.r = uurfibabi.nS1 * uurfibabi.rr;
//   uurfibabi.p1.r = (-uurfibabi.nP1) * uurfibabi.rr;
//   uurfibabi.iF1.r = 0.0;
//   uurfibabi.aB1.r = 0.0;
//   uurfibabi.iB1.r = 0.0;
//   uurbi.rr = uurbi.k1 * uurbi.s1.c ^ uurbi.nS1 * uurbi.s1.V - uurbi.k2 * uurbi.p1.c ^ uurbi.nP1 * uurbi.p1.V / uurbi.iB1.c;
//   uurbi.s1.r = uurbi.nS1 * uurbi.rr;
//   uurbi.p1.r = (-uurbi.nP1) * uurbi.rr;
//   uurbi.iB1.r = 0.0;
//   der(s12.n) = s12.rNet;
//   s12.rNet = s12.n1.r;
//   s12.c = s12.n1.c;
//   V = s12.n1.V;
//   s12.c = s12.n / V;
//   der(sF8.n) = 0.0;
//   sF8.rNet = sF8.n1.r;
//   sF8.c = sF8.n1.c;
//   V = sF8.n1.V;
//   sF8.c = sF8.n / V;
//   der(sF16.n) = 0.0;
//   sF16.rNet = sF16.n1.r;
//   sF16.c = sF16.n1.c;
//   V = sF16.n1.V;
//   sF16.c = sF16.n / V;
//   der(sF33.n) = 0.0;
//   sF33.rNet = sF33.n1.r;
//   sF33.c = sF33.n1.c;
//   V = sF33.n1.V;
//   sF33.c = sF33.n / V;
//   der(sF19.n) = 0.0;
//   sF19.rNet = sF19.n1.r;
//   sF19.c = sF19.n1.c;
//   V = sF19.n1.V;
//   sF19.c = sF19.n / V;
//   uurfababi.rr = uurfababi.k1 * uurfababi.aF1.c * uurfababi.s1.c ^ uurfababi.nS1 * uurfababi.s1.V - uurfababi.k2 * uurfababi.aB1.c * uurfababi.p1.c ^ uurfababi.nP1 * uurfababi.p1.V / uurfababi.iB1.c;
//   uurfababi.s1.r = uurfababi.nS1 * uurfababi.rr;
//   uurfababi.p1.r = (-uurfababi.nP1) * uurfababi.rr;
//   uurfababi.aF1.r = 0.0;
//   uurfababi.aB1.r = 0.0;
//   uurfababi.iB1.r = 0.0;
//   der(s26.n) = s26.rNet;
//   s26.rNet = s26.n1.r;
//   s26.c = s26.n1.c;
//   V = s26.n1.V;
//   s26.c = s26.n / V;
//   der(sF15.n) = 0.0;
//   sF15.rNet = sF15.n1.r;
//   sF15.c = sF15.n1.c;
//   V = sF15.n1.V;
//   sF15.c = sF15.n / V;
//   der(s4.n) = s4.rNet;
//   s4.rNet = s4.n1.r;
//   s4.c = s4.n1.c;
//   V = s4.n1.V;
//   s4.c = s4.n / V;
//   der(sF22.n) = 0.0;
//   sF22.rNet = sF22.n1.r;
//   sF22.c = sF22.n1.c;
//   V = sF22.n1.V;
//   sF22.c = sF22.n / V;
//   uurfafiba.rr = uurfafiba.k1 * uurfafiba.aF1.c * uurfafiba.s1.c ^ uurfafiba.nS1 * uurfafiba.s1.V / uurfafiba.iF1.c - uurfafiba.k2 * uurfafiba.aB1.c * uurfafiba.p1.c ^ uurfafiba.nP1 * uurfafiba.p1.V;
//   uurfafiba.s1.r = uurfafiba.nS1 * uurfafiba.rr;
//   uurfafiba.p1.r = (-uurfafiba.nP1) * uurfafiba.rr;
//   uurfafiba.aF1.r = 0.0;
//   uurfafiba.iF1.r = 0.0;
//   uurfafiba.aB1.r = 0.0;
//   der(sF7.n) = 0.0;
//   sF7.rNet = sF7.n1.r;
//   sF7.c = sF7.n1.c;
//   V = sF7.n1.V;
//   sF7.c = sF7.n / V;
//   uuifafi.rr = uuifafi.k1 * uuifafi.aF1.c * uuifafi.s1.c ^ uuifafi.nS1 * uuifafi.s1.V / uuifafi.iF1.c;
//   uuifafi.s1.r = uuifafi.nS1 * uuifafi.rr;
//   uuifafi.p1.r = (-uuifafi.nP1) * uuifafi.rr;
//   uuifafi.aF1.r = 0.0;
//   uuifafi.iF1.r = 0.0;
//   der(s18.n) = s18.rNet;
//   s18.rNet = s18.n1.r;
//   s18.c = s18.n1.c;
//   V = s18.n1.V;
//   s18.c = s18.n / V;
//   der(sF5.n) = 0.0;
//   sF5.rNet = sF5.n1.r;
//   sF5.c = sF5.n1.c;
//   V = sF5.n1.V;
//   sF5.c = sF5.n / V;
//   der(s32.n) = s32.rNet;
//   s32.rNet = s32.n1.r;
//   s32.c = s32.n1.c;
//   V = s32.n1.V;
//   s32.c = s32.n / V;
//   der(sF25.n) = 0.0;
//   sF25.rNet = sF25.n1.r;
//   sF25.c = sF25.n1.c;
//   V = sF25.n1.V;
//   sF25.c = sF25.n / V;
//   der(s34.n) = s34.rNet;
//   s34.rNet = s34.n1.r;
//   s34.c = s34.n1.c;
//   V = s34.n1.V;
//   s34.c = s34.n / V;
//   uurfi.rr = uurfi.k1 * uurfi.s1.c ^ uurfi.nS1 * uurfi.s1.V / uurfi.iF1.c - uurfi.k2 * uurfi.p1.c ^ uurfi.nP1 * uurfi.p1.V;
//   uurfi.s1.r = uurfi.nS1 * uurfi.rr;
//   uurfi.p1.r = (-uurfi.nP1) * uurfi.rr;
//   uurfi.iF1.r = 0.0;
//   uurba.rr = uurba.k1 * uurba.s1.c ^ uurba.nS1 * uurba.s1.V - uurba.k2 * uurba.aB1.c * uurba.p1.c ^ uurba.nP1 * uurba.p1.V;
//   uurba.s1.r = uurba.nS1 * uurba.rr;
//   uurba.p1.r = (-uurba.nP1) * uurba.rr;
//   uurba.aB1.r = 0.0;
//   der(s10.n) = s10.rNet;
//   s10.rNet = s10.n1.r;
//   s10.c = s10.n1.c;
//   V = s10.n1.V;
//   s10.c = s10.n / V;
//   der(sF31.n) = 0.0;
//   sF31.rNet = sF31.n1.r;
//   sF31.c = sF31.n1.c;
//   V = sF31.n1.V;
//   sF31.c = sF31.n / V;
//   der(sF28.n) = 0.0;
//   sF28.rNet = sF28.n1.r;
//   sF28.c = sF28.n1.c;
//   V = sF28.n1.V;
//   sF28.c = sF28.n / V;
//   uurfibi.rr = uurfibi.k1 * uurfibi.s1.c ^ uurfibi.nS1 * uurfibi.s1.V / uurfibi.iF1.c - uurfibi.k2 * uurfibi.p1.c ^ uurfibi.nP1 * uurfibi.p1.V / uurfibi.iB1.c;
//   uurfibi.s1.r = uurfibi.nS1 * uurfibi.rr;
//   uurfibi.p1.r = (-uurfibi.nP1) * uurfibi.rr;
//   uurfibi.iF1.r = 0.0;
//   uurfibi.iB1.r = 0.0;
//   der(sF17.n) = 0.0;
//   sF17.rNet = sF17.n1.r;
//   sF17.c = sF17.n1.c;
//   V = sF17.n1.V;
//   sF17.c = sF17.n / V;
//   uurfa.rr = uurfa.k1 * uurfa.aF1.c * uurfa.s1.c ^ uurfa.nS1 * uurfa.s1.V - uurfa.k2 * uurfa.p1.c ^ uurfa.nP1 * uurfa.p1.V;
//   uurfa.s1.r = uurfa.nS1 * uurfa.rr;
//   uurfa.p1.r = (-uurfa.nP1) * uurfa.rr;
//   uurfa.aF1.r = 0.0;
//   der(sF10.n) = 0.0;
//   sF10.rNet = sF10.n1.r;
//   sF10.c = sF10.n1.c;
//   V = sF10.n1.V;
//   sF10.c = sF10.n / V;
//   der(s24.n) = s24.rNet;
//   s24.rNet = s24.n1.r;
//   s24.c = s24.n1.c;
//   V = s24.n1.V;
//   s24.c = s24.n / V;
//   der(sF34.n) = 0.0;
//   sF34.rNet = sF34.n1.r;
//   sF34.c = sF34.n1.c;
//   V = sF34.n1.V;
//   sF34.c = sF34.n / V;
//   der(s36.n) = s36.rNet;
//   s36.rNet = s36.n1.r;
//   s36.c = s36.n1.c;
//   V = s36.n1.V;
//   s36.c = s36.n / V;
//   der(sF14.n) = 0.0;
//   sF14.rNet = sF14.n1.r;
//   sF14.c = sF14.n1.c;
//   V = sF14.n1.V;
//   sF14.c = sF14.n / V;
//   der(s2.n) = s2.rNet;
//   s2.rNet = s2.n1.r;
//   s2.c = s2.n1.c;
//   V = s2.n1.V;
//   s2.c = s2.n / V;
//   der(sF20.n) = 0.0;
//   sF20.rNet = sF20.n1.r;
//   sF20.c = sF20.n1.c;
//   V = sF20.n1.V;
//   sF20.c = sF20.n / V;
//   uurfabi.rr = uurfabi.k1 * uurfabi.aF1.c * uurfabi.s1.c ^ uurfabi.nS1 * uurfabi.s1.V - uurfabi.k2 * uurfabi.p1.c ^ uurfabi.nP1 * uurfabi.p1.V / uurfabi.iB1.c;
//   uurfabi.s1.r = uurfabi.nS1 * uurfabi.rr;
//   uurfabi.p1.r = (-uurfabi.nP1) * uurfabi.rr;
//   uurfabi.aF1.r = 0.0;
//   uurfabi.iB1.r = 0.0;
//   der(sF13.n) = 0.0;
//   sF13.rNet = sF13.n1.r;
//   sF13.c = sF13.n1.c;
//   V = sF13.n1.V;
//   sF13.c = sF13.n / V;
//   der(s16.n) = s16.rNet;
//   s16.rNet = s16.n1.r;
//   s16.c = s16.n1.c;
//   V = s16.n1.V;
//   s16.c = s16.n / V;
//   der(s30.n) = s30.rNet;
//   s30.rNet = s30.n1.r;
//   s30.c = s30.n1.c;
//   V = s30.n1.V;
//   s30.c = s30.n / V;
//   der(sF12.n) = 0.0;
//   sF12.rNet = sF12.n1.r;
//   sF12.c = sF12.n1.c;
//   V = sF12.n1.V;
//   sF12.c = sF12.n / V;
//   der(sF23.n) = 0.0;
//   sF23.rNet = sF23.n1.r;
//   sF23.c = sF23.n1.c;
//   V = sF23.n1.V;
//   sF23.c = sF23.n / V;
//   uurfafibabi.rr = uurfafibabi.k1 * uurfafibabi.aF1.c * uurfafibabi.s1.c ^ uurfafibabi.nS1 * uurfafibabi.s1.V / uurfafibabi.iF1.c - uurfafibabi.k2 * uurfafibabi.aB1.c * uurfafibabi.p1.c ^ uurfafibabi.nP1 * uurfafibabi.p1.V / uurfafibabi.iB1.c;
//   uurfafibabi.s1.r = uurfafibabi.nS1 * uurfafibabi.rr;
//   uurfafibabi.p1.r = (-uurfafibabi.nP1) * uurfafibabi.rr;
//   uurfafibabi.aF1.r = 0.0;
//   uurfafibabi.iF1.r = 0.0;
//   uurfafibabi.aB1.r = 0.0;
//   uurfafibabi.iB1.r = 0.0;
//   uuifi.rr = uuifi.k1 * uuifi.s1.c ^ uuifi.nS1 * uuifi.s1.V / uuifi.iF1.c;
//   uuifi.s1.r = uuifi.nS1 * uuifi.rr;
//   uuifi.p1.r = (-uuifi.nP1) * uuifi.rr;
//   uuifi.iF1.r = 0.0;
//   der(sF9.n) = 0.0;
//   sF9.rNet = sF9.n1.r;
//   sF9.c = sF9.n1.c;
//   V = sF9.n1.V;
//   sF9.c = sF9.n / V;
//   der(s8.n) = s8.rNet;
//   s8.rNet = s8.n1.r;
//   s8.c = s8.n1.c;
//   V = s8.n1.V;
//   s8.c = s8.n / V;
//   der(sF29.n) = 0.0;
//   sF29.rNet = sF29.n1.r;
//   sF29.c = sF29.n1.c;
//   V = sF29.n1.V;
//   sF29.c = sF29.n / V;
//   der(sF26.n) = 0.0;
//   sF26.rNet = sF26.n1.r;
//   sF26.c = sF26.n1.c;
//   V = sF26.n1.V;
//   sF26.c = sF26.n / V;
//   der(sF4.n) = 0.0;
//   sF4.rNet = sF4.n1.r;
//   sF4.c = sF4.n1.c;
//   V = sF4.n1.V;
//   sF4.c = sF4.n / V;
//   uurfiba.rr = uurfiba.k1 * uurfiba.s1.c ^ uurfiba.nS1 * uurfiba.s1.V / uurfiba.iF1.c - uurfiba.k2 * uurfiba.aB1.c * uurfiba.p1.c ^ uurfiba.nP1 * uurfiba.p1.V;
//   uurfiba.s1.r = uurfiba.nS1 * uurfiba.rr;
//   uurfiba.p1.r = (-uurfiba.nP1) * uurfiba.rr;
//   uurfiba.iF1.r = 0.0;
//   uurfiba.aB1.r = 0.0;
//   uurbabi.rr = uurbabi.k1 * uurbabi.s1.c ^ uurbabi.nS1 * uurbabi.s1.V - uurbabi.k2 * uurbabi.aB1.c * uurbabi.p1.c ^ uurbabi.nP1 * uurbabi.p1.V / uurbabi.iB1.c;
//   uurbabi.s1.r = uurbabi.nS1 * uurbabi.rr;
//   uurbabi.p1.r = (-uurbabi.nP1) * uurbabi.rr;
//   uurbabi.aB1.r = 0.0;
//   uurbabi.iB1.r = 0.0;
//   der(s22.n) = s22.rNet;
//   s22.rNet = s22.n1.r;
//   s22.c = s22.n1.c;
//   V = s22.n1.V;
//   s22.c = s22.n / V;
//   der(sF11.n) = 0.0;
//   sF11.rNet = sF11.n1.r;
//   sF11.c = sF11.n1.c;
//   V = sF11.n1.V;
//   sF11.c = sF11.n / V;
//   der(sF32.n) = 0.0;
//   sF32.rNet = sF32.n1.r;
//   sF32.c = sF32.n1.c;
//   V = sF32.n1.V;
//   sF32.c = sF32.n / V;
//   der(sF18.n) = 0.0;
//   sF18.rNet = sF18.n1.r;
//   sF18.c = sF18.n1.c;
//   V = sF18.n1.V;
//   sF18.c = sF18.n / V;
//   uurfaba.rr = uurfaba.k1 * uurfaba.aF1.c * uurfaba.s1.c ^ uurfaba.nS1 * uurfaba.s1.V - uurfaba.k2 * uurfaba.aB1.c * uurfaba.p1.c ^ uurfaba.nP1 * uurfaba.p1.V;
//   uurfaba.s1.r = uurfaba.nS1 * uurfaba.rr;
//   uurfaba.p1.r = (-uurfaba.nP1) * uurfaba.rr;
//   uurfaba.aF1.r = 0.0;
//   uurfaba.aB1.r = 0.0;
//   der(s14.n) = s14.rNet;
//   s14.rNet = s14.n1.r;
//   s14.c = s14.n1.c;
//   V = s14.n1.V;
//   s14.c = s14.n / V;
//   der(sF35.n) = 0.0;
//   sF35.rNet = sF35.n1.r;
//   sF35.c = sF35.n1.c;
//   V = sF35.n1.V;
//   sF35.c = sF35.n / V;
//   der(sF1.n) = 0.0;
//   sF1.rNet = sF1.n1.r;
//   sF1.c = sF1.n1.c;
//   V = sF1.n1.V;
//   sF1.c = sF1.n / V;
//   der(s.n) = s.rNet;
//   s.rNet = s.n1.r;
//   s.c = s.n1.c;
//   V = s.n1.V;
//   s.c = s.n / V;
//   der(s3.n) = s3.rNet;
//   s3.rNet = s3.n1.r;
//   s3.c = s3.n1.c;
//   V = s3.n1.V;
//   s3.c = s3.n / V;
//   der(s5.n) = s5.rNet;
//   s5.rNet = s5.n1.r;
//   s5.c = s5.n1.c;
//   V = s5.n1.V;
//   s5.c = s5.n / V;
//   der(s7.n) = s7.rNet;
//   s7.rNet = s7.n1.r;
//   s7.c = s7.n1.c;
//   V = s7.n1.V;
//   s7.c = s7.n / V;
//   der(s9.n) = s9.rNet;
//   s9.rNet = s9.n1.r;
//   s9.c = s9.n1.c;
//   V = s9.n1.V;
//   s9.c = s9.n / V;
//   der(s11.n) = s11.rNet;
//   s11.rNet = s11.n1.r;
//   s11.c = s11.n1.c;
//   V = s11.n1.V;
//   s11.c = s11.n / V;
//   der(s13.n) = s13.rNet;
//   s13.rNet = s13.n1.r;
//   s13.c = s13.n1.c;
//   V = s13.n1.V;
//   s13.c = s13.n / V;
//   der(s15.n) = s15.rNet;
//   s15.rNet = s15.n1.r;
//   s15.c = s15.n1.c;
//   V = s15.n1.V;
//   s15.c = s15.n / V;
//   der(s17.n) = s17.rNet;
//   s17.rNet = s17.n1.r;
//   s17.c = s17.n1.c;
//   V = s17.n1.V;
//   s17.c = s17.n / V;
//   der(s19.n) = s19.rNet;
//   s19.rNet = s19.n1.r;
//   s19.c = s19.n1.c;
//   V = s19.n1.V;
//   s19.c = s19.n / V;
//   der(s21.n) = s21.rNet;
//   s21.rNet = s21.n1.r;
//   s21.c = s21.n1.c;
//   V = s21.n1.V;
//   s21.c = s21.n / V;
//   der(s23.n) = s23.rNet;
//   s23.rNet = s23.n1.r;
//   s23.c = s23.n1.c;
//   V = s23.n1.V;
//   s23.c = s23.n / V;
//   der(s25.n) = s25.rNet;
//   s25.rNet = s25.n1.r;
//   s25.c = s25.n1.c;
//   V = s25.n1.V;
//   s25.c = s25.n / V;
//   der(s27.n) = s27.rNet;
//   s27.rNet = s27.n1.r;
//   s27.c = s27.n1.c;
//   V = s27.n1.V;
//   s27.c = s27.n / V;
//   der(s29.n) = s29.rNet;
//   s29.rNet = s29.n1.r;
//   s29.c = s29.n1.c;
//   V = s29.n1.V;
//   s29.c = s29.n / V;
//   der(s39.n) = s39.rNet;
//   s39.rNet = s39.n1.r;
//   s39.c = s39.n1.c;
//   V = s39.n1.V;
//   s39.c = s39.n / V;
//   der(s37.n) = s37.rNet;
//   s37.rNet = s37.n1.r;
//   s37.c = s37.n1.c;
//   V = s37.n1.V;
//   s37.c = s37.n / V;
//   der(s33.n) = s33.rNet;
//   s33.rNet = s33.n1.r;
//   s33.c = s33.n1.c;
//   V = s33.n1.V;
//   s33.c = s33.n / V;
//   der(s31.n) = s31.rNet;
//   s31.rNet = s31.n1.r;
//   s31.c = s31.n1.c;
//   V = s31.n1.V;
//   s31.c = s31.n / V;
//   uui.rr = uui.k1 * uui.s1.c ^ uui.nS1 * uui.s1.V;
//   uui.s1.r = uui.nS1 * uui.rr;
//   uui.p1.r = (-uui.nP1) * uui.rr;
//   der(sF2.n) = 0.0;
//   sF2.rNet = sF2.n1.r;
//   sF2.c = sF2.n1.c;
//   V = sF2.n1.V;
//   sF2.c = sF2.n / V;
//   der(s1.n) = s1.rNet;
//   s1.rNet = s1.n1.r;
//   s1.c = s1.n1.c;
//   V = s1.n1.V;
//   s1.c = s1.n / V;
//   der(sF.n) = 0.0;
//   sF.rNet = sF.n1.r;
//   sF.c = sF.n1.c;
//   V = sF.n1.V;
//   sF.c = sF.n / V;
//   der(s35.n) = s35.rNet;
//   s35.rNet = s35.n1.r;
//   s35.c = s35.n1.c;
//   V = s35.n1.V;
//   s35.c = s35.n / V;
//   der(V) = 0.0 \"Compartment volume is constant\";
//   sF21.n1.r + uurfafibabi.aF1.r = 0.0;
//   uurfafi.s1.r + s24.n1.r = 0.0;
//   uurfafi.p1.r + s25.n1.r = 0.0;
//   uurfafi.aF1.r + sF16.n1.r = 0.0;
//   uurfafi.iF1.r + sF17.n1.r = 0.0;
//   s28.n1.r + uurfafibabi.s1.r = 0.0;
//   uuifa.s1.r + s2.n1.r = 0.0;
//   uuifa.p1.r + s3.n1.r = 0.0;
//   uuifa.aF1.r + sF.n1.r = 0.0;
//   s38.n1.r + uurfibi.s1.r = 0.0;
//   s6.n1.r + uuifi.s1.r = 0.0;
//   sF6.n1.r + uurbabi.iB1.r = 0.0;
//   sF24.n1.r + uurfafibabi.iB1.r = 0.0;
//   uurfafibi.s1.r + s30.n1.r = 0.0;
//   uurfafibi.p1.r + s31.n1.r = 0.0;
//   uurfafibi.aF1.r + sF25.n1.r = 0.0;
//   uurfafibi.iF1.r + sF26.n1.r = 0.0;
//   uurfafibi.iB1.r + sF27.n1.r = 0.0;
//   uur.s1.r + s8.n1.r = 0.0;
//   uur.p1.r + s9.n1.r = 0.0;
//   s20.n1.r + uurfababi.s1.r = 0.0;
//   sF3.n1.r + uuifi.iF1.r = 0.0;
//   sF30.n1.r + uurfiba.aB1.r = 0.0;
//   uurfibabi.s1.r + s36.n1.r = 0.0;
//   uurfibabi.p1.r + s37.n1.r = 0.0;
//   uurfibabi.iF1.r + sF31.n1.r = 0.0;
//   uurfibabi.aB1.r + sF32.n1.r = 0.0;
//   uurfibabi.iB1.r + sF33.n1.r = 0.0;
//   uurbi.s1.r + s14.n1.r = 0.0;
//   uurbi.p1.r + s15.n1.r = 0.0;
//   uurbi.iB1.r + sF7.n1.r = 0.0;
//   s12.n1.r + uurbabi.s1.r = 0.0;
//   sF8.n1.r + uurfa.aF1.r = 0.0;
//   sF19.n1.r + uurfafiba.iF1.r = 0.0;
//   uurfababi.p1.r + s21.n1.r = 0.0;
//   uurfababi.aF1.r + sF11.n1.r = 0.0;
//   uurfababi.aB1.r + sF12.n1.r = 0.0;
//   uurfababi.iB1.r + sF13.n1.r = 0.0;
//   s26.n1.r + uurfafiba.s1.r = 0.0;
//   sF15.n1.r + uurfabi.iB1.r = 0.0;
//   s4.n1.r + uuifafi.s1.r = 0.0;
//   sF22.n1.r + uurfafibabi.iF1.r = 0.0;
//   uurfafiba.p1.r + s27.n1.r = 0.0;
//   uurfafiba.aF1.r + sF18.n1.r = 0.0;
//   uurfafiba.aB1.r + sF20.n1.r = 0.0;
//   uuifafi.p1.r + s5.n1.r = 0.0;
//   uuifafi.aF1.r + sF1.n1.r = 0.0;
//   uuifafi.iF1.r + sF2.n1.r = 0.0;
//   s18.n1.r + uurfaba.s1.r = 0.0;
//   sF5.n1.r + uurbabi.aB1.r = 0.0;
//   s32.n1.r + uurfi.s1.r = 0.0;
//   s34.n1.r + uurfiba.s1.r = 0.0;
//   uurfi.p1.r + s33.n1.r = 0.0;
//   uurfi.iF1.r + sF28.n1.r = 0.0;
//   uurba.s1.r + s10.n1.r = 0.0;
//   uurba.p1.r + s11.n1.r = 0.0;
//   uurba.aB1.r + sF4.n1.r = 0.0;
//   uurfibi.p1.r + s39.n1.r = 0.0;
//   uurfibi.iF1.r + sF34.n1.r = 0.0;
//   uurfibi.iB1.r + sF35.n1.r = 0.0;
//   uurfa.s1.r + s16.n1.r = 0.0;
//   uurfa.p1.r + s17.n1.r = 0.0;
//   sF10.n1.r + uurfaba.aB1.r = 0.0;
//   sF14.n1.r + uurfabi.aF1.r = 0.0;
//   uurfabi.s1.r + s22.n1.r = 0.0;
//   uurfabi.p1.r + s23.n1.r = 0.0;
//   sF23.n1.r + uurfafibabi.aB1.r = 0.0;
//   uurfafibabi.p1.r + s29.n1.r = 0.0;
//   uuifi.p1.r + s7.n1.r = 0.0;
//   sF9.n1.r + uurfaba.aF1.r = 0.0;
//   sF29.n1.r + uurfiba.iF1.r = 0.0;
//   uurfiba.p1.r + s35.n1.r = 0.0;
//   uurbabi.p1.r + s13.n1.r = 0.0;
//   uurfaba.p1.r + s19.n1.r = 0.0;
//   s.n1.r + uui.s1.r = 0.0;
//   uui.p1.r + s1.n1.r = 0.0;
//   sF16.n1.V = uurfafi.aF1.V;
//   sF16.n1.c = uurfafi.aF1.c;
//   sF18.n1.V = uurfafiba.aF1.V;
//   sF18.n1.c = uurfafiba.aF1.c;
//   sF21.n1.V = uurfafibabi.aF1.V;
//   sF21.n1.c = uurfafibabi.aF1.c;
//   sF33.n1.V = uurfibabi.iB1.V;
//   sF33.n1.c = uurfibabi.iB1.c;
//   sF25.n1.V = uurfafibi.aF1.V;
//   sF25.n1.c = uurfafibi.aF1.c;
//   sF6.n1.V = uurbabi.iB1.V;
//   sF6.n1.c = uurbabi.iB1.c;
//   sF7.n1.V = uurbi.iB1.V;
//   sF7.n1.c = uurbi.iB1.c;
//   sF35.n1.V = uurfibi.iB1.V;
//   sF35.n1.c = uurfibi.iB1.c;
//   sF24.n1.V = uurfafibabi.iB1.V;
//   sF24.n1.c = uurfafibabi.iB1.c;
//   sF17.n1.V = uurfafi.iF1.V;
//   sF17.n1.c = uurfafi.iF1.c;
//   sF10.n1.V = uurfaba.aB1.V;
//   sF10.n1.c = uurfaba.aB1.c;
//   sF8.n1.V = uurfa.aF1.V;
//   sF8.n1.c = uurfa.aF1.c;
//   sF12.n1.V = uurfababi.aB1.V;
//   sF12.n1.c = uurfababi.aB1.c;
//   sF19.n1.V = uurfafiba.iF1.V;
//   sF19.n1.c = uurfafiba.iF1.c;
//   sF22.n1.V = uurfafibabi.iF1.V;
//   sF22.n1.c = uurfafibabi.iF1.c;
//   sF26.n1.V = uurfafibi.iF1.V;
//   sF26.n1.c = uurfafibi.iF1.c;
//   sF23.n1.V = uurfafibabi.aB1.V;
//   sF23.n1.c = uurfafibabi.aB1.c;
//   sF14.n1.V = uurfabi.aF1.V;
//   sF14.n1.c = uurfabi.aF1.c;
//   sF11.n1.V = uurfababi.aF1.V;
//   sF11.n1.c = uurfababi.aF1.c;
//   sF9.n1.V = uurfaba.aF1.V;
//   sF9.n1.c = uurfaba.aF1.c;
//   sF30.n1.V = uurfiba.aB1.V;
//   sF30.n1.c = uurfiba.aB1.c;
//   sF34.n1.V = uurfibi.iF1.V;
//   sF34.n1.c = uurfibi.iF1.c;
//   sF4.n1.V = uurba.aB1.V;
//   sF4.n1.c = uurba.aB1.c;
//   sF13.n1.V = uurfababi.iB1.V;
//   sF13.n1.c = uurfababi.iB1.c;
//   sF20.n1.V = uurfafiba.aB1.V;
//   sF20.n1.c = uurfafiba.aB1.c;
//   sF28.n1.V = uurfi.iF1.V;
//   sF28.n1.c = uurfi.iF1.c;
//   sF15.n1.V = uurfabi.iB1.V;
//   sF15.n1.c = uurfabi.iB1.c;
//   sF29.n1.V = uurfiba.iF1.V;
//   sF29.n1.c = uurfiba.iF1.c;
//   sF32.n1.V = uurfibabi.aB1.V;
//   sF32.n1.c = uurfibabi.aB1.c;
//   sF5.n1.V = uurbabi.aB1.V;
//   sF5.n1.c = uurbabi.aB1.c;
//   sF31.n1.V = uurfibabi.iF1.V;
//   sF31.n1.c = uurfibabi.iF1.c;
//   sF27.n1.V = uurfafibi.iB1.V;
//   sF27.n1.c = uurfafibi.iB1.c;
//   sF1.n1.V = uuifafi.aF1.V;
//   sF1.n1.c = uuifafi.aF1.c;
//   sF2.n1.V = uuifafi.iF1.V;
//   sF2.n1.c = uuifafi.iF1.c;
//   s.n1.V = uui.s1.V;
//   s.n1.c = uui.s1.c;
//   s31.n1.V = uurfafibi.p1.V;
//   s31.n1.c = uurfafibi.p1.c;
//   s33.n1.V = uurfi.p1.V;
//   s33.n1.c = uurfi.p1.c;
//   s37.n1.V = uurfibabi.p1.V;
//   s37.n1.c = uurfibabi.p1.c;
//   s39.n1.V = uurfibi.p1.V;
//   s39.n1.c = uurfibi.p1.c;
//   s29.n1.V = uurfafibabi.p1.V;
//   s29.n1.c = uurfafibabi.p1.c;
//   s27.n1.V = uurfafiba.p1.V;
//   s27.n1.c = uurfafiba.p1.c;
//   s25.n1.V = uurfafi.p1.V;
//   s25.n1.c = uurfafi.p1.c;
//   s23.n1.V = uurfabi.p1.V;
//   s23.n1.c = uurfabi.p1.c;
//   s21.n1.V = uurfababi.p1.V;
//   s21.n1.c = uurfababi.p1.c;
//   s19.n1.V = uurfaba.p1.V;
//   s19.n1.c = uurfaba.p1.c;
//   s17.n1.V = uurfa.p1.V;
//   s17.n1.c = uurfa.p1.c;
//   s15.n1.V = uurbi.p1.V;
//   s15.n1.c = uurbi.p1.c;
//   s13.n1.V = uurbabi.p1.V;
//   s13.n1.c = uurbabi.p1.c;
//   s11.n1.V = uurba.p1.V;
//   s11.n1.c = uurba.p1.c;
//   s9.n1.V = uur.p1.V;
//   s9.n1.c = uur.p1.c;
//   s7.n1.V = uuifi.p1.V;
//   s7.n1.c = uuifi.p1.c;
//   s5.n1.V = uuifafi.p1.V;
//   s5.n1.c = uuifafi.p1.c;
//   s3.n1.V = uuifa.p1.V;
//   s3.n1.c = uuifa.p1.c;
//   s12.n1.V = uurbabi.s1.V;
//   s12.n1.c = uurbabi.s1.c;
//   s6.n1.V = uuifi.s1.V;
//   s6.n1.c = uuifi.s1.c;
//   s34.n1.V = uurfiba.s1.V;
//   s34.n1.c = uurfiba.s1.c;
//   s30.n1.V = uurfafibi.s1.V;
//   s30.n1.c = uurfafibi.s1.c;
//   s22.n1.V = uurfabi.s1.V;
//   s22.n1.c = uurfabi.s1.c;
//   s10.n1.V = uurba.s1.V;
//   s10.n1.c = uurba.s1.c;
//   s26.n1.V = uurfafiba.s1.V;
//   s26.n1.c = uurfafiba.s1.c;
//   s18.n1.V = uurfaba.s1.V;
//   s18.n1.c = uurfaba.s1.c;
//   s20.n1.V = uurfababi.s1.V;
//   s20.n1.c = uurfababi.s1.c;
//   s28.n1.V = uurfafibabi.s1.V;
//   s28.n1.c = uurfafibabi.s1.c;
//   s38.n1.V = uurfibi.s1.V;
//   s38.n1.c = uurfibi.s1.c;
//   s36.n1.V = uurfibabi.s1.V;
//   s36.n1.c = uurfibabi.s1.c;
//   s16.n1.V = uurfa.s1.V;
//   s16.n1.c = uurfa.s1.c;
//   s14.n1.V = uurbi.s1.V;
//   s14.n1.c = uurbi.s1.c;
//   s24.n1.V = uurfafi.s1.V;
//   s24.n1.c = uurfafi.s1.c;
//   s2.n1.V = uuifa.s1.V;
//   s2.n1.c = uuifa.s1.c;
//   s4.n1.V = uuifafi.s1.V;
//   s4.n1.c = uuifafi.s1.c;
//   s32.n1.V = uurfi.s1.V;
//   s32.n1.c = uurfi.s1.c;
//   s8.n1.V = uur.s1.V;
//   s8.n1.c = uur.s1.c;
//   s1.n1.V = uui.p1.V;
//   s1.n1.c = uui.p1.c;
//   sF3.n1.V = uuifi.iF1.V;
//   sF3.n1.c = uuifi.iF1.c;
//   s35.n1.V = uurfiba.p1.V;
//   s35.n1.c = uurfiba.p1.c;
//   sF.n1.V = uuifa.aF1.V;
//   sF.n1.c = uuifa.aF1.c;
// end BioChem.Examples.MassAction.UniUni;
// "
// ""
// endResult
