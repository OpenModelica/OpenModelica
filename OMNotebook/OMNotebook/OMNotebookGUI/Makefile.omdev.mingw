ifeq ($(OMBUILDDIR),)
$(error OMBUILDDIR variable is not set.)
endif

builddir_bin=$(OMBUILDDIR)/bin
builddir_share=$(OMBUILDDIR)/share/
resourcedir=./Resources/nls/

CONFIG_DEFAULT_OPENMODELICAHOME = "$(OMBUILDDIR)/"
GIT_SHA = $(shell git describe --match "v*.*" --always)
LSB_RELEASE = $(shell cmd /c "ver")

ifeq (MINGW32,$(findstring MINGW32,$(shell uname)))
PLATFORM_ARCH = (32-bit)
else # mingw64
PLATFORM_ARCH = (64-bit)
endif

QMAKE=qmake
EXE=.exe
NAME=OMNotebook

.PHONY: build always $(NAME) omc_config.h

all: build

clean: Makefile
	test ! -f Makefile || $(MAKE) -f Makefile clean
	rm -rf ../bin/$(NAME)$(EXE) Makefile Makefile.Debug Makefile.Release object_script.*

Resources/nls/qm.stamp: OMNotebookGUI.pro Resources/nls/*.ts
	lrelease $<
	@touch $@

$(NAME): Makefile
	$(MAKE) -f Makefile

build: omc_config.h $(NAME) Resources/nls/qm.stamp
	mkdir -p $(builddir_share)/omnotebook/drmodelica/ $(builddir_share)/omnotebook/drcontrol/ $(builddir_share)/omnotebook/nls/
	cp -p $(resourcedir)/*.qm $(builddir_share)/omnotebook/nls/
	cp -p ../bin/$(NAME)$(EXE) $(builddir_bin);
	cp -p *.xml $(builddir_share)/omnotebook/
	cp -p ../../OMNotebookHelp.onb $(OMBUILDDIR)/share/omnotebook/
	(DRMODELICAPWD=`cd ../../DrModelica/ && pwd` && \
        DIRS=`cd ../../DrModelica/ && find . -type d | grep -v svn` && \
	(cd $(builddir_share)/omnotebook/drmodelica/ && \
	mkdir -p $$DIRS) && \
	cd ../../DrModelica/ && \
	find . -name \*.onb -exec cp {} $(builddir_share)/omnotebook/drmodelica/{} \;)
	(DRCONTROLPWD=`cd ../../DrControl/ && pwd` && \
        DIRS=`cd ../../DrControl/ && find . -type d | grep -v svn` && \
	(cd $(builddir_share)/omnotebook/drcontrol/ && \
	mkdir -p $$DIRS) && \
	cd ../../DrControl/ && \
	find . -name \*.onb -exec cp {} $(builddir_share)/omnotebook/drcontrol/{} \;)
	cp -puf ../../../common/pre-commit.sh $(shell git rev-parse --git-dir)/hooks/pre-commit

Makefile: OMNotebookGUI.pro
	$(QMAKE) "CONFIG+=release"

omc_config.h:
	@echo Current version: "$(GIT_SHA) $(PLATFORM_ARCH)"
	@echo Current omhome: "$(CONFIG_DEFAULT_OPENMODELICAHOME)"
	@echo Current lsb_release: "$(LSB_RELEASE)"
ifeq ($(GIT_SHA),)
	@if test -f omc_config.h; \
	then echo Could not retrieve version number. omc_config.h not updated; \
	else \
		echo "#define CONFIG_DEFAULT_OPENMODELICAHOME \"$(CONFIG_DEFAULT_OPENMODELICAHOME)\"" > omc_config.h; \
		echo "#define GIT_SHA \"OMNotebook unknown $(PLATFORM_ARCH)\""; >> omc_config.h; \
		echo "#define LSB_RELEASE \"$(LSB_RELEASE)\"" >> omc_config.h; \
	fi;
else # version is not empty, update it if it changed
	@if test -f omc_config.h; \
	then \
		echo "#define CONFIG_DEFAULT_OPENMODELICAHOME \"$(CONFIG_DEFAULT_OPENMODELICAHOME)\"" > omc_config.h.tmp; \
		echo "#define GIT_SHA \"OMNotebook $(GIT_SHA) $(PLATFORM_ARCH)\"" >> omc_config.h.tmp; \
		echo "#define LSB_RELEASE \"$(LSB_RELEASE)\"" >> omc_config.h.tmp; \
		diff omc_config.h omc_config.h.tmp > /dev/null; \
		if [ $$? -eq 0 ]; then echo No change in version; rm omc_config.h.tmp; \
		else echo version has changed. updating omc_config.h; \mv omc_config.h.tmp omc_config.h; \
		fi; \
	else \
		echo "#define CONFIG_DEFAULT_OPENMODELICAHOME \"$(CONFIG_DEFAULT_OPENMODELICAHOME)\"" > omc_config.h; \
		echo "#define GIT_SHA \"OMNotebook $(GIT_SHA) $(PLATFORM_ARCH)\"" >> omc_config.h; \
		echo "#define LSB_RELEASE \"$(LSB_RELEASE)\"" >> omc_config.h; \
	fi;
endif
